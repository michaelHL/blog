{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/baidu_verify_QITjFBn0ix.html","path":"baidu_verify_QITjFBn0ix.html","modified":0,"renderable":0},{"_id":"source/favicon.ico","path":"favicon.ico","modified":0,"renderable":0},{"_id":"source/google755ee5b546d5d6d0.html","path":"google755ee5b546d5d6d0.html","modified":0,"renderable":0},{"_id":"source/robots.txt","path":"robots.txt","modified":0,"renderable":0},{"_id":"source/img/haskell-logo.svg","path":"img/haskell-logo.svg","modified":0,"renderable":0},{"_id":"source/img/jupyter-notebook-server.png","path":"img/jupyter-notebook-server.png","modified":0,"renderable":0},{"_id":"source/img/olympic-rings.svg","path":"img/olympic-rings.svg","modified":0,"renderable":0},{"_id":"source/img/shell-colors.png","path":"img/shell-colors.png","modified":0,"renderable":0},{"_id":"source/img/task_priority.eddx","path":"img/task_priority.eddx","modified":0,"renderable":0},{"_id":"source/img/task_priority.svg","path":"img/task_priority.svg","modified":0,"renderable":0},{"_id":"source/img/zsh-on-xshell.png","path":"img/zsh-on-xshell.png","modified":0,"renderable":0},{"_id":"source/src/_vimrc","path":"src/_vimrc","modified":0,"renderable":0},{"_id":"source/src/_ycm_extra_conf.py","path":"src/_ycm_extra_conf.py","modified":0,"renderable":0},{"_id":"source/src/bashrc","path":"src/bashrc","modified":0,"renderable":0},{"_id":"source/src/reverse-tunnel-sshd.xml","path":"src/reverse-tunnel-sshd.xml","modified":0,"renderable":0},{"_id":"source/src/sshd_msys.sh","path":"src/sshd_msys.sh","modified":0,"renderable":0},{"_id":"source/src/tree.pl","path":"src/tree.pl","modified":0,"renderable":0},{"_id":"source/src/vimrc","path":"src/vimrc","modified":0,"renderable":0},{"_id":"source/src/ycm_extra_conf.py","path":"src/ycm_extra_conf.py","modified":0,"renderable":0},{"_id":"source/src/conemu.xml","path":"src/conemu.xml","modified":0,"renderable":0},{"_id":"source/src/zshrc","path":"src/zshrc","modified":0,"renderable":0},{"_id":"source/img/epidemic.svg","path":"img/epidemic.svg","modified":0,"renderable":0},{"_id":"source/img/avatar.jpg","path":"img/avatar.jpg","modified":0,"renderable":0},{"_id":"source/img/integrate(1+x3).svg","path":"img/integrate(1+x3).svg","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/scrollbar_arrow.png","path":"images/scrollbar_arrow.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"source/img/epidemic-2x2-by-n.svg","path":"img/epidemic-2x2-by-n.svg","modified":0,"renderable":0},{"_id":"source/img/epidemic-2x2.svg","path":"img/epidemic-2x2.svg","modified":0,"renderable":0},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/baidu_verify_QITjFBn0ix.html","hash":"e58b09013863da11cb3bbcf9f75728af06b3bc4e","modified":1551359209516},{"_id":"source/favicon.ico","hash":"fdd9d9455c24c3da16f6ed9b9550a5e616f511c5","modified":1551359209516},{"_id":"source/google755ee5b546d5d6d0.html","hash":"069c45be2a6e738c8ef274a9329c78fb9f2ca3c5","modified":1551359209516},{"_id":"source/robots.txt","hash":"c7d2136b90b3734eadf3f8cf34daa1193d07f3fe","modified":1551359209548},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1551359209563},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1551359209563},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1551359209579},{"_id":"themes/next/.gitignore","hash":"32ea93f21d8693d5d8fa4eef1c51a21ad0670047","modified":1551359209579},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1551359209579},{"_id":"themes/next/.javascript_ignore","hash":"f9ea3c5395f8feb225a24e2c32baa79afda30c16","modified":1551359209579},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1551359209579},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1551359209579},{"_id":"themes/next/.travis.yml","hash":"c42d9608c8c7fe90de7b1581a8dc3886e90c179e","modified":1551359209579},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1551359209579},{"_id":"themes/next/README.en.md","hash":"4ece25ee5f64447cd522e54cb0fffd9a375f0bd4","modified":1551359209579},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1551359209579},{"_id":"themes/next/_config.yml","hash":"9ba27df366ff819ad1fd7f70b1361482d95ad06d","modified":1652144548035},{"_id":"themes/next/bower.json","hash":"be0a430362cb73a7e3cf9ecf51a67edf8214b637","modified":1551359209579},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1551359209579},{"_id":"themes/next/package.json","hash":"6b5bfec48776ddf9c03811b1ff2cb2b615eccc88","modified":1551359209673},{"_id":"source/_posts/building-vim-from-source.md","hash":"dbb22a768adddca1d1fac4bc3cb0f4558f873c57","modified":1678378178198},{"_id":"source/_posts/built-in-environment-variables-on-windows.md","hash":"6e543e1be936323e3dbefe82e15f6847e6143d22","modified":1678378178200},{"_id":"source/_posts/compilation-of-you-complete-me.md","hash":"cffe8c988fce8f7d9aaff028c122b6ff25755967","modified":1678378178202},{"_id":"source/_posts/compile-python-on-centos.md","hash":"45bd3526cf76ec61e4e5d77024b041924d7b7ba3","modified":1678378178205},{"_id":"source/_posts/configuration-of-cygwin-in-mobaxterm-and-issues-of-ssh-proxy.md","hash":"48266d21dcc4a190bb62a022ba4f893e47bd7bdb","modified":1678378178206},{"_id":"source/_posts/corejava-learning-01.md","hash":"dc906d43ef2802d880a104f7a9e72da79c9a96dc","modified":1678378445900},{"_id":"source/_posts/daily-operations-of-msys2.md","hash":"d87b7477041d4e43c5b1aa1f4fd28c06e6a64d7e","modified":1678378178212},{"_id":"source/_posts/deployment-of-rstudio-server.md","hash":"561166b49e9a5a1db9322a948df8c45228c81e3d","modified":1678378178215},{"_id":"source/_posts/deployment-of-sshd-on-windows-via-msys.md","hash":"82f5e832179dbf3f25612ba9491eaa4961f95eac","modified":1678378178217},{"_id":"source/_posts/essentials-of-matlab-examples.md","hash":"5c12b9e1ff33a75f4adde7509eb18dcafee52c40","modified":1678378178219},{"_id":"source/_posts/essentials-of-matlab-foundation-of-programming.md","hash":"38de8c1f78e2fda5d396986866f0c788f4cfcb2f","modified":1678378178221},{"_id":"source/_posts/essentials-of-matlab-plotting.md","hash":"00bb59ebc07f56c2fd0bfa5d569d1b450f5a73d7","modified":1678378178224},{"_id":"source/_posts/essentials-of-matlab-skills.md","hash":"e3b67443c1df8a18d728eba87a389e3eaed40b1d","modified":1678378178226},{"_id":"source/_posts/function-interpolation-by-matlab.md","hash":"10ca1b0911245fddfaf71533e61fa673fa3f0568","modified":1678378178228},{"_id":"source/_posts/hexo-deployment-on-server.md","hash":"a964c5cf6e8da2ad50fabba1d8ef1815a7999dc5","modified":1678378178230},{"_id":"source/_posts/homebrew-installation-on-macos.md","hash":"c3889fc62e69a5a6db1c5533b4cd3e6635c0f0af","modified":1678378178232},{"_id":"source/_posts/how-to-behave-like-master-for-advanced-coder.md","hash":"58e31fa034deb9ea99ee0e97970507067ea35be5","modified":1678378178234},{"_id":"source/_posts/how-to-install-gcc-on-centos-6.md","hash":"edfc364af9f9ba8039277c179ea156bf912616e9","modified":1678378178236},{"_id":"source/_posts/how-to-install-llvm-and-clang-on-centos-6.md","hash":"34b330423dfa58752c71fb81debc739df4acd40d","modified":1678378178239},{"_id":"source/_posts/install-mysql-on-windows-and-centos.md","hash":"bdad12b513cfba3bf562dabe0fc4225723f82b58","modified":1678378178245},{"_id":"source/_posts/installing-latest-clang-on-ubuntu.md","hash":"1f430c82e5ae119a9a9c27096d93b8f8cb80027a","modified":1678378178243},{"_id":"source/_posts/interactive-and-login-shells.md","hash":"89a0e31ff0b4bf8de9abcdb88c598ec4e8c92dbe","modified":1678378178247},{"_id":"source/_posts/linux-date-format.md","hash":"8e65431dfd3691ae576b88e214dab42e56ec57de","modified":1678378178253},{"_id":"source/_posts/mouting-linux-file-systems-on-windows.md","hash":"9fdda376647bf2e9618e8f5be7184ef5be0d8102","modified":1678378178255},{"_id":"source/_posts/notes-on-conda.md","hash":"65dbf0db98586e53535ded0cb2581fbc44959dc7","modified":1678378178257},{"_id":"source/_posts/notes-on-learning-mathematical-modeling-based-on-variation.md","hash":"8e586392584fdf52061ce12bd12b115f1485f842","modified":1678378178259},{"_id":"source/_posts/notes-on-perl-5.md","hash":"874fed58b6ef7b64c8f0d558a0eeb8c4c8b2bcb6","modified":1678378178261},{"_id":"source/_posts/notes-on-python-3.md","hash":"0ae41447c1c6476f62e20251296c25a459d9fba4","modified":1678378178263},{"_id":"source/_posts/notes-on-statistical-learning-methods-01.md","hash":"f45aeb837eed55840a0efab799e1b8049d895245","modified":1678378178265},{"_id":"source/_posts/nth-user.md","hash":"a02a4bcfb01221803763c25aa4bb13161dedafe5","modified":1678378178267},{"_id":"source/_posts/learning-lingo-01.md","hash":"e07f3355933be33580fbe37458f348e1a8681bd4","modified":1678378178250},{"_id":"source/_posts/password-manager-on-linux.md","hash":"d64ae23a0cb902fe1a4d56d5f3834f7268945019","modified":1678378178269},{"_id":"source/_posts/problems-tricks-and-memo-on-windows.md","hash":"481930a11c1ff42bc874696942998f9cddc73abc","modified":1678599547737},{"_id":"source/_posts/reading-list-of-perl.md","hash":"118826a7e4558181d2212ca1c2c20c359d8d723f","modified":1678378178274},{"_id":"source/_posts/setting-up-haskell-stack-development-environment.md","hash":"e0bb710e29b67eed037db0582e4b53a5ae78feca","modified":1678378178278},{"_id":"source/_posts/setting-up-local-jupyter-notebook-server-environment.md","hash":"a3a3a4986511de21fe71239fa110572544c13450","modified":1678378178280},{"_id":"source/_posts/setting-up-your-own-netdisk-by-zfile-on-windows-and-linux.md","hash":"5a9a202c5d0599034566ba43ea9b61471766796e","modified":1678378178282},{"_id":"source/_posts/settings-of-multi-nic-and-routing-table-on-windows.md","hash":"fa5260ae1350be95712392748ce808d3fc6ac1d3","modified":1678378178276},{"_id":"source/_posts/shell-colors-colorizing-shell-scripts.md","hash":"ac91b1b9e49641a1c67400384d07e8a8f04b16b2","modified":1678378178284},{"_id":"source/_posts/shortcuts-of-anaconda-on-windows.md","hash":"486069c903335ed4ec9bb88e99f7c3d088c974af","modified":1678378178287},{"_id":"source/_posts/simple-example-of-stack-in-java.md","hash":"2a5eb80013c07d311c65a86267ee0b696e6f06f3","modified":1678378178289},{"_id":"source/_posts/source-code-of-redirection-on-gawk.md","hash":"2713ed9196317ad357315b8f3ff19a18e10d7e3e","modified":1678600703679},{"_id":"source/_posts/sqlite-learning.md","hash":"344e47200eb0c7fcf54c86e9e36a4cdd89e7a4e7","modified":1678378459643},{"_id":"source/_posts/ssh-reverse-tunnel.md","hash":"d5b1a88a985ee2bbc730fda8b0f610bc146269c9","modified":1678378178295},{"_id":"source/_posts/ssr-on-server.md","hash":"7afb3fff784fac254848b1faca9cedba1fa1be9a","modified":1678378178297},{"_id":"source/_posts/the-top-10-tricks-of-perl-one-liners.md","hash":"ba9583e54bf4513bd12a825d15d411d2394ed97b","modified":1678378178300},{"_id":"source/_posts/tips-on-linux.md","hash":"ae97ab861d577580f5e9a47ea327b9b6a0589160","modified":1681147705944},{"_id":"source/_posts/user-defined-zip-and-map.md","hash":"a1217d4b8f72c2485e4e0f714eb05946aa7c115c","modified":1678378178305},{"_id":"source/_posts/zsh-installation.md","hash":"8319cc75e51dd92a8bcd86b2696d4c3eff8623af","modified":1678378178307},{"_id":"source/about/index.md","hash":"ddd290a26a92ce7d3f2253b48585271ff54f2ada","modified":1573614188028},{"_id":"source/categories/index.md","hash":"868979ce457d0783ee16368f28c5254665358eac","modified":1551359209516},{"_id":"source/img/haskell-logo.svg","hash":"ddd42c955c1401052519f0a7e774d3021033d847","modified":1551359209548},{"_id":"source/img/jupyter-notebook-server.png","hash":"a04243c8c4bd65dfec0a57498acc65f8163a4fb2","modified":1551359209548},{"_id":"source/img/olympic-rings.svg","hash":"f516b3cc65048a2a42affc954d59cd60a53c537c","modified":1551359209548},{"_id":"source/img/shell-colors.png","hash":"053e069e2e1c8d0a48783a1dbf003272169394a1","modified":1551359209548},{"_id":"source/img/task_priority.eddx","hash":"c622c0ee8301d92ffb57ad01cec7ad5d22a18b8b","modified":1551359209548},{"_id":"source/img/task_priority.svg","hash":"b475c27d7a590dca40a4b2a102346ae346fef031","modified":1551359209548},{"_id":"source/img/zsh-on-xshell.png","hash":"dd67f7f8145e0acd303013d35975bdd3a1064ca0","modified":1551359209548},{"_id":"source/sketch/index.md","hash":"44f1abedd93f930f90e1aea25a826f364fc173ce","modified":1591009894862},{"_id":"source/series/index.md","hash":"793ca64d978ba579f1fbeee0c11efbc6dcc4bdc1","modified":1551359209548},{"_id":"source/src/_vimrc","hash":"021b78df9f41c621cfa38a3654d3bfcdd0c06bf2","modified":1651479164700},{"_id":"source/src/_ycm_extra_conf.py","hash":"0a5f547235d4917d7d7f1e5e72c89afb16a963f8","modified":1551359209563},{"_id":"source/src/bashrc","hash":"23f4668c8de9b0f15fd06880425ea25745729a8f","modified":1572131580651},{"_id":"source/src/reverse-tunnel-sshd.xml","hash":"35970a0f671097fd0a2a4208d19edaf5ad2c8534","modified":1551359209563},{"_id":"source/src/sshd_msys.sh","hash":"322b81de4459097f481795f607caf752e7551a14","modified":1551359209563},{"_id":"source/src/tree.pl","hash":"991ca3498dcf941e69ae3ea31275df05d0df499e","modified":1551359209563},{"_id":"source/src/vimrc","hash":"0038d8be65499d2b4b89a2482716abde975ee0cc","modified":1572131580653},{"_id":"source/src/ycm_extra_conf.py","hash":"4dfe8f7be956aa45de2a73a279cbd7921e155b1f","modified":1572131580655},{"_id":"source/src/conemu.xml","hash":"4ebe32aff1c15ab0cdf3469a2df073cb95b36868","modified":1551359209563},{"_id":"source/src/zshrc","hash":"598778aec9915c0ee973f8c9793d7f3352ad93ca","modified":1572131580657},{"_id":"source/tags/index.md","hash":"5212bff98245f2d0ad47faa1069ae74f378ec492","modified":1551359209563},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1551359209579},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"ff383596cc1671f389d4500e67e004ae300d083e","modified":1551359209579},{"_id":"themes/next/languages/de.yml","hash":"306db8c865630f32c6b6260ade9d3209fbec8011","modified":1551359209579},{"_id":"themes/next/languages/default.yml","hash":"4cc6aeb1ac09a58330e494c8771773758ab354af","modified":1551359209579},{"_id":"themes/next/languages/en.yml","hash":"e7def07a709ef55684490b700a06998c67f35f39","modified":1551359209594},{"_id":"themes/next/languages/fr-FR.yml","hash":"24180322c83587a153cea110e74e96eacc3355ad","modified":1551359209594},{"_id":"themes/next/languages/id.yml","hash":"2835ea80dadf093fcf47edd957680973f1fb6b85","modified":1551359209594},{"_id":"themes/next/languages/ja.yml","hash":"1c3a05ab80a6f8be63268b66da6f19da7aa2c638","modified":1551359209594},{"_id":"themes/next/languages/ko.yml","hash":"be150543379150f78329815af427bf152c0e9431","modified":1551359209594},{"_id":"themes/next/languages/pt-BR.yml","hash":"958e49571818a34fdf4af3232a07a024050f8f4e","modified":1551359209594},{"_id":"themes/next/languages/pt.yml","hash":"36c8f60dacbe5d27d84d0e0d6974d7679f928da0","modified":1551359209594},{"_id":"themes/next/languages/ru.yml","hash":"1549a7c2fe23caa7cbedcd0aa2b77c46e57caf27","modified":1551359209594},{"_id":"themes/next/languages/zh-Hans.yml","hash":"e8aa669918c66dfc0ff0049a9828d9fc119e1d87","modified":1551359209594},{"_id":"themes/next/languages/zh-hk.yml","hash":"1c917997413bf566cb79e0975789f3c9c9128ccd","modified":1551359209594},{"_id":"themes/next/languages/zh-tw.yml","hash":"0b2c18aa76570364003c8d1cd429fa158ae89022","modified":1551359209594},{"_id":"themes/next/layout/_layout.swig","hash":"5a9e8ca2e1d39a5df416301520d3039b7ad69794","modified":1551359209594},{"_id":"themes/next/layout/archive.swig","hash":"5de4dca06b05d99e4f6bad617a4b8f4f3592fb01","modified":1551359209657},{"_id":"themes/next/layout/category.swig","hash":"82e7bc278559b4335ad974659104eaaf04863032","modified":1551359209657},{"_id":"themes/next/layout/index.swig","hash":"03e8a2cda03bad42ac0cb827025eb81f95d496a2","modified":1551359209657},{"_id":"themes/next/layout/page.swig","hash":"baa667bc801349d5c4984c0f172973d3780400df","modified":1551359209657},{"_id":"themes/next/layout/post.swig","hash":"2d5f8d7f0a96b611e2d5a5e4d111fc17726a990f","modified":1551359209657},{"_id":"themes/next/layout/schedule.swig","hash":"f93c53f6fd5c712584f6efba6f770c30fa8a3e80","modified":1551359209657},{"_id":"themes/next/layout/tag.swig","hash":"2e73ee478e981092ea9a5d10dd472a9461db395b","modified":1551359209673},{"_id":"themes/next/scripts/fold.js","hash":"2c8cfa7dac0b2665db9c148882f18a11d7d78957","modified":1551359209673},{"_id":"themes/next/scripts/merge-configs.js","hash":"13c8b3a2d9fce06c2488820d9248d190c8100e0a","modified":1551359209673},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1551359209673},{"_id":"themes/next/scripts/tags.js","hash":"259bc8f40e9f8eb457c1bdc99744b34d1e8602e8","modified":1551359209673},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1551359210001},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1551359210001},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1551359210001},{"_id":"source/img/epidemic.svg","hash":"d0788af3d69b49ba10fb789987bd241db072cec3","modified":1551359209532},{"_id":"source/img/avatar.jpg","hash":"700f6cb9fdefcb76caf372be9c56b1448b875e89","modified":1551359209516},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1551359209782},{"_id":"source/img/integrate(1+x3).svg","hash":"b038f69d8661a6043de09925619b3e011b89e764","modified":1551359209548},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1551359209594},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1551359209594},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1551359209594},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"679d9ca68f6248d4fbeab669f9d5ede20f5689ff","modified":1551359209594},{"_id":"themes/next/layout/_macro/post.swig","hash":"74e88fc0a3837c8b807d9191daf0a59903a032c1","modified":1551359209594},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1551359209594},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"a3b55f1312f1544e6426fe0e207ec19aee4b4f13","modified":1551359209610},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1551359209610},{"_id":"themes/next/layout/_partials/comments.swig","hash":"6bd36b6c807dcae2c76f132d6c0afc1a48036c51","modified":1551359209610},{"_id":"themes/next/layout/_partials/footer.swig","hash":"9b282631a845793bd2559772dec2a203554cf3f3","modified":1678600224124},{"_id":"themes/next/layout/_partials/head.swig","hash":"6a7eb93d8aa7d4baa472890bd666b921f449d8af","modified":1551359209610},{"_id":"themes/next/layout/_partials/header.swig","hash":"a1ffbb691dfad3eaf2832a11766e58a179003b8b","modified":1551359209610},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1551359209610},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1551359209610},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1551359209610},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1551359209626},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1551359209626},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9baf90f7c40b3b10f288e9268c3191e895890cea","modified":1551359209626},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1551359209641},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1551359209641},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"a3ba9caa030bcd159bc65bbbef39eef129f8c092","modified":1652144541583},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1551359209641},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1551359209657},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1551359209657},{"_id":"themes/next/scripts/tags/button.js","hash":"62e6dbeb53d07627a048132c79630b45d9a8f2cc","modified":1551359209673},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1551359209673},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1551359209673},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1551359209673},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1551359209688},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1551359209688},{"_id":"themes/next/scripts/tags/note.js","hash":"21b102db8a01c7b15ae2c0ea3ef3d4cf807ec6ed","modified":1551359209688},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1551359209782},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1551359209782},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1551359209782},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1551359209782},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1551359209782},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1551359209782},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1551359209782},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1551359209782},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1551359209782},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1551359209782},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1551359209782},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1551359209782},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1551359209782},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1551359209782},{"_id":"themes/next/source/images/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1551359209782},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1551359209798},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1551359209626},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1551359209626},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1551359209751},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1551359209751},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1551359209751},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1551359209766},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1551359209782},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1551359209610},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1551359209610},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1551359209610},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1551359209610},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1551359209610},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1551359209610},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1551359209610},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1551359209626},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1551359209626},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1551359209626},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1551359209626},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1551359209626},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1551359209626},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"78875c72e8d633753e67357b588a686964bc53df","modified":1591098927747},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1551359209626},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1551359209626},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1551359209626},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"3358d11b9a26185a2d36c96049e4340e701646e4","modified":1551359209641},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"f9cf6ff8d084530c6febd8f1c880cc1ea8d5fc35","modified":1551359209641},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1551359209641},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1551359209641},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1551359209641},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1551359209641},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1551359209641},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1551359209641},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1551359209641},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"576e716893153a855eaf6d136fad7cb6d4065e09","modified":1551359209641},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1551359209641},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"3a3b5a1babc215fb609df815432624d1d362919f","modified":1551359209641},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1551359209641},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1551359209657},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1551359209657},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1551359209657},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"13cedacb4de07500bef2e40d7048c0b24c9c07b9","modified":1551359209657},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"5de717677805c352288f503498ab55674a04c1fa","modified":1551359209751},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"1ac920f574e3d8903c84eb6c5b7cc0de45a52fe0","modified":1572131580675},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"86af6cbec87d895e97525fde66cd2c2835341f8b","modified":1551359209751},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1551359209766},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"06f432f328a5b8a9ef0dbd5301b002aba600b4ce","modified":1551359209766},{"_id":"themes/next/source/css/_variables/base.styl","hash":"a5a906344c4b6464cdf3e3d7c94f2c6ebc206673","modified":1572131580682},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1551359209798},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1551359209798},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"aab7be0a6e2724b3faa9338db93c19556c559625","modified":1551359209798},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1551359209798},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1551359209798},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1551359209798},{"_id":"themes/next/source/js/src/motion.js","hash":"1baf79cc3b1189bf826b2a1683dc0b43d9dd22d2","modified":1551359209798},{"_id":"themes/next/source/js/src/post-details.js","hash":"b4bdb7bda776ce95be0e6ed94845c6b49dc50012","modified":1551359209798},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1551359209798},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1551359209798},{"_id":"themes/next/source/js/src/utils.js","hash":"0fcb80ec11e6df05ed1a07b9338bef2669f93a70","modified":1551359209813},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1551359209829},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1551359209860},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"7fd2f3e2773555392ef40df40cae3bedb884f17a","modified":1551359209860},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1551359209876},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1551359209891},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1551359209891},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1551359209891},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1551359209891},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1551359209891},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1551359209891},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1551359209891},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1551359209891},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1551359209907},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1551359209923},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1551359209923},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1551359209923},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1551359209923},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1551359209923},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1551359209923},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1551359209923},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1551359209923},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1551359209923},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1551359209923},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1551359209923},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1551359209923},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1551359209938},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1551359209938},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1551359209938},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1551359209938},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1551359209938},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1551359209938},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1551359209938},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1551359209938},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1551359209938},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1551359209938},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1551359209938},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1551359209985},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1551359209985},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1551359210001},{"_id":"source/img/epidemic-2x2-by-n.svg","hash":"9e9ed2d801e655f1e396afbe50a4969fb8c89371","modified":1551359209516},{"_id":"source/img/epidemic-2x2.svg","hash":"02f39bdd9bd6438b12b0258976c115e93b1790d3","modified":1551359209532},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1551359210001},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1551359210001},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1551359209907},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1551359209657},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1551359209657},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"3920dec29c9ccfaddb02a1c3a29e1014cd1dae01","modified":1551359209688},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"212133531e9bcad0cbe4f2bb0383aa1742e9e3f9","modified":1551359209688},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1551359209688},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"2ed9af88454db742ccb1e5a299c2c3df21737716","modified":1551359209688},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1551359209688},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1551359209704},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1551359209735},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1551359209735},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"139d2f8da966d22e59fac7995e43b47b4499948d","modified":1572131580671},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1551359209751},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"02fe53286d071637534d5aa2c57c76c168c0d521","modified":1551359209751},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1551359209751},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1551359209751},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1551359209751},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1551359209751},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1551359209751},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1551359209751},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fda14bc35be2e1b332809b55b3d07155a833dbf4","modified":1551359209751},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1551359209751},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1551359209751},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1551359209766},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"87c950f7be9178211ac53a6f4ac4485bc44172ad","modified":1551359209766},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"a952660bd1e31de1eebb58d3f49671e053031560","modified":1551359209766},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1551359209766},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"7c6658180bae65d325c1a21a3c3e12f768c23bdf","modified":1572131580678},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1551359209766},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1551359209766},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1551359209766},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"82bbaa6322764779a1ac2e2c8390ce901c7972e2","modified":1551359209766},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1551359209766},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1551359209766},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1551359209798},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"d9c0b3dc9158e717fde36f554709e6c3a22b5f85","modified":1551359209829},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1551359209829},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1551359209860},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1551359209860},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1551359209860},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1551359209860},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1551359209860},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1551359209876},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1551359209876},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1551359209876},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1551359209860},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1551359209891},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1551359209891},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1551359209891},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1551359209891},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1551359209891},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1551359209985},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1551359209985},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"38e48f275ad00daa9dcdcb8d9b44e576acda4707","modified":1551359209813},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1551359209813},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1551359209907},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1551359209985},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1551359209907},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1551359209688},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1551359209688},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1551359209688},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1551359209688},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1551359209688},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"a4f06c105359f864b4abff8103bd88148d92ee50","modified":1551359209704},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1551359209704},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1551359209704},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1551359209688},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1551359209704},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1551359209704},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1551359209704},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"beccb53dcd658136fb91a0c5678dea8f37d6e0b6","modified":1551359209704},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1551359209704},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1551359209704},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"de4a442d7bd77aeefda78517c9e205373753c038","modified":1551359209704},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"2d5fc6417b8924738b23504e613a12f586817d46","modified":1551359209704},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1551359209704},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"5d9da62c4d7a95751cbfa8d72c88acacbddd96a2","modified":1551359209704},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1551359209704},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"658504d80ff22a6c419ef18093ee475cea781e93","modified":1551359209704},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1551359209719},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1551359209719},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1551359209719},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"5954e0a34759b05d0ce84ccc6e5afaaa3fe780cb","modified":1551359209719},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1551359209719},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"08a500b2984f109b751f3697ca33172d1340591a","modified":1551359209719},{"_id":"themes/next/source/css/_common/components/post/post-wordcount.styl","hash":"4fda5d38c6c8d910e3bf5c74a48a8d4a3f3dc73d","modified":1551359209719},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"468bc734f47209096588ef1a8e55e60a3b12aa63","modified":1551359209719},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2ad7595d6d25e153489daa48bb6c926141af0da7","modified":1572131580668},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1551359209719},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1551359209719},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"5f6ea57aabfa30a437059bf8352f1ad829dbd4ff","modified":1551359209719},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1551359209719},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1551359209719},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"77c92a449ce84d558d26d052681f2e0dd77c70c9","modified":1551359209719},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1551359209719},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"57d2c8a060f5e4e1a0aef9aae11a0016cf7ac5ba","modified":1551359209719},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"00559c0f05b3efc050c91a3a10ccfc38b913e492","modified":1551359209719},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1551359209735},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1551359209735},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1551359209735},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1551359209735},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"dfc86d37f5b580977d82af6ef835082d09a0c499","modified":1551359209735},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"dd310c2d999185e881db007360176ee2f811df10","modified":1551359209735},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1551359209735},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1551359209735},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1551359209735},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1551359209735},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1551359209735},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1551359209735},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1551359209735},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"aeff0e6e23725e8baea27c890ccbbf466024f767","modified":1551359209735},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1551359209766},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1551359209766},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1551359209766},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1551359209813},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1551359209813},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1551359209813},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1551359209813},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1551359209860},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1551359209860},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1551359209860},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1551359209876},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1551359209876},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1551359209876},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1551359209907},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1551359209907},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1551359209907},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1551359209829},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1551359209954},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1551359209907},{"_id":"public/baidusitemap.xml","hash":"a6b4b7a0f39923044fb48d0e0025923afd573d7c","modified":1683126591525},{"_id":"public/atom.xml","hash":"5d84dcd3ef3ee21263fce850d171accfc8f3c7da","modified":1683126591563},{"_id":"public/search.xml","hash":"46cc1aaeac473fb6498ed1798945edcb43eaa63b","modified":1683126591564},{"_id":"public/sitemap.xml","hash":"738dcac734a0323f93f06a0a82a7fcc25fd3d425","modified":1683126591564},{"_id":"public/about/index.html","hash":"432863fa9e0e14d820342d004a1b8d4cd416e210","modified":1683126594553},{"_id":"public/categories/index.html","hash":"84fc3275f5bb4af998b0694b65b071431cf051cc","modified":1683126594557},{"_id":"public/series/index.html","hash":"9398de0c82a670e0bd1d6e6780abe860c7355414","modified":1683126594558},{"_id":"public/sketch/index.html","hash":"c3f110b11a989a4223a55cb1dfe5197ccce48c59","modified":1683126594558},{"_id":"public/tags/index.html","hash":"0807be75654ca8f29064d915e0fb2b19e4d99242","modified":1683126594558},{"_id":"public/source-code-of-redirection-on-gawk/index.html","hash":"4d57229abe557b718a71c68ae6f58cd9826e5baf","modified":1683126594558},{"_id":"public/setting-up-your-own-netdisk-by-zfile-on-windows-and-linux/index.html","hash":"ee398f5f474c7750b5e53afc923d33779a95ca07","modified":1683126594558},{"_id":"public/settings-of-multi-nic-and-routing-table-on-windows/index.html","hash":"41853179bc33e9c23764e52c66cd4b41139c6714","modified":1683126594558},{"_id":"public/homebrew-installation-on-macos/index.html","hash":"02f26db8efed4ebad6a8fe4822600dba9df6a663","modified":1683126594558},{"_id":"public/learning-lingo-01/index.html","hash":"9c06805caf58ef85a087bd8e81f4f90ad111b0d4","modified":1683126594558},{"_id":"public/corejava-learning-01/index.html","hash":"e7f7e58b1045301c82a6296d9857f07337fd98c0","modified":1683126594558},{"_id":"public/sqlite-learning/index.html","hash":"2c078b31db8e7503ce19a3ffbd40ee385b6feff4","modified":1683126594558},{"_id":"public/setting-up-haskell-stack-development-environment/index.html","hash":"2d72193bca551dd09d04ee0efd8440d7056b904f","modified":1683126594558},{"_id":"public/function-interpolation-by-matlab/index.html","hash":"6dc0bd66e3efba3d7cb6f58f810d66cdc7214acb","modified":1683126594558},{"_id":"public/essentials-of-matlab-examples/index.html","hash":"28bf7d8fbb802159afc235002492602526dd89bb","modified":1683126594558},{"_id":"public/simple-example-of-stack-in-java/index.html","hash":"1c07f4bde2795709d326212b9fe275eef3c9f3bc","modified":1683126594558},{"_id":"public/nth-user/index.html","hash":"07fc146d427d5960e542ddfd21a657fd99e883ac","modified":1683126594558},{"_id":"public/essentials-of-matlab-skills/index.html","hash":"87e080d2a3c98066a4c5a2ecba2e279bcb0326f2","modified":1683126594558},{"_id":"public/essentials-of-matlab-foundation-of-programming/index.html","hash":"6afee7a8c538b0c4fcefd2c5a8501440c195cb4b","modified":1683126594558},{"_id":"public/notes-on-statistical-learning-methods-01/index.html","hash":"93b564c7fe194a6b900e263fa6c4f66d0b5f8ac2","modified":1683126594558},{"_id":"public/essentials-of-matlab-plotting/index.html","hash":"38b3650f3d0b7fc040a15980c9b0b5241eef1362","modified":1683126594558},{"_id":"public/installing-latest-clang-on-ubuntu/index.html","hash":"8879ab99d513b686ef7956ce9fe6cb65185d3c34","modified":1683126594558},{"_id":"public/notes-on-learning-mathematical-modeling-based-on-variation/index.html","hash":"c4f2e8f6a5095d2938d64eaa9f9eba942a4a168c","modified":1683126594558},{"_id":"public/deployment-of-rstudio-server/index.html","hash":"20ab864b66598c80e1117e7c023791a3432fd0eb","modified":1683126594558},{"_id":"public/ssr-on-server/index.html","hash":"ae5a9ac098a530a08930fed692393c9af9ca9647","modified":1683126594558},{"_id":"public/mouting-linux-file-systems-on-windows/index.html","hash":"f09db2e88ba6642bc36f24285ccbb5971ac21ef3","modified":1683126594558},{"_id":"public/compilation-of-you-complete-me/index.html","hash":"d6d4c602bbfeed8800db6c7eb42b6d125cc23b8b","modified":1683126594559},{"_id":"public/install-mysql-on-windows-and-centos/index.html","hash":"6bb964cfaab7bad4d798e48fcafa4ced077fa136","modified":1683126594559},{"_id":"public/problems-tricks-and-memo-on-windows/index.html","hash":"0eeccee13ecaa7064ef376520cfbdc90883eeb91","modified":1683126594560},{"_id":"public/building-vim-from-source/index.html","hash":"3ea20ea88997f27d9024c64992ecee95d68c2027","modified":1683126594560},{"_id":"public/notes-on-python-3/index.html","hash":"995627ecde469c1277d2f77f9066420a91f5b1bc","modified":1683126594560},{"_id":"public/the-top-10-tricks-of-perl-one-liners/index.html","hash":"936899ffc6070122a3724f41b7774d0c465333dd","modified":1683126594560},{"_id":"public/how-to-behave-like-master-for-advanced-coder/index.html","hash":"548e004b278bad3d6a60f3ffe7d4b1919128a858","modified":1683126594560},{"_id":"public/password-manager-on-linux/index.html","hash":"503cfab459c5b67cb340785f84c8849522a9d429","modified":1683126594560},{"_id":"public/notes-on-perl-5/index.html","hash":"d7a64467f15932a7b02a4be527a2fb7681407373","modified":1683126594560},{"_id":"public/linux-date-format/index.html","hash":"f0fec982df6faa17ae614d88b1d2f12eb41b17eb","modified":1683126594560},{"_id":"public/user-defined-zip-and-map/index.html","hash":"2f78cc8a5459d949021274bf385aac554caaf2fc","modified":1683126594560},{"_id":"public/notes-on-conda/index.html","hash":"cce3dc9d805918467694580e47989904c80f2131","modified":1683126594560},{"_id":"public/reading-list-of-perl/index.html","hash":"59516e49b83b77953a1a38a865a7f45b1c6d9ec0","modified":1683126594560},{"_id":"public/deployment-of-sshd-on-windows-via-msys/index.html","hash":"6ce43bcc905b2f47ade3124cbf706ed3b4448a48","modified":1683126594560},{"_id":"public/daily-operations-of-msys2/index.html","hash":"60e7c77f9416835a9c52745efc9232a395036ea0","modified":1683126594560},{"_id":"public/ssh-reverse-tunnel/index.html","hash":"fc59e531457e2d71056026307fc75f254a9757e9","modified":1683126594560},{"_id":"public/built-in-environment-variables-on-windows/index.html","hash":"49902f16760fb19e205bbeb8405d9ff43691dadf","modified":1683126594560},{"_id":"public/configuration-of-cygwin-in-mobaxterm-and-issues-of-ssh-proxy/index.html","hash":"30e67754f574d894012e83bf7cf31637b9eed448","modified":1683126594561},{"_id":"public/compile-python-on-centos/index.html","hash":"7bb6c4ff0306343cf2c37023fb0c8fc470d0ca15","modified":1683126594561},{"_id":"public/interactive-and-login-shells/index.html","hash":"da30e7d1de0c60e78fbdc7d5080436053c47bed9","modified":1683126594561},{"_id":"public/how-to-install-gcc-on-centos-6/index.html","hash":"fcd09d3fa5e436066808d763034f0e6a1a29d435","modified":1683126594561},{"_id":"public/tips-on-linux/index.html","hash":"be107b6933dfde87d2627cea2ec9e7d3b6c644be","modified":1683126594561},{"_id":"public/how-to-install-llvm-and-clang-on-centos-6/index.html","hash":"c1185b4273cf70347e37695c91ac05df67c8d6f8","modified":1683126594561},{"_id":"public/shortcuts-of-anaconda-on-windows/index.html","hash":"beb3f93ba457816a3163955b9c87eb0ddbb3a164","modified":1683126594561},{"_id":"public/setting-up-local-jupyter-notebook-server-environment/index.html","hash":"679679a8e7708f9d58e724c62fcc904d172b3392","modified":1683126594561},{"_id":"public/shell-colors-colorizing-shell-scripts/index.html","hash":"22e3b3aded057fbac1212ea186013e5dc6115aa8","modified":1683126594561},{"_id":"public/zsh-installation/index.html","hash":"d9dfb5092430cd09a86d64792b700f9e27b9b086","modified":1683126594561},{"_id":"public/archives/index.html","hash":"9eb1872f58ad9ff4d5104ee3b8f380298dd159f6","modified":1683126594561},{"_id":"public/hexo-deployment-on-server/index.html","hash":"71b7cdaa6d008d1640b1a877c8f139c0824ca565","modified":1683126594561},{"_id":"public/archives/page/2/index.html","hash":"be7daeded3337d773ae8b3a823d09006ca350336","modified":1683126594561},{"_id":"public/archives/2017/07/index.html","hash":"061c041585fca61963ef2c7d4d3a9baea258049f","modified":1683126594561},{"_id":"public/archives/2017/09/index.html","hash":"12ceda3b62c91167a9ac81519d7a616b04a9e306","modified":1683126594561},{"_id":"public/archives/2017/index.html","hash":"48400c358d844a5e3369c58fc7d7345fc5997734","modified":1683126594561},{"_id":"public/archives/2017/08/index.html","hash":"5317d77c83b38ffa9dca50b49cbb2c549db65061","modified":1683126594561},{"_id":"public/archives/2017/11/index.html","hash":"746f4dd5111cd64c485a14fd1395f069e4a4f783","modified":1683126594561},{"_id":"public/archives/2018/index.html","hash":"4e1baa9e884173dd9caa9f118abff5fa595aedc2","modified":1683126594561},{"_id":"public/archives/2017/10/index.html","hash":"a20d60c8bfa6641331b02c29862452c22eefa3d6","modified":1683126594561},{"_id":"public/archives/2017/12/index.html","hash":"05baeb9f71a9b966f995ffa2dcb9f28951473b77","modified":1683126594561},{"_id":"public/archives/2018/03/index.html","hash":"e14a202be7d2ed946e6cf41c2be734777e4ec598","modified":1683126594561},{"_id":"public/archives/2018/02/index.html","hash":"a7f0ef22b1a2fccfea1d63d0a54f751be969ab7a","modified":1683126594561},{"_id":"public/archives/2018/01/index.html","hash":"c62083081e29b2c3db0d1bc739507957bf746606","modified":1683126594561},{"_id":"public/archives/2018/08/index.html","hash":"4bc6188a8b8d5fba438709cc353dcffa2d0a8064","modified":1683126594562},{"_id":"public/archives/2018/07/index.html","hash":"90098f3d5c5e6d04b0874c85910d1281bdac79b0","modified":1683126594562},{"_id":"public/archives/2020/04/index.html","hash":"1d7f4e130cde4222a9c3f918b28e441c0f5778bc","modified":1683126594562},{"_id":"public/archives/2018/06/index.html","hash":"c55d4887ea1bb77de5f5037a8915d08b4c9c3f07","modified":1683126594562},{"_id":"public/archives/2020/08/index.html","hash":"40a504f5179bc11d4944a177e48414fd60ed3de4","modified":1683126594562},{"_id":"public/archives/2020/09/index.html","hash":"1d6737d1776603a1ea3bb05736a07cea4d9bcad9","modified":1683126594562},{"_id":"public/archives/2020/index.html","hash":"8c185d20da6b5bd40f2e010e8e04a476d4437ad0","modified":1683126594562},{"_id":"public/archives/2021/index.html","hash":"b6829bf83e1cafafc84ef57c87d7661b73cda85d","modified":1683126594562},{"_id":"public/archives/2021/02/index.html","hash":"0f323fe11bc34f1263aad9b059a9e3d2e89dc975","modified":1683126594562},{"_id":"public/archives/2020/10/index.html","hash":"31b4e44617e4d7867179d141ae6aaec6d966b518","modified":1683126594562},{"_id":"public/archives/2022/03/index.html","hash":"1c26fa0ee80cd1351b02d7528445b37d72e0d591","modified":1683126594562},{"_id":"public/archives/2022/index.html","hash":"a777b46dd275cc40e66394d6b42ca58a4b6f253d","modified":1683126594562},{"_id":"public/categories/Handy-Utilities/index.html","hash":"3bca5f7d84ee60c5082c072f9c788e35716e0cd0","modified":1683126594562},{"_id":"public/categories/Operation-and-Maintenance/index.html","hash":"abee9a9405c10e632d4f020e98d1110788a24306","modified":1683126594562},{"_id":"public/categories/Memos/index.html","hash":"5be851db86531cc0083423644c7ad560bd8117d2","modified":1683126594562},{"_id":"public/categories/Development/index.html","hash":"4d23857efa869f49f68e35facdb7aa5566b1bd53","modified":1683126594562},{"_id":"public/categories/Development/page/2/index.html","hash":"1f9a44ad70e5a33725797e0db0a9b85459852f63","modified":1683126594562},{"_id":"public/categories/Tips-and-Tricks/index.html","hash":"59a2567627225222c1e35506a3848a74d1eef738","modified":1683126594562},{"_id":"public/categories/Mathematical-Modeling/index.html","hash":"950e67f39932bb479d560d315ebed4255ee51ed8","modified":1683126594562},{"_id":"public/categories/Applied-Mathematics/index.html","hash":"4850c00f03fe4af05d7695c4d9537172a28c1b6c","modified":1683126594562},{"_id":"public/categories/Algorithms/index.html","hash":"60e09c41080d571334d01fa9cbe71963192b1942","modified":1683126594562},{"_id":"public/categories/Research/index.html","hash":"74aaed70f6dbfa3537698af2c936a69468a0d4aa","modified":1683126594562},{"_id":"public/categories/Machine-Learning/index.html","hash":"f65683919650951a766b1c22b6470a5de2d21fb1","modified":1683126594562},{"_id":"public/categories/Book-List/index.html","hash":"91cec168465070e03e9b6ca749ce1bc40199c77b","modified":1683126594562},{"_id":"public/page/2/index.html","hash":"2df529b0601af7ac04ef733781b1f70284aac703","modified":1683126594562},{"_id":"public/index.html","hash":"26ee67e1df4f2da58fb460efacfd49424cb319b3","modified":1683126594562},{"_id":"public/page/4/index.html","hash":"2283fd900374c82c410fc8d5535a5389eaec7c29","modified":1683126594562},{"_id":"public/page/3/index.html","hash":"47fefcce7f4055771d0889f71e726051cac865f1","modified":1683126594562},{"_id":"public/page/5/index.html","hash":"3fb786b859f6325850f40eb609fcdcd4f1cf456b","modified":1683126594562},{"_id":"public/tags/MSYS2/index.html","hash":"bf71ec245ed30d8ea739b6a24a2ddaf361cd3a3c","modified":1683126594562},{"_id":"public/tags/YCM/index.html","hash":"b9c7c088308d0c56dfc2a9f4421ccf8fcdec0542","modified":1683126594562},{"_id":"public/tags/Vim/index.html","hash":"3e5becce14456679a7b838b2affc79350f5e1fc8","modified":1683126594563},{"_id":"public/tags/Linux/index.html","hash":"bc17e43c776761430597c8c2bc0b0f6ac797ce92","modified":1683126594563},{"_id":"public/tags/Windows/index.html","hash":"8f8324a9c3a605ce10fe187d9257c37f45504c13","modified":1683126594563},{"_id":"public/tags/CentOS/index.html","hash":"1055c825d2c5a3bb9484a0cec7030028dc64450c","modified":1683126594563},{"_id":"public/tags/SSH/index.html","hash":"0620bf80992d068e58fd6a2691faf951641ca4cb","modified":1683126594563},{"_id":"public/tags/Python/index.html","hash":"2f850713db29c49e5d9305065ff571e8648624fa","modified":1683126594563},{"_id":"public/tags/Mobaxterm/index.html","hash":"3e834557f29321d578c0c859872e33527ba02810","modified":1683126594563},{"_id":"public/tags/Java/index.html","hash":"bd5091c36fbb2612e83441720a5e5eda2a4a932f","modified":1683126594563},{"_id":"public/tags/R/index.html","hash":"97bccbb2c821260c95119ecdaad1259927317def","modified":1683126594563},{"_id":"public/tags/Cygwin/index.html","hash":"9d2f1258fa758976a14dced085a1a07e06409588","modified":1683126594563},{"_id":"public/tags/ConEmu/index.html","hash":"bd5cab3eed04266d2c0c113e6e89d156bcb30d2f","modified":1683126594563},{"_id":"public/tags/Server/index.html","hash":"54c20dd08203e61bd739aa71702adbf97b87190a","modified":1683126594563},{"_id":"public/tags/Matlab/index.html","hash":"87c1fd9326f7dd1c9b71d3b3cc4f212210b93f9f","modified":1683126594563},{"_id":"public/tags/RStudio/index.html","hash":"157f1883f72b6af23df9342b92ef9aa990a01634","modified":1683126594564},{"_id":"public/tags/Autossh/index.html","hash":"45758a8e5dd6d765e68a92a580db1e83d33dfd69","modified":1683126594564},{"_id":"public/tags/Hexo/index.html","hash":"a4bbdd282e33a0ba3468395c53366353226ea190","modified":1683126594564},{"_id":"public/tags/Interpolation/index.html","hash":"4a01aa865606bef4a7cdeeddbec027b62cdb4114","modified":1683126594564},{"_id":"public/tags/Nginx/index.html","hash":"3dd47117663f80ed6b182390d82cb04e12cd59d2","modified":1683126594564},{"_id":"public/tags/MacOS/index.html","hash":"e60190a1da5e72accd2e18bc54a58a9ed9a3b013","modified":1683126594564},{"_id":"public/tags/Programmer/index.html","hash":"0ffa5952eb54e054117df77056eef76a5a022c9f","modified":1683126594564},{"_id":"public/tags/Webhook/index.html","hash":"7d84bd3230cdf90fec08e52b3f3fe7a1bc304148","modified":1683126594564},{"_id":"public/tags/Homebrew/index.html","hash":"8448bf811fde1004271a703af0dab19c148c6acd","modified":1683126594564},{"_id":"public/tags/LLVM/index.html","hash":"21d1bf89a0b5a14a35df05a46432f2c8553832bd","modified":1683126594564},{"_id":"public/tags/GCC/index.html","hash":"5fdb724b6eb6f8065246ce42a47c170ae93b7837","modified":1683126594564},{"_id":"public/tags/Clang/index.html","hash":"af856a071dc7af88dba8fc9135c12674cf46e779","modified":1683126594564},{"_id":"public/tags/MySQL/index.html","hash":"916884a8a646ff8784378f1f01289f3f2892aede","modified":1683126594564},{"_id":"public/tags/Shell/index.html","hash":"070d0e93761be0238d39b7aa7fe4cacfdd90353e","modified":1683126594564},{"_id":"public/tags/SQL/index.html","hash":"08de16bc22cad1f9c8c4748e2c1f2a1961ba9e71","modified":1683126594564},{"_id":"public/tags/Ubuntu/index.html","hash":"13ae758cd69f5f7e55f3d3f22ae90338396a8bd3","modified":1683126594564},{"_id":"public/tags/FileSystem/index.html","hash":"5cebfad7eedd98af24564caa7a8846c587f085f9","modified":1683126594564},{"_id":"public/tags/Anaconda/index.html","hash":"de66fa2a6a5d21798273e84d0185ff67279c8029","modified":1683126594564},{"_id":"public/tags/Date/index.html","hash":"2ed0c831d2fd98ea91fef1c4782361073dfcdbdd","modified":1683126594564},{"_id":"public/tags/Conda/index.html","hash":"f4cff1a0b6bd6a5972e0fb5a3bd1507baa4e0db5","modified":1683126594564},{"_id":"public/tags/Perl/index.html","hash":"f131aefb257b8cdef042b5f228c37a39c9051b6b","modified":1683126594564},{"_id":"public/tags/Statistics/index.html","hash":"3176f36316e20a46c02ecdd569f189698397d73a","modified":1683126594565},{"_id":"public/tags/Linear-Algebra/index.html","hash":"959e030a1d378fd02d55a984acf69e15608c70f4","modified":1683126594565},{"_id":"public/tags/Difference/index.html","hash":"085df965f7008ac32d8b571d46cf718600454a98","modified":1683126594565},{"_id":"public/tags/Matrix/index.html","hash":"7ccdf25682d1f851ba5278ebfc0cc79dc8963feb","modified":1683126594574},{"_id":"public/tags/C-Sharp/index.html","hash":"2d3adc3faa82f4269f6fcbbcef950a67bdac444a","modified":1683126594574},{"_id":"public/tags/Programming/index.html","hash":"4d041b4cd4e8d5ff1e79cf65436f9642404543f8","modified":1683126594574},{"_id":"public/tags/Lingo/index.html","hash":"a021221ce30602d1dd1804eb3f1d2a8ce72d6fe9","modified":1683126594574},{"_id":"public/tags/Haskell/index.html","hash":"ad8ff3354f559e68f37da771c265d1289d2202fc","modified":1683126594574},{"_id":"public/tags/Pass/index.html","hash":"986e7884656c05acdc5e4e35ace4a9e52e1c3984","modified":1683126594574},{"_id":"public/tags/Stack/index.html","hash":"6d1382e721d955af310d0f8d72a860f5c9320f55","modified":1683126594574},{"_id":"public/tags/TensorFlow/index.html","hash":"a1118ba363b2ee5edb0262e5670d861cdfce3bd5","modified":1683126594574},{"_id":"public/tags/FTP/index.html","hash":"16bd7e3f59313df0f573f7c2bb98268e5036bf12","modified":1683126594574},{"_id":"public/tags/Jupyter/index.html","hash":"6c2e95f81a3babed574175b831fc81c225e15626","modified":1683126594574},{"_id":"public/tags/ZFile/index.html","hash":"f58eb8deaba7365630e4c08e717a456c77527b53","modified":1683126594575},{"_id":"public/tags/FileZilla/index.html","hash":"cd19b22d5fa5ec504f4404d5f1c2d104db9449c8","modified":1683126594575},{"_id":"public/tags/NetDisk/index.html","hash":"f30460031a706e411adce82ff73722ef8e68b9d8","modified":1683126594575},{"_id":"public/tags/Fuse/index.html","hash":"b6e21c4173ae92d3768d831e6070b0b548c01905","modified":1683126594575},{"_id":"public/tags/Gawk/index.html","hash":"11705dbfe5c6682fe09f58d22e29754724e9b15e","modified":1683126594575},{"_id":"public/tags/NetMask/index.html","hash":"f1e2a7564e38e0c3366209fb9f4939e18ff8ad6f","modified":1683126594575},{"_id":"public/tags/Routing/index.html","hash":"307825120044b66ce9e7fdc519213c34089dbb0c","modified":1683126594575},{"_id":"public/tags/Xshell/index.html","hash":"7ebccea481d5b93eefc4764d0db10dbc8c668cf6","modified":1683126594575},{"_id":"public/tags/Iterator/index.html","hash":"bfad14002347f8c12ddc44ddbfad86d8ea124f5b","modified":1683126594575},{"_id":"public/tags/Source-Code/index.html","hash":"68075195d083ffe09cc76b0795f82de884c84c2b","modified":1683126594575},{"_id":"public/tags/SQLite/index.html","hash":"5264cfb5a6197ac52d1fdab4facc072cf60e285f","modified":1683126594575},{"_id":"public/tags/SSR/index.html","hash":"f2a564f071c61f71b86d20423ee83cf15dbb1cc5","modified":1683126594575},{"_id":"public/tags/Zsh/index.html","hash":"01c094bd505749bbc80084fee79c21b9f6c09cd1","modified":1683126594575},{"_id":"public/favicon.ico","hash":"fdd9d9455c24c3da16f6ed9b9550a5e616f511c5","modified":1683126594575},{"_id":"public/google755ee5b546d5d6d0.html","hash":"069c45be2a6e738c8ef274a9329c78fb9f2ca3c5","modified":1683126594575},{"_id":"public/baidu_verify_QITjFBn0ix.html","hash":"e58b09013863da11cb3bbcf9f75728af06b3bc4e","modified":1683126594575},{"_id":"public/robots.txt","hash":"c7d2136b90b3734eadf3f8cf34daa1193d07f3fe","modified":1683126594575},{"_id":"public/img/haskell-logo.svg","hash":"ddd42c955c1401052519f0a7e774d3021033d847","modified":1683126594575},{"_id":"public/img/jupyter-notebook-server.png","hash":"a04243c8c4bd65dfec0a57498acc65f8163a4fb2","modified":1683126594575},{"_id":"public/img/olympic-rings.svg","hash":"f516b3cc65048a2a42affc954d59cd60a53c537c","modified":1683126594575},{"_id":"public/img/shell-colors.png","hash":"053e069e2e1c8d0a48783a1dbf003272169394a1","modified":1683126594575},{"_id":"public/img/task_priority.eddx","hash":"c622c0ee8301d92ffb57ad01cec7ad5d22a18b8b","modified":1683126594575},{"_id":"public/img/task_priority.svg","hash":"b475c27d7a590dca40a4b2a102346ae346fef031","modified":1683126594575},{"_id":"public/img/zsh-on-xshell.png","hash":"dd67f7f8145e0acd303013d35975bdd3a1064ca0","modified":1683126594575},{"_id":"public/src/_ycm_extra_conf.py","hash":"0a5f547235d4917d7d7f1e5e72c89afb16a963f8","modified":1683126594575},{"_id":"public/src/_vimrc","hash":"021b78df9f41c621cfa38a3654d3bfcdd0c06bf2","modified":1683126594575},{"_id":"public/src/bashrc","hash":"23f4668c8de9b0f15fd06880425ea25745729a8f","modified":1683126594575},{"_id":"public/src/reverse-tunnel-sshd.xml","hash":"35970a0f671097fd0a2a4208d19edaf5ad2c8534","modified":1683126594575},{"_id":"public/src/sshd_msys.sh","hash":"322b81de4459097f481795f607caf752e7551a14","modified":1683126594575},{"_id":"public/src/tree.pl","hash":"991ca3498dcf941e69ae3ea31275df05d0df499e","modified":1683126594575},{"_id":"public/src/vimrc","hash":"0038d8be65499d2b4b89a2482716abde975ee0cc","modified":1683126594575},{"_id":"public/src/ycm_extra_conf.py","hash":"4dfe8f7be956aa45de2a73a279cbd7921e155b1f","modified":1683126594575},{"_id":"public/src/conemu.xml","hash":"4ebe32aff1c15ab0cdf3469a2df073cb95b36868","modified":1683126594575},{"_id":"public/src/zshrc","hash":"598778aec9915c0ee973f8c9793d7f3352ad93ca","modified":1683126594576},{"_id":"public/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1683126594577},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1683126594577},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1683126594577},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1683126594577},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1683126594577},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1683126594577},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1683126594577},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1683126594577},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1683126594577},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1683126594577},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1683126594577},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1683126594577},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1683126594577},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1683126594577},{"_id":"public/images/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1683126594577},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1683126594577},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1683126594577},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1683126594577},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1683126594577},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1683126594577},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1683126594577},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1683126594578},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1683126594578},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1683126594578},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1683126594578},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1683126594578},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1683126594578},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1683126594578},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1683126594578},{"_id":"public/img/epidemic.svg","hash":"d0788af3d69b49ba10fb789987bd241db072cec3","modified":1683126595180},{"_id":"public/img/avatar.jpg","hash":"700f6cb9fdefcb76caf372be9c56b1448b875e89","modified":1683126595186},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1683126595186},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1683126595186},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1683126595425},{"_id":"public/js/src/bootstrap.js","hash":"aab7be0a6e2724b3faa9338db93c19556c559625","modified":1683126595425},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1683126595425},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1683126595425},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1683126595425},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1683126595425},{"_id":"public/js/src/motion.js","hash":"1baf79cc3b1189bf826b2a1683dc0b43d9dd22d2","modified":1683126595425},{"_id":"public/js/src/post-details.js","hash":"b4bdb7bda776ce95be0e6ed94845c6b49dc50012","modified":1683126595425},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1683126595425},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1683126595427},{"_id":"public/js/src/utils.js","hash":"0fcb80ec11e6df05ed1a07b9338bef2669f93a70","modified":1683126595427},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1683126595427},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1683126595428},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"7fd2f3e2773555392ef40df40cae3bedb884f17a","modified":1683126595428},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1683126595428},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1683126595428},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1683126595428},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1683126595428},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1683126595428},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1683126595428},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1683126595428},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1683126595428},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1683126595428},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1683126595428},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1683126595428},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1683126595429},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1683126595430},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1683126595431},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1683126595431},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1683126595431},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1683126595431},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1683126595431},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1683126595431},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1683126595431},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1683126595431},{"_id":"public/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1683126595431},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1683126595431},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1683126595431},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1683126595431},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1683126595431},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1683126595431},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1683126595431},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1683126595431},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1683126595431},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1683126595431},{"_id":"public/css/main.css","hash":"a6cdd8a4b2c64eaa47678ff08f4f25689770d3a9","modified":1683126595431},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1683126595432},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1683126595432},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1683126595432},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1683126595432},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1683126595432},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1683126595432},{"_id":"public/lib/Han/dist/han.min.css","hash":"d9c0b3dc9158e717fde36f554709e6c3a22b5f85","modified":1683126595432},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1683126595432},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1683126595432},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1683126595432},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1683126595432},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1683126595432},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1683126595432},{"_id":"public/lib/Han/dist/han.css","hash":"38e48f275ad00daa9dcdcb8d9b44e576acda4707","modified":1683126595432},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1683126595432},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1683126595432},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1683126595432},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1683126595432},{"_id":"public/img/integrate(1+x3).svg","hash":"b038f69d8661a6043de09925619b3e011b89e764","modified":1683126595432},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1683126595433},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1683126595433},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1683126595433},{"_id":"public/img/epidemic-2x2-by-n.svg","hash":"9e9ed2d801e655f1e396afbe50a4969fb8c89371","modified":1683126596558},{"_id":"public/img/epidemic-2x2.svg","hash":"02f39bdd9bd6438b12b0258976c115e93b1790d3","modified":1683126596558},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1683126596574},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"738bb0f0f3412bfd902ae66919318a1fab70d17a","modified":1683126596706},{"_id":"public/lib/jquery_lazyload/README.html","hash":"95da3fb963ab10d20d3ae47e5c7026c1344a6b3f","modified":1683126596754},{"_id":"public/lib/fastclick/README.html","hash":"b9fe6fbd1e6caf5d43de836ceaad7c8133ae90eb","modified":1683126596809}],"Category":[{"name":"Operation and Maintenance","_id":"clh7u335l0004p4x009371gs0"},{"name":"Memos","_id":"clh7u3360000ep4x0y202foye"},{"name":"Handy Utilities","_id":"clh7u3364000kp4x0zwik4fmq"},{"name":"Development","_id":"clh7u3367000rp4x0hd7zs64c"},{"name":"Tips and Tricks","_id":"clh7u336j001op4x04qpws50r"},{"name":"Applied Mathematics","_id":"clh7u336m001xp4x0x2be0wiz"},{"name":"Mathematical Modeling","_id":"clh7u336p0026p4x02n5gasne"},{"name":"Machine Learning","_id":"clh7u336s002hp4x0lg5810i1"},{"name":"Algorithms","_id":"clh7u336w002rp4x09kpqczu8"},{"name":"Book List","_id":"clh7u336z002yp4x02gscgttx"},{"name":"Research","_id":"clh7u3373003dp4x0lctj3pl0"}],"Data":[],"Page":[{"title":"关于","date":"2017-07-16T16:03:31.000Z","type":"about","comments":0,"_content":"\n# 关于我 | About Me\n\n喜欢折腾各种小工具（因此经常陷入细节不能自拔），喜欢用简洁 / 优雅 / 清真的方式去完成日常工作。\n\n<br>\n\n# 联系方式 | Contract\n\n- Email: lbgnmic@gmail.com\n- Github: https://github.com/michaelHL\n","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2017-07-17 00:03:31\ntype: \"about\"\ncomments: false\n---\n\n# 关于我 | About Me\n\n喜欢折腾各种小工具（因此经常陷入细节不能自拔），喜欢用简洁 / 优雅 / 清真的方式去完成日常工作。\n\n<br>\n\n# 联系方式 | Contract\n\n- Email: lbgnmic@gmail.com\n- Github: https://github.com/michaelHL\n","updated":"2019-11-13T03:03:08.028Z","path":"about/index.html","layout":"page","_id":"clh7u335i0001p4x0jhgdz0xp","content":"<h1 id=\"关于我-about-me\">关于我 | About Me</h1>\r\n<p>喜欢折腾各种小工具（因此经常陷入细节不能自拔），喜欢用简洁 / 优雅 / 清真的方式去完成日常工作。</p>\r\n<p><br></p>\r\n<h1 id=\"联系方式-contract\">联系方式 | Contract</h1>\r\n<ul>\r\n<li>Email: lbgnmic@gmail.com</li>\r\n<li>Github: https://github.com/michaelHL</li>\r\n</ul>\r\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"关于我-about-me\">关于我 | About Me</h1>\r\n<p>喜欢折腾各种小工具（因此经常陷入细节不能自拔），喜欢用简洁 / 优雅 / 清真的方式去完成日常工作。</p>\r\n<p><br></p>\r\n<h1 id=\"联系方式-contract\">联系方式 | Contract</h1>\r\n<ul>\r\n<li>Email: lbgnmic@gmail.com</li>\r\n<li>Github: https://github.com/michaelHL</li>\r\n</ul>\r\n"},{"title":"分类","date":"2017-07-16T15:29:47.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2017-07-16 23:29:47\ntype: \"categories\"\ncomments: false\n---\n","updated":"2019-02-28T13:06:49.516Z","path":"categories/index.html","layout":"page","_id":"clh7u335l0003p4x0j1en510h","content":"\r\n","site":{"data":{}},"excerpt":"","more":"\r\n"},{"title":"系列","date":"2018-04-09T14:49:23.000Z","type":"series","comments":0,"_content":"\n### 笔记类\n\n- [Windows 问题与技巧](../problems-tricks-and-memo-on-windows)\n- [Linux 技巧拾零](../tips-on-linux)\n- [Perl 5 拾零](../notes-on-perl-5)\n- [Python 3 拾零](../notes-on-python-3)\n\n### 文档类\n\n- [Linux 中日期 date 命令格式控制符](../linux-date-format)\n- [Windows 系统内置环境变量](../built-in-environment-variables-on-windows)\n- [Windows 下安装 Anaconda3 产生的快捷方式](../shortcuts-of-anaconda-on-windows)\n","source":"series/index.md","raw":"---\ntitle: 系列\ndate: 2018-04-09 22:49:23\ntype: \"series\"\ncomments: false\n---\n\n### 笔记类\n\n- [Windows 问题与技巧](../problems-tricks-and-memo-on-windows)\n- [Linux 技巧拾零](../tips-on-linux)\n- [Perl 5 拾零](../notes-on-perl-5)\n- [Python 3 拾零](../notes-on-python-3)\n\n### 文档类\n\n- [Linux 中日期 date 命令格式控制符](../linux-date-format)\n- [Windows 系统内置环境变量](../built-in-environment-variables-on-windows)\n- [Windows 下安装 Anaconda3 产生的快捷方式](../shortcuts-of-anaconda-on-windows)\n","updated":"2019-02-28T13:06:49.548Z","path":"series/index.html","layout":"page","_id":"clh7u33at008np4x0pbc8b417","content":"<h3 id=\"笔记类\">笔记类</h3>\r\n<ul>\r\n<li><a href=\"../problems-tricks-and-memo-on-windows\">Windows 问题与技巧</a></li>\r\n<li><a href=\"../tips-on-linux\">Linux 技巧拾零</a></li>\r\n<li><a href=\"../notes-on-perl-5\">Perl 5 拾零</a></li>\r\n<li><a href=\"../notes-on-python-3\">Python 3 拾零</a></li>\r\n</ul>\r\n<h3 id=\"文档类\">文档类</h3>\r\n<ul>\r\n<li><a href=\"../linux-date-format\">Linux 中日期 date 命令格式控制符</a></li>\r\n<li><a href=\"../built-in-environment-variables-on-windows\">Windows 系统内置环境变量</a></li>\r\n<li><a href=\"../shortcuts-of-anaconda-on-windows\">Windows 下安装 Anaconda3 产生的快捷方式</a></li>\r\n</ul>\r\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"笔记类\">笔记类</h3>\r\n<ul>\r\n<li><a href=\"../problems-tricks-and-memo-on-windows\">Windows 问题与技巧</a></li>\r\n<li><a href=\"../tips-on-linux\">Linux 技巧拾零</a></li>\r\n<li><a href=\"../notes-on-perl-5\">Perl 5 拾零</a></li>\r\n<li><a href=\"../notes-on-python-3\">Python 3 拾零</a></li>\r\n</ul>\r\n<h3 id=\"文档类\">文档类</h3>\r\n<ul>\r\n<li><a href=\"../linux-date-format\">Linux 中日期 date 命令格式控制符</a></li>\r\n<li><a href=\"../built-in-environment-variables-on-windows\">Windows 系统内置环境变量</a></li>\r\n<li><a href=\"../shortcuts-of-anaconda-on-windows\">Windows 下安装 Anaconda3 产生的快捷方式</a></li>\r\n</ul>\r\n"},{"title":"札记","date":"2018-06-22T15:36:22.000Z","type":"sketch","mathjax":true,"comments":0,"_content":"\n- [$Mathjax$ 全攻略](https://math.meta.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference)\n- 发现一枚不错的 [Matlab For Linux 网址](https://liengsarinbt.blogspot.com/2017/11/mathworks-matlab-r2017b.html)\n- Matlab 2016 安装完毕后会自动给**系统级** `PATH` 添加三条路径：\n  `E:\\Matlab\\runtime\\win64`，`E:\\Matlab\\bin`，`E:\\Matlab\\polyspace\\bin`\n- 一个在线修复问题 PDF 文件网站：[ilovepdf](https://www.ilovepdf.com/repair-pdf)\n","source":"sketch/index.md","raw":"---\ntitle: 札记\ndate: 2018-06-22 23:36:22\ntype: \"sketch\"\nmathjax: true\ncomments: false\n---\n\n- [$Mathjax$ 全攻略](https://math.meta.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference)\n- 发现一枚不错的 [Matlab For Linux 网址](https://liengsarinbt.blogspot.com/2017/11/mathworks-matlab-r2017b.html)\n- Matlab 2016 安装完毕后会自动给**系统级** `PATH` 添加三条路径：\n  `E:\\Matlab\\runtime\\win64`，`E:\\Matlab\\bin`，`E:\\Matlab\\polyspace\\bin`\n- 一个在线修复问题 PDF 文件网站：[ilovepdf](https://www.ilovepdf.com/repair-pdf)\n","updated":"2020-06-01T11:11:34.862Z","path":"sketch/index.html","layout":"page","_id":"clh7u33at008op4x09c8delaj","content":"<ul>\r\n<li><a href=\"https://math.meta.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference\" target=\"_blank\" rel=\"noopener\"><span class=\"math inline\">\\(Mathjax\\)</span> 全攻略</a></li>\r\n<li>发现一枚不错的 <a href=\"https://liengsarinbt.blogspot.com/2017/11/mathworks-matlab-r2017b.html\" target=\"_blank\" rel=\"noopener\">Matlab For Linux 网址</a></li>\r\n<li>Matlab 2016 安装完毕后会自动给<strong>系统级</strong> <code>PATH</code> 添加三条路径： <code>E:\\Matlab\\runtime\\win64</code>，<code>E:\\Matlab\\bin</code>，<code>E:\\Matlab\\polyspace\\bin</code></li>\r\n<li>一个在线修复问题 PDF 文件网站：<a href=\"https://www.ilovepdf.com/repair-pdf\" target=\"_blank\" rel=\"noopener\">ilovepdf</a></li>\r\n</ul>\r\n","site":{"data":{}},"excerpt":"","more":"<ul>\r\n<li><a href=\"https://math.meta.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference\" target=\"_blank\" rel=\"noopener\"><span class=\"math inline\">\\(Mathjax\\)</span> 全攻略</a></li>\r\n<li>发现一枚不错的 <a href=\"https://liengsarinbt.blogspot.com/2017/11/mathworks-matlab-r2017b.html\" target=\"_blank\" rel=\"noopener\">Matlab For Linux 网址</a></li>\r\n<li>Matlab 2016 安装完毕后会自动给<strong>系统级</strong> <code>PATH</code> 添加三条路径： <code>E:\\Matlab\\runtime\\win64</code>，<code>E:\\Matlab\\bin</code>，<code>E:\\Matlab\\polyspace\\bin</code></li>\r\n<li>一个在线修复问题 PDF 文件网站：<a href=\"https://www.ilovepdf.com/repair-pdf\" target=\"_blank\" rel=\"noopener\">ilovepdf</a></li>\r\n</ul>\r\n"},{"title":"标签","date":"2017-07-16T15:29:00.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2017-07-16 23:29:00\ntype: \"tags\"\ncomments: false\n---\n","updated":"2019-02-28T13:06:49.563Z","path":"tags/index.html","layout":"page","_id":"clh7u33av008pp4x0thri3ap9","content":"\r\n","site":{"data":{}},"excerpt":"","more":"\r\n"}],"Post":[{"title":"从源码编译 Vim 8","date":"2018-01-20T06:58:13.000Z","_content":"\n作为 Vim {% fa vimeo-square fw %} 重度依赖者，是时候记录下 *nix 系统从源码编译 Vim 的过程了。\n\n<!-- more -->\n\n## CentOS\n\n一路遇到了不少坑，遇到奇奇怪怪的错误，没有一一记录，直接写下成功的编译过程。（系统版本 CentOS 7.3 x64）\n\n1. 系统用U盘进行安装的，自带了个 `python2.7`。首先安装必要包（可能不全）\n   {% codeblock lang:bash %}\n   yum install mercurial ncurses-devel ruby ruby-devel lua lua-devel luajit python-devel python34 python34-devel\n   {% endcodeblock %}\n1. 克隆 [Vim](https://github.com/vim/vim) 的仓库\n   {% codeblock lang:bash %}\n   git clone https://github.com/vim/vim.git\n   {% endcodeblock %}\n   或同步在码云的仓库：\n   {% codeblock lang:bash %}\n   git clone https://gitee.com/shinemic/vim.git\n   {% endcodeblock %}\n1. 开始各种配置：\n   {% codeblock lang:bash %}\n   ./configure --with-features=huge \\\n               --enable-rubyinterp=yes \\\n               --enable-luainterp=yes \\\n               --enable-perlinterp=yes \\\n               --enable-pythoninterp=yes \\\n               --enable-python3interp=yes \\\n               --with-python-config-dir=/usr/lib64/python2.7/config \\\n               --with-python3-config-dir=/usr/lib64/python3.4/config-3.4m \\\n               --enable-fontset=yes \\\n               --enable-cscope=yes \\\n               --enable-multibyte \\\n               --disable-gui \\\n               --enable-fail-if-missing \\\n               --prefix=/usr/local \\\n               --with-compiledby='Professional operations'\n   {% endcodeblock %}\n   对其中的参数稍作解释：\n   - `--enable-fail-if-missing` 表示一旦出现配置错误，则报错并停下来，     这时候可以看到什么方面没有配置好，方便排错，否则还要往回翻看一大串的信息\n   - `...interp=yes` 表示加入某某支持\n   - 在加入对 `python` 的支持中，出现了各种问题，最终发现是没有安装 `python-dev`\n     以及 `python34-devel`。同样 `lua` 也要安装 `lua-devel`。\n     另外 `...-config-dir` 也是很重要的，默认情况下 Vim 是找不到他们的配置路径的\n1. 编译。\n   {% codeblock lang:bash %}\n   make\n   make install\n   {% endcodeblock %}\n1. 开耍。`vim --version`\n   {% codeblock lang:bash %}\n   VIM - Vi IMproved 8.0 (2016 Sep 12, compiled Aug  3 2017 06:43:08)\n   Included patches: 1-844\n   Compiled by root@Dorawk-workstation\n   Huge version without GUI.  Features included (+) or not (-):\n   +acl             +file_in_path    +mouse_sgr       +tag_old_static\n   +arabic          +find_in_path    -mouse_sysmouse  -tag_any_white\n   +autocmd         +float           +mouse_urxvt     -tcl\n   -balloon_eval    +folding         +mouse_xterm     +termguicolors\n   -browse          -footer          +multi_byte      -terminal\n   ++builtin_terms  +fork()          +multi_lang      +terminfo\n   +byte_offset     +gettext         -mzscheme        +termresponse\n   +channel         -hangul_input    +netbeans_intg   +textobjects\n   +cindent         +iconv           +num64           +timers\n   -clientserver    +insert_expand   +packages        +title\n   -clipboard       +job             +path_extra      -toolbar\n   +cmdline_compl   +jumplist        +perl            +user_commands\n   +cmdline_hist    +keymap          +persistent_undo +vertsplit\n   +cmdline_info    +lambda          +postscript      +virtualedit\n   +comments        +langmap         +printer         +visual\n   +conceal         +libcall         +profile         +visualextra\n   +cryptv          +linebreak       +python/dyn      +viminfo\n   +cscope          +lispindent      +python3/dyn     +vreplace\n   +cursorbind      +listcmds        +quickfix        +wildignore\n   +cursorshape     +localmap        +reltime         +wildmenu\n   +dialog_con      +lua             +rightleft       +windows\n   +diff            +menu            +ruby            +writebackup\n   +digraphs        +mksession       +scrollbind      -X11\n   -dnd             +modify_fname    +signs           -xfontset\n   -ebcdic          +mouse           +smartindent     -xim\n   +emacs_tags      -mouseshape      +startuptime     -xpm\n   +eval            +mouse_dec       +statusline      -xsmp\n   +ex_extra        -mouse_gpm       -sun_workshop    -xterm_clipboard\n   +extra_search    -mouse_jsbterm   +syntax          -xterm_save\n   +farsi           +mouse_netterm   +tag_binary\n      system vimrc file: \"$VIM/vimrc\"\n        user vimrc file: \"$HOME/.vimrc\"\n    2nd user vimrc file: \"~/.vim/vimrc\"\n         user exrc file: \"$HOME/.exrc\"\n          defaults file: \"$VIMRUNTIME/defaults.vim\"\n     fall-back for $VIM: \"/usr/share/vim\"\n   Compilation: gcc -c -I. -Iproto -DHAVE_CONFIG_H\n   -g -O2 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=1\n   Linking: gcc   -L. -Wl,-z,relro -fstack-protector -rdynamic -Wl,-export-dynamic\n   -Wl,--enable-new-dtags -Wl,-rpath,/usr/lib64/perl5/CORE   -L/usr/local/lib -Wl,\n   --as-needed -o vim        -lm -ltinfo -lnsl  -lselinux   -ldl  -L/usr/lib -llua\n   -Wl,--enable-new-dtags -Wl,-rpath,/usr/lib64/perl5/CORE  -fstack-protector\n   -L/usr/lib64/perl5/CORE -lperl -lresolv -lnsl -ldl -lm -lcrypt -lutil -lpthread\n   -lc    -lruby -lpthread -lrt -ldl -lcrypt -lm\n   {% endcodeblock %}\n\n## Ubuntu\n\n系统版本 Ubuntu 16.04+。\n\n```sh\nsudo apt-get install libncurses5-dev libgnome2-dev \\\n                     libgnomeui-dev libgtk2.0-dev libatk1.0-dev libbonoboui2-dev \\\n                     libcairo2-dev libx11-dev libxpm-dev libxt-dev python-dev \\\n                     python3-dev ruby-dev lua5.1 lua5.1-dev liblua5.1-dev libperl-dev git\n./configure --with-features=huge \\\n            --enable-luainterp=yes \\\n            --enable-rubyinterp=yes \\\n            --enable-perlinterp=yes \\\n            --enable-pythoninterp=yes \\\n            --with-python-config-dir=/usr/lib/python2.7/config-x86_64-linux-gnu \\\n            --enable-python3interp=yes \\\n            --with-python3-config-dir=/usr/lib/python3.5/config-3.5m-x86_64-linux-gnu \\\n            --enable-fontset=yes \\\n            --enable-cscope=yes \\\n            --enable-multibyte \\\n            --enable-fail-if-missing \\\n            --enable-gui=gtk2 \\\n            --prefix=/usr/local \\\n            --with-compiledby='Professional operations'\n```\n\n## MSYS2\n\n首先编译 `lua`：\n\n```sh\ncurl -R -O http://www.lua.org/ftp/lua-5.3.4.tar.gz\ntar zxf lua-5.3.4.tar.gz\ncd lua-5.3.4\npacman -S ncurses-devel libcrypt-devel gettext-devel\nmake mingw && make install\n```\n\n配置：\n\n```bash\n./configure --with-features=huge \\\n            --enable-luainterp=yes \\\n            --enable-perlinterp=yes \\\n            --enable-pythoninterp=yes \\\n            --enable-python3interp=yes \\\n            --with-lua-prefix=/usr/local \\\n            --enable-fontset=yes \\\n            --enable-cscope=yes \\\n            --enable-multibyte \\\n            --disable-gui \\\n            --enable-fail-if-missing \\\n            --prefix=/usr/local \\\n            --with-compiledby='Professional operations'\n```\n\n## 其它\n\n### 插件管理器\n\n```sh\ngit clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim\n```\n\n### 个人 vimrc\n\n- Linux: [.vimrc][.vimrc]\n- MSYS2: [_vimrc][_vimrc]\n\n### 注意事项\n\n- 在 `CentOS` 机器上若安装其它版本的 `Python`，可能导致各种与 `Python` 相关的问题（比如 `Vim: Caught deadly signal ABRT`）。在编译的时候灵活取舍 `python` 与 `python3` 选项即可\n- 若不能 `configure`，执行 `make distclean`\n\n[.vimrc]: /src/vimrc\n[_vimrc]: /src/_vimrc\n","source":"_posts/building-vim-from-source.md","raw":"---\ntitle: 从源码编译 Vim 8\ndate: 2018-01-20 14:58:13\ntags:\n    - Vim\n    - Linux\n    - MSYS2\ncategories: Operation and Maintenance\n---\n\n作为 Vim {% fa vimeo-square fw %} 重度依赖者，是时候记录下 *nix 系统从源码编译 Vim 的过程了。\n\n<!-- more -->\n\n## CentOS\n\n一路遇到了不少坑，遇到奇奇怪怪的错误，没有一一记录，直接写下成功的编译过程。（系统版本 CentOS 7.3 x64）\n\n1. 系统用U盘进行安装的，自带了个 `python2.7`。首先安装必要包（可能不全）\n   {% codeblock lang:bash %}\n   yum install mercurial ncurses-devel ruby ruby-devel lua lua-devel luajit python-devel python34 python34-devel\n   {% endcodeblock %}\n1. 克隆 [Vim](https://github.com/vim/vim) 的仓库\n   {% codeblock lang:bash %}\n   git clone https://github.com/vim/vim.git\n   {% endcodeblock %}\n   或同步在码云的仓库：\n   {% codeblock lang:bash %}\n   git clone https://gitee.com/shinemic/vim.git\n   {% endcodeblock %}\n1. 开始各种配置：\n   {% codeblock lang:bash %}\n   ./configure --with-features=huge \\\n               --enable-rubyinterp=yes \\\n               --enable-luainterp=yes \\\n               --enable-perlinterp=yes \\\n               --enable-pythoninterp=yes \\\n               --enable-python3interp=yes \\\n               --with-python-config-dir=/usr/lib64/python2.7/config \\\n               --with-python3-config-dir=/usr/lib64/python3.4/config-3.4m \\\n               --enable-fontset=yes \\\n               --enable-cscope=yes \\\n               --enable-multibyte \\\n               --disable-gui \\\n               --enable-fail-if-missing \\\n               --prefix=/usr/local \\\n               --with-compiledby='Professional operations'\n   {% endcodeblock %}\n   对其中的参数稍作解释：\n   - `--enable-fail-if-missing` 表示一旦出现配置错误，则报错并停下来，     这时候可以看到什么方面没有配置好，方便排错，否则还要往回翻看一大串的信息\n   - `...interp=yes` 表示加入某某支持\n   - 在加入对 `python` 的支持中，出现了各种问题，最终发现是没有安装 `python-dev`\n     以及 `python34-devel`。同样 `lua` 也要安装 `lua-devel`。\n     另外 `...-config-dir` 也是很重要的，默认情况下 Vim 是找不到他们的配置路径的\n1. 编译。\n   {% codeblock lang:bash %}\n   make\n   make install\n   {% endcodeblock %}\n1. 开耍。`vim --version`\n   {% codeblock lang:bash %}\n   VIM - Vi IMproved 8.0 (2016 Sep 12, compiled Aug  3 2017 06:43:08)\n   Included patches: 1-844\n   Compiled by root@Dorawk-workstation\n   Huge version without GUI.  Features included (+) or not (-):\n   +acl             +file_in_path    +mouse_sgr       +tag_old_static\n   +arabic          +find_in_path    -mouse_sysmouse  -tag_any_white\n   +autocmd         +float           +mouse_urxvt     -tcl\n   -balloon_eval    +folding         +mouse_xterm     +termguicolors\n   -browse          -footer          +multi_byte      -terminal\n   ++builtin_terms  +fork()          +multi_lang      +terminfo\n   +byte_offset     +gettext         -mzscheme        +termresponse\n   +channel         -hangul_input    +netbeans_intg   +textobjects\n   +cindent         +iconv           +num64           +timers\n   -clientserver    +insert_expand   +packages        +title\n   -clipboard       +job             +path_extra      -toolbar\n   +cmdline_compl   +jumplist        +perl            +user_commands\n   +cmdline_hist    +keymap          +persistent_undo +vertsplit\n   +cmdline_info    +lambda          +postscript      +virtualedit\n   +comments        +langmap         +printer         +visual\n   +conceal         +libcall         +profile         +visualextra\n   +cryptv          +linebreak       +python/dyn      +viminfo\n   +cscope          +lispindent      +python3/dyn     +vreplace\n   +cursorbind      +listcmds        +quickfix        +wildignore\n   +cursorshape     +localmap        +reltime         +wildmenu\n   +dialog_con      +lua             +rightleft       +windows\n   +diff            +menu            +ruby            +writebackup\n   +digraphs        +mksession       +scrollbind      -X11\n   -dnd             +modify_fname    +signs           -xfontset\n   -ebcdic          +mouse           +smartindent     -xim\n   +emacs_tags      -mouseshape      +startuptime     -xpm\n   +eval            +mouse_dec       +statusline      -xsmp\n   +ex_extra        -mouse_gpm       -sun_workshop    -xterm_clipboard\n   +extra_search    -mouse_jsbterm   +syntax          -xterm_save\n   +farsi           +mouse_netterm   +tag_binary\n      system vimrc file: \"$VIM/vimrc\"\n        user vimrc file: \"$HOME/.vimrc\"\n    2nd user vimrc file: \"~/.vim/vimrc\"\n         user exrc file: \"$HOME/.exrc\"\n          defaults file: \"$VIMRUNTIME/defaults.vim\"\n     fall-back for $VIM: \"/usr/share/vim\"\n   Compilation: gcc -c -I. -Iproto -DHAVE_CONFIG_H\n   -g -O2 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=1\n   Linking: gcc   -L. -Wl,-z,relro -fstack-protector -rdynamic -Wl,-export-dynamic\n   -Wl,--enable-new-dtags -Wl,-rpath,/usr/lib64/perl5/CORE   -L/usr/local/lib -Wl,\n   --as-needed -o vim        -lm -ltinfo -lnsl  -lselinux   -ldl  -L/usr/lib -llua\n   -Wl,--enable-new-dtags -Wl,-rpath,/usr/lib64/perl5/CORE  -fstack-protector\n   -L/usr/lib64/perl5/CORE -lperl -lresolv -lnsl -ldl -lm -lcrypt -lutil -lpthread\n   -lc    -lruby -lpthread -lrt -ldl -lcrypt -lm\n   {% endcodeblock %}\n\n## Ubuntu\n\n系统版本 Ubuntu 16.04+。\n\n```sh\nsudo apt-get install libncurses5-dev libgnome2-dev \\\n                     libgnomeui-dev libgtk2.0-dev libatk1.0-dev libbonoboui2-dev \\\n                     libcairo2-dev libx11-dev libxpm-dev libxt-dev python-dev \\\n                     python3-dev ruby-dev lua5.1 lua5.1-dev liblua5.1-dev libperl-dev git\n./configure --with-features=huge \\\n            --enable-luainterp=yes \\\n            --enable-rubyinterp=yes \\\n            --enable-perlinterp=yes \\\n            --enable-pythoninterp=yes \\\n            --with-python-config-dir=/usr/lib/python2.7/config-x86_64-linux-gnu \\\n            --enable-python3interp=yes \\\n            --with-python3-config-dir=/usr/lib/python3.5/config-3.5m-x86_64-linux-gnu \\\n            --enable-fontset=yes \\\n            --enable-cscope=yes \\\n            --enable-multibyte \\\n            --enable-fail-if-missing \\\n            --enable-gui=gtk2 \\\n            --prefix=/usr/local \\\n            --with-compiledby='Professional operations'\n```\n\n## MSYS2\n\n首先编译 `lua`：\n\n```sh\ncurl -R -O http://www.lua.org/ftp/lua-5.3.4.tar.gz\ntar zxf lua-5.3.4.tar.gz\ncd lua-5.3.4\npacman -S ncurses-devel libcrypt-devel gettext-devel\nmake mingw && make install\n```\n\n配置：\n\n```bash\n./configure --with-features=huge \\\n            --enable-luainterp=yes \\\n            --enable-perlinterp=yes \\\n            --enable-pythoninterp=yes \\\n            --enable-python3interp=yes \\\n            --with-lua-prefix=/usr/local \\\n            --enable-fontset=yes \\\n            --enable-cscope=yes \\\n            --enable-multibyte \\\n            --disable-gui \\\n            --enable-fail-if-missing \\\n            --prefix=/usr/local \\\n            --with-compiledby='Professional operations'\n```\n\n## 其它\n\n### 插件管理器\n\n```sh\ngit clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim\n```\n\n### 个人 vimrc\n\n- Linux: [.vimrc][.vimrc]\n- MSYS2: [_vimrc][_vimrc]\n\n### 注意事项\n\n- 在 `CentOS` 机器上若安装其它版本的 `Python`，可能导致各种与 `Python` 相关的问题（比如 `Vim: Caught deadly signal ABRT`）。在编译的时候灵活取舍 `python` 与 `python3` 选项即可\n- 若不能 `configure`，执行 `make distclean`\n\n[.vimrc]: /src/vimrc\n[_vimrc]: /src/_vimrc\n","slug":"building-vim-from-source","published":1,"updated":"2023-03-09T16:09:38.198Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u335d0000p4x0edk2as6r","content":"<p>作为 Vim <i class=\"fa fa-vimeo-square fa-fw\"></i> 重度依赖者，是时候记录下 *nix 系统从源码编译 Vim 的过程了。</p>\r\n<a id=\"more\"></a>\r\n<h2 id=\"centos\">CentOS</h2>\r\n<p>一路遇到了不少坑，遇到奇奇怪怪的错误，没有一一记录，直接写下成功的编译过程。（系统版本 CentOS 7.3 x64）</p>\r\n<ol type=\"1\">\r\n<li>系统用U盘进行安装的，自带了个 <code>python2.7</code>。首先安装必要包（可能不全） <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install mercurial ncurses-devel ruby ruby-devel lua lua-devel luajit python-devel python34 python34-devel</span><br></pre></td></tr></table></figure></li>\r\n<li>克隆 <a href=\"https://github.com/vim/vim\" target=\"_blank\" rel=\"noopener\">Vim</a> 的仓库 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/vim/vim.git</span><br></pre></td></tr></table></figure> 或同步在码云的仓库： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://gitee.com/shinemic/vim.git</span><br></pre></td></tr></table></figure></li>\r\n<li>开始各种配置： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./configure --with-features=huge \\</span><br><span class=\"line\">            --<span class=\"built_in\">enable</span>-rubyinterp=yes \\</span><br><span class=\"line\">            --<span class=\"built_in\">enable</span>-luainterp=yes \\</span><br><span class=\"line\">            --<span class=\"built_in\">enable</span>-perlinterp=yes \\</span><br><span class=\"line\">            --<span class=\"built_in\">enable</span>-pythoninterp=yes \\</span><br><span class=\"line\">            --<span class=\"built_in\">enable</span>-python3interp=yes \\</span><br><span class=\"line\">            --with-python-config-dir=/usr/lib64/python2.7/config \\</span><br><span class=\"line\">            --with-python3-config-dir=/usr/lib64/python3.4/config-3.4m \\</span><br><span class=\"line\">            --<span class=\"built_in\">enable</span>-fontset=yes \\</span><br><span class=\"line\">            --<span class=\"built_in\">enable</span>-cscope=yes \\</span><br><span class=\"line\">            --<span class=\"built_in\">enable</span>-multibyte \\</span><br><span class=\"line\">            --<span class=\"built_in\">disable</span>-gui \\</span><br><span class=\"line\">            --<span class=\"built_in\">enable</span>-fail-if-missing \\</span><br><span class=\"line\">            --prefix=/usr/<span class=\"built_in\">local</span> \\</span><br><span class=\"line\">            --with-compiledby=<span class=\"string\">'Professional operations'</span></span><br></pre></td></tr></table></figure> 对其中的参数稍作解释：\r\n<ul>\r\n<li><code>--enable-fail-if-missing</code> 表示一旦出现配置错误，则报错并停下来， 这时候可以看到什么方面没有配置好，方便排错，否则还要往回翻看一大串的信息</li>\r\n<li><code>...interp=yes</code> 表示加入某某支持</li>\r\n<li>在加入对 <code>python</code> 的支持中，出现了各种问题，最终发现是没有安装 <code>python-dev</code> 以及 <code>python34-devel</code>。同样 <code>lua</code> 也要安装 <code>lua-devel</code>。 另外 <code>...-config-dir</code> 也是很重要的，默认情况下 Vim 是找不到他们的配置路径的</li>\r\n</ul></li>\r\n<li>编译。 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make</span><br><span class=\"line\">make install</span><br></pre></td></tr></table></figure></li>\r\n<li>开耍。<code>vim --version</code> <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">VIM - Vi IMproved 8.0 (2016 Sep 12, compiled Aug  3 2017 06:43:08)</span><br><span class=\"line\">Included patches: 1-844</span><br><span class=\"line\">Compiled by root@Dorawk-workstation</span><br><span class=\"line\">Huge version without GUI.  Features included (+) or not (-):</span><br><span class=\"line\">+acl             +file_in_path    +mouse_sgr       +tag_old_static</span><br><span class=\"line\">+arabic          +find_in_path    -mouse_sysmouse  -tag_any_white</span><br><span class=\"line\">+autocmd         +<span class=\"built_in\">float</span>           +mouse_urxvt     -tcl</span><br><span class=\"line\">-balloon_eval    +folding         +mouse_xterm     +termguicolors</span><br><span class=\"line\">-browse          -footer          +multi_byte      -terminal</span><br><span class=\"line\">++builtin_terms  +fork()          +multi_lang      +terminfo</span><br><span class=\"line\">+byte_offset     +gettext         -mzscheme        +termresponse</span><br><span class=\"line\">+channel         -hangul_input    +netbeans_intg   +textobjects</span><br><span class=\"line\">+cindent         +iconv           +num64           +timers</span><br><span class=\"line\">-clientserver    +insert_expand   +packages        +title</span><br><span class=\"line\">-clipboard       +job             +path_extra      -toolbar</span><br><span class=\"line\">+cmdline_compl   +jumplist        +perl            +user_commands</span><br><span class=\"line\">+cmdline_hist    +keymap          +persistent_undo +vertsplit</span><br><span class=\"line\">+cmdline_info    +lambda          +postscript      +virtualedit</span><br><span class=\"line\">+comments        +langmap         +printer         +visual</span><br><span class=\"line\">+conceal         +libcall         +profile         +visualextra</span><br><span class=\"line\">+cryptv          +linebreak       +python/dyn      +viminfo</span><br><span class=\"line\">+cscope          +lispindent      +python3/dyn     +vreplace</span><br><span class=\"line\">+cursorbind      +listcmds        +quickfix        +wildignore</span><br><span class=\"line\">+cursorshape     +localmap        +reltime         +wildmenu</span><br><span class=\"line\">+dialog_con      +lua             +rightleft       +windows</span><br><span class=\"line\">+diff            +menu            +ruby            +writebackup</span><br><span class=\"line\">+digraphs        +mksession       +scrollbind      -X11</span><br><span class=\"line\">-dnd             +modify_fname    +signs           -xfontset</span><br><span class=\"line\">-ebcdic          +mouse           +smartindent     -xim</span><br><span class=\"line\">+emacs_tags      -mouseshape      +startuptime     -xpm</span><br><span class=\"line\">+<span class=\"built_in\">eval</span>            +mouse_dec       +statusline      -xsmp</span><br><span class=\"line\">+ex_extra        -mouse_gpm       -sun_workshop    -xterm_clipboard</span><br><span class=\"line\">+extra_search    -mouse_jsbterm   +syntax          -xterm_save</span><br><span class=\"line\">+farsi           +mouse_netterm   +tag_binary</span><br><span class=\"line\">   system vimrc file: <span class=\"string\">\"<span class=\"variable\">$VIM</span>/vimrc\"</span></span><br><span class=\"line\">     user vimrc file: <span class=\"string\">\"<span class=\"variable\">$HOME</span>/.vimrc\"</span></span><br><span class=\"line\"> 2nd user vimrc file: <span class=\"string\">\"~/.vim/vimrc\"</span></span><br><span class=\"line\">      user exrc file: <span class=\"string\">\"<span class=\"variable\">$HOME</span>/.exrc\"</span></span><br><span class=\"line\">       defaults file: <span class=\"string\">\"<span class=\"variable\">$VIMRUNTIME</span>/defaults.vim\"</span></span><br><span class=\"line\">  fall-back <span class=\"keyword\">for</span> <span class=\"variable\">$VIM</span>: <span class=\"string\">\"/usr/share/vim\"</span></span><br><span class=\"line\">Compilation: gcc -c -I. -Iproto -DHAVE_CONFIG_H</span><br><span class=\"line\">-g -O2 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=1</span><br><span class=\"line\">Linking: gcc   -L. -Wl,-z,relro -fstack-protector -rdynamic -Wl,-<span class=\"built_in\">export</span>-dynamic</span><br><span class=\"line\">-Wl,--<span class=\"built_in\">enable</span>-new-dtags -Wl,-rpath,/usr/lib64/perl5/CORE   -L/usr/<span class=\"built_in\">local</span>/lib -Wl,</span><br><span class=\"line\">--as-needed -o vim        -lm -ltinfo -lnsl  -lselinux   -ldl  -L/usr/lib -llua</span><br><span class=\"line\">-Wl,--<span class=\"built_in\">enable</span>-new-dtags -Wl,-rpath,/usr/lib64/perl5/CORE  -fstack-protector</span><br><span class=\"line\">-L/usr/lib64/perl5/CORE -lperl -lresolv -lnsl -ldl -lm -lcrypt -lutil -lpthread</span><br><span class=\"line\">-lc    -lruby -lpthread -lrt -ldl -lcrypt -lm</span><br></pre></td></tr></table></figure></li>\r\n</ol>\r\n<h2 id=\"ubuntu\">Ubuntu</h2>\r\n<p>系统版本 Ubuntu 16.04+。</p>\r\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install libncurses5-dev libgnome2-dev \\</span><br><span class=\"line\">                     libgnomeui-dev libgtk2.0-dev libatk1.0-dev libbonoboui2-dev \\</span><br><span class=\"line\">                     libcairo2-dev libx11-dev libxpm-dev libxt-dev python-dev \\</span><br><span class=\"line\">                     python3-dev ruby-dev lua5.1 lua5.1-dev liblua5.1-dev libperl-dev git</span><br><span class=\"line\">./configure --with-features=huge \\</span><br><span class=\"line\">            --<span class=\"built_in\">enable</span>-luainterp=yes \\</span><br><span class=\"line\">            --<span class=\"built_in\">enable</span>-rubyinterp=yes \\</span><br><span class=\"line\">            --<span class=\"built_in\">enable</span>-perlinterp=yes \\</span><br><span class=\"line\">            --<span class=\"built_in\">enable</span>-pythoninterp=yes \\</span><br><span class=\"line\">            --with-python-config-dir=/usr/lib/python2.7/config-x86_64-linux-gnu \\</span><br><span class=\"line\">            --<span class=\"built_in\">enable</span>-python3interp=yes \\</span><br><span class=\"line\">            --with-python3-config-dir=/usr/lib/python3.5/config-3.5m-x86_64-linux-gnu \\</span><br><span class=\"line\">            --<span class=\"built_in\">enable</span>-fontset=yes \\</span><br><span class=\"line\">            --<span class=\"built_in\">enable</span>-cscope=yes \\</span><br><span class=\"line\">            --<span class=\"built_in\">enable</span>-multibyte \\</span><br><span class=\"line\">            --<span class=\"built_in\">enable</span>-fail-if-missing \\</span><br><span class=\"line\">            --<span class=\"built_in\">enable</span>-gui=gtk2 \\</span><br><span class=\"line\">            --prefix=/usr/<span class=\"built_in\">local</span> \\</span><br><span class=\"line\">            --with-compiledby=<span class=\"string\">'Professional operations'</span></span><br></pre></td></tr></table></figure>\r\n<h2 id=\"msys2\">MSYS2</h2>\r\n<p>首先编译 <code>lua</code>：</p>\r\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -R -O http://www.lua.org/ftp/lua-5.3.4.tar.gz</span><br><span class=\"line\">tar zxf lua-5.3.4.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> lua-5.3.4</span><br><span class=\"line\">pacman -S ncurses-devel libcrypt-devel gettext-devel</span><br><span class=\"line\">make mingw &amp;&amp; make install</span><br></pre></td></tr></table></figure>\r\n<p>配置：</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./configure --with-features=huge \\</span><br><span class=\"line\">            --<span class=\"built_in\">enable</span>-luainterp=yes \\</span><br><span class=\"line\">            --<span class=\"built_in\">enable</span>-perlinterp=yes \\</span><br><span class=\"line\">            --<span class=\"built_in\">enable</span>-pythoninterp=yes \\</span><br><span class=\"line\">            --<span class=\"built_in\">enable</span>-python3interp=yes \\</span><br><span class=\"line\">            --with-lua-prefix=/usr/<span class=\"built_in\">local</span> \\</span><br><span class=\"line\">            --<span class=\"built_in\">enable</span>-fontset=yes \\</span><br><span class=\"line\">            --<span class=\"built_in\">enable</span>-cscope=yes \\</span><br><span class=\"line\">            --<span class=\"built_in\">enable</span>-multibyte \\</span><br><span class=\"line\">            --<span class=\"built_in\">disable</span>-gui \\</span><br><span class=\"line\">            --<span class=\"built_in\">enable</span>-fail-if-missing \\</span><br><span class=\"line\">            --prefix=/usr/<span class=\"built_in\">local</span> \\</span><br><span class=\"line\">            --with-compiledby=<span class=\"string\">'Professional operations'</span></span><br></pre></td></tr></table></figure>\r\n<h2 id=\"其它\">其它</h2>\r\n<h3 id=\"插件管理器\">插件管理器</h3>\r\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim</span><br></pre></td></tr></table></figure>\r\n<h3 id=\"个人-vimrc\">个人 vimrc</h3>\r\n<ul>\r\n<li>Linux: <a href=\"/src/vimrc\">.vimrc</a></li>\r\n<li>MSYS2: <a href=\"/src/_vimrc\">_vimrc</a></li>\r\n</ul>\r\n<h3 id=\"注意事项\">注意事项</h3>\r\n<ul>\r\n<li>在 <code>CentOS</code> 机器上若安装其它版本的 <code>Python</code>，可能导致各种与 <code>Python</code> 相关的问题（比如 <code>Vim: Caught deadly signal ABRT</code>）。在编译的时候灵活取舍 <code>python</code> 与 <code>python3</code> 选项即可</li>\r\n<li>若不能 <code>configure</code>，执行 <code>make distclean</code></li>\r\n</ul>\r\n","site":{"data":{}},"excerpt":"<p>作为 Vim <i class=\"fa fa-vimeo-square fa-fw\"></i> 重度依赖者，是时候记录下 *nix 系统从源码编译 Vim 的过程了。</p>","more":"<h2 id=\"centos\">CentOS</h2>\r\n<p>一路遇到了不少坑，遇到奇奇怪怪的错误，没有一一记录，直接写下成功的编译过程。（系统版本 CentOS 7.3 x64）</p>\r\n<ol type=\"1\">\r\n<li>系统用U盘进行安装的，自带了个 <code>python2.7</code>。首先安装必要包（可能不全） <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install mercurial ncurses-devel ruby ruby-devel lua lua-devel luajit python-devel python34 python34-devel</span><br></pre></td></tr></table></figure></li>\r\n<li>克隆 <a href=\"https://github.com/vim/vim\" target=\"_blank\" rel=\"noopener\">Vim</a> 的仓库 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/vim/vim.git</span><br></pre></td></tr></table></figure> 或同步在码云的仓库： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://gitee.com/shinemic/vim.git</span><br></pre></td></tr></table></figure></li>\r\n<li>开始各种配置： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./configure --with-features=huge \\</span><br><span class=\"line\">            --<span class=\"built_in\">enable</span>-rubyinterp=yes \\</span><br><span class=\"line\">            --<span class=\"built_in\">enable</span>-luainterp=yes \\</span><br><span class=\"line\">            --<span class=\"built_in\">enable</span>-perlinterp=yes \\</span><br><span class=\"line\">            --<span class=\"built_in\">enable</span>-pythoninterp=yes \\</span><br><span class=\"line\">            --<span class=\"built_in\">enable</span>-python3interp=yes \\</span><br><span class=\"line\">            --with-python-config-dir=/usr/lib64/python2.7/config \\</span><br><span class=\"line\">            --with-python3-config-dir=/usr/lib64/python3.4/config-3.4m \\</span><br><span class=\"line\">            --<span class=\"built_in\">enable</span>-fontset=yes \\</span><br><span class=\"line\">            --<span class=\"built_in\">enable</span>-cscope=yes \\</span><br><span class=\"line\">            --<span class=\"built_in\">enable</span>-multibyte \\</span><br><span class=\"line\">            --<span class=\"built_in\">disable</span>-gui \\</span><br><span class=\"line\">            --<span class=\"built_in\">enable</span>-fail-if-missing \\</span><br><span class=\"line\">            --prefix=/usr/<span class=\"built_in\">local</span> \\</span><br><span class=\"line\">            --with-compiledby=<span class=\"string\">'Professional operations'</span></span><br></pre></td></tr></table></figure> 对其中的参数稍作解释：\r\n<ul>\r\n<li><code>--enable-fail-if-missing</code> 表示一旦出现配置错误，则报错并停下来， 这时候可以看到什么方面没有配置好，方便排错，否则还要往回翻看一大串的信息</li>\r\n<li><code>...interp=yes</code> 表示加入某某支持</li>\r\n<li>在加入对 <code>python</code> 的支持中，出现了各种问题，最终发现是没有安装 <code>python-dev</code> 以及 <code>python34-devel</code>。同样 <code>lua</code> 也要安装 <code>lua-devel</code>。 另外 <code>...-config-dir</code> 也是很重要的，默认情况下 Vim 是找不到他们的配置路径的</li>\r\n</ul></li>\r\n<li>编译。 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make</span><br><span class=\"line\">make install</span><br></pre></td></tr></table></figure></li>\r\n<li>开耍。<code>vim --version</code> <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">VIM - Vi IMproved 8.0 (2016 Sep 12, compiled Aug  3 2017 06:43:08)</span><br><span class=\"line\">Included patches: 1-844</span><br><span class=\"line\">Compiled by root@Dorawk-workstation</span><br><span class=\"line\">Huge version without GUI.  Features included (+) or not (-):</span><br><span class=\"line\">+acl             +file_in_path    +mouse_sgr       +tag_old_static</span><br><span class=\"line\">+arabic          +find_in_path    -mouse_sysmouse  -tag_any_white</span><br><span class=\"line\">+autocmd         +<span class=\"built_in\">float</span>           +mouse_urxvt     -tcl</span><br><span class=\"line\">-balloon_eval    +folding         +mouse_xterm     +termguicolors</span><br><span class=\"line\">-browse          -footer          +multi_byte      -terminal</span><br><span class=\"line\">++builtin_terms  +fork()          +multi_lang      +terminfo</span><br><span class=\"line\">+byte_offset     +gettext         -mzscheme        +termresponse</span><br><span class=\"line\">+channel         -hangul_input    +netbeans_intg   +textobjects</span><br><span class=\"line\">+cindent         +iconv           +num64           +timers</span><br><span class=\"line\">-clientserver    +insert_expand   +packages        +title</span><br><span class=\"line\">-clipboard       +job             +path_extra      -toolbar</span><br><span class=\"line\">+cmdline_compl   +jumplist        +perl            +user_commands</span><br><span class=\"line\">+cmdline_hist    +keymap          +persistent_undo +vertsplit</span><br><span class=\"line\">+cmdline_info    +lambda          +postscript      +virtualedit</span><br><span class=\"line\">+comments        +langmap         +printer         +visual</span><br><span class=\"line\">+conceal         +libcall         +profile         +visualextra</span><br><span class=\"line\">+cryptv          +linebreak       +python/dyn      +viminfo</span><br><span class=\"line\">+cscope          +lispindent      +python3/dyn     +vreplace</span><br><span class=\"line\">+cursorbind      +listcmds        +quickfix        +wildignore</span><br><span class=\"line\">+cursorshape     +localmap        +reltime         +wildmenu</span><br><span class=\"line\">+dialog_con      +lua             +rightleft       +windows</span><br><span class=\"line\">+diff            +menu            +ruby            +writebackup</span><br><span class=\"line\">+digraphs        +mksession       +scrollbind      -X11</span><br><span class=\"line\">-dnd             +modify_fname    +signs           -xfontset</span><br><span class=\"line\">-ebcdic          +mouse           +smartindent     -xim</span><br><span class=\"line\">+emacs_tags      -mouseshape      +startuptime     -xpm</span><br><span class=\"line\">+<span class=\"built_in\">eval</span>            +mouse_dec       +statusline      -xsmp</span><br><span class=\"line\">+ex_extra        -mouse_gpm       -sun_workshop    -xterm_clipboard</span><br><span class=\"line\">+extra_search    -mouse_jsbterm   +syntax          -xterm_save</span><br><span class=\"line\">+farsi           +mouse_netterm   +tag_binary</span><br><span class=\"line\">   system vimrc file: <span class=\"string\">\"<span class=\"variable\">$VIM</span>/vimrc\"</span></span><br><span class=\"line\">     user vimrc file: <span class=\"string\">\"<span class=\"variable\">$HOME</span>/.vimrc\"</span></span><br><span class=\"line\"> 2nd user vimrc file: <span class=\"string\">\"~/.vim/vimrc\"</span></span><br><span class=\"line\">      user exrc file: <span class=\"string\">\"<span class=\"variable\">$HOME</span>/.exrc\"</span></span><br><span class=\"line\">       defaults file: <span class=\"string\">\"<span class=\"variable\">$VIMRUNTIME</span>/defaults.vim\"</span></span><br><span class=\"line\">  fall-back <span class=\"keyword\">for</span> <span class=\"variable\">$VIM</span>: <span class=\"string\">\"/usr/share/vim\"</span></span><br><span class=\"line\">Compilation: gcc -c -I. -Iproto -DHAVE_CONFIG_H</span><br><span class=\"line\">-g -O2 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=1</span><br><span class=\"line\">Linking: gcc   -L. -Wl,-z,relro -fstack-protector -rdynamic -Wl,-<span class=\"built_in\">export</span>-dynamic</span><br><span class=\"line\">-Wl,--<span class=\"built_in\">enable</span>-new-dtags -Wl,-rpath,/usr/lib64/perl5/CORE   -L/usr/<span class=\"built_in\">local</span>/lib -Wl,</span><br><span class=\"line\">--as-needed -o vim        -lm -ltinfo -lnsl  -lselinux   -ldl  -L/usr/lib -llua</span><br><span class=\"line\">-Wl,--<span class=\"built_in\">enable</span>-new-dtags -Wl,-rpath,/usr/lib64/perl5/CORE  -fstack-protector</span><br><span class=\"line\">-L/usr/lib64/perl5/CORE -lperl -lresolv -lnsl -ldl -lm -lcrypt -lutil -lpthread</span><br><span class=\"line\">-lc    -lruby -lpthread -lrt -ldl -lcrypt -lm</span><br></pre></td></tr></table></figure></li>\r\n</ol>\r\n<h2 id=\"ubuntu\">Ubuntu</h2>\r\n<p>系统版本 Ubuntu 16.04+。</p>\r\n<!--�0-->\r\n<h2 id=\"msys2\">MSYS2</h2>\r\n<p>首先编译 <code>lua</code>：</p>\r\n<!--�1-->\r\n<p>配置：</p>\r\n<!--�2-->\r\n<h2 id=\"其它\">其它</h2>\r\n<h3 id=\"插件管理器\">插件管理器</h3>\r\n<!--�3-->\r\n<h3 id=\"个人-vimrc\">个人 vimrc</h3>\r\n<ul>\r\n<li>Linux: <a href=\"/src/vimrc\">.vimrc</a></li>\r\n<li>MSYS2: <a href=\"/src/_vimrc\">_vimrc</a></li>\r\n</ul>\r\n<h3 id=\"注意事项\">注意事项</h3>\r\n<ul>\r\n<li>在 <code>CentOS</code> 机器上若安装其它版本的 <code>Python</code>，可能导致各种与 <code>Python</code> 相关的问题（比如 <code>Vim: Caught deadly signal ABRT</code>）。在编译的时候灵活取舍 <code>python</code> 与 <code>python3</code> 选项即可</li>\r\n<li>若不能 <code>configure</code>，执行 <code>make distclean</code></li>\r\n</ul>"},{"title":"编译 YouCompleteMe","date":"2018-01-29T08:46:34.000Z","_content":"\n由 [Valloric][valloric-person] 开发的 Vim 插件 [YouCompleteMe][ycm-repo] 可以算上是最难安装的 Vim 插件了，折腾记录如下。\n\n<!-- more -->\n\n## CentOS 7.3\n\n### 更新 GCC\n\nCentOS 7.3 自带的 GCC 版本仅为 4.8.5，Ubuntu 16.04 的 GCC 版本已经到了 5.4.0。所以如果是 CentOS 系统，第一步一定要更新 GCC 版本，否则后续过程寸步难行。具体过程从略。\n\n### 编译 YCM\n\n根据官方的 [安装指南][ycm-official-installation]，有如下操作步骤：\n\n```bash\ncd ~/.vim/bundle/\ngit clone https://github.com/Valloric/YouCompleteMe.git\ncd YouCompleteMe\ngit submodule update --init --recursive\nmkdir -p ~/ycm_temp/\ncd ~/ycm_temp/\nwget http://releases.llvm.org/4.0.1/clang+llvm-4.0.1-x86_64-linux-gnu-debian8.tar.xz\ntar -xvf clang+llvm-4.0.1-x86_64-linux-gnu-debian8.tar.xz\nmkdir -p ~/ycm_build\ncd ~/ycm_build\ncmake -G \"Unix Makefiles\" \\\n      -DPATH_TO_LLVM_ROOT=~/ycm_temp/clang+llvm-4.0.1-x86_64-linux-gnu-debian8 \\\n      -DPYTHON_INCLUDE_DIR=/usr/include/python3.4m \\\n      -DPYTHON_LIBRARY=/usr/lib64/libpython3.so \\\n      -DUSE_PYTHON2=OFF \\\n. ~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp\ncmake --build . --target ycm_core\n```\n\n这里仅用 `Python 3.x` 版本，所以使用 `-DUSE_PYTHON2=OFF` 选项。\n\n### C 语言家族支持\n\n在家目录中新建文件 [.ycm_extra_conf.py][ycm_extra_conf]。\n\n### vimrc 配置\n\n```vim .vimrc\nPlugin 'Valloric/YouCompleteMe'\nlet g:ycm_global_ycm_extra_conf = '~/.ycm_extra_conf.py'\nlet g:ycm_confirm_extra_conf = 0\nlet g:ycm_seed_identifiers_with_syntax = 1\nlet g:ycm_server_python_interpreter = '/usr/bin/python3'\nset completeopt=longest,menu\nlet g:ycm_semantic_triggers = {\n\\ 'c' : ['->', '.', ' ', '(', '[', '&'],\n\\ 'cpp,objcpp' : ['->', '.', ' ', '(', '[', '&', '::'],\n\\ 'perl' : ['->', '::', ' '],\n\\ 'php' : ['->', '::', '.'],\n\\ 'cs,java,javascript,d,vim,python,perl6,scala,vb,elixir,go' : ['.'],\n\\ 'ruby' : ['.', '::'],\n\\ 'lua' : ['.', ':']\n\\ }\n```\n\n## Ubuntu 16.04\n\n由于 Python 库路径与 CentOS 系统有所不同，`cmake` 部分有少许变动。\n\n```bash\ncd ~/.vim/bundle/\ngit clone https://github.com/Valloric/YouCompleteMe.git\ncd YouCompleteMe\ngit submodule update --init --recursive\nmkdir -p ~/ycm_temp/\ncd ~/ycm_temp/\nwget http://releases.llvm.org/5.0.1/clang+llvm-5.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz\ntar -xvf clang+llvm-5.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz\nmkdir -p ~/ycm_build\ncd ~/ycm_build\ncmake -G \"Unix Makefiles\" \\\n      -DPATH_TO_LLVM_ROOT=~/ycm_temp/clang+llvm-5.0.1-x86_64-linux-gnu-ubuntu-16.04 \\\n      -DPYTHON_INCLUDE_DIR=/usr/include/python3.5m \\\n      -DPYTHON_LIBRARY=/usr/lib/x86_64-linux-gnu/libpython3.5m.so \\\n      -DUSE_PYTHON2=OFF \\\n      . ~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp\ncmake --build . --target ycm_core```\n\n--------------------------------------------------------------------\n\n## Windows\n\nWindows 下编译比较烦琐，各工具需单独下载。\n\n### 原料\n\n- [Clang for Windows (64-bit)][clang-windows]\n- [Python][python]\n- [CMake][cmake]\n- [Visual Studio][vs]\n- MinGW GCC（测试用 MSYS2 系统里面的 MinGW64 替代）\n\n测试时各版本如下：\n\n| Entries       | Version    |\n| :----:        | :----:     |\n| Clang         | 4.0.1 x64  |\n| Python        | 2.7.10 x64 |\n| CMake         | 3.9.0 x64  |\n| Visual Studio | 2017       |\n| MinGW GCC     | 7.1.0      |\n| Git           | -          |\n\n### 编译\n\n为防止环境变量 `PATH` 干扰，暂时删除在 `PATH` 中 MSYS2 的两个路径（`/mingw64/bin`，`/usr/bin` 包含 `clang`，`cmake` 和 `python`），加入刚才安装的 Cmake 路径（Python，Clang 的路径并不需要）。下面一套动作即可完成编译：\n\n```cmd\ngit clone http://github.com/Valloric/YouCompleteMe.git\ncd YouCompleteMe\ngit submodule update --init --recursive\nmkdir build\ncd build\ncmake -G \"Visual Studio 15 Win64\" ^\n      -DPATH_TO_LLVM_ROOT=D:/LLVM ^\n      -DPYTHON_INCLUDE_DIR=D:/Python/Python27/include ^\n      -DPYTHON_LIBRARY=D:/Python/Python27/libs/python27.lib ^\n      . ../third_party/ycmd/cpp\ncmake --build . --target ycm_core --config Release\n```\n\n这里明确指明了 LLVM 的目录以及 Python 的库，当然如果要在 Python 3.x 下编译，需将 `cmake` 部分改为：\n\n```bash\ncmake -G \"Visual Studio 15 Win64\" ^\n      -DPATH_TO_LLVM_ROOT=D:/LLVM ^\n      -DPYTHON_INCLUDE_DIR=D:/Python/Python36/include ^\n      -DPYTHON_LIBRARY=D:/Python/Python36/libs/python36.lib ^\n      -DUSE_PYTHON2=OFF . ../third_party/ycmd/cpp\n```\n\n上述的 Python，LLVM，Visual Studio，CMake 的版本会直接影响编译结果，从多次编译的结果上看，LLVM 的版本宜 3.9+，且 Python 和 LLVM 的位数需匹配，而且 Python 2.7.11，Python 2.7.13 版本即便编译成功，在后续的使用中仍会出问题。\n\n### 测试\n\n编译好之后，在 VSCode 中使用 [you-complete-me](https://github.com/richard1122/vscode-youcompleteme) 插件尝试，有少许小问题（不提示系统库函数，但按下 `.` 之后才有提示。对引入的系统头文件警告等），总体不影响使用，而且支持跳转、peek。\n\n附上 VSCode 中的配置：\n\n```json\n\"ycmd.path\": \"E:\\\\YouCompleteMe\\\\third_party\\\\ycmd\",\n\"ycmd.confirm_extra_conf\": true,\n\"ycmd.global_extra_config\": \"F:\\\\WorkingDirectory\\\\Configuration\\\\common\\\\_ycm_extra_conf.py\",\n\"ycmd.python\": \"D:\\\\Python\\\\Python27\\\\python.exe\",\n```\n\n以及 YCM 所需的 [_ycm_extra_conf.py][_ycm_extra_conf]。\n\n原料里面的各工具的版本试了又试，`Python 2.7.10` + `LLVM Clang 4.0.1` 是最佳组合。\n\n### 致谢\n\n- [YouCompleteMe](https://github.com/Valloric/YouCompleteMe)\n- [LLVM](https://clang.llvm.org/)\n- [GCC](https://gcc.gnu.org/)\n- [centos6.5升级gcc到4.9](http://blog.techbeta.me/2015/10/linux-centos6-5-upgrade-gcc/)\n- [CentOS 6.5 升级 GCC 4.9.3](http://www.cnblogs.com/wanghaiyang1930/p/5608531.html)\n- [Linux下GLIBCXX和GLIBC版本低造成的编译错误的解决方案](http://blog.csdn.net/officercat/article/details/39519265)\n- [Centos7安装vim8.0 + YouCompleteMe](http://blog.csdn.net/nzyalj/article/details/75331822)\n  - 该博主利用 `devtoolset` 来更新 GCC 版本，不过在测试中无效\n- [打造VIM利器](http://www.jianshu.com/p/e9cb158f7048)\n\n--------------------------------------------------------\n\n## 问题\n\n- 不能对 Anaconda 中的包进行补全。应重新编译 YCM，编译时与 Anaconda 相关的路径不应出现在 `PATH` 中，且 `.vimrc` 中应注释掉关于 `g:ycm_server_python_interpreter` 的行。参考 [YouCompleteMe does not work with Anaconda Python][ycm-issue-1241]。\n\n[valloric-person]: https://github.com/Valloric\n[ycm-repo]: https://github.com/Valloric/YouCompleteMe\n[ycm-official-installation]: https://github.com/Valloric/YouCompleteMe#installation\n[ycm_extra_conf]: /src/ycm_extra_conf.py\n[clang-windows]: http://releases.llvm.org/4.0.1/LLVM-4.0.1-win64.exe\n[python]: https://www.python.org/download\n[cmake]: https://cmake.org/download\n[vs]: https://www.visualstudio.com\n[_ycm_extra_conf]: /src/_ycm_extra_conf.py\n[ycm-issue-1241]: https://github.com/Valloric/YouCompleteMe/issues/1241#issuecomment-335051278\n","source":"_posts/compilation-of-you-complete-me.md","raw":"---\ntitle: 编译 YouCompleteMe\ndate: 2018-01-29 16:46:34\ntags:\n    - Vim\n    - YCM\ncategories: Operation and Maintenance\n---\n\n由 [Valloric][valloric-person] 开发的 Vim 插件 [YouCompleteMe][ycm-repo] 可以算上是最难安装的 Vim 插件了，折腾记录如下。\n\n<!-- more -->\n\n## CentOS 7.3\n\n### 更新 GCC\n\nCentOS 7.3 自带的 GCC 版本仅为 4.8.5，Ubuntu 16.04 的 GCC 版本已经到了 5.4.0。所以如果是 CentOS 系统，第一步一定要更新 GCC 版本，否则后续过程寸步难行。具体过程从略。\n\n### 编译 YCM\n\n根据官方的 [安装指南][ycm-official-installation]，有如下操作步骤：\n\n```bash\ncd ~/.vim/bundle/\ngit clone https://github.com/Valloric/YouCompleteMe.git\ncd YouCompleteMe\ngit submodule update --init --recursive\nmkdir -p ~/ycm_temp/\ncd ~/ycm_temp/\nwget http://releases.llvm.org/4.0.1/clang+llvm-4.0.1-x86_64-linux-gnu-debian8.tar.xz\ntar -xvf clang+llvm-4.0.1-x86_64-linux-gnu-debian8.tar.xz\nmkdir -p ~/ycm_build\ncd ~/ycm_build\ncmake -G \"Unix Makefiles\" \\\n      -DPATH_TO_LLVM_ROOT=~/ycm_temp/clang+llvm-4.0.1-x86_64-linux-gnu-debian8 \\\n      -DPYTHON_INCLUDE_DIR=/usr/include/python3.4m \\\n      -DPYTHON_LIBRARY=/usr/lib64/libpython3.so \\\n      -DUSE_PYTHON2=OFF \\\n. ~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp\ncmake --build . --target ycm_core\n```\n\n这里仅用 `Python 3.x` 版本，所以使用 `-DUSE_PYTHON2=OFF` 选项。\n\n### C 语言家族支持\n\n在家目录中新建文件 [.ycm_extra_conf.py][ycm_extra_conf]。\n\n### vimrc 配置\n\n```vim .vimrc\nPlugin 'Valloric/YouCompleteMe'\nlet g:ycm_global_ycm_extra_conf = '~/.ycm_extra_conf.py'\nlet g:ycm_confirm_extra_conf = 0\nlet g:ycm_seed_identifiers_with_syntax = 1\nlet g:ycm_server_python_interpreter = '/usr/bin/python3'\nset completeopt=longest,menu\nlet g:ycm_semantic_triggers = {\n\\ 'c' : ['->', '.', ' ', '(', '[', '&'],\n\\ 'cpp,objcpp' : ['->', '.', ' ', '(', '[', '&', '::'],\n\\ 'perl' : ['->', '::', ' '],\n\\ 'php' : ['->', '::', '.'],\n\\ 'cs,java,javascript,d,vim,python,perl6,scala,vb,elixir,go' : ['.'],\n\\ 'ruby' : ['.', '::'],\n\\ 'lua' : ['.', ':']\n\\ }\n```\n\n## Ubuntu 16.04\n\n由于 Python 库路径与 CentOS 系统有所不同，`cmake` 部分有少许变动。\n\n```bash\ncd ~/.vim/bundle/\ngit clone https://github.com/Valloric/YouCompleteMe.git\ncd YouCompleteMe\ngit submodule update --init --recursive\nmkdir -p ~/ycm_temp/\ncd ~/ycm_temp/\nwget http://releases.llvm.org/5.0.1/clang+llvm-5.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz\ntar -xvf clang+llvm-5.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz\nmkdir -p ~/ycm_build\ncd ~/ycm_build\ncmake -G \"Unix Makefiles\" \\\n      -DPATH_TO_LLVM_ROOT=~/ycm_temp/clang+llvm-5.0.1-x86_64-linux-gnu-ubuntu-16.04 \\\n      -DPYTHON_INCLUDE_DIR=/usr/include/python3.5m \\\n      -DPYTHON_LIBRARY=/usr/lib/x86_64-linux-gnu/libpython3.5m.so \\\n      -DUSE_PYTHON2=OFF \\\n      . ~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp\ncmake --build . --target ycm_core```\n\n--------------------------------------------------------------------\n\n## Windows\n\nWindows 下编译比较烦琐，各工具需单独下载。\n\n### 原料\n\n- [Clang for Windows (64-bit)][clang-windows]\n- [Python][python]\n- [CMake][cmake]\n- [Visual Studio][vs]\n- MinGW GCC（测试用 MSYS2 系统里面的 MinGW64 替代）\n\n测试时各版本如下：\n\n| Entries       | Version    |\n| :----:        | :----:     |\n| Clang         | 4.0.1 x64  |\n| Python        | 2.7.10 x64 |\n| CMake         | 3.9.0 x64  |\n| Visual Studio | 2017       |\n| MinGW GCC     | 7.1.0      |\n| Git           | -          |\n\n### 编译\n\n为防止环境变量 `PATH` 干扰，暂时删除在 `PATH` 中 MSYS2 的两个路径（`/mingw64/bin`，`/usr/bin` 包含 `clang`，`cmake` 和 `python`），加入刚才安装的 Cmake 路径（Python，Clang 的路径并不需要）。下面一套动作即可完成编译：\n\n```cmd\ngit clone http://github.com/Valloric/YouCompleteMe.git\ncd YouCompleteMe\ngit submodule update --init --recursive\nmkdir build\ncd build\ncmake -G \"Visual Studio 15 Win64\" ^\n      -DPATH_TO_LLVM_ROOT=D:/LLVM ^\n      -DPYTHON_INCLUDE_DIR=D:/Python/Python27/include ^\n      -DPYTHON_LIBRARY=D:/Python/Python27/libs/python27.lib ^\n      . ../third_party/ycmd/cpp\ncmake --build . --target ycm_core --config Release\n```\n\n这里明确指明了 LLVM 的目录以及 Python 的库，当然如果要在 Python 3.x 下编译，需将 `cmake` 部分改为：\n\n```bash\ncmake -G \"Visual Studio 15 Win64\" ^\n      -DPATH_TO_LLVM_ROOT=D:/LLVM ^\n      -DPYTHON_INCLUDE_DIR=D:/Python/Python36/include ^\n      -DPYTHON_LIBRARY=D:/Python/Python36/libs/python36.lib ^\n      -DUSE_PYTHON2=OFF . ../third_party/ycmd/cpp\n```\n\n上述的 Python，LLVM，Visual Studio，CMake 的版本会直接影响编译结果，从多次编译的结果上看，LLVM 的版本宜 3.9+，且 Python 和 LLVM 的位数需匹配，而且 Python 2.7.11，Python 2.7.13 版本即便编译成功，在后续的使用中仍会出问题。\n\n### 测试\n\n编译好之后，在 VSCode 中使用 [you-complete-me](https://github.com/richard1122/vscode-youcompleteme) 插件尝试，有少许小问题（不提示系统库函数，但按下 `.` 之后才有提示。对引入的系统头文件警告等），总体不影响使用，而且支持跳转、peek。\n\n附上 VSCode 中的配置：\n\n```json\n\"ycmd.path\": \"E:\\\\YouCompleteMe\\\\third_party\\\\ycmd\",\n\"ycmd.confirm_extra_conf\": true,\n\"ycmd.global_extra_config\": \"F:\\\\WorkingDirectory\\\\Configuration\\\\common\\\\_ycm_extra_conf.py\",\n\"ycmd.python\": \"D:\\\\Python\\\\Python27\\\\python.exe\",\n```\n\n以及 YCM 所需的 [_ycm_extra_conf.py][_ycm_extra_conf]。\n\n原料里面的各工具的版本试了又试，`Python 2.7.10` + `LLVM Clang 4.0.1` 是最佳组合。\n\n### 致谢\n\n- [YouCompleteMe](https://github.com/Valloric/YouCompleteMe)\n- [LLVM](https://clang.llvm.org/)\n- [GCC](https://gcc.gnu.org/)\n- [centos6.5升级gcc到4.9](http://blog.techbeta.me/2015/10/linux-centos6-5-upgrade-gcc/)\n- [CentOS 6.5 升级 GCC 4.9.3](http://www.cnblogs.com/wanghaiyang1930/p/5608531.html)\n- [Linux下GLIBCXX和GLIBC版本低造成的编译错误的解决方案](http://blog.csdn.net/officercat/article/details/39519265)\n- [Centos7安装vim8.0 + YouCompleteMe](http://blog.csdn.net/nzyalj/article/details/75331822)\n  - 该博主利用 `devtoolset` 来更新 GCC 版本，不过在测试中无效\n- [打造VIM利器](http://www.jianshu.com/p/e9cb158f7048)\n\n--------------------------------------------------------\n\n## 问题\n\n- 不能对 Anaconda 中的包进行补全。应重新编译 YCM，编译时与 Anaconda 相关的路径不应出现在 `PATH` 中，且 `.vimrc` 中应注释掉关于 `g:ycm_server_python_interpreter` 的行。参考 [YouCompleteMe does not work with Anaconda Python][ycm-issue-1241]。\n\n[valloric-person]: https://github.com/Valloric\n[ycm-repo]: https://github.com/Valloric/YouCompleteMe\n[ycm-official-installation]: https://github.com/Valloric/YouCompleteMe#installation\n[ycm_extra_conf]: /src/ycm_extra_conf.py\n[clang-windows]: http://releases.llvm.org/4.0.1/LLVM-4.0.1-win64.exe\n[python]: https://www.python.org/download\n[cmake]: https://cmake.org/download\n[vs]: https://www.visualstudio.com\n[_ycm_extra_conf]: /src/_ycm_extra_conf.py\n[ycm-issue-1241]: https://github.com/Valloric/YouCompleteMe/issues/1241#issuecomment-335051278\n","slug":"compilation-of-you-complete-me","published":1,"updated":"2023-03-09T16:09:38.202Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u335j0002p4x0gdo654x6","content":"<p>由 <a href=\"https://github.com/Valloric\" target=\"_blank\" rel=\"noopener\">Valloric</a> 开发的 Vim 插件 <a href=\"https://github.com/Valloric/YouCompleteMe\" target=\"_blank\" rel=\"noopener\">YouCompleteMe</a> 可以算上是最难安装的 Vim 插件了，折腾记录如下。</p>\r\n<a id=\"more\"></a>\r\n<h2 id=\"centos-7.3\">CentOS 7.3</h2>\r\n<h3 id=\"更新-gcc\">更新 GCC</h3>\r\n<p>CentOS 7.3 自带的 GCC 版本仅为 4.8.5，Ubuntu 16.04 的 GCC 版本已经到了 5.4.0。所以如果是 CentOS 系统，第一步一定要更新 GCC 版本，否则后续过程寸步难行。具体过程从略。</p>\r\n<h3 id=\"编译-ycm\">编译 YCM</h3>\r\n<p>根据官方的 <a href=\"https://github.com/Valloric/YouCompleteMe#installation\" target=\"_blank\" rel=\"noopener\">安装指南</a>，有如下操作步骤：</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~/.vim/bundle/</span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/Valloric/YouCompleteMe.git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> YouCompleteMe</span><br><span class=\"line\">git submodule update --init --recursive</span><br><span class=\"line\">mkdir -p ~/ycm_temp/</span><br><span class=\"line\"><span class=\"built_in\">cd</span> ~/ycm_temp/</span><br><span class=\"line\">wget http://releases.llvm.org/4.0.1/clang+llvm-4.0.1-x86_64-linux-gnu-debian8.tar.xz</span><br><span class=\"line\">tar -xvf clang+llvm-4.0.1-x86_64-linux-gnu-debian8.tar.xz</span><br><span class=\"line\">mkdir -p ~/ycm_build</span><br><span class=\"line\"><span class=\"built_in\">cd</span> ~/ycm_build</span><br><span class=\"line\">cmake -G <span class=\"string\">\"Unix Makefiles\"</span> \\</span><br><span class=\"line\">      -DPATH_TO_LLVM_ROOT=~/ycm_temp/clang+llvm-4.0.1-x86_64-linux-gnu-debian8 \\</span><br><span class=\"line\">      -DPYTHON_INCLUDE_DIR=/usr/include/python3.4m \\</span><br><span class=\"line\">      -DPYTHON_LIBRARY=/usr/lib64/libpython3.so \\</span><br><span class=\"line\">      -DUSE_PYTHON2=OFF \\</span><br><span class=\"line\">. ~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp</span><br><span class=\"line\">cmake --build . --target ycm_core</span><br></pre></td></tr></table></figure>\r\n<p>这里仅用 <code>Python 3.x</code> 版本，所以使用 <code>-DUSE_PYTHON2=OFF</code> 选项。</p>\r\n<h3 id=\"c-语言家族支持\">C 语言家族支持</h3>\r\n<p>在家目录中新建文件 <a href=\"/src/ycm_extra_conf.py\">.ycm_extra_conf.py</a>。</p>\r\n<h3 id=\"vimrc-配置\">vimrc 配置</h3>\r\n<figure class=\"highlight vim\"><figcaption><span>.vimrc</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Plugin <span class=\"string\">'Valloric/YouCompleteMe'</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:ycm_global_ycm_extra_conf</span> = <span class=\"string\">'~/.ycm_extra_conf.py'</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:ycm_confirm_extra_conf</span> = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:ycm_seed_identifiers_with_syntax</span> = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:ycm_server_python_interpreter</span> = <span class=\"string\">'/usr/bin/python3'</span></span><br><span class=\"line\"><span class=\"keyword\">set</span> completeopt=longest,<span class=\"keyword\">menu</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:ycm_semantic_triggers</span> = &#123;</span><br><span class=\"line\">\\ <span class=\"string\">'c'</span> : [<span class=\"string\">'-&gt;'</span>, <span class=\"string\">'.'</span>, <span class=\"string\">' '</span>, <span class=\"string\">'('</span>, <span class=\"string\">'['</span>, <span class=\"string\">'&amp;'</span>],</span><br><span class=\"line\">\\ <span class=\"string\">'cpp,objcpp'</span> : [<span class=\"string\">'-&gt;'</span>, <span class=\"string\">'.'</span>, <span class=\"string\">' '</span>, <span class=\"string\">'('</span>, <span class=\"string\">'['</span>, <span class=\"string\">'&amp;'</span>, <span class=\"string\">'::'</span>],</span><br><span class=\"line\">\\ <span class=\"string\">'perl'</span> : [<span class=\"string\">'-&gt;'</span>, <span class=\"string\">'::'</span>, <span class=\"string\">' '</span>],</span><br><span class=\"line\">\\ <span class=\"string\">'php'</span> : [<span class=\"string\">'-&gt;'</span>, <span class=\"string\">'::'</span>, <span class=\"string\">'.'</span>],</span><br><span class=\"line\">\\ <span class=\"string\">'cs,java,javascript,d,vim,python,perl6,scala,vb,elixir,go'</span> : [<span class=\"string\">'.'</span>],</span><br><span class=\"line\">\\ <span class=\"string\">'ruby'</span> : [<span class=\"string\">'.'</span>, <span class=\"string\">'::'</span>],</span><br><span class=\"line\">\\ <span class=\"string\">'lua'</span> : [<span class=\"string\">'.'</span>, <span class=\"string\">':'</span>]</span><br><span class=\"line\">\\ &#125;</span><br></pre></td></tr></table></figure>\r\n<h2 id=\"ubuntu-16.04\">Ubuntu 16.04</h2>\r\n<p>由于 Python 库路径与 CentOS 系统有所不同，<code>cmake</code> 部分有少许变动。</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~/.vim/bundle/</span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/Valloric/YouCompleteMe.git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> YouCompleteMe</span><br><span class=\"line\">git submodule update --init --recursive</span><br><span class=\"line\">mkdir -p ~/ycm_temp/</span><br><span class=\"line\"><span class=\"built_in\">cd</span> ~/ycm_temp/</span><br><span class=\"line\">wget http://releases.llvm.org/5.0.1/clang+llvm-5.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz</span><br><span class=\"line\">tar -xvf clang+llvm-5.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz</span><br><span class=\"line\">mkdir -p ~/ycm_build</span><br><span class=\"line\"><span class=\"built_in\">cd</span> ~/ycm_build</span><br><span class=\"line\">cmake -G <span class=\"string\">\"Unix Makefiles\"</span> \\</span><br><span class=\"line\">      -DPATH_TO_LLVM_ROOT=~/ycm_temp/clang+llvm-5.0.1-x86_64-linux-gnu-ubuntu-16.04 \\</span><br><span class=\"line\">      -DPYTHON_INCLUDE_DIR=/usr/include/python3.5m \\</span><br><span class=\"line\">      -DPYTHON_LIBRARY=/usr/lib/x86_64-linux-gnu/libpython3.5m.so \\</span><br><span class=\"line\">      -DUSE_PYTHON2=OFF \\</span><br><span class=\"line\">      . ~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp</span><br><span class=\"line\">cmake --build . --target ycm_core</span><br></pre></td></tr></table></figure>\r\n<hr>\r\n<h2 id=\"windows\">Windows</h2>\r\n<p>Windows 下编译比较烦琐，各工具需单独下载。</p>\r\n<h3 id=\"原料\">原料</h3>\r\n<ul>\r\n<li><a href=\"http://releases.llvm.org/4.0.1/LLVM-4.0.1-win64.exe\" target=\"_blank\" rel=\"noopener\">Clang for Windows (64-bit)</a></li>\r\n<li><a href=\"https://www.python.org/download\" target=\"_blank\" rel=\"noopener\">Python</a></li>\r\n<li><a href=\"https://cmake.org/download\" target=\"_blank\" rel=\"noopener\">CMake</a></li>\r\n<li><a href=\"https://www.visualstudio.com\" target=\"_blank\" rel=\"noopener\">Visual Studio</a></li>\r\n<li>MinGW GCC（测试用 MSYS2 系统里面的 MinGW64 替代）</li>\r\n</ul>\r\n<p>测试时各版本如下：</p>\r\n<table>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: center;\">Entries</th>\r\n<th style=\"text-align: center;\">Version</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">Clang</td>\r\n<td style=\"text-align: center;\">4.0.1 x64</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\">Python</td>\r\n<td style=\"text-align: center;\">2.7.10 x64</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">CMake</td>\r\n<td style=\"text-align: center;\">3.9.0 x64</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\">Visual Studio</td>\r\n<td style=\"text-align: center;\">2017</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">MinGW GCC</td>\r\n<td style=\"text-align: center;\">7.1.0</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\">Git</td>\r\n<td style=\"text-align: center;\">-</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h3 id=\"编译\">编译</h3>\r\n<p>为防止环境变量 <code>PATH</code> 干扰，暂时删除在 <code>PATH</code> 中 MSYS2 的两个路径（<code>/mingw64/bin</code>，<code>/usr/bin</code> 包含 <code>clang</code>，<code>cmake</code> 和 <code>python</code>），加入刚才安装的 Cmake 路径（Python，Clang 的路径并不需要）。下面一套动作即可完成编译：</p>\r\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone http://github.com/Valloric/YouCompleteMe.git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> YouCompleteMe</span><br><span class=\"line\">git submodule update --init --recursive</span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> build</span><br><span class=\"line\"><span class=\"built_in\">cd</span> build</span><br><span class=\"line\">cmake -G \"Visual Studio <span class=\"number\">15</span> Win64\" ^</span><br><span class=\"line\">      -DPATH_TO_LLVM_ROOT=D:/LLVM ^</span><br><span class=\"line\">      -DPYTHON_INCLUDE_DIR=D:/Python/Python27/include ^</span><br><span class=\"line\">      -DPYTHON_LIBRARY=D:/Python/Python27/libs/python27.lib ^</span><br><span class=\"line\">      . ../third_party/ycmd/cpp</span><br><span class=\"line\">cmake --build . --target ycm_core --config Release</span><br></pre></td></tr></table></figure>\r\n<p>这里明确指明了 LLVM 的目录以及 Python 的库，当然如果要在 Python 3.x 下编译，需将 <code>cmake</code> 部分改为：</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cmake -G <span class=\"string\">\"Visual Studio 15 Win64\"</span> ^</span><br><span class=\"line\">      -DPATH_TO_LLVM_ROOT=D:/LLVM ^</span><br><span class=\"line\">      -DPYTHON_INCLUDE_DIR=D:/Python/Python36/include ^</span><br><span class=\"line\">      -DPYTHON_LIBRARY=D:/Python/Python36/libs/python36.lib ^</span><br><span class=\"line\">      -DUSE_PYTHON2=OFF . ../third_party/ycmd/cpp</span><br></pre></td></tr></table></figure>\r\n<p>上述的 Python，LLVM，Visual Studio，CMake 的版本会直接影响编译结果，从多次编译的结果上看，LLVM 的版本宜 3.9+，且 Python 和 LLVM 的位数需匹配，而且 Python 2.7.11，Python 2.7.13 版本即便编译成功，在后续的使用中仍会出问题。</p>\r\n<h3 id=\"测试\">测试</h3>\r\n<p>编译好之后，在 VSCode 中使用 <a href=\"https://github.com/richard1122/vscode-youcompleteme\" target=\"_blank\" rel=\"noopener\">you-complete-me</a> 插件尝试，有少许小问题（不提示系统库函数，但按下 <code>.</code> 之后才有提示。对引入的系统头文件警告等），总体不影响使用，而且支持跳转、peek。</p>\r\n<p>附上 VSCode 中的配置：</p>\r\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"ycmd.path\": \"E:\\\\YouCompleteMe\\\\third_party\\\\ycmd\",</span><br><span class=\"line\">\"ycmd.confirm_extra_conf\": true,</span><br><span class=\"line\">\"ycmd.global_extra_config\": \"F:\\\\WorkingDirectory\\\\Configuration\\\\common\\\\_ycm_extra_conf.py\",</span><br><span class=\"line\">\"ycmd.python\": \"D:\\\\Python\\\\Python27\\\\python.exe\",</span><br></pre></td></tr></table></figure>\r\n<p>以及 YCM 所需的 <a href=\"/src/_ycm_extra_conf.py\">_ycm_extra_conf.py</a>。</p>\r\n<p>原料里面的各工具的版本试了又试，<code>Python 2.7.10</code> + <code>LLVM Clang 4.0.1</code> 是最佳组合。</p>\r\n<h3 id=\"致谢\">致谢</h3>\r\n<ul>\r\n<li><a href=\"https://github.com/Valloric/YouCompleteMe\" target=\"_blank\" rel=\"noopener\">YouCompleteMe</a></li>\r\n<li><a href=\"https://clang.llvm.org/\" target=\"_blank\" rel=\"noopener\">LLVM</a></li>\r\n<li><a href=\"https://gcc.gnu.org/\" target=\"_blank\" rel=\"noopener\">GCC</a></li>\r\n<li><a href=\"http://blog.techbeta.me/2015/10/linux-centos6-5-upgrade-gcc/\" target=\"_blank\" rel=\"noopener\">centos6.5升级gcc到4.9</a></li>\r\n<li><a href=\"http://www.cnblogs.com/wanghaiyang1930/p/5608531.html\" target=\"_blank\" rel=\"noopener\">CentOS 6.5 升级 GCC 4.9.3</a></li>\r\n<li><a href=\"http://blog.csdn.net/officercat/article/details/39519265\" target=\"_blank\" rel=\"noopener\">Linux下GLIBCXX和GLIBC版本低造成的编译错误的解决方案</a></li>\r\n<li><a href=\"http://blog.csdn.net/nzyalj/article/details/75331822\" target=\"_blank\" rel=\"noopener\">Centos7安装vim8.0 + YouCompleteMe</a>\r\n<ul>\r\n<li>该博主利用 <code>devtoolset</code> 来更新 GCC 版本，不过在测试中无效</li>\r\n</ul></li>\r\n<li><a href=\"http://www.jianshu.com/p/e9cb158f7048\" target=\"_blank\" rel=\"noopener\">打造VIM利器</a></li>\r\n</ul>\r\n<hr>\r\n<h2 id=\"问题\">问题</h2>\r\n<ul>\r\n<li>不能对 Anaconda 中的包进行补全。应重新编译 YCM，编译时与 Anaconda 相关的路径不应出现在 <code>PATH</code> 中，且 <code>.vimrc</code> 中应注释掉关于 <code>g:ycm_server_python_interpreter</code> 的行。参考 <a href=\"https://github.com/Valloric/YouCompleteMe/issues/1241#issuecomment-335051278\" target=\"_blank\" rel=\"noopener\">YouCompleteMe does not work with Anaconda Python</a>。</li>\r\n</ul>\r\n","site":{"data":{}},"excerpt":"<p>由 <a href=\"https://github.com/Valloric\" target=\"_blank\" rel=\"noopener\">Valloric</a> 开发的 Vim 插件 <a href=\"https://github.com/Valloric/YouCompleteMe\" target=\"_blank\" rel=\"noopener\">YouCompleteMe</a> 可以算上是最难安装的 Vim 插件了，折腾记录如下。</p>","more":"<h2 id=\"centos-7.3\">CentOS 7.3</h2>\r\n<h3 id=\"更新-gcc\">更新 GCC</h3>\r\n<p>CentOS 7.3 自带的 GCC 版本仅为 4.8.5，Ubuntu 16.04 的 GCC 版本已经到了 5.4.0。所以如果是 CentOS 系统，第一步一定要更新 GCC 版本，否则后续过程寸步难行。具体过程从略。</p>\r\n<h3 id=\"编译-ycm\">编译 YCM</h3>\r\n<p>根据官方的 <a href=\"https://github.com/Valloric/YouCompleteMe#installation\" target=\"_blank\" rel=\"noopener\">安装指南</a>，有如下操作步骤：</p>\r\n<!--�4-->\r\n<p>这里仅用 <code>Python 3.x</code> 版本，所以使用 <code>-DUSE_PYTHON2=OFF</code> 选项。</p>\r\n<h3 id=\"c-语言家族支持\">C 语言家族支持</h3>\r\n<p>在家目录中新建文件 <a href=\"/src/ycm_extra_conf.py\">.ycm_extra_conf.py</a>。</p>\r\n<h3 id=\"vimrc-配置\">vimrc 配置</h3>\r\n<!--�5-->\r\n<h2 id=\"ubuntu-16.04\">Ubuntu 16.04</h2>\r\n<p>由于 Python 库路径与 CentOS 系统有所不同，<code>cmake</code> 部分有少许变动。</p>\r\n<!--�6-->\r\n<hr>\r\n<h2 id=\"windows\">Windows</h2>\r\n<p>Windows 下编译比较烦琐，各工具需单独下载。</p>\r\n<h3 id=\"原料\">原料</h3>\r\n<ul>\r\n<li><a href=\"http://releases.llvm.org/4.0.1/LLVM-4.0.1-win64.exe\" target=\"_blank\" rel=\"noopener\">Clang for Windows (64-bit)</a></li>\r\n<li><a href=\"https://www.python.org/download\" target=\"_blank\" rel=\"noopener\">Python</a></li>\r\n<li><a href=\"https://cmake.org/download\" target=\"_blank\" rel=\"noopener\">CMake</a></li>\r\n<li><a href=\"https://www.visualstudio.com\" target=\"_blank\" rel=\"noopener\">Visual Studio</a></li>\r\n<li>MinGW GCC（测试用 MSYS2 系统里面的 MinGW64 替代）</li>\r\n</ul>\r\n<p>测试时各版本如下：</p>\r\n<table>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: center;\">Entries</th>\r\n<th style=\"text-align: center;\">Version</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">Clang</td>\r\n<td style=\"text-align: center;\">4.0.1 x64</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\">Python</td>\r\n<td style=\"text-align: center;\">2.7.10 x64</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">CMake</td>\r\n<td style=\"text-align: center;\">3.9.0 x64</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\">Visual Studio</td>\r\n<td style=\"text-align: center;\">2017</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">MinGW GCC</td>\r\n<td style=\"text-align: center;\">7.1.0</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\">Git</td>\r\n<td style=\"text-align: center;\">-</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h3 id=\"编译\">编译</h3>\r\n<p>为防止环境变量 <code>PATH</code> 干扰，暂时删除在 <code>PATH</code> 中 MSYS2 的两个路径（<code>/mingw64/bin</code>，<code>/usr/bin</code> 包含 <code>clang</code>，<code>cmake</code> 和 <code>python</code>），加入刚才安装的 Cmake 路径（Python，Clang 的路径并不需要）。下面一套动作即可完成编译：</p>\r\n<!--�7-->\r\n<p>这里明确指明了 LLVM 的目录以及 Python 的库，当然如果要在 Python 3.x 下编译，需将 <code>cmake</code> 部分改为：</p>\r\n<!--�8-->\r\n<p>上述的 Python，LLVM，Visual Studio，CMake 的版本会直接影响编译结果，从多次编译的结果上看，LLVM 的版本宜 3.9+，且 Python 和 LLVM 的位数需匹配，而且 Python 2.7.11，Python 2.7.13 版本即便编译成功，在后续的使用中仍会出问题。</p>\r\n<h3 id=\"测试\">测试</h3>\r\n<p>编译好之后，在 VSCode 中使用 <a href=\"https://github.com/richard1122/vscode-youcompleteme\" target=\"_blank\" rel=\"noopener\">you-complete-me</a> 插件尝试，有少许小问题（不提示系统库函数，但按下 <code>.</code> 之后才有提示。对引入的系统头文件警告等），总体不影响使用，而且支持跳转、peek。</p>\r\n<p>附上 VSCode 中的配置：</p>\r\n<!--�9-->\r\n<p>以及 YCM 所需的 <a href=\"/src/_ycm_extra_conf.py\">_ycm_extra_conf.py</a>。</p>\r\n<p>原料里面的各工具的版本试了又试，<code>Python 2.7.10</code> + <code>LLVM Clang 4.0.1</code> 是最佳组合。</p>\r\n<h3 id=\"致谢\">致谢</h3>\r\n<ul>\r\n<li><a href=\"https://github.com/Valloric/YouCompleteMe\" target=\"_blank\" rel=\"noopener\">YouCompleteMe</a></li>\r\n<li><a href=\"https://clang.llvm.org/\" target=\"_blank\" rel=\"noopener\">LLVM</a></li>\r\n<li><a href=\"https://gcc.gnu.org/\" target=\"_blank\" rel=\"noopener\">GCC</a></li>\r\n<li><a href=\"http://blog.techbeta.me/2015/10/linux-centos6-5-upgrade-gcc/\" target=\"_blank\" rel=\"noopener\">centos6.5升级gcc到4.9</a></li>\r\n<li><a href=\"http://www.cnblogs.com/wanghaiyang1930/p/5608531.html\" target=\"_blank\" rel=\"noopener\">CentOS 6.5 升级 GCC 4.9.3</a></li>\r\n<li><a href=\"http://blog.csdn.net/officercat/article/details/39519265\" target=\"_blank\" rel=\"noopener\">Linux下GLIBCXX和GLIBC版本低造成的编译错误的解决方案</a></li>\r\n<li><a href=\"http://blog.csdn.net/nzyalj/article/details/75331822\" target=\"_blank\" rel=\"noopener\">Centos7安装vim8.0 + YouCompleteMe</a>\r\n<ul>\r\n<li>该博主利用 <code>devtoolset</code> 来更新 GCC 版本，不过在测试中无效</li>\r\n</ul></li>\r\n<li><a href=\"http://www.jianshu.com/p/e9cb158f7048\" target=\"_blank\" rel=\"noopener\">打造VIM利器</a></li>\r\n</ul>\r\n<hr>\r\n<h2 id=\"问题\">问题</h2>\r\n<ul>\r\n<li>不能对 Anaconda 中的包进行补全。应重新编译 YCM，编译时与 Anaconda 相关的路径不应出现在 <code>PATH</code> 中，且 <code>.vimrc</code> 中应注释掉关于 <code>g:ycm_server_python_interpreter</code> 的行。参考 <a href=\"https://github.com/Valloric/YouCompleteMe/issues/1241#issuecomment-335051278\" target=\"_blank\" rel=\"noopener\">YouCompleteMe does not work with Anaconda Python</a>。</li>\r\n</ul>"},{"title":"Windows 系统内置环境变量","date":"2017-11-11T16:11:12.000Z","_content":"\n在 Windows 操作系统下工作，免不了用上几次 cmd，收集一些必要的系统内置环境变量。\n\n<!-- more -->\n\nVariable                                                            | Volatile <br> (Read-Only) | Default value in Windows <br> (system drive is C: )\n--------                                                            | --------                  | --------\nALLUSERSPROFILE                                                     |                           | `C:\\ProgramData`\nAPPDATA                                                             |                           | `C:\\Users\\{username}\\AppData\\Roaming`\nCD                                                                  | Y                         | The current directory (string).\nClientName                                                          | Y                         | Terminal servers only - the ComputerName of a remote host.\nCMDEXTVERSION                                                       | Y                         | The current Command Processor Extensions version number. (NT = \"1\", Win2000+ = \"2\".)\nCMDCMDLINE                                                          | Y                         | The original command line that invoked the Command Processor.\nCommonProgramFiles                                                  |                           | `C:\\Program Files\\Common Files`\nCOMMONPROGRAMFILES(x86)                                             |                           | `C:\\Program Files (x86)\\Common Files`\nCOMPUTERNAME                                                        |                           | `{computername}`\nCOMSPEC                                                             |                           | `C:\\Windows\\System32\\cmd.exe` or if running a 32 bit WOW - `C:\\Windows\\SysWOW64\\cmd.exe`\nDATE                                                                | Y                         | The current date using same region specific format as DATE.\nERRORLEVEL                                                          | Y                         | The current ERRORLEVEL value, automatically set when a program exits.\nFPS_BROWSER_APP_PROFILE_STRING <br> FPS_BROWSER_USER_PROFILE_STRING |                           | Internet Explorer <br> Default <br> These are undocumented variables for the Edge browser in Windows 10.\nHighestNumaNodeNumber                                               | Y (hidden)                | The highest NUMA node number on this computer.\nHOMEDRIVE                                                           | Y                         | `C:`\nHOMEPATH                                                            | Y                         | `\\Users\\{username}`\nLOCALAPPDATA                                                        |                           | `C:\\Users\\{username}\\AppData\\Local`\nLOGONSERVER                                                         |                           | `\\\\{domain_logon_server}`\nNUMBER_OF_PROCESSORS                                                | Y                         | The Number of processors running on the machine.\nOS                                                                  | Y                         | Operating system on the user's workstation.\nPATH                                                                | User and System           | `C:\\Windows\\System32\\;C:\\Windows\\;C:\\Windows\\System32\\Wbem;{plus program paths}`\nPATHEXT                                                             |                           | `.COM; .EXE; .BAT; .CMD; .VBS; .VBE; .JS ; .WSF; .WSH; .MSC` <br> The syntax is like the PATH variable - semicolon separators.\nPROCESSOR_ARCHITECTURE                                              | Y                         | AMD64/IA64/x86 This doesn't tell you the architecture of the processor but only of the current process, so it returns \"x86\" for a 32 bit WOW process running on 64 bit Windows. See detecting OS 32/64 bit\nPROCESSOR_ARCHITEW6432                                              |                           | `=%ProgramFiles%` (only available on 64 bit systems)\nPROCESSOR_IDENTIFIER                                                | Y                         | Processor ID of the user's workstation.\nPROCESSOR_LEVEL                                                     | Y                         | Processor level of the user's workstation.\nPROCESSOR_REVISION                                                  | Y                         | Processor version of the user's workstation.\nProgramW6432                                                        |                           | `=%PROCESSOR_ARCHITECTURE%` (only available on 64 bit systems)\nProgramData                                                         |                           | `C:\\ProgramData`\nProgramFiles                                                        |                           | `C:\\Program Files or C:\\Program Files (x86)`\nProgramFiles(x86)                                                   |                           | `C:\\Program Files (x86)`\nPROMPT                                                              |                           | Code for current command prompt format,usually `$P$G` <br> `C:>`\nPSModulePath                                                        |                           | `%SystemRoot%\\system32\\WindowsPowerShell\\v1.0\\Modules\\ `\nPublic                                                              |                           | `C:\\Users\\Public`\nRANDOM                                                              | Y                         | A random integer number, anything from 0 to 32,767 (inclusive).\n%SessionName%                                                       |                           | Terminal servers only - for a terminal server session, SessionName is a combination of the connection name, followed by #SessionNumber. For a console session, SessionName returns \"Console\".\nSYSTEMDRIVE                                                         |                           | `C:` <br> By default, Windows is installed to `C:\\Windows` but there's no guarantee of that, Windows can be installed to a different folder, or a different drive letter. <br> `systemroot` is a read-only system variable that will resolve to the correct location. <br> NT 4.0, Windows 2000 and Windows NT 3.1 default to `C:\\WINNT`\nTEMP and TMP                                                        | User Variable             | `C:\\Users\\{Username}\\AppData\\Local\\Temp` <br> Under XP this was `\\{username}\\Local Settings\\Temp`\nTIME                                                                | Y                         | The current time using same format as TIME.\nUserDnsDomain                                                       | Y <br> User Variable      | Set if a user is a logged on to a domain and returns the fully qualified DNS domain that the currently logged on user's account belongs to.\nUSERDOMAIN                                                          |                           | `{userdomain}`\nUSERDOMAIN_roamingprofile                                           |                           | The user domain for RDS or standard roaming profile paths. Windows 8/10/2012 (or Windows 7/2008 with Q2664408)\nUSERNAME                                                            |                           | `{username}`\nUSERPROFILE                                                         |                           | `%SystemDrive%\\Users\\{username}` <br> This is equivalent to the `$HOME` environment variable in Unix/Linux\nWINDIR                                                              |                           | `%WinDir%` pre-dates Windows NT and seems to be superseded by `%SystemRoot%` <br> Set by default as `windir=%SystemRoot%` <br> `%windir%` is a regular variable and can be changed, which makes it less robust than %systemroot%\n","source":"_posts/built-in-environment-variables-on-windows.md","raw":"---\ntitle: Windows 系统内置环境变量\ndate: 2017-11-12 00:11:12\ntags:\n    - Windows\ncategories: Memos\n---\n\n在 Windows 操作系统下工作，免不了用上几次 cmd，收集一些必要的系统内置环境变量。\n\n<!-- more -->\n\nVariable                                                            | Volatile <br> (Read-Only) | Default value in Windows <br> (system drive is C: )\n--------                                                            | --------                  | --------\nALLUSERSPROFILE                                                     |                           | `C:\\ProgramData`\nAPPDATA                                                             |                           | `C:\\Users\\{username}\\AppData\\Roaming`\nCD                                                                  | Y                         | The current directory (string).\nClientName                                                          | Y                         | Terminal servers only - the ComputerName of a remote host.\nCMDEXTVERSION                                                       | Y                         | The current Command Processor Extensions version number. (NT = \"1\", Win2000+ = \"2\".)\nCMDCMDLINE                                                          | Y                         | The original command line that invoked the Command Processor.\nCommonProgramFiles                                                  |                           | `C:\\Program Files\\Common Files`\nCOMMONPROGRAMFILES(x86)                                             |                           | `C:\\Program Files (x86)\\Common Files`\nCOMPUTERNAME                                                        |                           | `{computername}`\nCOMSPEC                                                             |                           | `C:\\Windows\\System32\\cmd.exe` or if running a 32 bit WOW - `C:\\Windows\\SysWOW64\\cmd.exe`\nDATE                                                                | Y                         | The current date using same region specific format as DATE.\nERRORLEVEL                                                          | Y                         | The current ERRORLEVEL value, automatically set when a program exits.\nFPS_BROWSER_APP_PROFILE_STRING <br> FPS_BROWSER_USER_PROFILE_STRING |                           | Internet Explorer <br> Default <br> These are undocumented variables for the Edge browser in Windows 10.\nHighestNumaNodeNumber                                               | Y (hidden)                | The highest NUMA node number on this computer.\nHOMEDRIVE                                                           | Y                         | `C:`\nHOMEPATH                                                            | Y                         | `\\Users\\{username}`\nLOCALAPPDATA                                                        |                           | `C:\\Users\\{username}\\AppData\\Local`\nLOGONSERVER                                                         |                           | `\\\\{domain_logon_server}`\nNUMBER_OF_PROCESSORS                                                | Y                         | The Number of processors running on the machine.\nOS                                                                  | Y                         | Operating system on the user's workstation.\nPATH                                                                | User and System           | `C:\\Windows\\System32\\;C:\\Windows\\;C:\\Windows\\System32\\Wbem;{plus program paths}`\nPATHEXT                                                             |                           | `.COM; .EXE; .BAT; .CMD; .VBS; .VBE; .JS ; .WSF; .WSH; .MSC` <br> The syntax is like the PATH variable - semicolon separators.\nPROCESSOR_ARCHITECTURE                                              | Y                         | AMD64/IA64/x86 This doesn't tell you the architecture of the processor but only of the current process, so it returns \"x86\" for a 32 bit WOW process running on 64 bit Windows. See detecting OS 32/64 bit\nPROCESSOR_ARCHITEW6432                                              |                           | `=%ProgramFiles%` (only available on 64 bit systems)\nPROCESSOR_IDENTIFIER                                                | Y                         | Processor ID of the user's workstation.\nPROCESSOR_LEVEL                                                     | Y                         | Processor level of the user's workstation.\nPROCESSOR_REVISION                                                  | Y                         | Processor version of the user's workstation.\nProgramW6432                                                        |                           | `=%PROCESSOR_ARCHITECTURE%` (only available on 64 bit systems)\nProgramData                                                         |                           | `C:\\ProgramData`\nProgramFiles                                                        |                           | `C:\\Program Files or C:\\Program Files (x86)`\nProgramFiles(x86)                                                   |                           | `C:\\Program Files (x86)`\nPROMPT                                                              |                           | Code for current command prompt format,usually `$P$G` <br> `C:>`\nPSModulePath                                                        |                           | `%SystemRoot%\\system32\\WindowsPowerShell\\v1.0\\Modules\\ `\nPublic                                                              |                           | `C:\\Users\\Public`\nRANDOM                                                              | Y                         | A random integer number, anything from 0 to 32,767 (inclusive).\n%SessionName%                                                       |                           | Terminal servers only - for a terminal server session, SessionName is a combination of the connection name, followed by #SessionNumber. For a console session, SessionName returns \"Console\".\nSYSTEMDRIVE                                                         |                           | `C:` <br> By default, Windows is installed to `C:\\Windows` but there's no guarantee of that, Windows can be installed to a different folder, or a different drive letter. <br> `systemroot` is a read-only system variable that will resolve to the correct location. <br> NT 4.0, Windows 2000 and Windows NT 3.1 default to `C:\\WINNT`\nTEMP and TMP                                                        | User Variable             | `C:\\Users\\{Username}\\AppData\\Local\\Temp` <br> Under XP this was `\\{username}\\Local Settings\\Temp`\nTIME                                                                | Y                         | The current time using same format as TIME.\nUserDnsDomain                                                       | Y <br> User Variable      | Set if a user is a logged on to a domain and returns the fully qualified DNS domain that the currently logged on user's account belongs to.\nUSERDOMAIN                                                          |                           | `{userdomain}`\nUSERDOMAIN_roamingprofile                                           |                           | The user domain for RDS or standard roaming profile paths. Windows 8/10/2012 (or Windows 7/2008 with Q2664408)\nUSERNAME                                                            |                           | `{username}`\nUSERPROFILE                                                         |                           | `%SystemDrive%\\Users\\{username}` <br> This is equivalent to the `$HOME` environment variable in Unix/Linux\nWINDIR                                                              |                           | `%WinDir%` pre-dates Windows NT and seems to be superseded by `%SystemRoot%` <br> Set by default as `windir=%SystemRoot%` <br> `%windir%` is a regular variable and can be changed, which makes it less robust than %systemroot%\n","slug":"built-in-environment-variables-on-windows","published":1,"updated":"2023-03-09T16:09:38.200Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u335n0006p4x0hf2ok6a9","content":"<p>在 Windows 操作系统下工作，免不了用上几次 cmd，收集一些必要的系统内置环境变量。</p>\r\n<a id=\"more\"></a>\r\n<table>\r\n<colgroup>\r\n<col style=\"width: 33%\">\r\n<col style=\"width: 33%\">\r\n<col style=\"width: 33%\">\r\n</colgroup>\r\n<thead>\r\n<tr class=\"header\">\r\n<th>Variable</th>\r\n<th>Volatile <br> (Read-Only)</th>\r\n<th>Default value in Windows <br> (system drive is C: )</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td>ALLUSERSPROFILE</td>\r\n<td></td>\r\n<td><code>C:\\ProgramData</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>APPDATA</td>\r\n<td></td>\r\n<td><code>C:\\Users\\{username}\\AppData\\Roaming</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>CD</td>\r\n<td>Y</td>\r\n<td>The current directory (string).</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>ClientName</td>\r\n<td>Y</td>\r\n<td>Terminal servers only - the ComputerName of a remote host.</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>CMDEXTVERSION</td>\r\n<td>Y</td>\r\n<td>The current Command Processor Extensions version number. (NT = “1”, Win2000+ = “2”.)</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>CMDCMDLINE</td>\r\n<td>Y</td>\r\n<td>The original command line that invoked the Command Processor.</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>CommonProgramFiles</td>\r\n<td></td>\r\n<td><code>C:\\Program Files\\Common Files</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>COMMONPROGRAMFILES(x86)</td>\r\n<td></td>\r\n<td><code>C:\\Program Files (x86)\\Common Files</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>COMPUTERNAME</td>\r\n<td></td>\r\n<td><code>{computername}</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>COMSPEC</td>\r\n<td></td>\r\n<td><code>C:\\Windows\\System32\\cmd.exe</code> or if running a 32 bit WOW - <code>C:\\Windows\\SysWOW64\\cmd.exe</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>DATE</td>\r\n<td>Y</td>\r\n<td>The current date using same region specific format as DATE.</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>ERRORLEVEL</td>\r\n<td>Y</td>\r\n<td>The current ERRORLEVEL value, automatically set when a program exits.</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>FPS_BROWSER_APP_PROFILE_STRING <br> FPS_BROWSER_USER_PROFILE_STRING</td>\r\n<td></td>\r\n<td>Internet Explorer <br> Default <br> These are undocumented variables for the Edge browser in Windows 10.</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>HighestNumaNodeNumber</td>\r\n<td>Y (hidden)</td>\r\n<td>The highest NUMA node number on this computer.</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>HOMEDRIVE</td>\r\n<td>Y</td>\r\n<td><code>C:</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>HOMEPATH</td>\r\n<td>Y</td>\r\n<td><code>\\Users\\{username}</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>LOCALAPPDATA</td>\r\n<td></td>\r\n<td><code>C:\\Users\\{username}\\AppData\\Local</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>LOGONSERVER</td>\r\n<td></td>\r\n<td><code>\\\\{domain_logon_server}</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>NUMBER_OF_PROCESSORS</td>\r\n<td>Y</td>\r\n<td>The Number of processors running on the machine.</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>OS</td>\r\n<td>Y</td>\r\n<td>Operating system on the user’s workstation.</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>PATH</td>\r\n<td>User and System</td>\r\n<td><code>C:\\Windows\\System32\\;C:\\Windows\\;C:\\Windows\\System32\\Wbem;{plus program paths}</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>PATHEXT</td>\r\n<td></td>\r\n<td><code>.COM; .EXE; .BAT; .CMD; .VBS; .VBE; .JS ; .WSF; .WSH; .MSC</code> <br> The syntax is like the PATH variable - semicolon separators.</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>PROCESSOR_ARCHITECTURE</td>\r\n<td>Y</td>\r\n<td>AMD64/IA64/x86 This doesn’t tell you the architecture of the processor but only of the current process, so it returns “x86” for a 32 bit WOW process running on 64 bit Windows. See detecting OS 32/64 bit</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>PROCESSOR_ARCHITEW6432</td>\r\n<td></td>\r\n<td><code>=%ProgramFiles%</code> (only available on 64 bit systems)</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>PROCESSOR_IDENTIFIER</td>\r\n<td>Y</td>\r\n<td>Processor ID of the user’s workstation.</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>PROCESSOR_LEVEL</td>\r\n<td>Y</td>\r\n<td>Processor level of the user’s workstation.</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>PROCESSOR_REVISION</td>\r\n<td>Y</td>\r\n<td>Processor version of the user’s workstation.</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>ProgramW6432</td>\r\n<td></td>\r\n<td><code>=%PROCESSOR_ARCHITECTURE%</code> (only available on 64 bit systems)</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>ProgramData</td>\r\n<td></td>\r\n<td><code>C:\\ProgramData</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>ProgramFiles</td>\r\n<td></td>\r\n<td><code>C:\\Program Files or C:\\Program Files (x86)</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>ProgramFiles(x86)</td>\r\n<td></td>\r\n<td><code>C:\\Program Files (x86)</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>PROMPT</td>\r\n<td></td>\r\n<td>Code for current command prompt format,usually <code>$P$G</code> <br> <code>C:&gt;</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>PSModulePath</td>\r\n<td></td>\r\n<td><code>%SystemRoot%\\system32\\WindowsPowerShell\\v1.0\\Modules\\</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>Public</td>\r\n<td></td>\r\n<td><code>C:\\Users\\Public</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>RANDOM</td>\r\n<td>Y</td>\r\n<td>A random integer number, anything from 0 to 32,767 (inclusive).</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>%SessionName%</td>\r\n<td></td>\r\n<td>Terminal servers only - for a terminal server session, SessionName is a combination of the connection name, followed by #SessionNumber. For a console session, SessionName returns “Console”.</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>SYSTEMDRIVE</td>\r\n<td></td>\r\n<td><code>C:</code> <br> By default, Windows is installed to <code>C:\\Windows</code> but there’s no guarantee of that, Windows can be installed to a different folder, or a different drive letter. <br> <code>systemroot</code> is a read-only system variable that will resolve to the correct location. <br> NT 4.0, Windows 2000 and Windows NT 3.1 default to <code>C:\\WINNT</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>TEMP and TMP</td>\r\n<td>User Variable</td>\r\n<td><code>C:\\Users\\{Username}\\AppData\\Local\\Temp</code> <br> Under XP this was <code>\\{username}\\Local Settings\\Temp</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>TIME</td>\r\n<td>Y</td>\r\n<td>The current time using same format as TIME.</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>UserDnsDomain</td>\r\n<td>Y <br> User Variable</td>\r\n<td>Set if a user is a logged on to a domain and returns the fully qualified DNS domain that the currently logged on user’s account belongs to.</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>USERDOMAIN</td>\r\n<td></td>\r\n<td><code>{userdomain}</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>USERDOMAIN_roamingprofile</td>\r\n<td></td>\r\n<td>The user domain for RDS or standard roaming profile paths. Windows 8/10/2012 (or Windows 7/2008 with Q2664408)</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>USERNAME</td>\r\n<td></td>\r\n<td><code>{username}</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>USERPROFILE</td>\r\n<td></td>\r\n<td><code>%SystemDrive%\\Users\\{username}</code> <br> This is equivalent to the <code>$HOME</code> environment variable in Unix/Linux</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>WINDIR</td>\r\n<td></td>\r\n<td><code>%WinDir%</code> pre-dates Windows NT and seems to be superseded by <code>%SystemRoot%</code> <br> Set by default as <code>windir=%SystemRoot%</code> <br> <code>%windir%</code> is a regular variable and can be changed, which makes it less robust than %systemroot%</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n","site":{"data":{}},"excerpt":"<p>在 Windows 操作系统下工作，免不了用上几次 cmd，收集一些必要的系统内置环境变量。</p>","more":"<table>\r\n<colgroup>\r\n<col style=\"width: 33%\">\r\n<col style=\"width: 33%\">\r\n<col style=\"width: 33%\">\r\n</colgroup>\r\n<thead>\r\n<tr class=\"header\">\r\n<th>Variable</th>\r\n<th>Volatile <br> (Read-Only)</th>\r\n<th>Default value in Windows <br> (system drive is C: )</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td>ALLUSERSPROFILE</td>\r\n<td></td>\r\n<td><code>C:\\ProgramData</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>APPDATA</td>\r\n<td></td>\r\n<td><code>C:\\Users\\{username}\\AppData\\Roaming</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>CD</td>\r\n<td>Y</td>\r\n<td>The current directory (string).</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>ClientName</td>\r\n<td>Y</td>\r\n<td>Terminal servers only - the ComputerName of a remote host.</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>CMDEXTVERSION</td>\r\n<td>Y</td>\r\n<td>The current Command Processor Extensions version number. (NT = “1”, Win2000+ = “2”.)</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>CMDCMDLINE</td>\r\n<td>Y</td>\r\n<td>The original command line that invoked the Command Processor.</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>CommonProgramFiles</td>\r\n<td></td>\r\n<td><code>C:\\Program Files\\Common Files</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>COMMONPROGRAMFILES(x86)</td>\r\n<td></td>\r\n<td><code>C:\\Program Files (x86)\\Common Files</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>COMPUTERNAME</td>\r\n<td></td>\r\n<td><code>{computername}</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>COMSPEC</td>\r\n<td></td>\r\n<td><code>C:\\Windows\\System32\\cmd.exe</code> or if running a 32 bit WOW - <code>C:\\Windows\\SysWOW64\\cmd.exe</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>DATE</td>\r\n<td>Y</td>\r\n<td>The current date using same region specific format as DATE.</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>ERRORLEVEL</td>\r\n<td>Y</td>\r\n<td>The current ERRORLEVEL value, automatically set when a program exits.</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>FPS_BROWSER_APP_PROFILE_STRING <br> FPS_BROWSER_USER_PROFILE_STRING</td>\r\n<td></td>\r\n<td>Internet Explorer <br> Default <br> These are undocumented variables for the Edge browser in Windows 10.</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>HighestNumaNodeNumber</td>\r\n<td>Y (hidden)</td>\r\n<td>The highest NUMA node number on this computer.</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>HOMEDRIVE</td>\r\n<td>Y</td>\r\n<td><code>C:</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>HOMEPATH</td>\r\n<td>Y</td>\r\n<td><code>\\Users\\{username}</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>LOCALAPPDATA</td>\r\n<td></td>\r\n<td><code>C:\\Users\\{username}\\AppData\\Local</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>LOGONSERVER</td>\r\n<td></td>\r\n<td><code>\\\\{domain_logon_server}</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>NUMBER_OF_PROCESSORS</td>\r\n<td>Y</td>\r\n<td>The Number of processors running on the machine.</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>OS</td>\r\n<td>Y</td>\r\n<td>Operating system on the user’s workstation.</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>PATH</td>\r\n<td>User and System</td>\r\n<td><code>C:\\Windows\\System32\\;C:\\Windows\\;C:\\Windows\\System32\\Wbem;{plus program paths}</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>PATHEXT</td>\r\n<td></td>\r\n<td><code>.COM; .EXE; .BAT; .CMD; .VBS; .VBE; .JS ; .WSF; .WSH; .MSC</code> <br> The syntax is like the PATH variable - semicolon separators.</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>PROCESSOR_ARCHITECTURE</td>\r\n<td>Y</td>\r\n<td>AMD64/IA64/x86 This doesn’t tell you the architecture of the processor but only of the current process, so it returns “x86” for a 32 bit WOW process running on 64 bit Windows. See detecting OS 32/64 bit</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>PROCESSOR_ARCHITEW6432</td>\r\n<td></td>\r\n<td><code>=%ProgramFiles%</code> (only available on 64 bit systems)</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>PROCESSOR_IDENTIFIER</td>\r\n<td>Y</td>\r\n<td>Processor ID of the user’s workstation.</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>PROCESSOR_LEVEL</td>\r\n<td>Y</td>\r\n<td>Processor level of the user’s workstation.</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>PROCESSOR_REVISION</td>\r\n<td>Y</td>\r\n<td>Processor version of the user’s workstation.</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>ProgramW6432</td>\r\n<td></td>\r\n<td><code>=%PROCESSOR_ARCHITECTURE%</code> (only available on 64 bit systems)</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>ProgramData</td>\r\n<td></td>\r\n<td><code>C:\\ProgramData</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>ProgramFiles</td>\r\n<td></td>\r\n<td><code>C:\\Program Files or C:\\Program Files (x86)</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>ProgramFiles(x86)</td>\r\n<td></td>\r\n<td><code>C:\\Program Files (x86)</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>PROMPT</td>\r\n<td></td>\r\n<td>Code for current command prompt format,usually <code>$P$G</code> <br> <code>C:&gt;</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>PSModulePath</td>\r\n<td></td>\r\n<td><code>%SystemRoot%\\system32\\WindowsPowerShell\\v1.0\\Modules\\</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>Public</td>\r\n<td></td>\r\n<td><code>C:\\Users\\Public</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>RANDOM</td>\r\n<td>Y</td>\r\n<td>A random integer number, anything from 0 to 32,767 (inclusive).</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>%SessionName%</td>\r\n<td></td>\r\n<td>Terminal servers only - for a terminal server session, SessionName is a combination of the connection name, followed by #SessionNumber. For a console session, SessionName returns “Console”.</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>SYSTEMDRIVE</td>\r\n<td></td>\r\n<td><code>C:</code> <br> By default, Windows is installed to <code>C:\\Windows</code> but there’s no guarantee of that, Windows can be installed to a different folder, or a different drive letter. <br> <code>systemroot</code> is a read-only system variable that will resolve to the correct location. <br> NT 4.0, Windows 2000 and Windows NT 3.1 default to <code>C:\\WINNT</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>TEMP and TMP</td>\r\n<td>User Variable</td>\r\n<td><code>C:\\Users\\{Username}\\AppData\\Local\\Temp</code> <br> Under XP this was <code>\\{username}\\Local Settings\\Temp</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>TIME</td>\r\n<td>Y</td>\r\n<td>The current time using same format as TIME.</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>UserDnsDomain</td>\r\n<td>Y <br> User Variable</td>\r\n<td>Set if a user is a logged on to a domain and returns the fully qualified DNS domain that the currently logged on user’s account belongs to.</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>USERDOMAIN</td>\r\n<td></td>\r\n<td><code>{userdomain}</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>USERDOMAIN_roamingprofile</td>\r\n<td></td>\r\n<td>The user domain for RDS or standard roaming profile paths. Windows 8/10/2012 (or Windows 7/2008 with Q2664408)</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>USERNAME</td>\r\n<td></td>\r\n<td><code>{username}</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>USERPROFILE</td>\r\n<td></td>\r\n<td><code>%SystemDrive%\\Users\\{username}</code> <br> This is equivalent to the <code>$HOME</code> environment variable in Unix/Linux</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>WINDIR</td>\r\n<td></td>\r\n<td><code>%WinDir%</code> pre-dates Windows NT and seems to be superseded by <code>%SystemRoot%</code> <br> Set by default as <code>windir=%SystemRoot%</code> <br> <code>%windir%</code> is a regular variable and can be changed, which makes it less robust than %systemroot%</td>\r\n</tr>\r\n</tbody>\r\n</table>"},{"title":"CentOS 下编译 Python","date":"2017-10-16T03:23:25.000Z","_content":"\nCentOS 7.3 自带的 Python 版本只有 `2.7.5`，很多新鲜的包都不能正常使用，一怒之下尝试更新其至目前最新的 `2.7.13` 版本，顺便编译最新的 Python 3.6.2。当然系统自带的 Python 2.7.5 是不能删除的，会导致很多依赖它的工具无法正常工作，所以将新版本的 Python 安装至 `/usr/local/` 下。\n\n<!-- more -->\n\n首先安装一些依赖，比如\n\n```bash\nyum install openssl-devel\n```\n\n比如 `SQLite`:\n\n```bash\nwget http://www.sqlite.org/snapshot/sqlite-snapshot-201708251543.tar.gz\ntar zxf sqlite-snapshot-201708251543.tar.gz\ncd sqlite-snapshot-201708251543\n./configure --prefix=/usr/local\n```\n\n下面开始 Python 的编译工作：\n\n```\nwget https://www.python.org/ftp/python/2.7.13/Python-2.7.13.tgz\ntar zxf Python-2.7.13.tgz\ncd Python-2.7.13\n./configure --prefix=/usr/local\nmake && make install\n```\n\nPython 3 的编译安装同理，将网址改为\n[`https://www.python.org/ftp/python/3.6.2/Python-3.6.2.tgz`](https://www.python.org/ftp/python/3.6.2/Python-3.6.2.tgz) 即可。\n\n这时会发现 `yum` 不能用了，需要将 `/usr/bin/yum`，`/usr/libexec/urlgrabber-ext-down` 的 `shebang` 改为 `/usr/bin/python2.7`，也就是原来的低版本 (2.7.5)。\n","source":"_posts/compile-python-on-centos.md","raw":"---\ntitle: CentOS 下编译 Python\ndate: 2017-10-16 11:23:25\ntags:\n    - Python\n    - CentOS\ncategories: Operation and Maintenance\n---\n\nCentOS 7.3 自带的 Python 版本只有 `2.7.5`，很多新鲜的包都不能正常使用，一怒之下尝试更新其至目前最新的 `2.7.13` 版本，顺便编译最新的 Python 3.6.2。当然系统自带的 Python 2.7.5 是不能删除的，会导致很多依赖它的工具无法正常工作，所以将新版本的 Python 安装至 `/usr/local/` 下。\n\n<!-- more -->\n\n首先安装一些依赖，比如\n\n```bash\nyum install openssl-devel\n```\n\n比如 `SQLite`:\n\n```bash\nwget http://www.sqlite.org/snapshot/sqlite-snapshot-201708251543.tar.gz\ntar zxf sqlite-snapshot-201708251543.tar.gz\ncd sqlite-snapshot-201708251543\n./configure --prefix=/usr/local\n```\n\n下面开始 Python 的编译工作：\n\n```\nwget https://www.python.org/ftp/python/2.7.13/Python-2.7.13.tgz\ntar zxf Python-2.7.13.tgz\ncd Python-2.7.13\n./configure --prefix=/usr/local\nmake && make install\n```\n\nPython 3 的编译安装同理，将网址改为\n[`https://www.python.org/ftp/python/3.6.2/Python-3.6.2.tgz`](https://www.python.org/ftp/python/3.6.2/Python-3.6.2.tgz) 即可。\n\n这时会发现 `yum` 不能用了，需要将 `/usr/bin/yum`，`/usr/libexec/urlgrabber-ext-down` 的 `shebang` 改为 `/usr/bin/python2.7`，也就是原来的低版本 (2.7.5)。\n","slug":"compile-python-on-centos","published":1,"updated":"2023-03-09T16:09:38.205Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u335p0007p4x0tiy8o2qq","content":"<p>CentOS 7.3 自带的 Python 版本只有 <code>2.7.5</code>，很多新鲜的包都不能正常使用，一怒之下尝试更新其至目前最新的 <code>2.7.13</code> 版本，顺便编译最新的 Python 3.6.2。当然系统自带的 Python 2.7.5 是不能删除的，会导致很多依赖它的工具无法正常工作，所以将新版本的 Python 安装至 <code>/usr/local/</code> 下。</p>\r\n<a id=\"more\"></a>\r\n<p>首先安装一些依赖，比如</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install openssl-devel</span><br></pre></td></tr></table></figure>\r\n<p>比如 <code>SQLite</code>:</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://www.sqlite.org/snapshot/sqlite-snapshot-201708251543.tar.gz</span><br><span class=\"line\">tar zxf sqlite-snapshot-201708251543.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> sqlite-snapshot-201708251543</span><br><span class=\"line\">./configure --prefix=/usr/<span class=\"built_in\">local</span></span><br></pre></td></tr></table></figure>\r\n<p>下面开始 Python 的编译工作：</p>\r\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://www.python.org/ftp/python/2.7.13/Python-2.7.13.tgz</span><br><span class=\"line\">tar zxf Python-2.7.13.tgz</span><br><span class=\"line\">cd Python-2.7.13</span><br><span class=\"line\">./configure --prefix=/usr/local</span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\r\n<p>Python 3 的编译安装同理，将网址改为 <a href=\"https://www.python.org/ftp/python/3.6.2/Python-3.6.2.tgz\" target=\"_blank\" rel=\"noopener\"><code>https://www.python.org/ftp/python/3.6.2/Python-3.6.2.tgz</code></a> 即可。</p>\r\n<p>这时会发现 <code>yum</code> 不能用了，需要将 <code>/usr/bin/yum</code>，<code>/usr/libexec/urlgrabber-ext-down</code> 的 <code>shebang</code> 改为 <code>/usr/bin/python2.7</code>，也就是原来的低版本 (2.7.5)。</p>\r\n","site":{"data":{}},"excerpt":"<p>CentOS 7.3 自带的 Python 版本只有 <code>2.7.5</code>，很多新鲜的包都不能正常使用，一怒之下尝试更新其至目前最新的 <code>2.7.13</code> 版本，顺便编译最新的 Python 3.6.2。当然系统自带的 Python 2.7.5 是不能删除的，会导致很多依赖它的工具无法正常工作，所以将新版本的 Python 安装至 <code>/usr/local/</code> 下。</p>","more":"<p>首先安装一些依赖，比如</p>\r\n<!--�10-->\r\n<p>比如 <code>SQLite</code>:</p>\r\n<!--�11-->\r\n<p>下面开始 Python 的编译工作：</p>\r\n<!--�12-->\r\n<p>Python 3 的编译安装同理，将网址改为 <a href=\"https://www.python.org/ftp/python/3.6.2/Python-3.6.2.tgz\" target=\"_blank\" rel=\"noopener\"><code>https://www.python.org/ftp/python/3.6.2/Python-3.6.2.tgz</code></a> 即可。</p>\r\n<p>这时会发现 <code>yum</code> 不能用了，需要将 <code>/usr/bin/yum</code>，<code>/usr/libexec/urlgrabber-ext-down</code> 的 <code>shebang</code> 改为 <code>/usr/bin/python2.7</code>，也就是原来的低版本 (2.7.5)。</p>"},{"title":"Mobaxterm 折腾笔记","date":"2017-10-23T10:02:41.000Z","_content":"\n虽然已经不用 Mobaxterm 作为日常工具了，但为缅怀以前折腾的那段时光，特此归档。\n\n<!-- more -->\n\n## 札记\n\n-  建议使用 10.0 版本的 Mobaxterm（下简称 Moba），10.2 版本的有少许问题，比如用 `apt-get` 或者 `apt-cyg` 不能用 `Ctrl-C` 停止，不能使用 [`gist-vim`][gist-vim] 插件，`git clone` 也出现各种不能名状的问题\n-  配置 `Persistent home directory` 以及 `Persistent root (/) directory`，个人的路径为 `F:\\WorkingDirectory\\Cygwin\\home`，`F:\\WorkingDirectory\\Cygwin`。关闭 Moba，修改 `/etc/fstab` 文件，加上行：\n   {% codeblock lang:bash %}\n   none /cygdrive cygdrive text,posix=0,noacl,user 0\n   {% endcodeblock %}\n   **并设置文件为只读**.\n   关闭所谓的 POSIX 权限，否则导致由 Cygwin 生成的文件权限紊乱\n-  设置环境变量，在 `~/.bashrc` 中写上\n   {% codeblock lang:bash %}\n   export PATH=/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/bin:/cygdrive/c/windows:/cygdrive/c/windows/system32\n   {% endcodeblock %}\n-  安装各种软件包，注意每次需通过 `-m` 来设置源（或者通过脚本或 `alias` 简化操作）。可用的 repo 有：\n   - [http://mirrors.neusoft.edu.cn/cygwin/](http://mirrors.neusoft.edu.cn/cygwin/)\n   - [http://mirrors.ustc.edu.cn/cygwin/](http://mirrors.ustc.edu.cn/cygwin/)\n   - [http://mirrors.aliyun.com/cygwin/](http://mirrors.aliyun.com/cygwin/)\n   - [http://mirrors.163.com/cygwin/](http://mirrors.163.com/cygwin/)\n\n   比如这种操作：\n   {% codeblock lang:bash %}\n   apt-cyg -m http://mirrors.aliyun.com/cygwin/ install vim\n   {% endcodeblock %}\n   - 有时即便指定了 repo，但无法下载包，可能提示找不到文件，但仔细浏览 repo 里面相应的软件包版本，发现版本号不正确，手动下载 `setup.ini`（或者下载 `setup.xz` 进行解压）覆盖掉 `/home/.aptcyg/<http%3a%2f%2fmirrors.foo>` 下的 `setup.ini` 即可。\n   - 有时无法直接通过 `apt-cyg install <pkg>` 来更新包，只好先 `remove` 再 `install`。\n   - 建议安装的包：\n     - busybox\n     - coreutils\n     - curl\n     - **libopenssl100**\n     - git\n     - wget\n     - vim\n     - gcc-core\n     - gcc-g++\n     - gcc-mingw-core\n     - gcc-mingw-g++\n     - make\n\n## 问题\n\n### SSH 代理问题\n\n让 Cygwin 中的 git 通过 [shadowsocks][shadowsocks] 代理。（假设代理端口为 1888）\n\n主要参考：[如何为 Git 设置代理？][sg-git]\n\n1. 建立 `socksssh`，`wrapper` 文件（假设在 `~/.ssh` 目录下建立）\n   {% codeblock sockssh lang:bash %}\n   #!/bin/sh\n   ssh -o ProxyCommand=\"/home/.ssh/wrapper %h %p\" \"$@\"\n   {% endcodeblock %}\n   {% codeblock wrapper lang:bash %}\n   #!/bin/sh\n   connect -S 127.0.0.1:1888 \"$@\"\n   {% endcodeblock %}\n1. 配置 Git：在 `~/.gitconfig` 文件中添加 / 修改内容：\n   {% codeblock lang:ini %}\n   [http]\n       proxy = socks5://127.0.0.1:1888\n   [https]\n       proxy = socks5://127.0.0.1:1888\n   [core]\n       gitproxy = /home/.ssh/wrapper\n   {% endcodeblock %}\n1. 编译或拷贝 `connect`。\n   - 项目地址：[https://bitbucket.org/gotoh/connect](https://bitbucket.org/gotoh/connect)\n   - 下载：    [https://bitbucket.org/gotoh/connect/downloads/](https://bitbucket.org/gotoh/connect/downloads/)\n   - 或直接：  [release][connect-release]\n   - 将 `connect.exe` 复制到 `/usr/local/bin` 目录下（确保该路径在 `$PATH` 中）\n1. 在 `~/.bashrc` 中加入\n   {% codeblock lang:bash %}\n   export GIT_SSH=/home/.ssh/socksssh\n   {% endcodeblock %}\n   重进 Moba.\n\n上面的 `wrapper` 文件中 `-S` 表示以 `socks` 方式进行代理，也可以改成 `-H` (http)，不过可能要相应更改 `~/.gitconfig` 中的 `proxy`。\n\n### git clone 出现 `X11 forwarding request failed on channel 0`\n\n关系不大，倒是恼人。将文件 `/etc/ssh_config` 中 `ForwardX11 yes` 改为 `ForwardX11 no` 即可。\n\n\n[gist-vim]: https://github.com/mattn/gist-vim\n[shadowsocks]: https://github.com/shadowsocks\n[sg-git]: https://segmentfault.com/q/1010000000118837\n[connect-release]: https://github.com/michaelHL/WinUtilities/raw/master/Shun_ichi_Goto.connect.zip\n","source":"_posts/configuration-of-cygwin-in-mobaxterm-and-issues-of-ssh-proxy.md","raw":"---\ntitle: Mobaxterm 折腾笔记\ndate: 2017-10-23 18:02:41\ntags:\n    - Mobaxterm\n    - SSH\n    - Cygwin\ncategories: Handy Utilities\n---\n\n虽然已经不用 Mobaxterm 作为日常工具了，但为缅怀以前折腾的那段时光，特此归档。\n\n<!-- more -->\n\n## 札记\n\n-  建议使用 10.0 版本的 Mobaxterm（下简称 Moba），10.2 版本的有少许问题，比如用 `apt-get` 或者 `apt-cyg` 不能用 `Ctrl-C` 停止，不能使用 [`gist-vim`][gist-vim] 插件，`git clone` 也出现各种不能名状的问题\n-  配置 `Persistent home directory` 以及 `Persistent root (/) directory`，个人的路径为 `F:\\WorkingDirectory\\Cygwin\\home`，`F:\\WorkingDirectory\\Cygwin`。关闭 Moba，修改 `/etc/fstab` 文件，加上行：\n   {% codeblock lang:bash %}\n   none /cygdrive cygdrive text,posix=0,noacl,user 0\n   {% endcodeblock %}\n   **并设置文件为只读**.\n   关闭所谓的 POSIX 权限，否则导致由 Cygwin 生成的文件权限紊乱\n-  设置环境变量，在 `~/.bashrc` 中写上\n   {% codeblock lang:bash %}\n   export PATH=/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/bin:/cygdrive/c/windows:/cygdrive/c/windows/system32\n   {% endcodeblock %}\n-  安装各种软件包，注意每次需通过 `-m` 来设置源（或者通过脚本或 `alias` 简化操作）。可用的 repo 有：\n   - [http://mirrors.neusoft.edu.cn/cygwin/](http://mirrors.neusoft.edu.cn/cygwin/)\n   - [http://mirrors.ustc.edu.cn/cygwin/](http://mirrors.ustc.edu.cn/cygwin/)\n   - [http://mirrors.aliyun.com/cygwin/](http://mirrors.aliyun.com/cygwin/)\n   - [http://mirrors.163.com/cygwin/](http://mirrors.163.com/cygwin/)\n\n   比如这种操作：\n   {% codeblock lang:bash %}\n   apt-cyg -m http://mirrors.aliyun.com/cygwin/ install vim\n   {% endcodeblock %}\n   - 有时即便指定了 repo，但无法下载包，可能提示找不到文件，但仔细浏览 repo 里面相应的软件包版本，发现版本号不正确，手动下载 `setup.ini`（或者下载 `setup.xz` 进行解压）覆盖掉 `/home/.aptcyg/<http%3a%2f%2fmirrors.foo>` 下的 `setup.ini` 即可。\n   - 有时无法直接通过 `apt-cyg install <pkg>` 来更新包，只好先 `remove` 再 `install`。\n   - 建议安装的包：\n     - busybox\n     - coreutils\n     - curl\n     - **libopenssl100**\n     - git\n     - wget\n     - vim\n     - gcc-core\n     - gcc-g++\n     - gcc-mingw-core\n     - gcc-mingw-g++\n     - make\n\n## 问题\n\n### SSH 代理问题\n\n让 Cygwin 中的 git 通过 [shadowsocks][shadowsocks] 代理。（假设代理端口为 1888）\n\n主要参考：[如何为 Git 设置代理？][sg-git]\n\n1. 建立 `socksssh`，`wrapper` 文件（假设在 `~/.ssh` 目录下建立）\n   {% codeblock sockssh lang:bash %}\n   #!/bin/sh\n   ssh -o ProxyCommand=\"/home/.ssh/wrapper %h %p\" \"$@\"\n   {% endcodeblock %}\n   {% codeblock wrapper lang:bash %}\n   #!/bin/sh\n   connect -S 127.0.0.1:1888 \"$@\"\n   {% endcodeblock %}\n1. 配置 Git：在 `~/.gitconfig` 文件中添加 / 修改内容：\n   {% codeblock lang:ini %}\n   [http]\n       proxy = socks5://127.0.0.1:1888\n   [https]\n       proxy = socks5://127.0.0.1:1888\n   [core]\n       gitproxy = /home/.ssh/wrapper\n   {% endcodeblock %}\n1. 编译或拷贝 `connect`。\n   - 项目地址：[https://bitbucket.org/gotoh/connect](https://bitbucket.org/gotoh/connect)\n   - 下载：    [https://bitbucket.org/gotoh/connect/downloads/](https://bitbucket.org/gotoh/connect/downloads/)\n   - 或直接：  [release][connect-release]\n   - 将 `connect.exe` 复制到 `/usr/local/bin` 目录下（确保该路径在 `$PATH` 中）\n1. 在 `~/.bashrc` 中加入\n   {% codeblock lang:bash %}\n   export GIT_SSH=/home/.ssh/socksssh\n   {% endcodeblock %}\n   重进 Moba.\n\n上面的 `wrapper` 文件中 `-S` 表示以 `socks` 方式进行代理，也可以改成 `-H` (http)，不过可能要相应更改 `~/.gitconfig` 中的 `proxy`。\n\n### git clone 出现 `X11 forwarding request failed on channel 0`\n\n关系不大，倒是恼人。将文件 `/etc/ssh_config` 中 `ForwardX11 yes` 改为 `ForwardX11 no` 即可。\n\n\n[gist-vim]: https://github.com/mattn/gist-vim\n[shadowsocks]: https://github.com/shadowsocks\n[sg-git]: https://segmentfault.com/q/1010000000118837\n[connect-release]: https://github.com/michaelHL/WinUtilities/raw/master/Shun_ichi_Goto.connect.zip\n","slug":"configuration-of-cygwin-in-mobaxterm-and-issues-of-ssh-proxy","published":1,"updated":"2023-03-09T16:09:38.206Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u335q0008p4x085m6am1i","content":"<p>虽然已经不用 Mobaxterm 作为日常工具了，但为缅怀以前折腾的那段时光，特此归档。</p>\r\n<a id=\"more\"></a>\r\n<h2 id=\"札记\">札记</h2>\r\n<ul>\r\n<li>建议使用 10.0 版本的 Mobaxterm（下简称 Moba），10.2 版本的有少许问题，比如用 <code>apt-get</code> 或者 <code>apt-cyg</code> 不能用 <code>Ctrl-C</code> 停止，不能使用 <a href=\"https://github.com/mattn/gist-vim\" target=\"_blank\" rel=\"noopener\"><code>gist-vim</code></a> 插件，<code>git clone</code> 也出现各种不能名状的问题</li>\r\n<li>配置 <code>Persistent home directory</code> 以及 <code>Persistent root (/) directory</code>，个人的路径为 <code>F:\\WorkingDirectory\\Cygwin\\home</code>，<code>F:\\WorkingDirectory\\Cygwin</code>。关闭 Moba，修改 <code>/etc/fstab</code> 文件，加上行： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">none /cygdrive cygdrive text,posix=0,noacl,user 0</span><br></pre></td></tr></table></figure> <strong>并设置文件为只读</strong>. 关闭所谓的 POSIX 权限，否则导致由 Cygwin 生成的文件权限紊乱</li>\r\n<li>设置环境变量，在 <code>~/.bashrc</code> 中写上 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> PATH=/usr/<span class=\"built_in\">local</span>/bin:/usr/bin:/usr/<span class=\"built_in\">local</span>/sbin:/usr/sbin:/bin:/cygdrive/c/windows:/cygdrive/c/windows/system32</span><br></pre></td></tr></table></figure></li>\r\n<li>安装各种软件包，注意每次需通过 <code>-m</code> 来设置源（或者通过脚本或 <code>alias</code> 简化操作）。可用的 repo 有：\r\n<ul>\r\n<li><a href=\"http://mirrors.neusoft.edu.cn/cygwin/\" target=\"_blank\" rel=\"noopener\">http://mirrors.neusoft.edu.cn/cygwin/</a></li>\r\n<li><a href=\"http://mirrors.ustc.edu.cn/cygwin/\" target=\"_blank\" rel=\"noopener\">http://mirrors.ustc.edu.cn/cygwin/</a></li>\r\n<li><a href=\"http://mirrors.aliyun.com/cygwin/\" target=\"_blank\" rel=\"noopener\">http://mirrors.aliyun.com/cygwin/</a></li>\r\n<li><a href=\"http://mirrors.163.com/cygwin/\" target=\"_blank\" rel=\"noopener\">http://mirrors.163.com/cygwin/</a></li>\r\n</ul>\r\n比如这种操作： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-cyg -m http://mirrors.aliyun.com/cygwin/ install vim</span><br></pre></td></tr></table></figure>\r\n<ul>\r\n<li>有时即便指定了 repo，但无法下载包，可能提示找不到文件，但仔细浏览 repo 里面相应的软件包版本，发现版本号不正确，手动下载 <code>setup.ini</code>（或者下载 <code>setup.xz</code> 进行解压）覆盖掉 <code>/home/.aptcyg/&lt;http%3a%2f%2fmirrors.foo&gt;</code> 下的 <code>setup.ini</code> 即可。</li>\r\n<li>有时无法直接通过 <code>apt-cyg install &lt;pkg&gt;</code> 来更新包，只好先 <code>remove</code> 再 <code>install</code>。</li>\r\n<li>建议安装的包：\r\n<ul>\r\n<li>busybox</li>\r\n<li>coreutils</li>\r\n<li>curl</li>\r\n<li><strong>libopenssl100</strong></li>\r\n<li>git</li>\r\n<li>wget</li>\r\n<li>vim</li>\r\n<li>gcc-core</li>\r\n<li>gcc-g++</li>\r\n<li>gcc-mingw-core</li>\r\n<li>gcc-mingw-g++</li>\r\n<li>make</li>\r\n</ul></li>\r\n</ul></li>\r\n</ul>\r\n<h2 id=\"问题\">问题</h2>\r\n<h3 id=\"ssh-代理问题\">SSH 代理问题</h3>\r\n<p>让 Cygwin 中的 git 通过 <a href=\"https://github.com/shadowsocks\" target=\"_blank\" rel=\"noopener\">shadowsocks</a> 代理。（假设代理端口为 1888）</p>\r\n<p>主要参考：<a href=\"https://segmentfault.com/q/1010000000118837\" target=\"_blank\" rel=\"noopener\">如何为 Git 设置代理？</a></p>\r\n<ol type=\"1\">\r\n<li>建立 <code>socksssh</code>，<code>wrapper</code> 文件（假设在 <code>~/.ssh</code> 目录下建立） <figure class=\"highlight bash\"><figcaption><span>sockssh</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/sh</span></span><br><span class=\"line\">ssh -o ProxyCommand=<span class=\"string\">\"/home/.ssh/wrapper %h %p\"</span> <span class=\"string\">\"<span class=\"variable\">$@</span>\"</span></span><br></pre></td></tr></table></figure> <figure class=\"highlight bash\"><figcaption><span>wrapper</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/sh</span></span><br><span class=\"line\">connect -S 127.0.0.1:1888 <span class=\"string\">\"<span class=\"variable\">$@</span>\"</span></span><br></pre></td></tr></table></figure></li>\r\n<li>配置 Git：在 <code>~/.gitconfig</code> 文件中添加 / 修改内容： <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[http]</span></span><br><span class=\"line\">    proxy = socks5://127.0.0.1:1888</span><br><span class=\"line\"><span class=\"section\">[https]</span></span><br><span class=\"line\">    proxy = socks5://127.0.0.1:1888</span><br><span class=\"line\"><span class=\"section\">[core]</span></span><br><span class=\"line\">    gitproxy = /home/.ssh/wrapper</span><br></pre></td></tr></table></figure></li>\r\n<li>编译或拷贝 <code>connect</code>。\r\n<ul>\r\n<li>项目地址：<a href=\"https://bitbucket.org/gotoh/connect\" target=\"_blank\" rel=\"noopener\">https://bitbucket.org/gotoh/connect</a></li>\r\n<li>下载： <a href=\"https://bitbucket.org/gotoh/connect/downloads/\" target=\"_blank\" rel=\"noopener\">https://bitbucket.org/gotoh/connect/downloads/</a></li>\r\n<li>或直接： <a href=\"https://github.com/michaelHL/WinUtilities/raw/master/Shun_ichi_Goto.connect.zip\" target=\"_blank\" rel=\"noopener\">release</a></li>\r\n<li>将 <code>connect.exe</code> 复制到 <code>/usr/local/bin</code> 目录下（确保该路径在 <code>$PATH</code> 中）</li>\r\n</ul></li>\r\n<li>在 <code>~/.bashrc</code> 中加入 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> GIT_SSH=/home/.ssh/socksssh</span><br></pre></td></tr></table></figure> 重进 Moba.</li>\r\n</ol>\r\n<p>上面的 <code>wrapper</code> 文件中 <code>-S</code> 表示以 <code>socks</code> 方式进行代理，也可以改成 <code>-H</code> (http)，不过可能要相应更改 <code>~/.gitconfig</code> 中的 <code>proxy</code>。</p>\r\n<h3 id=\"git-clone-出现-x11-forwarding-request-failed-on-channel-0\">git clone 出现 <code>X11 forwarding request failed on channel 0</code></h3>\r\n<p>关系不大，倒是恼人。将文件 <code>/etc/ssh_config</code> 中 <code>ForwardX11 yes</code> 改为 <code>ForwardX11 no</code> 即可。</p>\r\n","site":{"data":{}},"excerpt":"<p>虽然已经不用 Mobaxterm 作为日常工具了，但为缅怀以前折腾的那段时光，特此归档。</p>","more":"<h2 id=\"札记\">札记</h2>\r\n<ul>\r\n<li>建议使用 10.0 版本的 Mobaxterm（下简称 Moba），10.2 版本的有少许问题，比如用 <code>apt-get</code> 或者 <code>apt-cyg</code> 不能用 <code>Ctrl-C</code> 停止，不能使用 <a href=\"https://github.com/mattn/gist-vim\" target=\"_blank\" rel=\"noopener\"><code>gist-vim</code></a> 插件，<code>git clone</code> 也出现各种不能名状的问题</li>\r\n<li>配置 <code>Persistent home directory</code> 以及 <code>Persistent root (/) directory</code>，个人的路径为 <code>F:\\WorkingDirectory\\Cygwin\\home</code>，<code>F:\\WorkingDirectory\\Cygwin</code>。关闭 Moba，修改 <code>/etc/fstab</code> 文件，加上行： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">none /cygdrive cygdrive text,posix=0,noacl,user 0</span><br></pre></td></tr></table></figure> <strong>并设置文件为只读</strong>. 关闭所谓的 POSIX 权限，否则导致由 Cygwin 生成的文件权限紊乱</li>\r\n<li>设置环境变量，在 <code>~/.bashrc</code> 中写上 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> PATH=/usr/<span class=\"built_in\">local</span>/bin:/usr/bin:/usr/<span class=\"built_in\">local</span>/sbin:/usr/sbin:/bin:/cygdrive/c/windows:/cygdrive/c/windows/system32</span><br></pre></td></tr></table></figure></li>\r\n<li>安装各种软件包，注意每次需通过 <code>-m</code> 来设置源（或者通过脚本或 <code>alias</code> 简化操作）。可用的 repo 有：\r\n<ul>\r\n<li><a href=\"http://mirrors.neusoft.edu.cn/cygwin/\" target=\"_blank\" rel=\"noopener\">http://mirrors.neusoft.edu.cn/cygwin/</a></li>\r\n<li><a href=\"http://mirrors.ustc.edu.cn/cygwin/\" target=\"_blank\" rel=\"noopener\">http://mirrors.ustc.edu.cn/cygwin/</a></li>\r\n<li><a href=\"http://mirrors.aliyun.com/cygwin/\" target=\"_blank\" rel=\"noopener\">http://mirrors.aliyun.com/cygwin/</a></li>\r\n<li><a href=\"http://mirrors.163.com/cygwin/\" target=\"_blank\" rel=\"noopener\">http://mirrors.163.com/cygwin/</a></li>\r\n</ul>\r\n比如这种操作： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-cyg -m http://mirrors.aliyun.com/cygwin/ install vim</span><br></pre></td></tr></table></figure>\r\n<ul>\r\n<li>有时即便指定了 repo，但无法下载包，可能提示找不到文件，但仔细浏览 repo 里面相应的软件包版本，发现版本号不正确，手动下载 <code>setup.ini</code>（或者下载 <code>setup.xz</code> 进行解压）覆盖掉 <code>/home/.aptcyg/&lt;http%3a%2f%2fmirrors.foo&gt;</code> 下的 <code>setup.ini</code> 即可。</li>\r\n<li>有时无法直接通过 <code>apt-cyg install &lt;pkg&gt;</code> 来更新包，只好先 <code>remove</code> 再 <code>install</code>。</li>\r\n<li>建议安装的包：\r\n<ul>\r\n<li>busybox</li>\r\n<li>coreutils</li>\r\n<li>curl</li>\r\n<li><strong>libopenssl100</strong></li>\r\n<li>git</li>\r\n<li>wget</li>\r\n<li>vim</li>\r\n<li>gcc-core</li>\r\n<li>gcc-g++</li>\r\n<li>gcc-mingw-core</li>\r\n<li>gcc-mingw-g++</li>\r\n<li>make</li>\r\n</ul></li>\r\n</ul></li>\r\n</ul>\r\n<h2 id=\"问题\">问题</h2>\r\n<h3 id=\"ssh-代理问题\">SSH 代理问题</h3>\r\n<p>让 Cygwin 中的 git 通过 <a href=\"https://github.com/shadowsocks\" target=\"_blank\" rel=\"noopener\">shadowsocks</a> 代理。（假设代理端口为 1888）</p>\r\n<p>主要参考：<a href=\"https://segmentfault.com/q/1010000000118837\" target=\"_blank\" rel=\"noopener\">如何为 Git 设置代理？</a></p>\r\n<ol type=\"1\">\r\n<li>建立 <code>socksssh</code>，<code>wrapper</code> 文件（假设在 <code>~/.ssh</code> 目录下建立） <figure class=\"highlight bash\"><figcaption><span>sockssh</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/sh</span></span><br><span class=\"line\">ssh -o ProxyCommand=<span class=\"string\">\"/home/.ssh/wrapper %h %p\"</span> <span class=\"string\">\"<span class=\"variable\">$@</span>\"</span></span><br></pre></td></tr></table></figure> <figure class=\"highlight bash\"><figcaption><span>wrapper</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/sh</span></span><br><span class=\"line\">connect -S 127.0.0.1:1888 <span class=\"string\">\"<span class=\"variable\">$@</span>\"</span></span><br></pre></td></tr></table></figure></li>\r\n<li>配置 Git：在 <code>~/.gitconfig</code> 文件中添加 / 修改内容： <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[http]</span></span><br><span class=\"line\">    proxy = socks5://127.0.0.1:1888</span><br><span class=\"line\"><span class=\"section\">[https]</span></span><br><span class=\"line\">    proxy = socks5://127.0.0.1:1888</span><br><span class=\"line\"><span class=\"section\">[core]</span></span><br><span class=\"line\">    gitproxy = /home/.ssh/wrapper</span><br></pre></td></tr></table></figure></li>\r\n<li>编译或拷贝 <code>connect</code>。\r\n<ul>\r\n<li>项目地址：<a href=\"https://bitbucket.org/gotoh/connect\" target=\"_blank\" rel=\"noopener\">https://bitbucket.org/gotoh/connect</a></li>\r\n<li>下载： <a href=\"https://bitbucket.org/gotoh/connect/downloads/\" target=\"_blank\" rel=\"noopener\">https://bitbucket.org/gotoh/connect/downloads/</a></li>\r\n<li>或直接： <a href=\"https://github.com/michaelHL/WinUtilities/raw/master/Shun_ichi_Goto.connect.zip\" target=\"_blank\" rel=\"noopener\">release</a></li>\r\n<li>将 <code>connect.exe</code> 复制到 <code>/usr/local/bin</code> 目录下（确保该路径在 <code>$PATH</code> 中）</li>\r\n</ul></li>\r\n<li>在 <code>~/.bashrc</code> 中加入 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> GIT_SSH=/home/.ssh/socksssh</span><br></pre></td></tr></table></figure> 重进 Moba.</li>\r\n</ol>\r\n<p>上面的 <code>wrapper</code> 文件中 <code>-S</code> 表示以 <code>socks</code> 方式进行代理，也可以改成 <code>-H</code> (http)，不过可能要相应更改 <code>~/.gitconfig</code> 中的 <code>proxy</code>。</p>\r\n<h3 id=\"git-clone-出现-x11-forwarding-request-failed-on-channel-0\">git clone 出现 <code>X11 forwarding request failed on channel 0</code></h3>\r\n<p>关系不大，倒是恼人。将文件 <code>/etc/ssh_config</code> 中 <code>ForwardX11 yes</code> 改为 <code>ForwardX11 no</code> 即可。</p>"},{"title":"Java 核心技术学习笔记一","date":"2020-08-11T13:04:49.000Z","_content":"\n## 语法解析\n\n> Unicode 转义序列会在解析代码之前得到处理。例如，`\"\\u0022+\\u0022\"` 并不是一个由引号（U+0022）包围加号构成的字符串。实际上，`\\u0022` 会在解析之前转换为 `\"`，这回得到 `\"\"+\"\"`，也就是一个空串。\n\n<!-- more -->\n\n下面是利用简单的 Python 脚本对 Java 代码进行「转换」：\n\n```Python\ndef str_to_utf16(s, filt=None):\n    \"\"\"\n    字符串转 Java 风格 16 进制编码\n    \"\"\"\n\n    filt = filt if filt is not None else set('{}')\n    return ''.join([c if c in filt else char_to_utf16_expr(c) for c in s])\n\n\ndef char_to_utf16_expr(s):\n    \"\"\"\n    单个字符转 UTF-16-BE 编码（Java 风格，即 \\uhhhh）\n    \"\"\"\n\n    utf16 = ''\n    utf16_arr = list(bytes(s, 'utf-16-be'))\n\n    for i in range(len(utf16_arr) // 2):\n        utf16 += r'\\u' + ''.join(map('%02x'.__mod__, utf16_arr[2 * i:2 * (i + 1)]))\n\n    return utf16\n\n\nif __name__ == \"__main__\":\n    s = \"\"\"public class HelloWorld {\n    public static void main(String[] args) {\n        System.out.println(\"Fuck Java!😑\");\n        System.out.println(\"Meet Python😀!!!\");\n        System.out.println(\"\");\n        System.out.println(\"The Zen of Python, by Tim Peters\");\n        System.out.println(\"Beautiful is better than ugly.\");\n        System.out.println(\"Explicit is better than implicit.\");\n        System.out.println(\"Simple is better than complex.\");\n        System.out.println(\"Complex is better than complicated.\");\n        System.out.println(\"Flat is better than nested.\");\n        System.out.println(\"Sparse is better than dense.\");\n        System.out.println(\"Readability counts.\");\n        System.out.println(\"Special cases aren't special enough to break the rules.\");\n        System.out.println(\"Although practicality beats purity.\");\n        System.out.println(\"Errors should never pass silently.\");\n        System.out.println(\"Unless explicitly silenced.\");\n        System.out.println(\"In the face of ambiguity, refuse the temptation to guess.\");\n        System.out.println(\"There should be one-- and preferably only one --obvious way to do it.\");\n        System.out.println(\"Although that way may not be obvious at first unless you're Dutch.\");\n        System.out.println(\"Now is better than never.\");\n        System.out.println(\"Although never is often better than *right* now.\");\n        System.out.println(\"If the implementation is hard to explain, it's a bad idea.\");\n        System.out.println(\"If the implementation is easy to explain, it may be a good idea.\");\n        System.out.println(\"Namespaces are one honking great idea -- let's do more of those!\");\n    }\n}\"\"\"\n    print(str_to_utf16(s, '\\n'))\n```\n\n输出如下：\n\n```\n\\u0070\\u0075\\u0062\\u006c\\u0069\\u0063\\u0020\\u0063\\u006c\\u0061\\u0073\\u0073\\u0020\\u0048\\u0065\\u006c\\u006c\\u006f\\u0057\\u006f\\u0072\\u006c\\u0064\\u0020\\u007b\n\\u0020\\u0020\\u0020\\u0020\\u0070\\u0075\\u0062\\u006c\\u0069\\u0063\\u0020\\u0073\\u0074\\u0061\\u0074\\u0069\\u0063\\u0020\\u0076\\u006f\\u0069\\u0064\\u0020\\u006d\\u0061\\u0069\\u006e\\u0028\\u0053\\u0074\\u0072\\u0069\\u006e\\u0067\\u005b\\u005d\\u0020\\u0061\\u0072\\u0067\\u0073\\u0029\\u0020\\u007b\n\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0046\\u0075\\u0063\\u006b\\u0020\\u004a\\u0061\\u0076\\u0061\\u0021\\ud83d\\ude11\\u0022\\u0029\\u003b\n\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u004d\\u0065\\u0065\\u0074\\u0020\\u0050\\u0079\\u0074\\u0068\\u006f\\u006e\\ud83d\\ude00\\u0021\\u0021\\u0021\\u0022\\u0029\\u003b\n\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0022\\u0029\\u003b\n\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0054\\u0068\\u0065\\u0020\\u005a\\u0065\\u006e\\u0020\\u006f\\u0066\\u0020\\u0050\\u0079\\u0074\\u0068\\u006f\\u006e\\u002c\\u0020\\u0062\\u0079\\u0020\\u0054\\u0069\\u006d\\u0020\\u0050\\u0065\\u0074\\u0065\\u0072\\u0073\\u0022\\u0029\\u003b\n\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0042\\u0065\\u0061\\u0075\\u0074\\u0069\\u0066\\u0075\\u006c\\u0020\\u0069\\u0073\\u0020\\u0062\\u0065\\u0074\\u0074\\u0065\\u0072\\u0020\\u0074\\u0068\\u0061\\u006e\\u0020\\u0075\\u0067\\u006c\\u0079\\u002e\\u0022\\u0029\\u003b\n\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0045\\u0078\\u0070\\u006c\\u0069\\u0063\\u0069\\u0074\\u0020\\u0069\\u0073\\u0020\\u0062\\u0065\\u0074\\u0074\\u0065\\u0072\\u0020\\u0074\\u0068\\u0061\\u006e\\u0020\\u0069\\u006d\\u0070\\u006c\\u0069\\u0063\\u0069\\u0074\\u002e\\u0022\\u0029\\u003b\n\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0053\\u0069\\u006d\\u0070\\u006c\\u0065\\u0020\\u0069\\u0073\\u0020\\u0062\\u0065\\u0074\\u0074\\u0065\\u0072\\u0020\\u0074\\u0068\\u0061\\u006e\\u0020\\u0063\\u006f\\u006d\\u0070\\u006c\\u0065\\u0078\\u002e\\u0022\\u0029\\u003b\n\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0043\\u006f\\u006d\\u0070\\u006c\\u0065\\u0078\\u0020\\u0069\\u0073\\u0020\\u0062\\u0065\\u0074\\u0074\\u0065\\u0072\\u0020\\u0074\\u0068\\u0061\\u006e\\u0020\\u0063\\u006f\\u006d\\u0070\\u006c\\u0069\\u0063\\u0061\\u0074\\u0065\\u0064\\u002e\\u0022\\u0029\\u003b\n\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0046\\u006c\\u0061\\u0074\\u0020\\u0069\\u0073\\u0020\\u0062\\u0065\\u0074\\u0074\\u0065\\u0072\\u0020\\u0074\\u0068\\u0061\\u006e\\u0020\\u006e\\u0065\\u0073\\u0074\\u0065\\u0064\\u002e\\u0022\\u0029\\u003b\n\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0053\\u0070\\u0061\\u0072\\u0073\\u0065\\u0020\\u0069\\u0073\\u0020\\u0062\\u0065\\u0074\\u0074\\u0065\\u0072\\u0020\\u0074\\u0068\\u0061\\u006e\\u0020\\u0064\\u0065\\u006e\\u0073\\u0065\\u002e\\u0022\\u0029\\u003b\n\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0052\\u0065\\u0061\\u0064\\u0061\\u0062\\u0069\\u006c\\u0069\\u0074\\u0079\\u0020\\u0063\\u006f\\u0075\\u006e\\u0074\\u0073\\u002e\\u0022\\u0029\\u003b\n\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0053\\u0070\\u0065\\u0063\\u0069\\u0061\\u006c\\u0020\\u0063\\u0061\\u0073\\u0065\\u0073\\u0020\\u0061\\u0072\\u0065\\u006e\\u0027\\u0074\\u0020\\u0073\\u0070\\u0065\\u0063\\u0069\\u0061\\u006c\\u0020\\u0065\\u006e\\u006f\\u0075\\u0067\\u0068\\u0020\\u0074\\u006f\\u0020\\u0062\\u0072\\u0065\\u0061\\u006b\\u0020\\u0074\\u0068\\u0065\\u0020\\u0072\\u0075\\u006c\\u0065\\u0073\\u002e\\u0022\\u0029\\u003b\n\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0041\\u006c\\u0074\\u0068\\u006f\\u0075\\u0067\\u0068\\u0020\\u0070\\u0072\\u0061\\u0063\\u0074\\u0069\\u0063\\u0061\\u006c\\u0069\\u0074\\u0079\\u0020\\u0062\\u0065\\u0061\\u0074\\u0073\\u0020\\u0070\\u0075\\u0072\\u0069\\u0074\\u0079\\u002e\\u0022\\u0029\\u003b\n\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0045\\u0072\\u0072\\u006f\\u0072\\u0073\\u0020\\u0073\\u0068\\u006f\\u0075\\u006c\\u0064\\u0020\\u006e\\u0065\\u0076\\u0065\\u0072\\u0020\\u0070\\u0061\\u0073\\u0073\\u0020\\u0073\\u0069\\u006c\\u0065\\u006e\\u0074\\u006c\\u0079\\u002e\\u0022\\u0029\\u003b\n\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0055\\u006e\\u006c\\u0065\\u0073\\u0073\\u0020\\u0065\\u0078\\u0070\\u006c\\u0069\\u0063\\u0069\\u0074\\u006c\\u0079\\u0020\\u0073\\u0069\\u006c\\u0065\\u006e\\u0063\\u0065\\u0064\\u002e\\u0022\\u0029\\u003b\n\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0049\\u006e\\u0020\\u0074\\u0068\\u0065\\u0020\\u0066\\u0061\\u0063\\u0065\\u0020\\u006f\\u0066\\u0020\\u0061\\u006d\\u0062\\u0069\\u0067\\u0075\\u0069\\u0074\\u0079\\u002c\\u0020\\u0072\\u0065\\u0066\\u0075\\u0073\\u0065\\u0020\\u0074\\u0068\\u0065\\u0020\\u0074\\u0065\\u006d\\u0070\\u0074\\u0061\\u0074\\u0069\\u006f\\u006e\\u0020\\u0074\\u006f\\u0020\\u0067\\u0075\\u0065\\u0073\\u0073\\u002e\\u0022\\u0029\\u003b\n\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0054\\u0068\\u0065\\u0072\\u0065\\u0020\\u0073\\u0068\\u006f\\u0075\\u006c\\u0064\\u0020\\u0062\\u0065\\u0020\\u006f\\u006e\\u0065\\u002d\\u002d\\u0020\\u0061\\u006e\\u0064\\u0020\\u0070\\u0072\\u0065\\u0066\\u0065\\u0072\\u0061\\u0062\\u006c\\u0079\\u0020\\u006f\\u006e\\u006c\\u0079\\u0020\\u006f\\u006e\\u0065\\u0020\\u002d\\u002d\\u006f\\u0062\\u0076\\u0069\\u006f\\u0075\\u0073\\u0020\\u0077\\u0061\\u0079\\u0020\\u0074\\u006f\\u0020\\u0064\\u006f\\u0020\\u0069\\u0074\\u002e\\u0022\\u0029\\u003b\n\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0041\\u006c\\u0074\\u0068\\u006f\\u0075\\u0067\\u0068\\u0020\\u0074\\u0068\\u0061\\u0074\\u0020\\u0077\\u0061\\u0079\\u0020\\u006d\\u0061\\u0079\\u0020\\u006e\\u006f\\u0074\\u0020\\u0062\\u0065\\u0020\\u006f\\u0062\\u0076\\u0069\\u006f\\u0075\\u0073\\u0020\\u0061\\u0074\\u0020\\u0066\\u0069\\u0072\\u0073\\u0074\\u0020\\u0075\\u006e\\u006c\\u0065\\u0073\\u0073\\u0020\\u0079\\u006f\\u0075\\u0027\\u0072\\u0065\\u0020\\u0044\\u0075\\u0074\\u0063\\u0068\\u002e\\u0022\\u0029\\u003b\n\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u004e\\u006f\\u0077\\u0020\\u0069\\u0073\\u0020\\u0062\\u0065\\u0074\\u0074\\u0065\\u0072\\u0020\\u0074\\u0068\\u0061\\u006e\\u0020\\u006e\\u0065\\u0076\\u0065\\u0072\\u002e\\u0022\\u0029\\u003b\n\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0041\\u006c\\u0074\\u0068\\u006f\\u0075\\u0067\\u0068\\u0020\\u006e\\u0065\\u0076\\u0065\\u0072\\u0020\\u0069\\u0073\\u0020\\u006f\\u0066\\u0074\\u0065\\u006e\\u0020\\u0062\\u0065\\u0074\\u0074\\u0065\\u0072\\u0020\\u0074\\u0068\\u0061\\u006e\\u0020\\u002a\\u0072\\u0069\\u0067\\u0068\\u0074\\u002a\\u0020\\u006e\\u006f\\u0077\\u002e\\u0022\\u0029\\u003b\n\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0049\\u0066\\u0020\\u0074\\u0068\\u0065\\u0020\\u0069\\u006d\\u0070\\u006c\\u0065\\u006d\\u0065\\u006e\\u0074\\u0061\\u0074\\u0069\\u006f\\u006e\\u0020\\u0069\\u0073\\u0020\\u0068\\u0061\\u0072\\u0064\\u0020\\u0074\\u006f\\u0020\\u0065\\u0078\\u0070\\u006c\\u0061\\u0069\\u006e\\u002c\\u0020\\u0069\\u0074\\u0027\\u0073\\u0020\\u0061\\u0020\\u0062\\u0061\\u0064\\u0020\\u0069\\u0064\\u0065\\u0061\\u002e\\u0022\\u0029\\u003b\n\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0049\\u0066\\u0020\\u0074\\u0068\\u0065\\u0020\\u0069\\u006d\\u0070\\u006c\\u0065\\u006d\\u0065\\u006e\\u0074\\u0061\\u0074\\u0069\\u006f\\u006e\\u0020\\u0069\\u0073\\u0020\\u0065\\u0061\\u0073\\u0079\\u0020\\u0074\\u006f\\u0020\\u0065\\u0078\\u0070\\u006c\\u0061\\u0069\\u006e\\u002c\\u0020\\u0069\\u0074\\u0020\\u006d\\u0061\\u0079\\u0020\\u0062\\u0065\\u0020\\u0061\\u0020\\u0067\\u006f\\u006f\\u0064\\u0020\\u0069\\u0064\\u0065\\u0061\\u002e\\u0022\\u0029\\u003b\n\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u004e\\u0061\\u006d\\u0065\\u0073\\u0070\\u0061\\u0063\\u0065\\u0073\\u0020\\u0061\\u0072\\u0065\\u0020\\u006f\\u006e\\u0065\\u0020\\u0068\\u006f\\u006e\\u006b\\u0069\\u006e\\u0067\\u0020\\u0067\\u0072\\u0065\\u0061\\u0074\\u0020\\u0069\\u0064\\u0065\\u0061\\u0020\\u002d\\u002d\\u0020\\u006c\\u0065\\u0074\\u0027\\u0073\\u0020\\u0064\\u006f\\u0020\\u006d\\u006f\\u0072\\u0065\\u0020\\u006f\\u0066\\u0020\\u0074\\u0068\\u006f\\u0073\\u0065\\u0021\\u0022\\u0029\\u003b\n\\u0020\\u0020\\u0020\\u0020\\u007d\n\\u007d\n```\n\n上述代码在 Intellij Idea 中新建 Java 文件  `HelloWorld.java` 可正常编译运行。当然，除非是出于安全考虑（但还原成可读版代码并无难度），实际情况中不会有人写这样的代码。仅需关注该「特性」但可能导致一个陷阱：\n\n{% blockquote %}\n{% codeblock lang:Java %}\n// \\u00A0 is a newline\n{% endcodeblock %}\n会产生一个语法错误，程序会将 <code>\\u00A0</code> 替换为一个换行符。总之，<code>\\u</code> 在 Java 程序解析前进行转换。\n{% endblockquote %}\n\n## UTF-16 字符编码\n\n### 基本概念\n\n* 代码单元（Code Unit）：最小的数位组合，可以表示用于处理或交换的编码文本的单位。在 Unicode 标准中，UTF-8 编码格式采用 8 位编码单元，UTF-16 编码格式采用 16 位编码单元，UTF-32 编码格式采用 32 位编码单元\n* BMP 字符（BMP Character）：位于 BMP（Basic Multilingual Plane，多语种基本面）代码点的 Unicode 编码字符\n* BMP 代码点（BMP Code Point）：在 U+0000 到 U+FFFF 范围内的 Unicode 代码点\n* 补充字符（Supplementary Character）：位于补充代码点的 Unicode 编码字符\n* 补充代码点（Supplementary Code Point）：在 U+10000 到 U+10FFFF 范围内的 Unicode 代码点\n* 高代理项代码点（High-Surrogate Code Point）：在 U+D800 到 U+DBFF 范围内的 Unicode 代码点\n* 低代理项代码点（Low-Surrogate Code Point）：在 U+DC00 到 U+DFFF 范围内的 Unicode 代码点\n* 代理项对（Surrogate Pair）：由两个 16 位代码单元组成，其中第一个是高代理项代码单元，第二个是低代理项代码单元\n\n### 编码转换算法\n\n```\n0x10000 is subtracted from the code point (U), leaving a 20-bit number (U') in the hex number range 0x00000–0xFFFFF. Note for these purposes, U is defined to be no greater than 0x10FFFF.\nThe high ten bits (in the range 0x000–0x3FF) are added to 0xD800 to give the first 16-bit code unit or high surrogate (W1), which will be in the range 0xD800–0xDBFF.\nThe low ten bits (also in the range 0x000–0x3FF) are added to 0xDC00 to give the second 16-bit code unit or low surrogate (W2), which will be in the range 0xDC00–0xDFFF.\nIllustrated visually, the distribution of U' between W1 and W2 looks like:[13]\n\nU' = yyyyyyyyyyxxxxxxxxxx  // U - 0x10000\nW1 = 110110yyyyyyyyyy      // 0xD800 + yyyyyyyyyy\nW2 = 110111xxxxxxxxxx      // 0xDC00 + xxxxxxxxxx\nThe high surrogate and low surrogate are also known as \"leading\" and \"trailing\" surrogates, respectively, analogous to the leading and trailing bytes of UTF-8.\n```\n\n### Java 中的 UTF-16 编码\n\n> 在 Java 中，`char` 类型描述了 UTF-16 编码中的**一个**代码单元。\n\n一个代码单元用 16 位 / 2 字节 / 4 个 16 进制数表示，UTF-16 编码表示的字符由一个或一对代码单元表示。用一对代码单元表示的码点范围从 U+10000 到 U+10FFFF，高位代理项码点范围从 U+D800 到 U+DBFF，低代理项码点范围从 U+DC00 到 U+DFFF。\n\n<br>\n\n下面列举几个常用的代码单元 / 字符遍历相关的操作：\n\n| 作用            | 代码                                                                                       |\n| :--             | :--                                                                                        |\n| 代码单元数量    | {% codeblock lang:Java %}String greeting = \"Hello!😁\";\nint codeUnitCount = greeting.length(); // 8.\n{% endcodeblock %} |\n| 第 n 个代码单元 | {% codeblock lang:Java %}// n 的取值范围从 0 到 s.length() - 1\nchar nthChar = greeting.charAt(n);\n{% endcodeblock %} |\n| 码点数量        | {% codeblock lang:Java %}int cpCount = greeting.codePointCount(0, greeting.length()); // 7\n{% endcodeblock %} |\n| 第 i 个码点     | {% codeblock lang:Java %}// i 的取值范围从 0 到 cpCount - 1\nint index = greeting.offsetByCodePoints(0, i);\nint cp = greeting.codePointAt(index);\n{% endcodeblock %} |\n| 顺序遍历每个代码单元 | {% codeblock lang:Java %}int cp = greeting.codePointAt(index);\nindex += Character.isSupplementaryCodePoint(cp) ? 2 : 1;\n{% endcodeblock %} |\n| 逆序遍历每个代码单元 | {% codeblock lang:Java %}index--;\nif (Character.isLowSurrogate(greeting.charAt(index)))\n    index--;\n{% endcodeblock %} |\n| 字符串转为码点数组 | {% codeblock lang:Java %}int[] codePoints = greeting.codePoints().toArray();\n{% endcodeblock %} |\n| 码点数组转为字符串 | {% codeblock lang:Java %}String str = new String(codePoints, 0, codePoints.length);\n{% endcodeblock %} |\n\n完整测试代码：\n\n{% codeblock lang:Java Test.java %}\npublic class Test {\n    public static void main(String[] args) {\n        String greeting = \"Hello😁😁\";\n\n        // traverse through a string\n        System.out.println(\"Iteration:\");\n        int index = 0;\n        while (index < greeting.length()) {\n            int cp = greeting.codePointAt(index);\n            System.out.printf(\"%2d | %d -> %s\\n\", index, cp, new String(Character.toChars(cp)));\n            index += Character.isSupplementaryCodePoint(cp) ? 2 : 1;\n        }\n\n        // traverse inversely\n        System.out.println(\"Reverse:\");\n        index = greeting.length();\n        while (index > 0) {\n            index--;\n            if (Character.isLowSurrogate(greeting.charAt(index)))\n                index--;\n            int cp = greeting.codePointAt(index);\n            System.out.printf(\"%2d | %d -> %s\\n\", index, cp, new String(Character.toChars(cp)));\n        }\n\n        int[] codePoints = greeting.codePoints().toArray();\n        System.out.println(new String(codePoints, 0, codePoints.length));\n    }\n}\n\n/*\nIteration:\n 0 | 72 -> H\n 1 | 101 -> e\n 2 | 108 -> l\n 3 | 108 -> l\n 4 | 111 -> o\n 5 | 128513 -> 😁\n 7 | 128513 -> 😁\nReverse:\n 7 | 128513 -> 😁\n 5 | 128513 -> 😁\n 4 | 111 -> o\n 3 | 108 -> l\n 2 | 108 -> l\n 1 | 101 -> e\n 0 | 72 -> H\nHello😁😁\n*/\n{% endcodeblock %}\n","source":"_posts/corejava-learning-01.md","raw":"---\ntitle: Java 核心技术学习笔记一\ndate: 2020-08-11 21:04:49\ntags:\n    - Java\ncategories: Development\n---\n\n## 语法解析\n\n> Unicode 转义序列会在解析代码之前得到处理。例如，`\"\\u0022+\\u0022\"` 并不是一个由引号（U+0022）包围加号构成的字符串。实际上，`\\u0022` 会在解析之前转换为 `\"`，这回得到 `\"\"+\"\"`，也就是一个空串。\n\n<!-- more -->\n\n下面是利用简单的 Python 脚本对 Java 代码进行「转换」：\n\n```Python\ndef str_to_utf16(s, filt=None):\n    \"\"\"\n    字符串转 Java 风格 16 进制编码\n    \"\"\"\n\n    filt = filt if filt is not None else set('{}')\n    return ''.join([c if c in filt else char_to_utf16_expr(c) for c in s])\n\n\ndef char_to_utf16_expr(s):\n    \"\"\"\n    单个字符转 UTF-16-BE 编码（Java 风格，即 \\uhhhh）\n    \"\"\"\n\n    utf16 = ''\n    utf16_arr = list(bytes(s, 'utf-16-be'))\n\n    for i in range(len(utf16_arr) // 2):\n        utf16 += r'\\u' + ''.join(map('%02x'.__mod__, utf16_arr[2 * i:2 * (i + 1)]))\n\n    return utf16\n\n\nif __name__ == \"__main__\":\n    s = \"\"\"public class HelloWorld {\n    public static void main(String[] args) {\n        System.out.println(\"Fuck Java!😑\");\n        System.out.println(\"Meet Python😀!!!\");\n        System.out.println(\"\");\n        System.out.println(\"The Zen of Python, by Tim Peters\");\n        System.out.println(\"Beautiful is better than ugly.\");\n        System.out.println(\"Explicit is better than implicit.\");\n        System.out.println(\"Simple is better than complex.\");\n        System.out.println(\"Complex is better than complicated.\");\n        System.out.println(\"Flat is better than nested.\");\n        System.out.println(\"Sparse is better than dense.\");\n        System.out.println(\"Readability counts.\");\n        System.out.println(\"Special cases aren't special enough to break the rules.\");\n        System.out.println(\"Although practicality beats purity.\");\n        System.out.println(\"Errors should never pass silently.\");\n        System.out.println(\"Unless explicitly silenced.\");\n        System.out.println(\"In the face of ambiguity, refuse the temptation to guess.\");\n        System.out.println(\"There should be one-- and preferably only one --obvious way to do it.\");\n        System.out.println(\"Although that way may not be obvious at first unless you're Dutch.\");\n        System.out.println(\"Now is better than never.\");\n        System.out.println(\"Although never is often better than *right* now.\");\n        System.out.println(\"If the implementation is hard to explain, it's a bad idea.\");\n        System.out.println(\"If the implementation is easy to explain, it may be a good idea.\");\n        System.out.println(\"Namespaces are one honking great idea -- let's do more of those!\");\n    }\n}\"\"\"\n    print(str_to_utf16(s, '\\n'))\n```\n\n输出如下：\n\n```\n\\u0070\\u0075\\u0062\\u006c\\u0069\\u0063\\u0020\\u0063\\u006c\\u0061\\u0073\\u0073\\u0020\\u0048\\u0065\\u006c\\u006c\\u006f\\u0057\\u006f\\u0072\\u006c\\u0064\\u0020\\u007b\n\\u0020\\u0020\\u0020\\u0020\\u0070\\u0075\\u0062\\u006c\\u0069\\u0063\\u0020\\u0073\\u0074\\u0061\\u0074\\u0069\\u0063\\u0020\\u0076\\u006f\\u0069\\u0064\\u0020\\u006d\\u0061\\u0069\\u006e\\u0028\\u0053\\u0074\\u0072\\u0069\\u006e\\u0067\\u005b\\u005d\\u0020\\u0061\\u0072\\u0067\\u0073\\u0029\\u0020\\u007b\n\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0046\\u0075\\u0063\\u006b\\u0020\\u004a\\u0061\\u0076\\u0061\\u0021\\ud83d\\ude11\\u0022\\u0029\\u003b\n\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u004d\\u0065\\u0065\\u0074\\u0020\\u0050\\u0079\\u0074\\u0068\\u006f\\u006e\\ud83d\\ude00\\u0021\\u0021\\u0021\\u0022\\u0029\\u003b\n\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0022\\u0029\\u003b\n\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0054\\u0068\\u0065\\u0020\\u005a\\u0065\\u006e\\u0020\\u006f\\u0066\\u0020\\u0050\\u0079\\u0074\\u0068\\u006f\\u006e\\u002c\\u0020\\u0062\\u0079\\u0020\\u0054\\u0069\\u006d\\u0020\\u0050\\u0065\\u0074\\u0065\\u0072\\u0073\\u0022\\u0029\\u003b\n\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0042\\u0065\\u0061\\u0075\\u0074\\u0069\\u0066\\u0075\\u006c\\u0020\\u0069\\u0073\\u0020\\u0062\\u0065\\u0074\\u0074\\u0065\\u0072\\u0020\\u0074\\u0068\\u0061\\u006e\\u0020\\u0075\\u0067\\u006c\\u0079\\u002e\\u0022\\u0029\\u003b\n\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0045\\u0078\\u0070\\u006c\\u0069\\u0063\\u0069\\u0074\\u0020\\u0069\\u0073\\u0020\\u0062\\u0065\\u0074\\u0074\\u0065\\u0072\\u0020\\u0074\\u0068\\u0061\\u006e\\u0020\\u0069\\u006d\\u0070\\u006c\\u0069\\u0063\\u0069\\u0074\\u002e\\u0022\\u0029\\u003b\n\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0053\\u0069\\u006d\\u0070\\u006c\\u0065\\u0020\\u0069\\u0073\\u0020\\u0062\\u0065\\u0074\\u0074\\u0065\\u0072\\u0020\\u0074\\u0068\\u0061\\u006e\\u0020\\u0063\\u006f\\u006d\\u0070\\u006c\\u0065\\u0078\\u002e\\u0022\\u0029\\u003b\n\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0043\\u006f\\u006d\\u0070\\u006c\\u0065\\u0078\\u0020\\u0069\\u0073\\u0020\\u0062\\u0065\\u0074\\u0074\\u0065\\u0072\\u0020\\u0074\\u0068\\u0061\\u006e\\u0020\\u0063\\u006f\\u006d\\u0070\\u006c\\u0069\\u0063\\u0061\\u0074\\u0065\\u0064\\u002e\\u0022\\u0029\\u003b\n\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0046\\u006c\\u0061\\u0074\\u0020\\u0069\\u0073\\u0020\\u0062\\u0065\\u0074\\u0074\\u0065\\u0072\\u0020\\u0074\\u0068\\u0061\\u006e\\u0020\\u006e\\u0065\\u0073\\u0074\\u0065\\u0064\\u002e\\u0022\\u0029\\u003b\n\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0053\\u0070\\u0061\\u0072\\u0073\\u0065\\u0020\\u0069\\u0073\\u0020\\u0062\\u0065\\u0074\\u0074\\u0065\\u0072\\u0020\\u0074\\u0068\\u0061\\u006e\\u0020\\u0064\\u0065\\u006e\\u0073\\u0065\\u002e\\u0022\\u0029\\u003b\n\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0052\\u0065\\u0061\\u0064\\u0061\\u0062\\u0069\\u006c\\u0069\\u0074\\u0079\\u0020\\u0063\\u006f\\u0075\\u006e\\u0074\\u0073\\u002e\\u0022\\u0029\\u003b\n\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0053\\u0070\\u0065\\u0063\\u0069\\u0061\\u006c\\u0020\\u0063\\u0061\\u0073\\u0065\\u0073\\u0020\\u0061\\u0072\\u0065\\u006e\\u0027\\u0074\\u0020\\u0073\\u0070\\u0065\\u0063\\u0069\\u0061\\u006c\\u0020\\u0065\\u006e\\u006f\\u0075\\u0067\\u0068\\u0020\\u0074\\u006f\\u0020\\u0062\\u0072\\u0065\\u0061\\u006b\\u0020\\u0074\\u0068\\u0065\\u0020\\u0072\\u0075\\u006c\\u0065\\u0073\\u002e\\u0022\\u0029\\u003b\n\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0041\\u006c\\u0074\\u0068\\u006f\\u0075\\u0067\\u0068\\u0020\\u0070\\u0072\\u0061\\u0063\\u0074\\u0069\\u0063\\u0061\\u006c\\u0069\\u0074\\u0079\\u0020\\u0062\\u0065\\u0061\\u0074\\u0073\\u0020\\u0070\\u0075\\u0072\\u0069\\u0074\\u0079\\u002e\\u0022\\u0029\\u003b\n\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0045\\u0072\\u0072\\u006f\\u0072\\u0073\\u0020\\u0073\\u0068\\u006f\\u0075\\u006c\\u0064\\u0020\\u006e\\u0065\\u0076\\u0065\\u0072\\u0020\\u0070\\u0061\\u0073\\u0073\\u0020\\u0073\\u0069\\u006c\\u0065\\u006e\\u0074\\u006c\\u0079\\u002e\\u0022\\u0029\\u003b\n\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0055\\u006e\\u006c\\u0065\\u0073\\u0073\\u0020\\u0065\\u0078\\u0070\\u006c\\u0069\\u0063\\u0069\\u0074\\u006c\\u0079\\u0020\\u0073\\u0069\\u006c\\u0065\\u006e\\u0063\\u0065\\u0064\\u002e\\u0022\\u0029\\u003b\n\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0049\\u006e\\u0020\\u0074\\u0068\\u0065\\u0020\\u0066\\u0061\\u0063\\u0065\\u0020\\u006f\\u0066\\u0020\\u0061\\u006d\\u0062\\u0069\\u0067\\u0075\\u0069\\u0074\\u0079\\u002c\\u0020\\u0072\\u0065\\u0066\\u0075\\u0073\\u0065\\u0020\\u0074\\u0068\\u0065\\u0020\\u0074\\u0065\\u006d\\u0070\\u0074\\u0061\\u0074\\u0069\\u006f\\u006e\\u0020\\u0074\\u006f\\u0020\\u0067\\u0075\\u0065\\u0073\\u0073\\u002e\\u0022\\u0029\\u003b\n\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0054\\u0068\\u0065\\u0072\\u0065\\u0020\\u0073\\u0068\\u006f\\u0075\\u006c\\u0064\\u0020\\u0062\\u0065\\u0020\\u006f\\u006e\\u0065\\u002d\\u002d\\u0020\\u0061\\u006e\\u0064\\u0020\\u0070\\u0072\\u0065\\u0066\\u0065\\u0072\\u0061\\u0062\\u006c\\u0079\\u0020\\u006f\\u006e\\u006c\\u0079\\u0020\\u006f\\u006e\\u0065\\u0020\\u002d\\u002d\\u006f\\u0062\\u0076\\u0069\\u006f\\u0075\\u0073\\u0020\\u0077\\u0061\\u0079\\u0020\\u0074\\u006f\\u0020\\u0064\\u006f\\u0020\\u0069\\u0074\\u002e\\u0022\\u0029\\u003b\n\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0041\\u006c\\u0074\\u0068\\u006f\\u0075\\u0067\\u0068\\u0020\\u0074\\u0068\\u0061\\u0074\\u0020\\u0077\\u0061\\u0079\\u0020\\u006d\\u0061\\u0079\\u0020\\u006e\\u006f\\u0074\\u0020\\u0062\\u0065\\u0020\\u006f\\u0062\\u0076\\u0069\\u006f\\u0075\\u0073\\u0020\\u0061\\u0074\\u0020\\u0066\\u0069\\u0072\\u0073\\u0074\\u0020\\u0075\\u006e\\u006c\\u0065\\u0073\\u0073\\u0020\\u0079\\u006f\\u0075\\u0027\\u0072\\u0065\\u0020\\u0044\\u0075\\u0074\\u0063\\u0068\\u002e\\u0022\\u0029\\u003b\n\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u004e\\u006f\\u0077\\u0020\\u0069\\u0073\\u0020\\u0062\\u0065\\u0074\\u0074\\u0065\\u0072\\u0020\\u0074\\u0068\\u0061\\u006e\\u0020\\u006e\\u0065\\u0076\\u0065\\u0072\\u002e\\u0022\\u0029\\u003b\n\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0041\\u006c\\u0074\\u0068\\u006f\\u0075\\u0067\\u0068\\u0020\\u006e\\u0065\\u0076\\u0065\\u0072\\u0020\\u0069\\u0073\\u0020\\u006f\\u0066\\u0074\\u0065\\u006e\\u0020\\u0062\\u0065\\u0074\\u0074\\u0065\\u0072\\u0020\\u0074\\u0068\\u0061\\u006e\\u0020\\u002a\\u0072\\u0069\\u0067\\u0068\\u0074\\u002a\\u0020\\u006e\\u006f\\u0077\\u002e\\u0022\\u0029\\u003b\n\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0049\\u0066\\u0020\\u0074\\u0068\\u0065\\u0020\\u0069\\u006d\\u0070\\u006c\\u0065\\u006d\\u0065\\u006e\\u0074\\u0061\\u0074\\u0069\\u006f\\u006e\\u0020\\u0069\\u0073\\u0020\\u0068\\u0061\\u0072\\u0064\\u0020\\u0074\\u006f\\u0020\\u0065\\u0078\\u0070\\u006c\\u0061\\u0069\\u006e\\u002c\\u0020\\u0069\\u0074\\u0027\\u0073\\u0020\\u0061\\u0020\\u0062\\u0061\\u0064\\u0020\\u0069\\u0064\\u0065\\u0061\\u002e\\u0022\\u0029\\u003b\n\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0049\\u0066\\u0020\\u0074\\u0068\\u0065\\u0020\\u0069\\u006d\\u0070\\u006c\\u0065\\u006d\\u0065\\u006e\\u0074\\u0061\\u0074\\u0069\\u006f\\u006e\\u0020\\u0069\\u0073\\u0020\\u0065\\u0061\\u0073\\u0079\\u0020\\u0074\\u006f\\u0020\\u0065\\u0078\\u0070\\u006c\\u0061\\u0069\\u006e\\u002c\\u0020\\u0069\\u0074\\u0020\\u006d\\u0061\\u0079\\u0020\\u0062\\u0065\\u0020\\u0061\\u0020\\u0067\\u006f\\u006f\\u0064\\u0020\\u0069\\u0064\\u0065\\u0061\\u002e\\u0022\\u0029\\u003b\n\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u004e\\u0061\\u006d\\u0065\\u0073\\u0070\\u0061\\u0063\\u0065\\u0073\\u0020\\u0061\\u0072\\u0065\\u0020\\u006f\\u006e\\u0065\\u0020\\u0068\\u006f\\u006e\\u006b\\u0069\\u006e\\u0067\\u0020\\u0067\\u0072\\u0065\\u0061\\u0074\\u0020\\u0069\\u0064\\u0065\\u0061\\u0020\\u002d\\u002d\\u0020\\u006c\\u0065\\u0074\\u0027\\u0073\\u0020\\u0064\\u006f\\u0020\\u006d\\u006f\\u0072\\u0065\\u0020\\u006f\\u0066\\u0020\\u0074\\u0068\\u006f\\u0073\\u0065\\u0021\\u0022\\u0029\\u003b\n\\u0020\\u0020\\u0020\\u0020\\u007d\n\\u007d\n```\n\n上述代码在 Intellij Idea 中新建 Java 文件  `HelloWorld.java` 可正常编译运行。当然，除非是出于安全考虑（但还原成可读版代码并无难度），实际情况中不会有人写这样的代码。仅需关注该「特性」但可能导致一个陷阱：\n\n{% blockquote %}\n{% codeblock lang:Java %}\n// \\u00A0 is a newline\n{% endcodeblock %}\n会产生一个语法错误，程序会将 <code>\\u00A0</code> 替换为一个换行符。总之，<code>\\u</code> 在 Java 程序解析前进行转换。\n{% endblockquote %}\n\n## UTF-16 字符编码\n\n### 基本概念\n\n* 代码单元（Code Unit）：最小的数位组合，可以表示用于处理或交换的编码文本的单位。在 Unicode 标准中，UTF-8 编码格式采用 8 位编码单元，UTF-16 编码格式采用 16 位编码单元，UTF-32 编码格式采用 32 位编码单元\n* BMP 字符（BMP Character）：位于 BMP（Basic Multilingual Plane，多语种基本面）代码点的 Unicode 编码字符\n* BMP 代码点（BMP Code Point）：在 U+0000 到 U+FFFF 范围内的 Unicode 代码点\n* 补充字符（Supplementary Character）：位于补充代码点的 Unicode 编码字符\n* 补充代码点（Supplementary Code Point）：在 U+10000 到 U+10FFFF 范围内的 Unicode 代码点\n* 高代理项代码点（High-Surrogate Code Point）：在 U+D800 到 U+DBFF 范围内的 Unicode 代码点\n* 低代理项代码点（Low-Surrogate Code Point）：在 U+DC00 到 U+DFFF 范围内的 Unicode 代码点\n* 代理项对（Surrogate Pair）：由两个 16 位代码单元组成，其中第一个是高代理项代码单元，第二个是低代理项代码单元\n\n### 编码转换算法\n\n```\n0x10000 is subtracted from the code point (U), leaving a 20-bit number (U') in the hex number range 0x00000–0xFFFFF. Note for these purposes, U is defined to be no greater than 0x10FFFF.\nThe high ten bits (in the range 0x000–0x3FF) are added to 0xD800 to give the first 16-bit code unit or high surrogate (W1), which will be in the range 0xD800–0xDBFF.\nThe low ten bits (also in the range 0x000–0x3FF) are added to 0xDC00 to give the second 16-bit code unit or low surrogate (W2), which will be in the range 0xDC00–0xDFFF.\nIllustrated visually, the distribution of U' between W1 and W2 looks like:[13]\n\nU' = yyyyyyyyyyxxxxxxxxxx  // U - 0x10000\nW1 = 110110yyyyyyyyyy      // 0xD800 + yyyyyyyyyy\nW2 = 110111xxxxxxxxxx      // 0xDC00 + xxxxxxxxxx\nThe high surrogate and low surrogate are also known as \"leading\" and \"trailing\" surrogates, respectively, analogous to the leading and trailing bytes of UTF-8.\n```\n\n### Java 中的 UTF-16 编码\n\n> 在 Java 中，`char` 类型描述了 UTF-16 编码中的**一个**代码单元。\n\n一个代码单元用 16 位 / 2 字节 / 4 个 16 进制数表示，UTF-16 编码表示的字符由一个或一对代码单元表示。用一对代码单元表示的码点范围从 U+10000 到 U+10FFFF，高位代理项码点范围从 U+D800 到 U+DBFF，低代理项码点范围从 U+DC00 到 U+DFFF。\n\n<br>\n\n下面列举几个常用的代码单元 / 字符遍历相关的操作：\n\n| 作用            | 代码                                                                                       |\n| :--             | :--                                                                                        |\n| 代码单元数量    | {% codeblock lang:Java %}String greeting = \"Hello!😁\";\nint codeUnitCount = greeting.length(); // 8.\n{% endcodeblock %} |\n| 第 n 个代码单元 | {% codeblock lang:Java %}// n 的取值范围从 0 到 s.length() - 1\nchar nthChar = greeting.charAt(n);\n{% endcodeblock %} |\n| 码点数量        | {% codeblock lang:Java %}int cpCount = greeting.codePointCount(0, greeting.length()); // 7\n{% endcodeblock %} |\n| 第 i 个码点     | {% codeblock lang:Java %}// i 的取值范围从 0 到 cpCount - 1\nint index = greeting.offsetByCodePoints(0, i);\nint cp = greeting.codePointAt(index);\n{% endcodeblock %} |\n| 顺序遍历每个代码单元 | {% codeblock lang:Java %}int cp = greeting.codePointAt(index);\nindex += Character.isSupplementaryCodePoint(cp) ? 2 : 1;\n{% endcodeblock %} |\n| 逆序遍历每个代码单元 | {% codeblock lang:Java %}index--;\nif (Character.isLowSurrogate(greeting.charAt(index)))\n    index--;\n{% endcodeblock %} |\n| 字符串转为码点数组 | {% codeblock lang:Java %}int[] codePoints = greeting.codePoints().toArray();\n{% endcodeblock %} |\n| 码点数组转为字符串 | {% codeblock lang:Java %}String str = new String(codePoints, 0, codePoints.length);\n{% endcodeblock %} |\n\n完整测试代码：\n\n{% codeblock lang:Java Test.java %}\npublic class Test {\n    public static void main(String[] args) {\n        String greeting = \"Hello😁😁\";\n\n        // traverse through a string\n        System.out.println(\"Iteration:\");\n        int index = 0;\n        while (index < greeting.length()) {\n            int cp = greeting.codePointAt(index);\n            System.out.printf(\"%2d | %d -> %s\\n\", index, cp, new String(Character.toChars(cp)));\n            index += Character.isSupplementaryCodePoint(cp) ? 2 : 1;\n        }\n\n        // traverse inversely\n        System.out.println(\"Reverse:\");\n        index = greeting.length();\n        while (index > 0) {\n            index--;\n            if (Character.isLowSurrogate(greeting.charAt(index)))\n                index--;\n            int cp = greeting.codePointAt(index);\n            System.out.printf(\"%2d | %d -> %s\\n\", index, cp, new String(Character.toChars(cp)));\n        }\n\n        int[] codePoints = greeting.codePoints().toArray();\n        System.out.println(new String(codePoints, 0, codePoints.length));\n    }\n}\n\n/*\nIteration:\n 0 | 72 -> H\n 1 | 101 -> e\n 2 | 108 -> l\n 3 | 108 -> l\n 4 | 111 -> o\n 5 | 128513 -> 😁\n 7 | 128513 -> 😁\nReverse:\n 7 | 128513 -> 😁\n 5 | 128513 -> 😁\n 4 | 111 -> o\n 3 | 108 -> l\n 2 | 108 -> l\n 1 | 101 -> e\n 0 | 72 -> H\nHello😁😁\n*/\n{% endcodeblock %}\n","slug":"corejava-learning-01","published":1,"updated":"2023-03-09T16:14:05.900Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u335y000bp4x0td2pifwu","content":"<h2 id=\"语法解析\">语法解析</h2>\r\n<blockquote>\r\n<p>Unicode 转义序列会在解析代码之前得到处理。例如，<code>\"\\u0022+\\u0022\"</code> 并不是一个由引号（U+0022）包围加号构成的字符串。实际上，<code>\\u0022</code> 会在解析之前转换为 <code>\"</code>，这回得到 <code>\"\"+\"\"</code>，也就是一个空串。</p>\r\n</blockquote>\r\n<a id=\"more\"></a>\r\n<p>下面是利用简单的 Python 脚本对 Java 代码进行「转换」：</p>\r\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">str_to_utf16</span><span class=\"params\">(s, filt=None)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">    字符串转 Java 风格 16 进制编码</span></span><br><span class=\"line\"><span class=\"string\">    \"\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    filt = filt <span class=\"keyword\">if</span> filt <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"keyword\">None</span> <span class=\"keyword\">else</span> set(<span class=\"string\">'&#123;&#125;'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">''</span>.join([c <span class=\"keyword\">if</span> c <span class=\"keyword\">in</span> filt <span class=\"keyword\">else</span> char_to_utf16_expr(c) <span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> s])</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">char_to_utf16_expr</span><span class=\"params\">(s)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">    单个字符转 UTF-16-BE 编码（Java 风格，即 \\uhhhh）</span></span><br><span class=\"line\"><span class=\"string\">    \"\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    utf16 = <span class=\"string\">''</span></span><br><span class=\"line\">    utf16_arr = list(bytes(s, <span class=\"string\">'utf-16-be'</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(utf16_arr) // <span class=\"number\">2</span>):</span><br><span class=\"line\">        utf16 += <span class=\"string\">r'\\u'</span> + <span class=\"string\">''</span>.join(map(<span class=\"string\">'%02x'</span>.__mod__, utf16_arr[<span class=\"number\">2</span> * i:<span class=\"number\">2</span> * (i + <span class=\"number\">1</span>)]))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> utf16</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    s = <span class=\"string\">\"\"\"public class HelloWorld &#123;</span></span><br><span class=\"line\"><span class=\"string\">    public static void main(String[] args) &#123;</span></span><br><span class=\"line\"><span class=\"string\">        System.out.println(\"Fuck Java!😑\");</span></span><br><span class=\"line\"><span class=\"string\">        System.out.println(\"Meet Python😀!!!\");</span></span><br><span class=\"line\"><span class=\"string\">        System.out.println(\"\");</span></span><br><span class=\"line\"><span class=\"string\">        System.out.println(\"The Zen of Python, by Tim Peters\");</span></span><br><span class=\"line\"><span class=\"string\">        System.out.println(\"Beautiful is better than ugly.\");</span></span><br><span class=\"line\"><span class=\"string\">        System.out.println(\"Explicit is better than implicit.\");</span></span><br><span class=\"line\"><span class=\"string\">        System.out.println(\"Simple is better than complex.\");</span></span><br><span class=\"line\"><span class=\"string\">        System.out.println(\"Complex is better than complicated.\");</span></span><br><span class=\"line\"><span class=\"string\">        System.out.println(\"Flat is better than nested.\");</span></span><br><span class=\"line\"><span class=\"string\">        System.out.println(\"Sparse is better than dense.\");</span></span><br><span class=\"line\"><span class=\"string\">        System.out.println(\"Readability counts.\");</span></span><br><span class=\"line\"><span class=\"string\">        System.out.println(\"Special cases aren't special enough to break the rules.\");</span></span><br><span class=\"line\"><span class=\"string\">        System.out.println(\"Although practicality beats purity.\");</span></span><br><span class=\"line\"><span class=\"string\">        System.out.println(\"Errors should never pass silently.\");</span></span><br><span class=\"line\"><span class=\"string\">        System.out.println(\"Unless explicitly silenced.\");</span></span><br><span class=\"line\"><span class=\"string\">        System.out.println(\"In the face of ambiguity, refuse the temptation to guess.\");</span></span><br><span class=\"line\"><span class=\"string\">        System.out.println(\"There should be one-- and preferably only one --obvious way to do it.\");</span></span><br><span class=\"line\"><span class=\"string\">        System.out.println(\"Although that way may not be obvious at first unless you're Dutch.\");</span></span><br><span class=\"line\"><span class=\"string\">        System.out.println(\"Now is better than never.\");</span></span><br><span class=\"line\"><span class=\"string\">        System.out.println(\"Although never is often better than *right* now.\");</span></span><br><span class=\"line\"><span class=\"string\">        System.out.println(\"If the implementation is hard to explain, it's a bad idea.\");</span></span><br><span class=\"line\"><span class=\"string\">        System.out.println(\"If the implementation is easy to explain, it may be a good idea.\");</span></span><br><span class=\"line\"><span class=\"string\">        System.out.println(\"Namespaces are one honking great idea -- let's do more of those!\");</span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\">&#125;\"\"\"</span></span><br><span class=\"line\">    print(str_to_utf16(s, <span class=\"string\">'\\n'</span>))</span><br></pre></td></tr></table></figure>\r\n<p>输出如下：</p>\r\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\u0070\\u0075\\u0062\\u006c\\u0069\\u0063\\u0020\\u0063\\u006c\\u0061\\u0073\\u0073\\u0020\\u0048\\u0065\\u006c\\u006c\\u006f\\u0057\\u006f\\u0072\\u006c\\u0064\\u0020\\u007b</span><br><span class=\"line\">\\u0020\\u0020\\u0020\\u0020\\u0070\\u0075\\u0062\\u006c\\u0069\\u0063\\u0020\\u0073\\u0074\\u0061\\u0074\\u0069\\u0063\\u0020\\u0076\\u006f\\u0069\\u0064\\u0020\\u006d\\u0061\\u0069\\u006e\\u0028\\u0053\\u0074\\u0072\\u0069\\u006e\\u0067\\u005b\\u005d\\u0020\\u0061\\u0072\\u0067\\u0073\\u0029\\u0020\\u007b</span><br><span class=\"line\">\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0046\\u0075\\u0063\\u006b\\u0020\\u004a\\u0061\\u0076\\u0061\\u0021\\ud83d\\ude11\\u0022\\u0029\\u003b</span><br><span class=\"line\">\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u004d\\u0065\\u0065\\u0074\\u0020\\u0050\\u0079\\u0074\\u0068\\u006f\\u006e\\ud83d\\ude00\\u0021\\u0021\\u0021\\u0022\\u0029\\u003b</span><br><span class=\"line\">\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0022\\u0029\\u003b</span><br><span class=\"line\">\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0054\\u0068\\u0065\\u0020\\u005a\\u0065\\u006e\\u0020\\u006f\\u0066\\u0020\\u0050\\u0079\\u0074\\u0068\\u006f\\u006e\\u002c\\u0020\\u0062\\u0079\\u0020\\u0054\\u0069\\u006d\\u0020\\u0050\\u0065\\u0074\\u0065\\u0072\\u0073\\u0022\\u0029\\u003b</span><br><span class=\"line\">\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0042\\u0065\\u0061\\u0075\\u0074\\u0069\\u0066\\u0075\\u006c\\u0020\\u0069\\u0073\\u0020\\u0062\\u0065\\u0074\\u0074\\u0065\\u0072\\u0020\\u0074\\u0068\\u0061\\u006e\\u0020\\u0075\\u0067\\u006c\\u0079\\u002e\\u0022\\u0029\\u003b</span><br><span class=\"line\">\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0045\\u0078\\u0070\\u006c\\u0069\\u0063\\u0069\\u0074\\u0020\\u0069\\u0073\\u0020\\u0062\\u0065\\u0074\\u0074\\u0065\\u0072\\u0020\\u0074\\u0068\\u0061\\u006e\\u0020\\u0069\\u006d\\u0070\\u006c\\u0069\\u0063\\u0069\\u0074\\u002e\\u0022\\u0029\\u003b</span><br><span class=\"line\">\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0053\\u0069\\u006d\\u0070\\u006c\\u0065\\u0020\\u0069\\u0073\\u0020\\u0062\\u0065\\u0074\\u0074\\u0065\\u0072\\u0020\\u0074\\u0068\\u0061\\u006e\\u0020\\u0063\\u006f\\u006d\\u0070\\u006c\\u0065\\u0078\\u002e\\u0022\\u0029\\u003b</span><br><span class=\"line\">\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0043\\u006f\\u006d\\u0070\\u006c\\u0065\\u0078\\u0020\\u0069\\u0073\\u0020\\u0062\\u0065\\u0074\\u0074\\u0065\\u0072\\u0020\\u0074\\u0068\\u0061\\u006e\\u0020\\u0063\\u006f\\u006d\\u0070\\u006c\\u0069\\u0063\\u0061\\u0074\\u0065\\u0064\\u002e\\u0022\\u0029\\u003b</span><br><span class=\"line\">\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0046\\u006c\\u0061\\u0074\\u0020\\u0069\\u0073\\u0020\\u0062\\u0065\\u0074\\u0074\\u0065\\u0072\\u0020\\u0074\\u0068\\u0061\\u006e\\u0020\\u006e\\u0065\\u0073\\u0074\\u0065\\u0064\\u002e\\u0022\\u0029\\u003b</span><br><span class=\"line\">\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0053\\u0070\\u0061\\u0072\\u0073\\u0065\\u0020\\u0069\\u0073\\u0020\\u0062\\u0065\\u0074\\u0074\\u0065\\u0072\\u0020\\u0074\\u0068\\u0061\\u006e\\u0020\\u0064\\u0065\\u006e\\u0073\\u0065\\u002e\\u0022\\u0029\\u003b</span><br><span class=\"line\">\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0052\\u0065\\u0061\\u0064\\u0061\\u0062\\u0069\\u006c\\u0069\\u0074\\u0079\\u0020\\u0063\\u006f\\u0075\\u006e\\u0074\\u0073\\u002e\\u0022\\u0029\\u003b</span><br><span class=\"line\">\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0053\\u0070\\u0065\\u0063\\u0069\\u0061\\u006c\\u0020\\u0063\\u0061\\u0073\\u0065\\u0073\\u0020\\u0061\\u0072\\u0065\\u006e\\u0027\\u0074\\u0020\\u0073\\u0070\\u0065\\u0063\\u0069\\u0061\\u006c\\u0020\\u0065\\u006e\\u006f\\u0075\\u0067\\u0068\\u0020\\u0074\\u006f\\u0020\\u0062\\u0072\\u0065\\u0061\\u006b\\u0020\\u0074\\u0068\\u0065\\u0020\\u0072\\u0075\\u006c\\u0065\\u0073\\u002e\\u0022\\u0029\\u003b</span><br><span class=\"line\">\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0041\\u006c\\u0074\\u0068\\u006f\\u0075\\u0067\\u0068\\u0020\\u0070\\u0072\\u0061\\u0063\\u0074\\u0069\\u0063\\u0061\\u006c\\u0069\\u0074\\u0079\\u0020\\u0062\\u0065\\u0061\\u0074\\u0073\\u0020\\u0070\\u0075\\u0072\\u0069\\u0074\\u0079\\u002e\\u0022\\u0029\\u003b</span><br><span class=\"line\">\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0045\\u0072\\u0072\\u006f\\u0072\\u0073\\u0020\\u0073\\u0068\\u006f\\u0075\\u006c\\u0064\\u0020\\u006e\\u0065\\u0076\\u0065\\u0072\\u0020\\u0070\\u0061\\u0073\\u0073\\u0020\\u0073\\u0069\\u006c\\u0065\\u006e\\u0074\\u006c\\u0079\\u002e\\u0022\\u0029\\u003b</span><br><span class=\"line\">\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0055\\u006e\\u006c\\u0065\\u0073\\u0073\\u0020\\u0065\\u0078\\u0070\\u006c\\u0069\\u0063\\u0069\\u0074\\u006c\\u0079\\u0020\\u0073\\u0069\\u006c\\u0065\\u006e\\u0063\\u0065\\u0064\\u002e\\u0022\\u0029\\u003b</span><br><span class=\"line\">\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0049\\u006e\\u0020\\u0074\\u0068\\u0065\\u0020\\u0066\\u0061\\u0063\\u0065\\u0020\\u006f\\u0066\\u0020\\u0061\\u006d\\u0062\\u0069\\u0067\\u0075\\u0069\\u0074\\u0079\\u002c\\u0020\\u0072\\u0065\\u0066\\u0075\\u0073\\u0065\\u0020\\u0074\\u0068\\u0065\\u0020\\u0074\\u0065\\u006d\\u0070\\u0074\\u0061\\u0074\\u0069\\u006f\\u006e\\u0020\\u0074\\u006f\\u0020\\u0067\\u0075\\u0065\\u0073\\u0073\\u002e\\u0022\\u0029\\u003b</span><br><span class=\"line\">\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0054\\u0068\\u0065\\u0072\\u0065\\u0020\\u0073\\u0068\\u006f\\u0075\\u006c\\u0064\\u0020\\u0062\\u0065\\u0020\\u006f\\u006e\\u0065\\u002d\\u002d\\u0020\\u0061\\u006e\\u0064\\u0020\\u0070\\u0072\\u0065\\u0066\\u0065\\u0072\\u0061\\u0062\\u006c\\u0079\\u0020\\u006f\\u006e\\u006c\\u0079\\u0020\\u006f\\u006e\\u0065\\u0020\\u002d\\u002d\\u006f\\u0062\\u0076\\u0069\\u006f\\u0075\\u0073\\u0020\\u0077\\u0061\\u0079\\u0020\\u0074\\u006f\\u0020\\u0064\\u006f\\u0020\\u0069\\u0074\\u002e\\u0022\\u0029\\u003b</span><br><span class=\"line\">\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0041\\u006c\\u0074\\u0068\\u006f\\u0075\\u0067\\u0068\\u0020\\u0074\\u0068\\u0061\\u0074\\u0020\\u0077\\u0061\\u0079\\u0020\\u006d\\u0061\\u0079\\u0020\\u006e\\u006f\\u0074\\u0020\\u0062\\u0065\\u0020\\u006f\\u0062\\u0076\\u0069\\u006f\\u0075\\u0073\\u0020\\u0061\\u0074\\u0020\\u0066\\u0069\\u0072\\u0073\\u0074\\u0020\\u0075\\u006e\\u006c\\u0065\\u0073\\u0073\\u0020\\u0079\\u006f\\u0075\\u0027\\u0072\\u0065\\u0020\\u0044\\u0075\\u0074\\u0063\\u0068\\u002e\\u0022\\u0029\\u003b</span><br><span class=\"line\">\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u004e\\u006f\\u0077\\u0020\\u0069\\u0073\\u0020\\u0062\\u0065\\u0074\\u0074\\u0065\\u0072\\u0020\\u0074\\u0068\\u0061\\u006e\\u0020\\u006e\\u0065\\u0076\\u0065\\u0072\\u002e\\u0022\\u0029\\u003b</span><br><span class=\"line\">\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0041\\u006c\\u0074\\u0068\\u006f\\u0075\\u0067\\u0068\\u0020\\u006e\\u0065\\u0076\\u0065\\u0072\\u0020\\u0069\\u0073\\u0020\\u006f\\u0066\\u0074\\u0065\\u006e\\u0020\\u0062\\u0065\\u0074\\u0074\\u0065\\u0072\\u0020\\u0074\\u0068\\u0061\\u006e\\u0020\\u002a\\u0072\\u0069\\u0067\\u0068\\u0074\\u002a\\u0020\\u006e\\u006f\\u0077\\u002e\\u0022\\u0029\\u003b</span><br><span class=\"line\">\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0049\\u0066\\u0020\\u0074\\u0068\\u0065\\u0020\\u0069\\u006d\\u0070\\u006c\\u0065\\u006d\\u0065\\u006e\\u0074\\u0061\\u0074\\u0069\\u006f\\u006e\\u0020\\u0069\\u0073\\u0020\\u0068\\u0061\\u0072\\u0064\\u0020\\u0074\\u006f\\u0020\\u0065\\u0078\\u0070\\u006c\\u0061\\u0069\\u006e\\u002c\\u0020\\u0069\\u0074\\u0027\\u0073\\u0020\\u0061\\u0020\\u0062\\u0061\\u0064\\u0020\\u0069\\u0064\\u0065\\u0061\\u002e\\u0022\\u0029\\u003b</span><br><span class=\"line\">\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u0049\\u0066\\u0020\\u0074\\u0068\\u0065\\u0020\\u0069\\u006d\\u0070\\u006c\\u0065\\u006d\\u0065\\u006e\\u0074\\u0061\\u0074\\u0069\\u006f\\u006e\\u0020\\u0069\\u0073\\u0020\\u0065\\u0061\\u0073\\u0079\\u0020\\u0074\\u006f\\u0020\\u0065\\u0078\\u0070\\u006c\\u0061\\u0069\\u006e\\u002c\\u0020\\u0069\\u0074\\u0020\\u006d\\u0061\\u0079\\u0020\\u0062\\u0065\\u0020\\u0061\\u0020\\u0067\\u006f\\u006f\\u0064\\u0020\\u0069\\u0064\\u0065\\u0061\\u002e\\u0022\\u0029\\u003b</span><br><span class=\"line\">\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0022\\u004e\\u0061\\u006d\\u0065\\u0073\\u0070\\u0061\\u0063\\u0065\\u0073\\u0020\\u0061\\u0072\\u0065\\u0020\\u006f\\u006e\\u0065\\u0020\\u0068\\u006f\\u006e\\u006b\\u0069\\u006e\\u0067\\u0020\\u0067\\u0072\\u0065\\u0061\\u0074\\u0020\\u0069\\u0064\\u0065\\u0061\\u0020\\u002d\\u002d\\u0020\\u006c\\u0065\\u0074\\u0027\\u0073\\u0020\\u0064\\u006f\\u0020\\u006d\\u006f\\u0072\\u0065\\u0020\\u006f\\u0066\\u0020\\u0074\\u0068\\u006f\\u0073\\u0065\\u0021\\u0022\\u0029\\u003b</span><br><span class=\"line\">\\u0020\\u0020\\u0020\\u0020\\u007d</span><br><span class=\"line\">\\u007d</span><br></pre></td></tr></table></figure>\r\n<p>上述代码在 Intellij Idea 中新建 Java 文件 <code>HelloWorld.java</code> 可正常编译运行。当然，除非是出于安全考虑（但还原成可读版代码并无难度），实际情况中不会有人写这样的代码。仅需关注该「特性」但可能导致一个陷阱：</p>\r\n<blockquote><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// \\u00A0 is a newline</span></span><br></pre></td></tr></table></figure>\n会产生一个语法错误，程序会将 <code>\\u00A0</code> 替换为一个换行符。总之，<code>\\u</code> 在 Java 程序解析前进行转换。</blockquote>\r\n<h2 id=\"utf-16-字符编码\">UTF-16 字符编码</h2>\r\n<h3 id=\"基本概念\">基本概念</h3>\r\n<ul>\r\n<li>代码单元（Code Unit）：最小的数位组合，可以表示用于处理或交换的编码文本的单位。在 Unicode 标准中，UTF-8 编码格式采用 8 位编码单元，UTF-16 编码格式采用 16 位编码单元，UTF-32 编码格式采用 32 位编码单元</li>\r\n<li>BMP 字符（BMP Character）：位于 BMP（Basic Multilingual Plane，多语种基本面）代码点的 Unicode 编码字符</li>\r\n<li>BMP 代码点（BMP Code Point）：在 U+0000 到 U+FFFF 范围内的 Unicode 代码点</li>\r\n<li>补充字符（Supplementary Character）：位于补充代码点的 Unicode 编码字符</li>\r\n<li>补充代码点（Supplementary Code Point）：在 U+10000 到 U+10FFFF 范围内的 Unicode 代码点</li>\r\n<li>高代理项代码点（High-Surrogate Code Point）：在 U+D800 到 U+DBFF 范围内的 Unicode 代码点</li>\r\n<li>低代理项代码点（Low-Surrogate Code Point）：在 U+DC00 到 U+DFFF 范围内的 Unicode 代码点</li>\r\n<li>代理项对（Surrogate Pair）：由两个 16 位代码单元组成，其中第一个是高代理项代码单元，第二个是低代理项代码单元</li>\r\n</ul>\r\n<h3 id=\"编码转换算法\">编码转换算法</h3>\r\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0x10000 is subtracted from the code point (U), leaving a 20-bit number (U&apos;) in the hex number range 0x00000–0xFFFFF. Note for these purposes, U is defined to be no greater than 0x10FFFF.</span><br><span class=\"line\">The high ten bits (in the range 0x000–0x3FF) are added to 0xD800 to give the first 16-bit code unit or high surrogate (W1), which will be in the range 0xD800–0xDBFF.</span><br><span class=\"line\">The low ten bits (also in the range 0x000–0x3FF) are added to 0xDC00 to give the second 16-bit code unit or low surrogate (W2), which will be in the range 0xDC00–0xDFFF.</span><br><span class=\"line\">Illustrated visually, the distribution of U&apos; between W1 and W2 looks like:[13]</span><br><span class=\"line\"></span><br><span class=\"line\">U&apos; = yyyyyyyyyyxxxxxxxxxx  // U - 0x10000</span><br><span class=\"line\">W1 = 110110yyyyyyyyyy      // 0xD800 + yyyyyyyyyy</span><br><span class=\"line\">W2 = 110111xxxxxxxxxx      // 0xDC00 + xxxxxxxxxx</span><br><span class=\"line\">The high surrogate and low surrogate are also known as &quot;leading&quot; and &quot;trailing&quot; surrogates, respectively, analogous to the leading and trailing bytes of UTF-8.</span><br></pre></td></tr></table></figure>\r\n<h3 id=\"java-中的-utf-16-编码\">Java 中的 UTF-16 编码</h3>\r\n<blockquote>\r\n<p>在 Java 中，<code>char</code> 类型描述了 UTF-16 编码中的<strong>一个</strong>代码单元。</p>\r\n</blockquote>\r\n<p>一个代码单元用 16 位 / 2 字节 / 4 个 16 进制数表示，UTF-16 编码表示的字符由一个或一对代码单元表示。用一对代码单元表示的码点范围从 U+10000 到 U+10FFFF，高位代理项码点范围从 U+D800 到 U+DBFF，低代理项码点范围从 U+DC00 到 U+DFFF。</p>\r\n<p><br></p>\r\n<p>下面列举几个常用的代码单元 / 字符遍历相关的操作：</p>\r\n<table>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: left;\">作用</th>\r\n<th style=\"text-align: left;\">代码</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\">代码单元数量</td>\r\n<td style=\"text-align: left;\"><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String greeting = <span class=\"string\">\"Hello!😁\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> codeUnitCount = greeting.length(); <span class=\"comment\">// 8.</span></span><br></pre></td></tr></table></figure></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\">第 n 个代码单元</td>\r\n<td style=\"text-align: left;\"><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// n 的取值范围从 0 到 s.length() - 1</span></span><br><span class=\"line\"><span class=\"keyword\">char</span> nthChar = greeting.charAt(n);</span><br></pre></td></tr></table></figure></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\">码点数量</td>\r\n<td style=\"text-align: left;\"><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> cpCount = greeting.codePointCount(<span class=\"number\">0</span>, greeting.length()); <span class=\"comment\">// 7</span></span><br></pre></td></tr></table></figure></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\">第 i 个码点</td>\r\n<td style=\"text-align: left;\"><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// i 的取值范围从 0 到 cpCount - 1</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> index = greeting.offsetByCodePoints(<span class=\"number\">0</span>, i);</span><br><span class=\"line\"><span class=\"keyword\">int</span> cp = greeting.codePointAt(index);</span><br></pre></td></tr></table></figure></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\">顺序遍历每个代码单元</td>\r\n<td style=\"text-align: left;\"><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> cp = greeting.codePointAt(index);</span><br><span class=\"line\">index += Character.isSupplementaryCodePoint(cp) ? <span class=\"number\">2</span> : <span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\">逆序遍历每个代码单元</td>\r\n<td style=\"text-align: left;\"><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">index--;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (Character.isLowSurrogate(greeting.charAt(index)))</span><br><span class=\"line\">    index--;</span><br></pre></td></tr></table></figure></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\">字符串转为码点数组</td>\r\n<td style=\"text-align: left;\"><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span>[] codePoints = greeting.codePoints().toArray();</span><br></pre></td></tr></table></figure></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\">码点数组转为字符串</td>\r\n<td style=\"text-align: left;\"><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String str = <span class=\"keyword\">new</span> String(codePoints, <span class=\"number\">0</span>, codePoints.length);</span><br></pre></td></tr></table></figure></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p>完整测试代码：</p>\r\n<figure class=\"highlight java\"><figcaption><span>Test.java</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        String greeting = <span class=\"string\">\"Hello😁😁\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// traverse through a string</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"Iteration:\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> index = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (index &lt; greeting.length()) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> cp = greeting.codePointAt(index);</span><br><span class=\"line\">            System.out.printf(<span class=\"string\">\"%2d | %d -&gt; %s\\n\"</span>, index, cp, <span class=\"keyword\">new</span> String(Character.toChars(cp)));</span><br><span class=\"line\">            index += Character.isSupplementaryCodePoint(cp) ? <span class=\"number\">2</span> : <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// traverse inversely</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"Reverse:\"</span>);</span><br><span class=\"line\">        index = greeting.length();</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (index &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            index--;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (Character.isLowSurrogate(greeting.charAt(index)))</span><br><span class=\"line\">                index--;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> cp = greeting.codePointAt(index);</span><br><span class=\"line\">            System.out.printf(<span class=\"string\">\"%2d | %d -&gt; %s\\n\"</span>, index, cp, <span class=\"keyword\">new</span> String(Character.toChars(cp)));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] codePoints = greeting.codePoints().toArray();</span><br><span class=\"line\">        System.out.println(<span class=\"keyword\">new</span> String(codePoints, <span class=\"number\">0</span>, codePoints.length));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">Iteration:</span></span><br><span class=\"line\"><span class=\"comment\"> 0 | 72 -&gt; H</span></span><br><span class=\"line\"><span class=\"comment\"> 1 | 101 -&gt; e</span></span><br><span class=\"line\"><span class=\"comment\"> 2 | 108 -&gt; l</span></span><br><span class=\"line\"><span class=\"comment\"> 3 | 108 -&gt; l</span></span><br><span class=\"line\"><span class=\"comment\"> 4 | 111 -&gt; o</span></span><br><span class=\"line\"><span class=\"comment\"> 5 | 128513 -&gt; 😁</span></span><br><span class=\"line\"><span class=\"comment\"> 7 | 128513 -&gt; 😁</span></span><br><span class=\"line\"><span class=\"comment\">Reverse:</span></span><br><span class=\"line\"><span class=\"comment\"> 7 | 128513 -&gt; 😁</span></span><br><span class=\"line\"><span class=\"comment\"> 5 | 128513 -&gt; 😁</span></span><br><span class=\"line\"><span class=\"comment\"> 4 | 111 -&gt; o</span></span><br><span class=\"line\"><span class=\"comment\"> 3 | 108 -&gt; l</span></span><br><span class=\"line\"><span class=\"comment\"> 2 | 108 -&gt; l</span></span><br><span class=\"line\"><span class=\"comment\"> 1 | 101 -&gt; e</span></span><br><span class=\"line\"><span class=\"comment\"> 0 | 72 -&gt; H</span></span><br><span class=\"line\"><span class=\"comment\">Hello😁😁</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\r\n","site":{"data":{}},"excerpt":"<h2 id=\"语法解析\">语法解析</h2>\r\n<blockquote>\r\n<p>Unicode 转义序列会在解析代码之前得到处理。例如，<code>\"\\u0022+\\u0022\"</code> 并不是一个由引号（U+0022）包围加号构成的字符串。实际上，<code>\\u0022</code> 会在解析之前转换为 <code>\"</code>，这回得到 <code>\"\"+\"\"</code>，也就是一个空串。</p>\r\n</blockquote>","more":"<p>下面是利用简单的 Python 脚本对 Java 代码进行「转换」：</p>\r\n<!--�13-->\r\n<p>输出如下：</p>\r\n<!--�14-->\r\n<p>上述代码在 Intellij Idea 中新建 Java 文件 <code>HelloWorld.java</code> 可正常编译运行。当然，除非是出于安全考虑（但还原成可读版代码并无难度），实际情况中不会有人写这样的代码。仅需关注该「特性」但可能导致一个陷阱：</p>\r\n<blockquote><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// \\u00A0 is a newline</span></span><br></pre></td></tr></table></figure>\n会产生一个语法错误，程序会将 <code>\\u00A0</code> 替换为一个换行符。总之，<code>\\u</code> 在 Java 程序解析前进行转换。</blockquote>\r\n<h2 id=\"utf-16-字符编码\">UTF-16 字符编码</h2>\r\n<h3 id=\"基本概念\">基本概念</h3>\r\n<ul>\r\n<li>代码单元（Code Unit）：最小的数位组合，可以表示用于处理或交换的编码文本的单位。在 Unicode 标准中，UTF-8 编码格式采用 8 位编码单元，UTF-16 编码格式采用 16 位编码单元，UTF-32 编码格式采用 32 位编码单元</li>\r\n<li>BMP 字符（BMP Character）：位于 BMP（Basic Multilingual Plane，多语种基本面）代码点的 Unicode 编码字符</li>\r\n<li>BMP 代码点（BMP Code Point）：在 U+0000 到 U+FFFF 范围内的 Unicode 代码点</li>\r\n<li>补充字符（Supplementary Character）：位于补充代码点的 Unicode 编码字符</li>\r\n<li>补充代码点（Supplementary Code Point）：在 U+10000 到 U+10FFFF 范围内的 Unicode 代码点</li>\r\n<li>高代理项代码点（High-Surrogate Code Point）：在 U+D800 到 U+DBFF 范围内的 Unicode 代码点</li>\r\n<li>低代理项代码点（Low-Surrogate Code Point）：在 U+DC00 到 U+DFFF 范围内的 Unicode 代码点</li>\r\n<li>代理项对（Surrogate Pair）：由两个 16 位代码单元组成，其中第一个是高代理项代码单元，第二个是低代理项代码单元</li>\r\n</ul>\r\n<h3 id=\"编码转换算法\">编码转换算法</h3>\r\n<!--�15-->\r\n<h3 id=\"java-中的-utf-16-编码\">Java 中的 UTF-16 编码</h3>\r\n<blockquote>\r\n<p>在 Java 中，<code>char</code> 类型描述了 UTF-16 编码中的<strong>一个</strong>代码单元。</p>\r\n</blockquote>\r\n<p>一个代码单元用 16 位 / 2 字节 / 4 个 16 进制数表示，UTF-16 编码表示的字符由一个或一对代码单元表示。用一对代码单元表示的码点范围从 U+10000 到 U+10FFFF，高位代理项码点范围从 U+D800 到 U+DBFF，低代理项码点范围从 U+DC00 到 U+DFFF。</p>\r\n<p><br></p>\r\n<p>下面列举几个常用的代码单元 / 字符遍历相关的操作：</p>\r\n<table>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: left;\">作用</th>\r\n<th style=\"text-align: left;\">代码</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\">代码单元数量</td>\r\n<td style=\"text-align: left;\"><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String greeting = <span class=\"string\">\"Hello!😁\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> codeUnitCount = greeting.length(); <span class=\"comment\">// 8.</span></span><br></pre></td></tr></table></figure></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\">第 n 个代码单元</td>\r\n<td style=\"text-align: left;\"><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// n 的取值范围从 0 到 s.length() - 1</span></span><br><span class=\"line\"><span class=\"keyword\">char</span> nthChar = greeting.charAt(n);</span><br></pre></td></tr></table></figure></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\">码点数量</td>\r\n<td style=\"text-align: left;\"><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> cpCount = greeting.codePointCount(<span class=\"number\">0</span>, greeting.length()); <span class=\"comment\">// 7</span></span><br></pre></td></tr></table></figure></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\">第 i 个码点</td>\r\n<td style=\"text-align: left;\"><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// i 的取值范围从 0 到 cpCount - 1</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> index = greeting.offsetByCodePoints(<span class=\"number\">0</span>, i);</span><br><span class=\"line\"><span class=\"keyword\">int</span> cp = greeting.codePointAt(index);</span><br></pre></td></tr></table></figure></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\">顺序遍历每个代码单元</td>\r\n<td style=\"text-align: left;\"><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> cp = greeting.codePointAt(index);</span><br><span class=\"line\">index += Character.isSupplementaryCodePoint(cp) ? <span class=\"number\">2</span> : <span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\">逆序遍历每个代码单元</td>\r\n<td style=\"text-align: left;\"><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">index--;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (Character.isLowSurrogate(greeting.charAt(index)))</span><br><span class=\"line\">    index--;</span><br></pre></td></tr></table></figure></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\">字符串转为码点数组</td>\r\n<td style=\"text-align: left;\"><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span>[] codePoints = greeting.codePoints().toArray();</span><br></pre></td></tr></table></figure></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\">码点数组转为字符串</td>\r\n<td style=\"text-align: left;\"><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String str = <span class=\"keyword\">new</span> String(codePoints, <span class=\"number\">0</span>, codePoints.length);</span><br></pre></td></tr></table></figure></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p>完整测试代码：</p>\r\n<figure class=\"highlight java\"><figcaption><span>Test.java</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        String greeting = <span class=\"string\">\"Hello😁😁\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// traverse through a string</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"Iteration:\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> index = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (index &lt; greeting.length()) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> cp = greeting.codePointAt(index);</span><br><span class=\"line\">            System.out.printf(<span class=\"string\">\"%2d | %d -&gt; %s\\n\"</span>, index, cp, <span class=\"keyword\">new</span> String(Character.toChars(cp)));</span><br><span class=\"line\">            index += Character.isSupplementaryCodePoint(cp) ? <span class=\"number\">2</span> : <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// traverse inversely</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"Reverse:\"</span>);</span><br><span class=\"line\">        index = greeting.length();</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (index &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            index--;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (Character.isLowSurrogate(greeting.charAt(index)))</span><br><span class=\"line\">                index--;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> cp = greeting.codePointAt(index);</span><br><span class=\"line\">            System.out.printf(<span class=\"string\">\"%2d | %d -&gt; %s\\n\"</span>, index, cp, <span class=\"keyword\">new</span> String(Character.toChars(cp)));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] codePoints = greeting.codePoints().toArray();</span><br><span class=\"line\">        System.out.println(<span class=\"keyword\">new</span> String(codePoints, <span class=\"number\">0</span>, codePoints.length));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">Iteration:</span></span><br><span class=\"line\"><span class=\"comment\"> 0 | 72 -&gt; H</span></span><br><span class=\"line\"><span class=\"comment\"> 1 | 101 -&gt; e</span></span><br><span class=\"line\"><span class=\"comment\"> 2 | 108 -&gt; l</span></span><br><span class=\"line\"><span class=\"comment\"> 3 | 108 -&gt; l</span></span><br><span class=\"line\"><span class=\"comment\"> 4 | 111 -&gt; o</span></span><br><span class=\"line\"><span class=\"comment\"> 5 | 128513 -&gt; 😁</span></span><br><span class=\"line\"><span class=\"comment\"> 7 | 128513 -&gt; 😁</span></span><br><span class=\"line\"><span class=\"comment\">Reverse:</span></span><br><span class=\"line\"><span class=\"comment\"> 7 | 128513 -&gt; 😁</span></span><br><span class=\"line\"><span class=\"comment\"> 5 | 128513 -&gt; 😁</span></span><br><span class=\"line\"><span class=\"comment\"> 4 | 111 -&gt; o</span></span><br><span class=\"line\"><span class=\"comment\"> 3 | 108 -&gt; l</span></span><br><span class=\"line\"><span class=\"comment\"> 2 | 108 -&gt; l</span></span><br><span class=\"line\"><span class=\"comment\"> 1 | 101 -&gt; e</span></span><br><span class=\"line\"><span class=\"comment\"> 0 | 72 -&gt; H</span></span><br><span class=\"line\"><span class=\"comment\">Hello😁😁</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>"},{"title":"MSYS2 的日常操作","date":"2017-11-07T10:48:36.000Z","_content":"\n在自己的 Windows 10 系统上使用 [MSYS2][msys2] 已经有段时间了，Windows 上的类 \\*nix 工作环境简直不要太完美，办事效率杠杠的（如果没事少折腾的话）。为啥不用 Cygwin？因为很卡很慢，连 DUANG 的特效也拯救不了它，而且它的 POSIX 权限问题会把文件系统弄的一团糟。下面开始记录从刚开始的小白逐渐成为现在熟练使用的 ~~大牛~~ 大白的辛酸历程...\n\n<!-- more -->\n\n## MSYS2 安装与配置\n\n这里主要参考 [MSYS2开发环境搭建][csdn-48601775]。\n\n1. 下载 MSYS2 installer，建议安装路径不要包含空格（个人装在了 `D:\\MSYS2` 下）\n1. 安装完毕后，开始菜单中生成的三个快捷方式为：\n   {% codeblock lang:bash %}\n   MSYS2 MinGW 32-bit - D:\\MSYS2\\msys2_shell.cmd -mingw32\n   MSYS2 MinGW 64-bit - D:\\MSYS2\\msys2_shell.cmd -mingw64\n   MSYS2 MSYS         - D:\\MSYS2\\msys2_shell.cmd -msys\n   {% endcodeblock %}\n1. 修改软件源，修改 `/etc/pacman.d/` 目录下的三个文件，换上清华的 repo，`.msys`，`.mingw32`，`.mingw64` 分别对应 MSYS2 里的三套系统，分别在三个文件最上方填写（注意对应）：\n   {% codeblock lang:bash %}\n   Server = https://mirrors.tuna.tsinghua.edu.cn/msys2/msys/$arch\n   Server = https://mirrors.tuna.tsinghua.edu.cn/msys2/mingw/i686\n   Server = https://mirrors.tuna.tsinghua.edu.cn/msys2/mingw/x86_64\n   {% endcodeblock %}\n1. 任选一个（`mingw32.exe`，`mingw64.exe`，`msys2.exe`）进入 MSYS2 的终端，更新系统：\n   {% codeblock lang:bash %}\n   pacman -Syu\n   {% endcodeblock %}\n   提示需退出后更新, 强行关闭后重进, 再重复上述命令即可。\n   更新其他包:\n   {% codeblock lang:bash %}\n   pacman -Su\n   {% endcodeblock %}\n1. 安装开发工具链：\n   {% codeblock lang:bash %}\n   pacman -S base-devel\n   pacman -S gcc\n   pacman -S mingw-w64-x86_64-toolchain\n   pacman -S mingw-w64-i686-toolchain\n   pacman -S mingw64/mingw-w64-x86_64-clang\n   pacman -S mingw32/mingw-w64-i686-clang\n   {% endcodeblock %}\n1. 添加环境变量 `PATH`。由于个人 `PATH` 中存有 `Perl` 的开发工具路径，所以考虑将 MSYS2 的路径置于其后：\n   {% codeblock lang:bash %}\n   ...\n   \\Strawberry\\perl\\bin\n   \\Strawberry\\perl\\site\\bin\n   \\MSYS2\\usr\\bin\n   \\MSYS2\\mingw64\\bin\n   \\Strawberry\\c\\bin\n   ...\n   {% endcodeblock %}\n\n## 个性化设置\n\n### 自动挂载文件\n\n```plain /etc/fstab\n# For a description of the file format, see the Users Guide\n# http://cygwin.com/cygwin-ug-net/using.html#mount-table\n# DO NOT REMOVE NEXT LINE. It remove cygdrive prefix from path\nnone / cygdrive binary,posix=0,noacl,user 0 0\nC:\\Users\\xxx\\Desktop /desktop\nD:\\MSYS2\\home\\xxx\\Notes /notes\nF:\\WorkingDirectory\\Work\\__current /current\n```\n\n### 配置文件\n\n于个人 `home` 目录中，个性化各种配置：\n\n- 比如与 `mintty` 相关的配置：\n  {% fold .minttyrc %}\n  {% codeblock lang:ini .minttyrc %}\n  BoldAsFont=no\n  BoldAsColour=yes\n  BoldColour=255,255,128\n  Font=SauceCodePro NF\n  FontIsBold=no\n  FontHeight=10\n  RowSpacing=1\n  ShowHiddenFonts=yes\n  CursorColour=255,255,0\n  Transparency=high\n  Locale=en_US\n  Charset=UTF-8\n  BellType=0\n  CursorType=block\n  CursorBlinks=no\n  Term=xterm\n  Columns=135\n  Rows=35\n  CtrlShiftShortcuts=no\n  Scrollbar=none\n  ClicksTargetApp=yes\n  ForegroundColour=223,223,223\n  {% endcodeblock %}\n  {% endfold %}\n- 比如常用的 [`.bashrc`][bashrc-config]：\n  {% fold .bashrc %}\n  {% codeblock .bashrc lang:bash %}\n  # To the extent possible under law, the author(s) have dedicated all\n  # copyright and related and neighboring rights to this software to the\n  # public domain worldwide. This software is distributed without any warranty.\n  # You should have received a copy of the CC0 Public Domain Dedication along\n  # with this software.\n  # If not, see <http://creativecommons.org/publicdomain/zero/1.0/>.\n\n  # ~/.bashrc: executed by bash(1) for interactive shells.\n\n  # The copy in your home directory (~/.bashrc) is yours, please\n  # feel free to customise it to create a shell\n  # environment to your liking.  If you feel a change\n  # would be benifitial to all, please feel free to send\n  # a patch to the msys2 mailing list.\n\n  # User dependent .bashrc file\n\n  # If not running interactively, don't do anything\n  [[ \"$-\" != *i* ]] && return\n\n  # Shell Options\n  #\n  # See man bash for more options...\n  #\n  # Don't wait for job termination notification\n  # set -o notify\n  #\n  # Don't use ^D to exit\n  # set -o ignoreeof\n  #\n  # Use case-insensitive filename globbing\n  # shopt -s nocaseglob\n  #\n  # Make bash append rather than overwrite the history on disk\n  # shopt -s histappend\n  #\n  # When changing directory small typos can be ignored by bash\n  # for example, cd /vr/lgo/apaache would find /var/log/apache\n  # shopt -s cdspell\n\n  # Completion options\n  #\n  # These completion tuning parameters change the default behavior of bash_completion:\n  #\n  # Define to access remotely checked-out files over passwordless ssh for CVS\n  # COMP_CVS_REMOTE=1\n  #\n  # Define to avoid stripping description in --option=description of './configure --help'\n  # COMP_CONFIGURE_HINTS=1\n  #\n  # Define to avoid flattening internal contents of tar files\n  # COMP_TAR_INTERNAL_PATHS=1\n  #\n  # Uncomment to turn on programmable completion enhancements.\n  # Any completions you add in ~/.bash_completion are sourced last.\n  # [[ -f /etc/bash_completion ]] && . /etc/bash_completion\n\n  # History Options\n  #\n  # Don't put duplicate lines in the history.\n  # export HISTCONTROL=$HISTCONTROL${HISTCONTROL+,}ignoredups\n  #\n  # Ignore some controlling instructions\n  # HISTIGNORE is a colon-delimited list of patterns which should be excluded.\n  # The '&' is a special pattern which suppresses duplicate entries.\n  # export HISTIGNORE=$'[ \\t]*:&:[fb]g:exit'\n  # export HISTIGNORE=$'[ \\t]*:&:[fb]g:exit:ls' # Ignore the ls command as well\n  #\n  # Whenever displaying the prompt, write the previous line to disk\n  # export PROMPT_COMMAND=\"history -a\"\n\n  # Aliases\n  #\n  # Some people use a different file for aliases\n  # if [ -f \"${HOME}/.bash_aliases\" ]; then\n  #   source \"${HOME}/.bash_aliases\"\n  # fi\n  #\n  # Some example alias instructions\n  # If these are enabled they will be used instead of any instructions\n  # they may mask.  For example, alias rm='rm -i' will mask the rm\n  # application.  To override the alias instruction use a \\ before, ie\n  # \\rm will call the real rm not the alias.\n  #\n  # Interactive operation...\n  # alias rm='rm -i'\n  # alias cp='cp -i'\n  # alias mv='mv -i'\n  #\n  # Default to human readable figures\n  alias df='df -h'\n  alias du='du -h'\n  #\n  # Misc :)\n  alias less='less -r'                          # raw control characters\n  alias whence='type -a'                        # where, of a sort\n  alias grep='grep --color'                     # show differences in colour\n  alias egrep='egrep --color=auto'              # show differences in colour\n  alias fgrep='fgrep --color=auto'              # show differences in colour\n  #\n  # Some shortcuts for different directory listings\n  alias ls='ls -hF --color=tty'                 # classify files in colour\n  alias dir='ls --color=auto --format=vertical'\n  alias vdir='ls --color=auto --format=long'\n  alias ll='ls -l'                              # long list\n  alias la='ls -A'                              # all but . and ..\n  alias l='ls -CF'                              #\n  alias hexopull='cd ~/Hexo && git fetch --all && git reset --hard origin/master && git pull'\n  alias hexopush='cd ~/Hexo && hexo clean && hexo g -d && git add -A && git commit -m \"update\" && git push origin master'\n  alias algpull='cd ~/alg && git fetch --all && git reset --hard origin/master && git pull'\n  alias algpush='cd ~/alg && hexo clean && hexo g -d && git add -A && git commit -m \"update\" && git push origin master'\n  alias hexodebug='hexo clean && hexo g && hexo s --debug'\n\n  # Umask\n  #\n  # /etc/profile sets 022, removing write perms to group + others.\n  # Set a more restrictive umask: i.e. no exec perms for others:\n  # umask 027\n  # Paranoid: neither group nor others have any perms:\n  # umask 077\n\n  # Functions\n  #\n  # Some people use a different file for functions\n  # if [ -f \"${HOME}/.bash_functions\" ]; then\n  #   source \"${HOME}/.bash_functions\"\n  # fi\n  #\n  # Some example functions:\n  #\n  # a) function settitle\n  # settitle ()\n  # {\n  #   echo -ne \"\\e]2;$@\\a\\e]1;$@\\a\";\n  # }\n  #\n  # b) function cd_func\n  # This function defines a 'cd' replacement function capable of keeping,\n  # displaying and accessing history of visited directories, up to 10 entries.\n  # To use it, uncomment it, source this file and try 'cd --'.\n  # acd_func 1.0.5, 10-nov-2004\n  # Petar Marinov, http:/geocities.com/h2428, this is public domain\n  # cd_func ()\n  # {\n  #   local x2 the_new_dir adir index\n  #   local -i cnt\n  #\n  #   if [[ $1 ==  \"--\" ]]; then\n  #     dirs -v\n  #     return 0\n  #   fi\n  #\n  #   the_new_dir=$1\n  #   [[ -z $1 ]] && the_new_dir=$HOME\n  #\n  #   if [[ ${the_new_dir:0:1} == '-' ]]; then\n  #     #\n  #     # Extract dir N from dirs\n  #     index=${the_new_dir:1}\n  #     [[ -z $index ]] && index=1\n  #     adir=$(dirs +$index)\n  #     [[ -z $adir ]] && return 1\n  #     the_new_dir=$adir\n  #   fi\n  #\n  #   #\n  #   # '~' has to be substituted by ${HOME}\n  #   [[ ${the_new_dir:0:1} == '~' ]] && the_new_dir=\"${HOME}${the_new_dir:1}\"\n  #\n  #   #\n  #   # Now change to the new dir and add to the top of the stack\n  #   pushd \"${the_new_dir}\" > /dev/null\n  #   [[ $? -ne 0 ]] && return 1\n  #   the_new_dir=$(pwd)\n  #\n  #   #\n  #   # Trim down everything beyond 11th entry\n  #   popd -n +11 2>/dev/null 1>/dev/null\n  #\n  #   #\n  #   # Remove any other occurence of this dir, skipping the top of the stack\n  #   for ((cnt=1; cnt <= 10; cnt++)); do\n  #     x2=$(dirs +${cnt} 2>/dev/null)\n  #     [[ $? -ne 0 ]] && return 0\n  #     [[ ${x2:0:1} == '~' ]] && x2=\"${HOME}${x2:1}\"\n  #     if [[ \"${x2}\" == \"${the_new_dir}\" ]]; then\n  #       popd -n +$cnt 2>/dev/null 1>/dev/null\n  #       cnt=cnt-1\n  #     fi\n  #   done\n  #\n  #   return 0\n  # }\n  #\n  # alias cd=cd_func\n\n  alias grep='grep --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn}'\n  alias e=explorer\n  alias giturl='curl -i https://git.io -F'\n  alias poweroff='(shutdown -s -t 0 &); (net stop autossh_5679 &);'\n  alias reboot='(shutdown -r -t 0 &); (net stop autossh_5679 &);'\n  # alias uptime='net stats server | grep -P -o \"[\\d/]+.*M$\" --color=never'\n  alias lcd='/e/UtilityPrograms/_exe/TurnOffLCD.exe'\n  # alias pb='~/App/pastebinit/pastebinit -b http://paste.ubuntu.com'\n  # alias pb='~/App/pastebinit/pastebinit -b http://paste.ubuntu.org.cn'\n  alias wolfram='winpty /e/Mathematica/11.1/wolfram'\n  alias loginpc='cygrunsrv -S autossh_5679'\n  alias viz='vim `which z`'\n  alias memopull='cd ~/memos && git fetch --all && git reset --hard origin/master && git pull'\n  alias memopush='cd ~/memos && hexo clean && hexo g -d && git add -A && git commit -m \"update\" && git push origin master'\n\n  HISTTIMEFORMAT='%F %T '\n  HISTCONTROL=erasedups\n  HISTIGNORE=\"ls:pwd:cd:clear:vim:fg:bg:jobs:top:htop\"\n\n  export LESS_TERMCAP_mb=$(printf '\\e[01;31m') # enter blinking mode - red\n  export LESS_TERMCAP_md=$(printf '\\e[01;35m') # enter double-bright mode - bold, magenta\n  export LESS_TERMCAP_me=$(printf '\\e[0m') # turn off all appearance modes (mb, md, so, us)\n  export LESS_TERMCAP_se=$(printf '\\e[0m') # leave standout mode\n  export LESS_TERMCAP_so=$(printf '\\e[01;33m') # enter standout mode - yellow\n  export LESS_TERMCAP_ue=$(printf '\\e[0m') # leave underline mode\n  export LESS_TERMCAP_us=$(printf '\\e[04;36m') # enter underline mode - cyan\n\n  # export http_proxy=\"http://192.168.1.102:1888/\"\n  # export https_proxy=\"https://192.168.1.102:1888/\"\n  # export ftp_proxy=\"ftp://192.168.1.102:1888/\"\n\n  # export PS1=\"[\\[\\e[01;33m\\]foo\\[\\e[37;40m\\]@\\[\\e[34;40m\\]PHANTOM \\[\\e[37;40m\\]\\t \\[\\e[34;40m\\]\\W\\[\\e[0m\\]]$ \"\n  export PS1=\"[ \\[\\e[37;40m\\]\\t \\[\\e[34;40m\\]\\W\\[\\e[0m\\] ]$ \"\n  export GTAGSLIBPATH=$GTAGSLIBPATH:/usr/include/\n  export HISTFILESIZE=50000\n  export HISTSIZE=50000\n\n  export PATH=$PATH:~/App/bin\n  export PATH=$PATH:/e/Nodejs\n  export PATH=$PATH:/c/Users/Liang/AppData/Roaming/npm\n  export PATH=$PATH:/e/MySQL/bin\n  export PATH=$PATH:/d/Java/jdk-10/bin\n  export PATH=$PATH:/f/WorkingDirectory/Bin\n  export PATH=$PATH:/e/TexLive/2018/bin/win32\n  export PATH=$PATH:/e/R/bin/x64\n  export PATH=$PATH:/f/WorkingDirectory/Bin\n  export PATH=$PATH:/c/Users/Liang/AppData/Roaming/local/bin\n\n  # STACK_ROOT=/f/HaskellStack\n  {% endcodeblock %}\n  {% endfold %}\n- 比如 Git 需要代理:\n  {% fold .gitconfig %}\n  {% codeblock .gitconfig lang:ini %}\n  [user]\n      name = michaelHL\n      email = lbgnmic@gmail.com\n  [github]\n      user = michaelHL\n  [http]\n      proxy = socks5://127.0.0.1:1888\n  {% endcodeblock %}\n  {% endfold %}\n- 比如忽略大小写的 `.inputrc`：\n  {% fold .inputrc %}\n  {% codeblock .inputrc lang:bash %}\n  # To the extent possible under law, the author(s) have dedicated all \n  # copyright and related and neighboring rights to this software to the \n  # public domain worldwide. This software is distributed without any warranty. \n  # You should have received a copy of the CC0 Public Domain Dedication along \n  # with this software. \n  # If not, see <http://creativecommons.org/publicdomain/zero/1.0/>. \n\n  # ~/.inputrc: readline initialization file.\n\n  # The copy in your home directory (~/.inputrc) is yours, please\n  # feel free to customise it to create a shell\n  # environment to your liking.  If you feel a change\n  # would be benifitial to all, please feel free to send\n  # a patch to the msys2 mailing list.\n\n  # the following line is actually\n  # equivalent to \"\\C-?\": delete-char\n  # \"\\e[3~\": delete-char\n\n  # VT\n  # \"\\e[1~\": beginning-of-line\n  # \"\\e[4~\": end-of-line\n\n  # kvt\n  # \"\\e[H\": beginning-of-line\n  # \"\\e[F\": end-of-line\n\n  # rxvt and konsole (i.e. the KDE-app...)\n  # \"\\e[7~\": beginning-of-line\n  # \"\\e[8~\": end-of-line\n\n  # VT220\n  # \"\\eOH\": beginning-of-line\n  # \"\\eOF\": end-of-line\n\n  # Allow 8-bit input/output\n  # set meta-flag on\n  # set convert-meta off\n  # set input-meta on\n  # set output-meta on\n  #$if Bash\n    # Don't ring bell on completion\n    set bell-style none\n\n    # or, don't beep at me - show me\n    #set bell-style visible\n\n    # Show all instead of beeping first\n    set show-all-if-ambiguous off\n\n    # Filename completion/expansion\n    set completion-ignore-case on\n    #set show-all-if-ambiguous on\n\n    # Expand homedir name\n    #set expand-tilde on\n\n    # Append \"/\" to all dirnames\n    #set mark-directories on\n    #set mark-symlinked-directories on\n\n    # visible-stats\n    # Append a mark according to the file type in a listing\n    set visible-stats off\n    set mark-directories on\n\n    # Match all files\n    #set match-hidden-files on\n\n    # 'Magic Space'\n    # Insert a space character then performs\n    # a history expansion in the line\n    #Space: magic-space\n  #$endif\n\n  # MSYSTEM is emacs based\n  $if mode=emacs\n    # Common to Console & RXVT\n    \"\\C-?\": backward-kill-line         # Ctrl-BackSpace\n    \"\\e[2~\": paste-from-clipboard      # \"Ins. Key\"\n    \"\\e[5~\": beginning-of-history      # Page up\n    \"\\e[6~\": end-of-history            # Page down\n\n    $if term=msys # RXVT\n      \"\\e[7~\": beginning-of-line      # Home Key\n      \"\\e[8~\": end-of-line            # End Key\n      \"\\e[11~\": display-shell-version # F1\n      \"\\e[15~\": re-read-init-file     # F5\n      \"\\e[12~\": \"Function Key 2\"\n      \"\\e[13~\": \"Function Key 3\"\n      \"\\e[14~\": \"Function Key 4\"\n      \"\\e[17~\": \"Function Key 6\"\n      \"\\e[18~\": \"Function Key 7\"\n      \"\\e[19~\": \"Function Key 8\"\n      \"\\e[20~\": \"Function Key 9\"\n      \"\\e[21~\": \"Function Key 10\"\n    $else\n    # Eh, normal Console is not really cygwin anymore, is it? Using 'else' instead. -mstormo\n    # $if term=cygwin # Console\n      \"\\e[1~\": beginning-of-line      # Home Key\n      \"\\e[4~\": end-of-line            # End Key\n      \"\\e[3~\": delete-char      # Delete Key\n      \"\\e\\e[C\": forward-word      # Alt-Right\n      \"\\e\\e[D\": backward-word      # Alt-Left\n      \"\\e[1;5C\": forward-word   # ctrl + right\n      \"\\e[1;5D\": backward-word  # ctrl + left \n      \"\\e[17~\": \"Function Key 6\"\n      \"\\e[18~\": \"Function Key 7\"\n      \"\\e[19~\": \"Function Key 8\"\n      \"\\e[20~\": \"Function Key 9\"\n      \"\\e[21~\": \"Function Key 10\"\n      \"\\e[23~\": \"Function Key 11\"\n    $endif\n  $endif\n  {% endcodeblock %}\n  {% endfold %}\n- 比如 Vim 配置文件 [`.vimrc`][vimrc-config]\n\n### 编译 Vim\n\n```bash\npacman -S ncurses-devel libcrypt-devel\n./configure --with-features=huge \\\n            --enable-luainterp=yes \\\n            --enable-perlinterp=yes \\\n            --enable-pythoninterp=yes \\\n            --enable-python3interp=yes \\\n            --with-lua-prefix=/usr/local \\\n            --enable-fontset=yes \\\n            --enable-cscope=yes \\\n            --enable-multibyte \\\n            --disable-gui \\\n            --enable-fail-if-missing \\\n            --prefix=/usr/local \\\n            --with-compiledby='Professional operations'\n```\n\n这里提醒自己下，折腾有度，比如尝试在 MSYS2 中编译 [ycm][youcompleteme]\n十几次未遂这种行为是不可取的。\n\n### 替换默认终端\n\n将自带的 [Mintty][mintty] 换成 Windows 下很棒的终端模拟器：[ConEmu][conemu]。\n\n1. 设置为默认的系统终端程序，替换掉残废的 cmd：`Settings` - `Integration` -\n   `Default term - Force ConEmu as default terminal for console applications`\n1. 如果希望「劫持」某些程序调试时使用的终端程序（比如 VS 在调试时会唤起系统默认的 cmd），在下面的输入框中填入 `explorer.exe|devenv.exe`\n1. 对于 MSYS2 的集成：\n   1. 新建 Task：`set MSYSTEM=MINGW64 & \"/path/to/MSYS-connector -cur_console:n\"`\n   1. Connector 网址：[cygwin-connector][connector]，不同版本的设置如下：\n      - Cygwin：`conemu-cyg-32.exe` and `conemu-cyg-64.exe`\n      - MSYS 1.0：`conemu-msys-32.exe`\n      - MSYS 2.0：`conemu-msys2-32.exe` and `conemu-msys2-64.exe`\n\n      复制到 `sh.exe` 同目录下即可\n1. 启动时的相关设定（`Settings` - `Startup` - `Environment）`：\n   {% codeblock lang:bat %}\n   set PATH=%ConEmuBaseDir%\\Scripts;%PATH%\n   chcp utf-8\n   set LANG=en_US.utf-8\n   {% endcodeblock %}\n1. 当前的配置文件 [conemu.xml][conemu-config]\n\n {% fa warning fw %}新版本的 ConEmu 已经自带了适配各种系统下的 `connector`，所以在 Task 里面关于 `connector` 的路径直接填写其程序名即可。（见 [cygwin/msys terminal connector][conemu-official-connector]）\n\n#### 题外话 - Sublime Text 调用 ConEmu\n\n对于一般程序，在设置中的 `Integration` - `Default term` - `List of ...`\n中添加程序，ConEmu 将被自动唤起以替代 cmd，但添加 Sublime Text 的 `sublime_text.exe` 并没有反应，只能曲线救国，比如 C 类型文件的编译配置文件 `C.sublime-build`：\n\n{% codeblock C.sublime-build lang:json %}\n{\n    // \"shell_cmd\": \"gcc -std=c11 -Wall -s \\\"${file}\\\" -o \\\"${file_path}/${file_base_name}\\\" && \\\"${file_path}/${file_base_name}\\\"\",\n    \"shell_cmd\": \"/path/to/conemu /single -run cmd /c -cur_console:n \\\"gcc -std=c11 -Wall -s ${file} -o ${file_path}/${file_base_name} && ${file_path}/${file_base_name} & pause \\\"\",\n    \"file_regex\": \"^(..[^:]*):([0-9]+):?([0-9]+)?:? (.*)$\",\n    \"working_dir\": \"${file_path}\",\n    \"selector\": \"source.c\"\n}\n{% endcodeblock %}\n\n--------------------------\n\n## 问题\n\n- 如果发现程序的输出被缓冲：可尝试利用工具 `winpty`\n- `git clone` 时出现字符相关的奇怪问题：使用 **MSYS** 而不是 MinGW64 或者 MinGW32\n- 2018-02-09 {% fa warning fw %} ncurses 版本升级为 `ncurses-6.1.20180127-1-x86_64`\n  后 ConEmu 终端会出现各种光标问题，可通过回退版本至 [`ncurses-6.0.20170708-2-x86_64`][ncurses-20170708] 来解决：\n  {% codeblock lang:bash %}\n  pacman -R ncurses-devel\n  pacman -U ncurses-6.0.20170708-2-x86_64.pkg.tar.xz --force\n  {% endcodeblock %}\n- 2018-02-10 {% fa warning fw %} 如果集成在 VSCode 中的 MSYS2\n  也出现上述情况, 可考虑直接使用 `connector`：\n  {% codeblock settings.json lang:json %}\n  {\n      \"terminal.integrated.shell.windows\": \"E:/UtilityPrograms/ConEmu/ConEmu/conemu-msys2-64.exe\",\n  }\n  {% endcodeblock %}\n  或者如果仅需为清屏设置快捷键：\n  {% codeblock keybindings.json lang:json %}\n  {\n      \"key\": \"ctrl+l\",\n      \"command\": \"workbench.action.terminal.clear\",\n      \"when\": \"terminalFocus\"\n  }\n  {% endcodeblock %}\n\n\n[msys2]: http://www.msys2.org\n[csdn-48601775]: http://blog.csdn.net/callinglove/article/details/48601775\n[youcompleteme]: https://github.com/Valloric/YouCompleteMe\n[mintty]: https://mintty.github.io\n[conemu]: https://conemu.github.io\n[vimrc-config]: /src/vimrc\n[bashrc-config]: /src/bashrc\n[conemu-config]: /src/conemu.xml\n[connector]: https://github.com/Maximus5/cygwin-connector\n[ncurses-20170708]: https://mirrors.tuna.tsinghua.edu.cn/msys2/msys/x86_64/ncurses-6.0.20170708-2-x86_64.pkg.tar.xz\n[conemu-official-connector]: https://conemu.github.io/en/CygwinMsysConnector.html#cygwinmsys-terminal-connector\n","source":"_posts/daily-operations-of-msys2.md","raw":"---\ntitle: MSYS2 的日常操作\ndate: 2017-11-07 18:48:36\ntags:\n    - MSYS2\n    - Linux\n    - Windows\n    - ConEmu\ncategories: Handy Utilities\n---\n\n在自己的 Windows 10 系统上使用 [MSYS2][msys2] 已经有段时间了，Windows 上的类 \\*nix 工作环境简直不要太完美，办事效率杠杠的（如果没事少折腾的话）。为啥不用 Cygwin？因为很卡很慢，连 DUANG 的特效也拯救不了它，而且它的 POSIX 权限问题会把文件系统弄的一团糟。下面开始记录从刚开始的小白逐渐成为现在熟练使用的 ~~大牛~~ 大白的辛酸历程...\n\n<!-- more -->\n\n## MSYS2 安装与配置\n\n这里主要参考 [MSYS2开发环境搭建][csdn-48601775]。\n\n1. 下载 MSYS2 installer，建议安装路径不要包含空格（个人装在了 `D:\\MSYS2` 下）\n1. 安装完毕后，开始菜单中生成的三个快捷方式为：\n   {% codeblock lang:bash %}\n   MSYS2 MinGW 32-bit - D:\\MSYS2\\msys2_shell.cmd -mingw32\n   MSYS2 MinGW 64-bit - D:\\MSYS2\\msys2_shell.cmd -mingw64\n   MSYS2 MSYS         - D:\\MSYS2\\msys2_shell.cmd -msys\n   {% endcodeblock %}\n1. 修改软件源，修改 `/etc/pacman.d/` 目录下的三个文件，换上清华的 repo，`.msys`，`.mingw32`，`.mingw64` 分别对应 MSYS2 里的三套系统，分别在三个文件最上方填写（注意对应）：\n   {% codeblock lang:bash %}\n   Server = https://mirrors.tuna.tsinghua.edu.cn/msys2/msys/$arch\n   Server = https://mirrors.tuna.tsinghua.edu.cn/msys2/mingw/i686\n   Server = https://mirrors.tuna.tsinghua.edu.cn/msys2/mingw/x86_64\n   {% endcodeblock %}\n1. 任选一个（`mingw32.exe`，`mingw64.exe`，`msys2.exe`）进入 MSYS2 的终端，更新系统：\n   {% codeblock lang:bash %}\n   pacman -Syu\n   {% endcodeblock %}\n   提示需退出后更新, 强行关闭后重进, 再重复上述命令即可。\n   更新其他包:\n   {% codeblock lang:bash %}\n   pacman -Su\n   {% endcodeblock %}\n1. 安装开发工具链：\n   {% codeblock lang:bash %}\n   pacman -S base-devel\n   pacman -S gcc\n   pacman -S mingw-w64-x86_64-toolchain\n   pacman -S mingw-w64-i686-toolchain\n   pacman -S mingw64/mingw-w64-x86_64-clang\n   pacman -S mingw32/mingw-w64-i686-clang\n   {% endcodeblock %}\n1. 添加环境变量 `PATH`。由于个人 `PATH` 中存有 `Perl` 的开发工具路径，所以考虑将 MSYS2 的路径置于其后：\n   {% codeblock lang:bash %}\n   ...\n   \\Strawberry\\perl\\bin\n   \\Strawberry\\perl\\site\\bin\n   \\MSYS2\\usr\\bin\n   \\MSYS2\\mingw64\\bin\n   \\Strawberry\\c\\bin\n   ...\n   {% endcodeblock %}\n\n## 个性化设置\n\n### 自动挂载文件\n\n```plain /etc/fstab\n# For a description of the file format, see the Users Guide\n# http://cygwin.com/cygwin-ug-net/using.html#mount-table\n# DO NOT REMOVE NEXT LINE. It remove cygdrive prefix from path\nnone / cygdrive binary,posix=0,noacl,user 0 0\nC:\\Users\\xxx\\Desktop /desktop\nD:\\MSYS2\\home\\xxx\\Notes /notes\nF:\\WorkingDirectory\\Work\\__current /current\n```\n\n### 配置文件\n\n于个人 `home` 目录中，个性化各种配置：\n\n- 比如与 `mintty` 相关的配置：\n  {% fold .minttyrc %}\n  {% codeblock lang:ini .minttyrc %}\n  BoldAsFont=no\n  BoldAsColour=yes\n  BoldColour=255,255,128\n  Font=SauceCodePro NF\n  FontIsBold=no\n  FontHeight=10\n  RowSpacing=1\n  ShowHiddenFonts=yes\n  CursorColour=255,255,0\n  Transparency=high\n  Locale=en_US\n  Charset=UTF-8\n  BellType=0\n  CursorType=block\n  CursorBlinks=no\n  Term=xterm\n  Columns=135\n  Rows=35\n  CtrlShiftShortcuts=no\n  Scrollbar=none\n  ClicksTargetApp=yes\n  ForegroundColour=223,223,223\n  {% endcodeblock %}\n  {% endfold %}\n- 比如常用的 [`.bashrc`][bashrc-config]：\n  {% fold .bashrc %}\n  {% codeblock .bashrc lang:bash %}\n  # To the extent possible under law, the author(s) have dedicated all\n  # copyright and related and neighboring rights to this software to the\n  # public domain worldwide. This software is distributed without any warranty.\n  # You should have received a copy of the CC0 Public Domain Dedication along\n  # with this software.\n  # If not, see <http://creativecommons.org/publicdomain/zero/1.0/>.\n\n  # ~/.bashrc: executed by bash(1) for interactive shells.\n\n  # The copy in your home directory (~/.bashrc) is yours, please\n  # feel free to customise it to create a shell\n  # environment to your liking.  If you feel a change\n  # would be benifitial to all, please feel free to send\n  # a patch to the msys2 mailing list.\n\n  # User dependent .bashrc file\n\n  # If not running interactively, don't do anything\n  [[ \"$-\" != *i* ]] && return\n\n  # Shell Options\n  #\n  # See man bash for more options...\n  #\n  # Don't wait for job termination notification\n  # set -o notify\n  #\n  # Don't use ^D to exit\n  # set -o ignoreeof\n  #\n  # Use case-insensitive filename globbing\n  # shopt -s nocaseglob\n  #\n  # Make bash append rather than overwrite the history on disk\n  # shopt -s histappend\n  #\n  # When changing directory small typos can be ignored by bash\n  # for example, cd /vr/lgo/apaache would find /var/log/apache\n  # shopt -s cdspell\n\n  # Completion options\n  #\n  # These completion tuning parameters change the default behavior of bash_completion:\n  #\n  # Define to access remotely checked-out files over passwordless ssh for CVS\n  # COMP_CVS_REMOTE=1\n  #\n  # Define to avoid stripping description in --option=description of './configure --help'\n  # COMP_CONFIGURE_HINTS=1\n  #\n  # Define to avoid flattening internal contents of tar files\n  # COMP_TAR_INTERNAL_PATHS=1\n  #\n  # Uncomment to turn on programmable completion enhancements.\n  # Any completions you add in ~/.bash_completion are sourced last.\n  # [[ -f /etc/bash_completion ]] && . /etc/bash_completion\n\n  # History Options\n  #\n  # Don't put duplicate lines in the history.\n  # export HISTCONTROL=$HISTCONTROL${HISTCONTROL+,}ignoredups\n  #\n  # Ignore some controlling instructions\n  # HISTIGNORE is a colon-delimited list of patterns which should be excluded.\n  # The '&' is a special pattern which suppresses duplicate entries.\n  # export HISTIGNORE=$'[ \\t]*:&:[fb]g:exit'\n  # export HISTIGNORE=$'[ \\t]*:&:[fb]g:exit:ls' # Ignore the ls command as well\n  #\n  # Whenever displaying the prompt, write the previous line to disk\n  # export PROMPT_COMMAND=\"history -a\"\n\n  # Aliases\n  #\n  # Some people use a different file for aliases\n  # if [ -f \"${HOME}/.bash_aliases\" ]; then\n  #   source \"${HOME}/.bash_aliases\"\n  # fi\n  #\n  # Some example alias instructions\n  # If these are enabled they will be used instead of any instructions\n  # they may mask.  For example, alias rm='rm -i' will mask the rm\n  # application.  To override the alias instruction use a \\ before, ie\n  # \\rm will call the real rm not the alias.\n  #\n  # Interactive operation...\n  # alias rm='rm -i'\n  # alias cp='cp -i'\n  # alias mv='mv -i'\n  #\n  # Default to human readable figures\n  alias df='df -h'\n  alias du='du -h'\n  #\n  # Misc :)\n  alias less='less -r'                          # raw control characters\n  alias whence='type -a'                        # where, of a sort\n  alias grep='grep --color'                     # show differences in colour\n  alias egrep='egrep --color=auto'              # show differences in colour\n  alias fgrep='fgrep --color=auto'              # show differences in colour\n  #\n  # Some shortcuts for different directory listings\n  alias ls='ls -hF --color=tty'                 # classify files in colour\n  alias dir='ls --color=auto --format=vertical'\n  alias vdir='ls --color=auto --format=long'\n  alias ll='ls -l'                              # long list\n  alias la='ls -A'                              # all but . and ..\n  alias l='ls -CF'                              #\n  alias hexopull='cd ~/Hexo && git fetch --all && git reset --hard origin/master && git pull'\n  alias hexopush='cd ~/Hexo && hexo clean && hexo g -d && git add -A && git commit -m \"update\" && git push origin master'\n  alias algpull='cd ~/alg && git fetch --all && git reset --hard origin/master && git pull'\n  alias algpush='cd ~/alg && hexo clean && hexo g -d && git add -A && git commit -m \"update\" && git push origin master'\n  alias hexodebug='hexo clean && hexo g && hexo s --debug'\n\n  # Umask\n  #\n  # /etc/profile sets 022, removing write perms to group + others.\n  # Set a more restrictive umask: i.e. no exec perms for others:\n  # umask 027\n  # Paranoid: neither group nor others have any perms:\n  # umask 077\n\n  # Functions\n  #\n  # Some people use a different file for functions\n  # if [ -f \"${HOME}/.bash_functions\" ]; then\n  #   source \"${HOME}/.bash_functions\"\n  # fi\n  #\n  # Some example functions:\n  #\n  # a) function settitle\n  # settitle ()\n  # {\n  #   echo -ne \"\\e]2;$@\\a\\e]1;$@\\a\";\n  # }\n  #\n  # b) function cd_func\n  # This function defines a 'cd' replacement function capable of keeping,\n  # displaying and accessing history of visited directories, up to 10 entries.\n  # To use it, uncomment it, source this file and try 'cd --'.\n  # acd_func 1.0.5, 10-nov-2004\n  # Petar Marinov, http:/geocities.com/h2428, this is public domain\n  # cd_func ()\n  # {\n  #   local x2 the_new_dir adir index\n  #   local -i cnt\n  #\n  #   if [[ $1 ==  \"--\" ]]; then\n  #     dirs -v\n  #     return 0\n  #   fi\n  #\n  #   the_new_dir=$1\n  #   [[ -z $1 ]] && the_new_dir=$HOME\n  #\n  #   if [[ ${the_new_dir:0:1} == '-' ]]; then\n  #     #\n  #     # Extract dir N from dirs\n  #     index=${the_new_dir:1}\n  #     [[ -z $index ]] && index=1\n  #     adir=$(dirs +$index)\n  #     [[ -z $adir ]] && return 1\n  #     the_new_dir=$adir\n  #   fi\n  #\n  #   #\n  #   # '~' has to be substituted by ${HOME}\n  #   [[ ${the_new_dir:0:1} == '~' ]] && the_new_dir=\"${HOME}${the_new_dir:1}\"\n  #\n  #   #\n  #   # Now change to the new dir and add to the top of the stack\n  #   pushd \"${the_new_dir}\" > /dev/null\n  #   [[ $? -ne 0 ]] && return 1\n  #   the_new_dir=$(pwd)\n  #\n  #   #\n  #   # Trim down everything beyond 11th entry\n  #   popd -n +11 2>/dev/null 1>/dev/null\n  #\n  #   #\n  #   # Remove any other occurence of this dir, skipping the top of the stack\n  #   for ((cnt=1; cnt <= 10; cnt++)); do\n  #     x2=$(dirs +${cnt} 2>/dev/null)\n  #     [[ $? -ne 0 ]] && return 0\n  #     [[ ${x2:0:1} == '~' ]] && x2=\"${HOME}${x2:1}\"\n  #     if [[ \"${x2}\" == \"${the_new_dir}\" ]]; then\n  #       popd -n +$cnt 2>/dev/null 1>/dev/null\n  #       cnt=cnt-1\n  #     fi\n  #   done\n  #\n  #   return 0\n  # }\n  #\n  # alias cd=cd_func\n\n  alias grep='grep --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn}'\n  alias e=explorer\n  alias giturl='curl -i https://git.io -F'\n  alias poweroff='(shutdown -s -t 0 &); (net stop autossh_5679 &);'\n  alias reboot='(shutdown -r -t 0 &); (net stop autossh_5679 &);'\n  # alias uptime='net stats server | grep -P -o \"[\\d/]+.*M$\" --color=never'\n  alias lcd='/e/UtilityPrograms/_exe/TurnOffLCD.exe'\n  # alias pb='~/App/pastebinit/pastebinit -b http://paste.ubuntu.com'\n  # alias pb='~/App/pastebinit/pastebinit -b http://paste.ubuntu.org.cn'\n  alias wolfram='winpty /e/Mathematica/11.1/wolfram'\n  alias loginpc='cygrunsrv -S autossh_5679'\n  alias viz='vim `which z`'\n  alias memopull='cd ~/memos && git fetch --all && git reset --hard origin/master && git pull'\n  alias memopush='cd ~/memos && hexo clean && hexo g -d && git add -A && git commit -m \"update\" && git push origin master'\n\n  HISTTIMEFORMAT='%F %T '\n  HISTCONTROL=erasedups\n  HISTIGNORE=\"ls:pwd:cd:clear:vim:fg:bg:jobs:top:htop\"\n\n  export LESS_TERMCAP_mb=$(printf '\\e[01;31m') # enter blinking mode - red\n  export LESS_TERMCAP_md=$(printf '\\e[01;35m') # enter double-bright mode - bold, magenta\n  export LESS_TERMCAP_me=$(printf '\\e[0m') # turn off all appearance modes (mb, md, so, us)\n  export LESS_TERMCAP_se=$(printf '\\e[0m') # leave standout mode\n  export LESS_TERMCAP_so=$(printf '\\e[01;33m') # enter standout mode - yellow\n  export LESS_TERMCAP_ue=$(printf '\\e[0m') # leave underline mode\n  export LESS_TERMCAP_us=$(printf '\\e[04;36m') # enter underline mode - cyan\n\n  # export http_proxy=\"http://192.168.1.102:1888/\"\n  # export https_proxy=\"https://192.168.1.102:1888/\"\n  # export ftp_proxy=\"ftp://192.168.1.102:1888/\"\n\n  # export PS1=\"[\\[\\e[01;33m\\]foo\\[\\e[37;40m\\]@\\[\\e[34;40m\\]PHANTOM \\[\\e[37;40m\\]\\t \\[\\e[34;40m\\]\\W\\[\\e[0m\\]]$ \"\n  export PS1=\"[ \\[\\e[37;40m\\]\\t \\[\\e[34;40m\\]\\W\\[\\e[0m\\] ]$ \"\n  export GTAGSLIBPATH=$GTAGSLIBPATH:/usr/include/\n  export HISTFILESIZE=50000\n  export HISTSIZE=50000\n\n  export PATH=$PATH:~/App/bin\n  export PATH=$PATH:/e/Nodejs\n  export PATH=$PATH:/c/Users/Liang/AppData/Roaming/npm\n  export PATH=$PATH:/e/MySQL/bin\n  export PATH=$PATH:/d/Java/jdk-10/bin\n  export PATH=$PATH:/f/WorkingDirectory/Bin\n  export PATH=$PATH:/e/TexLive/2018/bin/win32\n  export PATH=$PATH:/e/R/bin/x64\n  export PATH=$PATH:/f/WorkingDirectory/Bin\n  export PATH=$PATH:/c/Users/Liang/AppData/Roaming/local/bin\n\n  # STACK_ROOT=/f/HaskellStack\n  {% endcodeblock %}\n  {% endfold %}\n- 比如 Git 需要代理:\n  {% fold .gitconfig %}\n  {% codeblock .gitconfig lang:ini %}\n  [user]\n      name = michaelHL\n      email = lbgnmic@gmail.com\n  [github]\n      user = michaelHL\n  [http]\n      proxy = socks5://127.0.0.1:1888\n  {% endcodeblock %}\n  {% endfold %}\n- 比如忽略大小写的 `.inputrc`：\n  {% fold .inputrc %}\n  {% codeblock .inputrc lang:bash %}\n  # To the extent possible under law, the author(s) have dedicated all \n  # copyright and related and neighboring rights to this software to the \n  # public domain worldwide. This software is distributed without any warranty. \n  # You should have received a copy of the CC0 Public Domain Dedication along \n  # with this software. \n  # If not, see <http://creativecommons.org/publicdomain/zero/1.0/>. \n\n  # ~/.inputrc: readline initialization file.\n\n  # The copy in your home directory (~/.inputrc) is yours, please\n  # feel free to customise it to create a shell\n  # environment to your liking.  If you feel a change\n  # would be benifitial to all, please feel free to send\n  # a patch to the msys2 mailing list.\n\n  # the following line is actually\n  # equivalent to \"\\C-?\": delete-char\n  # \"\\e[3~\": delete-char\n\n  # VT\n  # \"\\e[1~\": beginning-of-line\n  # \"\\e[4~\": end-of-line\n\n  # kvt\n  # \"\\e[H\": beginning-of-line\n  # \"\\e[F\": end-of-line\n\n  # rxvt and konsole (i.e. the KDE-app...)\n  # \"\\e[7~\": beginning-of-line\n  # \"\\e[8~\": end-of-line\n\n  # VT220\n  # \"\\eOH\": beginning-of-line\n  # \"\\eOF\": end-of-line\n\n  # Allow 8-bit input/output\n  # set meta-flag on\n  # set convert-meta off\n  # set input-meta on\n  # set output-meta on\n  #$if Bash\n    # Don't ring bell on completion\n    set bell-style none\n\n    # or, don't beep at me - show me\n    #set bell-style visible\n\n    # Show all instead of beeping first\n    set show-all-if-ambiguous off\n\n    # Filename completion/expansion\n    set completion-ignore-case on\n    #set show-all-if-ambiguous on\n\n    # Expand homedir name\n    #set expand-tilde on\n\n    # Append \"/\" to all dirnames\n    #set mark-directories on\n    #set mark-symlinked-directories on\n\n    # visible-stats\n    # Append a mark according to the file type in a listing\n    set visible-stats off\n    set mark-directories on\n\n    # Match all files\n    #set match-hidden-files on\n\n    # 'Magic Space'\n    # Insert a space character then performs\n    # a history expansion in the line\n    #Space: magic-space\n  #$endif\n\n  # MSYSTEM is emacs based\n  $if mode=emacs\n    # Common to Console & RXVT\n    \"\\C-?\": backward-kill-line         # Ctrl-BackSpace\n    \"\\e[2~\": paste-from-clipboard      # \"Ins. Key\"\n    \"\\e[5~\": beginning-of-history      # Page up\n    \"\\e[6~\": end-of-history            # Page down\n\n    $if term=msys # RXVT\n      \"\\e[7~\": beginning-of-line      # Home Key\n      \"\\e[8~\": end-of-line            # End Key\n      \"\\e[11~\": display-shell-version # F1\n      \"\\e[15~\": re-read-init-file     # F5\n      \"\\e[12~\": \"Function Key 2\"\n      \"\\e[13~\": \"Function Key 3\"\n      \"\\e[14~\": \"Function Key 4\"\n      \"\\e[17~\": \"Function Key 6\"\n      \"\\e[18~\": \"Function Key 7\"\n      \"\\e[19~\": \"Function Key 8\"\n      \"\\e[20~\": \"Function Key 9\"\n      \"\\e[21~\": \"Function Key 10\"\n    $else\n    # Eh, normal Console is not really cygwin anymore, is it? Using 'else' instead. -mstormo\n    # $if term=cygwin # Console\n      \"\\e[1~\": beginning-of-line      # Home Key\n      \"\\e[4~\": end-of-line            # End Key\n      \"\\e[3~\": delete-char      # Delete Key\n      \"\\e\\e[C\": forward-word      # Alt-Right\n      \"\\e\\e[D\": backward-word      # Alt-Left\n      \"\\e[1;5C\": forward-word   # ctrl + right\n      \"\\e[1;5D\": backward-word  # ctrl + left \n      \"\\e[17~\": \"Function Key 6\"\n      \"\\e[18~\": \"Function Key 7\"\n      \"\\e[19~\": \"Function Key 8\"\n      \"\\e[20~\": \"Function Key 9\"\n      \"\\e[21~\": \"Function Key 10\"\n      \"\\e[23~\": \"Function Key 11\"\n    $endif\n  $endif\n  {% endcodeblock %}\n  {% endfold %}\n- 比如 Vim 配置文件 [`.vimrc`][vimrc-config]\n\n### 编译 Vim\n\n```bash\npacman -S ncurses-devel libcrypt-devel\n./configure --with-features=huge \\\n            --enable-luainterp=yes \\\n            --enable-perlinterp=yes \\\n            --enable-pythoninterp=yes \\\n            --enable-python3interp=yes \\\n            --with-lua-prefix=/usr/local \\\n            --enable-fontset=yes \\\n            --enable-cscope=yes \\\n            --enable-multibyte \\\n            --disable-gui \\\n            --enable-fail-if-missing \\\n            --prefix=/usr/local \\\n            --with-compiledby='Professional operations'\n```\n\n这里提醒自己下，折腾有度，比如尝试在 MSYS2 中编译 [ycm][youcompleteme]\n十几次未遂这种行为是不可取的。\n\n### 替换默认终端\n\n将自带的 [Mintty][mintty] 换成 Windows 下很棒的终端模拟器：[ConEmu][conemu]。\n\n1. 设置为默认的系统终端程序，替换掉残废的 cmd：`Settings` - `Integration` -\n   `Default term - Force ConEmu as default terminal for console applications`\n1. 如果希望「劫持」某些程序调试时使用的终端程序（比如 VS 在调试时会唤起系统默认的 cmd），在下面的输入框中填入 `explorer.exe|devenv.exe`\n1. 对于 MSYS2 的集成：\n   1. 新建 Task：`set MSYSTEM=MINGW64 & \"/path/to/MSYS-connector -cur_console:n\"`\n   1. Connector 网址：[cygwin-connector][connector]，不同版本的设置如下：\n      - Cygwin：`conemu-cyg-32.exe` and `conemu-cyg-64.exe`\n      - MSYS 1.0：`conemu-msys-32.exe`\n      - MSYS 2.0：`conemu-msys2-32.exe` and `conemu-msys2-64.exe`\n\n      复制到 `sh.exe` 同目录下即可\n1. 启动时的相关设定（`Settings` - `Startup` - `Environment）`：\n   {% codeblock lang:bat %}\n   set PATH=%ConEmuBaseDir%\\Scripts;%PATH%\n   chcp utf-8\n   set LANG=en_US.utf-8\n   {% endcodeblock %}\n1. 当前的配置文件 [conemu.xml][conemu-config]\n\n {% fa warning fw %}新版本的 ConEmu 已经自带了适配各种系统下的 `connector`，所以在 Task 里面关于 `connector` 的路径直接填写其程序名即可。（见 [cygwin/msys terminal connector][conemu-official-connector]）\n\n#### 题外话 - Sublime Text 调用 ConEmu\n\n对于一般程序，在设置中的 `Integration` - `Default term` - `List of ...`\n中添加程序，ConEmu 将被自动唤起以替代 cmd，但添加 Sublime Text 的 `sublime_text.exe` 并没有反应，只能曲线救国，比如 C 类型文件的编译配置文件 `C.sublime-build`：\n\n{% codeblock C.sublime-build lang:json %}\n{\n    // \"shell_cmd\": \"gcc -std=c11 -Wall -s \\\"${file}\\\" -o \\\"${file_path}/${file_base_name}\\\" && \\\"${file_path}/${file_base_name}\\\"\",\n    \"shell_cmd\": \"/path/to/conemu /single -run cmd /c -cur_console:n \\\"gcc -std=c11 -Wall -s ${file} -o ${file_path}/${file_base_name} && ${file_path}/${file_base_name} & pause \\\"\",\n    \"file_regex\": \"^(..[^:]*):([0-9]+):?([0-9]+)?:? (.*)$\",\n    \"working_dir\": \"${file_path}\",\n    \"selector\": \"source.c\"\n}\n{% endcodeblock %}\n\n--------------------------\n\n## 问题\n\n- 如果发现程序的输出被缓冲：可尝试利用工具 `winpty`\n- `git clone` 时出现字符相关的奇怪问题：使用 **MSYS** 而不是 MinGW64 或者 MinGW32\n- 2018-02-09 {% fa warning fw %} ncurses 版本升级为 `ncurses-6.1.20180127-1-x86_64`\n  后 ConEmu 终端会出现各种光标问题，可通过回退版本至 [`ncurses-6.0.20170708-2-x86_64`][ncurses-20170708] 来解决：\n  {% codeblock lang:bash %}\n  pacman -R ncurses-devel\n  pacman -U ncurses-6.0.20170708-2-x86_64.pkg.tar.xz --force\n  {% endcodeblock %}\n- 2018-02-10 {% fa warning fw %} 如果集成在 VSCode 中的 MSYS2\n  也出现上述情况, 可考虑直接使用 `connector`：\n  {% codeblock settings.json lang:json %}\n  {\n      \"terminal.integrated.shell.windows\": \"E:/UtilityPrograms/ConEmu/ConEmu/conemu-msys2-64.exe\",\n  }\n  {% endcodeblock %}\n  或者如果仅需为清屏设置快捷键：\n  {% codeblock keybindings.json lang:json %}\n  {\n      \"key\": \"ctrl+l\",\n      \"command\": \"workbench.action.terminal.clear\",\n      \"when\": \"terminalFocus\"\n  }\n  {% endcodeblock %}\n\n\n[msys2]: http://www.msys2.org\n[csdn-48601775]: http://blog.csdn.net/callinglove/article/details/48601775\n[youcompleteme]: https://github.com/Valloric/YouCompleteMe\n[mintty]: https://mintty.github.io\n[conemu]: https://conemu.github.io\n[vimrc-config]: /src/vimrc\n[bashrc-config]: /src/bashrc\n[conemu-config]: /src/conemu.xml\n[connector]: https://github.com/Maximus5/cygwin-connector\n[ncurses-20170708]: https://mirrors.tuna.tsinghua.edu.cn/msys2/msys/x86_64/ncurses-6.0.20170708-2-x86_64.pkg.tar.xz\n[conemu-official-connector]: https://conemu.github.io/en/CygwinMsysConnector.html#cygwinmsys-terminal-connector\n","slug":"daily-operations-of-msys2","published":1,"updated":"2023-03-09T16:09:38.212Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u3360000cp4x09rikvs9k","content":"<p>在自己的 Windows 10 系统上使用 <a href=\"http://www.msys2.org\" target=\"_blank\" rel=\"noopener\">MSYS2</a> 已经有段时间了，Windows 上的类 *nix 工作环境简直不要太完美，办事效率杠杠的（如果没事少折腾的话）。为啥不用 Cygwin？因为很卡很慢，连 DUANG 的特效也拯救不了它，而且它的 POSIX 权限问题会把文件系统弄的一团糟。下面开始记录从刚开始的小白逐渐成为现在熟练使用的 <del>大牛</del> 大白的辛酸历程…</p>\r\n<a id=\"more\"></a>\r\n<h2 id=\"msys2-安装与配置\">MSYS2 安装与配置</h2>\r\n<p>这里主要参考 <a href=\"http://blog.csdn.net/callinglove/article/details/48601775\" target=\"_blank\" rel=\"noopener\">MSYS2开发环境搭建</a>。</p>\r\n<ol type=\"1\">\r\n<li>下载 MSYS2 installer，建议安装路径不要包含空格（个人装在了 <code>D:\\MSYS2</code> 下）</li>\r\n<li>安装完毕后，开始菜单中生成的三个快捷方式为： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MSYS2 MinGW 32-bit - D:\\MSYS2\\msys2_shell.cmd -mingw32</span><br><span class=\"line\">MSYS2 MinGW 64-bit - D:\\MSYS2\\msys2_shell.cmd -mingw64</span><br><span class=\"line\">MSYS2 MSYS         - D:\\MSYS2\\msys2_shell.cmd -msys</span><br></pre></td></tr></table></figure></li>\r\n<li>修改软件源，修改 <code>/etc/pacman.d/</code> 目录下的三个文件，换上清华的 repo，<code>.msys</code>，<code>.mingw32</code>，<code>.mingw64</code> 分别对应 MSYS2 里的三套系统，分别在三个文件最上方填写（注意对应）： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Server = https://mirrors.tuna.tsinghua.edu.cn/msys2/msys/<span class=\"variable\">$arch</span></span><br><span class=\"line\">Server = https://mirrors.tuna.tsinghua.edu.cn/msys2/mingw/i686</span><br><span class=\"line\">Server = https://mirrors.tuna.tsinghua.edu.cn/msys2/mingw/x86_64</span><br></pre></td></tr></table></figure></li>\r\n<li>任选一个（<code>mingw32.exe</code>，<code>mingw64.exe</code>，<code>msys2.exe</code>）进入 MSYS2 的终端，更新系统： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pacman -Syu</span><br></pre></td></tr></table></figure> 提示需退出后更新, 强行关闭后重进, 再重复上述命令即可。 更新其他包: <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pacman -Su</span><br></pre></td></tr></table></figure></li>\r\n<li>安装开发工具链： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pacman -S base-devel</span><br><span class=\"line\">pacman -S gcc</span><br><span class=\"line\">pacman -S mingw-w64-x86_64-toolchain</span><br><span class=\"line\">pacman -S mingw-w64-i686-toolchain</span><br><span class=\"line\">pacman -S mingw64/mingw-w64-x86_64-clang</span><br><span class=\"line\">pacman -S mingw32/mingw-w64-i686-clang</span><br></pre></td></tr></table></figure></li>\r\n<li>添加环境变量 <code>PATH</code>。由于个人 <code>PATH</code> 中存有 <code>Perl</code> 的开发工具路径，所以考虑将 MSYS2 的路径置于其后： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">\\Strawberry\\perl\\bin</span><br><span class=\"line\">\\Strawberry\\perl\\site\\bin</span><br><span class=\"line\">\\MSYS2\\usr\\bin</span><br><span class=\"line\">\\MSYS2\\mingw64\\bin</span><br><span class=\"line\">\\Strawberry\\c\\bin</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure></li>\r\n</ol>\r\n<h2 id=\"个性化设置\">个性化设置</h2>\r\n<h3 id=\"自动挂载文件\">自动挂载文件</h3>\r\n<figure class=\"highlight plain\"><figcaption><span>/etc/fstab</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># For a description of the file format, see the Users Guide</span><br><span class=\"line\"># http://cygwin.com/cygwin-ug-net/using.html#mount-table</span><br><span class=\"line\"># DO NOT REMOVE NEXT LINE. It remove cygdrive prefix from path</span><br><span class=\"line\">none / cygdrive binary,posix=0,noacl,user 0 0</span><br><span class=\"line\">C:\\Users\\xxx\\Desktop /desktop</span><br><span class=\"line\">D:\\MSYS2\\home\\xxx\\Notes /notes</span><br><span class=\"line\">F:\\WorkingDirectory\\Work\\__current /current</span><br></pre></td></tr></table></figure>\r\n<h3 id=\"配置文件\">配置文件</h3>\r\n<p>于个人 <code>home</code> 目录中，个性化各种配置：</p>\r\n<ul>\r\n<li>比如与 <code>mintty</code> 相关的配置： <div><div class=\"fold_hider\"><div class=\"close hider_title\">.minttyrc</div></div><div class=\"fold\">\n<figure class=\"highlight ini\"><figcaption><span>.minttyrc</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">BoldAsFont</span>=<span class=\"literal\">no</span></span><br><span class=\"line\"><span class=\"attr\">BoldAsColour</span>=<span class=\"literal\">yes</span></span><br><span class=\"line\"><span class=\"attr\">BoldColour</span>=<span class=\"number\">255</span>,<span class=\"number\">255</span>,<span class=\"number\">128</span></span><br><span class=\"line\"><span class=\"attr\">Font</span>=SauceCodePro NF</span><br><span class=\"line\"><span class=\"attr\">FontIsBold</span>=<span class=\"literal\">no</span></span><br><span class=\"line\"><span class=\"attr\">FontHeight</span>=<span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"attr\">RowSpacing</span>=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">ShowHiddenFonts</span>=<span class=\"literal\">yes</span></span><br><span class=\"line\"><span class=\"attr\">CursorColour</span>=<span class=\"number\">255</span>,<span class=\"number\">255</span>,<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"attr\">Transparency</span>=high</span><br><span class=\"line\"><span class=\"attr\">Locale</span>=en_US</span><br><span class=\"line\"><span class=\"attr\">Charset</span>=UTF-<span class=\"number\">8</span></span><br><span class=\"line\"><span class=\"attr\">BellType</span>=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"attr\">CursorType</span>=block</span><br><span class=\"line\"><span class=\"attr\">CursorBlinks</span>=<span class=\"literal\">no</span></span><br><span class=\"line\"><span class=\"attr\">Term</span>=xterm</span><br><span class=\"line\"><span class=\"attr\">Columns</span>=<span class=\"number\">135</span></span><br><span class=\"line\"><span class=\"attr\">Rows</span>=<span class=\"number\">35</span></span><br><span class=\"line\"><span class=\"attr\">CtrlShiftShortcuts</span>=<span class=\"literal\">no</span></span><br><span class=\"line\"><span class=\"attr\">Scrollbar</span>=none</span><br><span class=\"line\"><span class=\"attr\">ClicksTargetApp</span>=<span class=\"literal\">yes</span></span><br><span class=\"line\"><span class=\"attr\">ForegroundColour</span>=<span class=\"number\">223</span>,<span class=\"number\">223</span>,<span class=\"number\">223</span></span><br></pre></td></tr></table></figure>\n</div></div></li>\r\n<li>比如常用的 <a href=\"/src/bashrc\"><code>.bashrc</code></a>： <div><div class=\"fold_hider\"><div class=\"close hider_title\">.bashrc</div></div><div class=\"fold\">\n<figure class=\"highlight bash\"><figcaption><span>.bashrc</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># To the extent possible under law, the author(s) have dedicated all</span></span><br><span class=\"line\"><span class=\"comment\"># copyright and related and neighboring rights to this software to the</span></span><br><span class=\"line\"><span class=\"comment\"># public domain worldwide. This software is distributed without any warranty.</span></span><br><span class=\"line\"><span class=\"comment\"># You should have received a copy of the CC0 Public Domain Dedication along</span></span><br><span class=\"line\"><span class=\"comment\"># with this software.</span></span><br><span class=\"line\"><span class=\"comment\"># If not, see &lt;http://creativecommons.org/publicdomain/zero/1.0/&gt;.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ~/.bashrc: executed by bash(1) for interactive shells.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># The copy in your home directory (~/.bashrc) is yours, please</span></span><br><span class=\"line\"><span class=\"comment\"># feel free to customise it to create a shell</span></span><br><span class=\"line\"><span class=\"comment\"># environment to your liking.  If you feel a change</span></span><br><span class=\"line\"><span class=\"comment\"># would be benifitial to all, please feel free to send</span></span><br><span class=\"line\"><span class=\"comment\"># a patch to the msys2 mailing list.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># User dependent .bashrc file</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># If not running interactively, don't do anything</span></span><br><span class=\"line\">[[ <span class=\"string\">\"$-\"</span> != *i* ]] &amp;&amp; <span class=\"built_in\">return</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Shell Options</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># See man bash for more options...</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Don't wait for job termination notification</span></span><br><span class=\"line\"><span class=\"comment\"># set -o notify</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Don't use ^D to exit</span></span><br><span class=\"line\"><span class=\"comment\"># set -o ignoreeof</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Use case-insensitive filename globbing</span></span><br><span class=\"line\"><span class=\"comment\"># shopt -s nocaseglob</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Make bash append rather than overwrite the history on disk</span></span><br><span class=\"line\"><span class=\"comment\"># shopt -s histappend</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># When changing directory small typos can be ignored by bash</span></span><br><span class=\"line\"><span class=\"comment\"># for example, cd /vr/lgo/apaache would find /var/log/apache</span></span><br><span class=\"line\"><span class=\"comment\"># shopt -s cdspell</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Completion options</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># These completion tuning parameters change the default behavior of bash_completion:</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Define to access remotely checked-out files over passwordless ssh for CVS</span></span><br><span class=\"line\"><span class=\"comment\"># COMP_CVS_REMOTE=1</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Define to avoid stripping description in --option=description of './configure --help'</span></span><br><span class=\"line\"><span class=\"comment\"># COMP_CONFIGURE_HINTS=1</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Define to avoid flattening internal contents of tar files</span></span><br><span class=\"line\"><span class=\"comment\"># COMP_TAR_INTERNAL_PATHS=1</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Uncomment to turn on programmable completion enhancements.</span></span><br><span class=\"line\"><span class=\"comment\"># Any completions you add in ~/.bash_completion are sourced last.</span></span><br><span class=\"line\"><span class=\"comment\"># [[ -f /etc/bash_completion ]] &amp;&amp; . /etc/bash_completion</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># History Options</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Don't put duplicate lines in the history.</span></span><br><span class=\"line\"><span class=\"comment\"># export HISTCONTROL=$HISTCONTROL$&#123;HISTCONTROL+,&#125;ignoredups</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Ignore some controlling instructions</span></span><br><span class=\"line\"><span class=\"comment\"># HISTIGNORE is a colon-delimited list of patterns which should be excluded.</span></span><br><span class=\"line\"><span class=\"comment\"># The '&amp;' is a special pattern which suppresses duplicate entries.</span></span><br><span class=\"line\"><span class=\"comment\"># export HISTIGNORE=$'[ \\t]*:&amp;:[fb]g:exit'</span></span><br><span class=\"line\"><span class=\"comment\"># export HISTIGNORE=$'[ \\t]*:&amp;:[fb]g:exit:ls' # Ignore the ls command as well</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Whenever displaying the prompt, write the previous line to disk</span></span><br><span class=\"line\"><span class=\"comment\"># export PROMPT_COMMAND=\"history -a\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Aliases</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Some people use a different file for aliases</span></span><br><span class=\"line\"><span class=\"comment\"># if [ -f \"$&#123;HOME&#125;/.bash_aliases\" ]; then</span></span><br><span class=\"line\"><span class=\"comment\">#   source \"$&#123;HOME&#125;/.bash_aliases\"</span></span><br><span class=\"line\"><span class=\"comment\"># fi</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Some example alias instructions</span></span><br><span class=\"line\"><span class=\"comment\"># If these are enabled they will be used instead of any instructions</span></span><br><span class=\"line\"><span class=\"comment\"># they may mask.  For example, alias rm='rm -i' will mask the rm</span></span><br><span class=\"line\"><span class=\"comment\"># application.  To override the alias instruction use a \\ before, ie</span></span><br><span class=\"line\"><span class=\"comment\"># \\rm will call the real rm not the alias.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Interactive operation...</span></span><br><span class=\"line\"><span class=\"comment\"># alias rm='rm -i'</span></span><br><span class=\"line\"><span class=\"comment\"># alias cp='cp -i'</span></span><br><span class=\"line\"><span class=\"comment\"># alias mv='mv -i'</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Default to human readable figures</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> df=<span class=\"string\">'df -h'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> du=<span class=\"string\">'du -h'</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Misc :)</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> less=<span class=\"string\">'less -r'</span>                          <span class=\"comment\"># raw control characters</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> <span class=\"built_in\">whence</span>=<span class=\"string\">'type -a'</span>                        <span class=\"comment\"># where, of a sort</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> grep=<span class=\"string\">'grep --color'</span>                     <span class=\"comment\"># show differences in colour</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> egrep=<span class=\"string\">'egrep --color=auto'</span>              <span class=\"comment\"># show differences in colour</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> fgrep=<span class=\"string\">'fgrep --color=auto'</span>              <span class=\"comment\"># show differences in colour</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Some shortcuts for different directory listings</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> ls=<span class=\"string\">'ls -hF --color=tty'</span>                 <span class=\"comment\"># classify files in colour</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> dir=<span class=\"string\">'ls --color=auto --format=vertical'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> vdir=<span class=\"string\">'ls --color=auto --format=long'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> ll=<span class=\"string\">'ls -l'</span>                              <span class=\"comment\"># long list</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> la=<span class=\"string\">'ls -A'</span>                              <span class=\"comment\"># all but . and ..</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> l=<span class=\"string\">'ls -CF'</span>                              <span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> hexopull=<span class=\"string\">'cd ~/Hexo &amp;&amp; git fetch --all &amp;&amp; git reset --hard origin/master &amp;&amp; git pull'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> hexopush=<span class=\"string\">'cd ~/Hexo &amp;&amp; hexo clean &amp;&amp; hexo g -d &amp;&amp; git add -A &amp;&amp; git commit -m \"update\" &amp;&amp; git push origin master'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> algpull=<span class=\"string\">'cd ~/alg &amp;&amp; git fetch --all &amp;&amp; git reset --hard origin/master &amp;&amp; git pull'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> algpush=<span class=\"string\">'cd ~/alg &amp;&amp; hexo clean &amp;&amp; hexo g -d &amp;&amp; git add -A &amp;&amp; git commit -m \"update\" &amp;&amp; git push origin master'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> hexodebug=<span class=\"string\">'hexo clean &amp;&amp; hexo g &amp;&amp; hexo s --debug'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Umask</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># /etc/profile sets 022, removing write perms to group + others.</span></span><br><span class=\"line\"><span class=\"comment\"># Set a more restrictive umask: i.e. no exec perms for others:</span></span><br><span class=\"line\"><span class=\"comment\"># umask 027</span></span><br><span class=\"line\"><span class=\"comment\"># Paranoid: neither group nor others have any perms:</span></span><br><span class=\"line\"><span class=\"comment\"># umask 077</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Functions</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Some people use a different file for functions</span></span><br><span class=\"line\"><span class=\"comment\"># if [ -f \"$&#123;HOME&#125;/.bash_functions\" ]; then</span></span><br><span class=\"line\"><span class=\"comment\">#   source \"$&#123;HOME&#125;/.bash_functions\"</span></span><br><span class=\"line\"><span class=\"comment\"># fi</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Some example functions:</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># a) function settitle</span></span><br><span class=\"line\"><span class=\"comment\"># settitle ()</span></span><br><span class=\"line\"><span class=\"comment\"># &#123;</span></span><br><span class=\"line\"><span class=\"comment\">#   echo -ne \"\\e]2;$@\\a\\e]1;$@\\a\";</span></span><br><span class=\"line\"><span class=\"comment\"># &#125;</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># b) function cd_func</span></span><br><span class=\"line\"><span class=\"comment\"># This function defines a 'cd' replacement function capable of keeping,</span></span><br><span class=\"line\"><span class=\"comment\"># displaying and accessing history of visited directories, up to 10 entries.</span></span><br><span class=\"line\"><span class=\"comment\"># To use it, uncomment it, source this file and try 'cd --'.</span></span><br><span class=\"line\"><span class=\"comment\"># acd_func 1.0.5, 10-nov-2004</span></span><br><span class=\"line\"><span class=\"comment\"># Petar Marinov, http:/geocities.com/h2428, this is public domain</span></span><br><span class=\"line\"><span class=\"comment\"># cd_func ()</span></span><br><span class=\"line\"><span class=\"comment\"># &#123;</span></span><br><span class=\"line\"><span class=\"comment\">#   local x2 the_new_dir adir index</span></span><br><span class=\"line\"><span class=\"comment\">#   local -i cnt</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#   if [[ $1 ==  \"--\" ]]; then</span></span><br><span class=\"line\"><span class=\"comment\">#     dirs -v</span></span><br><span class=\"line\"><span class=\"comment\">#     return 0</span></span><br><span class=\"line\"><span class=\"comment\">#   fi</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#   the_new_dir=$1</span></span><br><span class=\"line\"><span class=\"comment\">#   [[ -z $1 ]] &amp;&amp; the_new_dir=$HOME</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#   if [[ $&#123;the_new_dir:0:1&#125; == '-' ]]; then</span></span><br><span class=\"line\"><span class=\"comment\">#     #</span></span><br><span class=\"line\"><span class=\"comment\">#     # Extract dir N from dirs</span></span><br><span class=\"line\"><span class=\"comment\">#     index=$&#123;the_new_dir:1&#125;</span></span><br><span class=\"line\"><span class=\"comment\">#     [[ -z $index ]] &amp;&amp; index=1</span></span><br><span class=\"line\"><span class=\"comment\">#     adir=$(dirs +$index)</span></span><br><span class=\"line\"><span class=\"comment\">#     [[ -z $adir ]] &amp;&amp; return 1</span></span><br><span class=\"line\"><span class=\"comment\">#     the_new_dir=$adir</span></span><br><span class=\"line\"><span class=\"comment\">#   fi</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#   #</span></span><br><span class=\"line\"><span class=\"comment\">#   # '~' has to be substituted by $&#123;HOME&#125;</span></span><br><span class=\"line\"><span class=\"comment\">#   [[ $&#123;the_new_dir:0:1&#125; == '~' ]] &amp;&amp; the_new_dir=\"$&#123;HOME&#125;$&#123;the_new_dir:1&#125;\"</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#   #</span></span><br><span class=\"line\"><span class=\"comment\">#   # Now change to the new dir and add to the top of the stack</span></span><br><span class=\"line\"><span class=\"comment\">#   pushd \"$&#123;the_new_dir&#125;\" &gt; /dev/null</span></span><br><span class=\"line\"><span class=\"comment\">#   [[ $? -ne 0 ]] &amp;&amp; return 1</span></span><br><span class=\"line\"><span class=\"comment\">#   the_new_dir=$(pwd)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#   #</span></span><br><span class=\"line\"><span class=\"comment\">#   # Trim down everything beyond 11th entry</span></span><br><span class=\"line\"><span class=\"comment\">#   popd -n +11 2&gt;/dev/null 1&gt;/dev/null</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#   #</span></span><br><span class=\"line\"><span class=\"comment\">#   # Remove any other occurence of this dir, skipping the top of the stack</span></span><br><span class=\"line\"><span class=\"comment\">#   for ((cnt=1; cnt &lt;= 10; cnt++)); do</span></span><br><span class=\"line\"><span class=\"comment\">#     x2=$(dirs +$&#123;cnt&#125; 2&gt;/dev/null)</span></span><br><span class=\"line\"><span class=\"comment\">#     [[ $? -ne 0 ]] &amp;&amp; return 0</span></span><br><span class=\"line\"><span class=\"comment\">#     [[ $&#123;x2:0:1&#125; == '~' ]] &amp;&amp; x2=\"$&#123;HOME&#125;$&#123;x2:1&#125;\"</span></span><br><span class=\"line\"><span class=\"comment\">#     if [[ \"$&#123;x2&#125;\" == \"$&#123;the_new_dir&#125;\" ]]; then</span></span><br><span class=\"line\"><span class=\"comment\">#       popd -n +$cnt 2&gt;/dev/null 1&gt;/dev/null</span></span><br><span class=\"line\"><span class=\"comment\">#       cnt=cnt-1</span></span><br><span class=\"line\"><span class=\"comment\">#     fi</span></span><br><span class=\"line\"><span class=\"comment\">#   done</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#   return 0</span></span><br><span class=\"line\"><span class=\"comment\"># &#125;</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># alias cd=cd_func</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">alias</span> grep=<span class=\"string\">'grep --color=auto --exclude-dir=&#123;.bzr,CVS,.git,.hg,.svn&#125;'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> e=explorer</span><br><span class=\"line\"><span class=\"built_in\">alias</span> giturl=<span class=\"string\">'curl -i https://git.io -F'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> poweroff=<span class=\"string\">'(shutdown -s -t 0 &amp;); (net stop autossh_5679 &amp;);'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> reboot=<span class=\"string\">'(shutdown -r -t 0 &amp;); (net stop autossh_5679 &amp;);'</span></span><br><span class=\"line\"><span class=\"comment\"># alias uptime='net stats server | grep -P -o \"[\\d/]+.*M$\" --color=never'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> lcd=<span class=\"string\">'/e/UtilityPrograms/_exe/TurnOffLCD.exe'</span></span><br><span class=\"line\"><span class=\"comment\"># alias pb='~/App/pastebinit/pastebinit -b http://paste.ubuntu.com'</span></span><br><span class=\"line\"><span class=\"comment\"># alias pb='~/App/pastebinit/pastebinit -b http://paste.ubuntu.org.cn'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> wolfram=<span class=\"string\">'winpty /e/Mathematica/11.1/wolfram'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> loginpc=<span class=\"string\">'cygrunsrv -S autossh_5679'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> viz=<span class=\"string\">'vim `which z`'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> memopull=<span class=\"string\">'cd ~/memos &amp;&amp; git fetch --all &amp;&amp; git reset --hard origin/master &amp;&amp; git pull'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> memopush=<span class=\"string\">'cd ~/memos &amp;&amp; hexo clean &amp;&amp; hexo g -d &amp;&amp; git add -A &amp;&amp; git commit -m \"update\" &amp;&amp; git push origin master'</span></span><br><span class=\"line\"></span><br><span class=\"line\">HISTTIMEFORMAT=<span class=\"string\">'%F %T '</span></span><br><span class=\"line\">HISTCONTROL=erasedups</span><br><span class=\"line\">HISTIGNORE=<span class=\"string\">\"ls:pwd:cd:clear:vim:fg:bg:jobs:top:htop\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">export</span> LESS_TERMCAP_mb=$(<span class=\"built_in\">printf</span> <span class=\"string\">'\\e[01;31m'</span>) <span class=\"comment\"># enter blinking mode - red</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> LESS_TERMCAP_md=$(<span class=\"built_in\">printf</span> <span class=\"string\">'\\e[01;35m'</span>) <span class=\"comment\"># enter double-bright mode - bold, magenta</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> LESS_TERMCAP_me=$(<span class=\"built_in\">printf</span> <span class=\"string\">'\\e[0m'</span>) <span class=\"comment\"># turn off all appearance modes (mb, md, so, us)</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> LESS_TERMCAP_se=$(<span class=\"built_in\">printf</span> <span class=\"string\">'\\e[0m'</span>) <span class=\"comment\"># leave standout mode</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> LESS_TERMCAP_so=$(<span class=\"built_in\">printf</span> <span class=\"string\">'\\e[01;33m'</span>) <span class=\"comment\"># enter standout mode - yellow</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> LESS_TERMCAP_ue=$(<span class=\"built_in\">printf</span> <span class=\"string\">'\\e[0m'</span>) <span class=\"comment\"># leave underline mode</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> LESS_TERMCAP_us=$(<span class=\"built_in\">printf</span> <span class=\"string\">'\\e[04;36m'</span>) <span class=\"comment\"># enter underline mode - cyan</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># export http_proxy=\"http://192.168.1.102:1888/\"</span></span><br><span class=\"line\"><span class=\"comment\"># export https_proxy=\"https://192.168.1.102:1888/\"</span></span><br><span class=\"line\"><span class=\"comment\"># export ftp_proxy=\"ftp://192.168.1.102:1888/\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># export PS1=\"[\\[\\e[01;33m\\]foo\\[\\e[37;40m\\]@\\[\\e[34;40m\\]PHANTOM \\[\\e[37;40m\\]\\t \\[\\e[34;40m\\]\\W\\[\\e[0m\\]]$ \"</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> PS1=<span class=\"string\">\"[ \\[\\e[37;40m\\]\\t \\[\\e[34;40m\\]\\W\\[\\e[0m\\] ]$ \"</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> GTAGSLIBPATH=<span class=\"variable\">$GTAGSLIBPATH</span>:/usr/include/</span><br><span class=\"line\"><span class=\"built_in\">export</span> HISTFILESIZE=50000</span><br><span class=\"line\"><span class=\"built_in\">export</span> HISTSIZE=50000</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:~/App/bin</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/e/Nodejs</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/c/Users/Liang/AppData/Roaming/npm</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/e/MySQL/bin</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/d/Java/jdk-10/bin</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/f/WorkingDirectory/Bin</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/e/TexLive/2018/bin/win32</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/e/R/bin/x64</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/f/WorkingDirectory/Bin</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/c/Users/Liang/AppData/Roaming/<span class=\"built_in\">local</span>/bin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># STACK_ROOT=/f/HaskellStack</span></span><br></pre></td></tr></table></figure>\n</div></div></li>\r\n<li>比如 Git 需要代理: <div><div class=\"fold_hider\"><div class=\"close hider_title\">.gitconfig</div></div><div class=\"fold\">\n<figure class=\"highlight\"><figcaption><span>.gitconfig</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[user]</span></span><br><span class=\"line\">    name = michaelHL</span><br><span class=\"line\">    email = lbgnmic@gmail.com</span><br><span class=\"line\"><span class=\"section\">[github]</span></span><br><span class=\"line\">    user = michaelHL</span><br><span class=\"line\"><span class=\"section\">[http]</span></span><br><span class=\"line\">    proxy = socks5://127.0.0.1:1888</span><br></pre></td></tr></table></figure>\n</div></div></li>\r\n<li>比如忽略大小写的 <code>.inputrc</code>： <div><div class=\"fold_hider\"><div class=\"close hider_title\">.inputrc</div></div><div class=\"fold\">\n<figure class=\"highlight bash\"><figcaption><span>.inputrc</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># To the extent possible under law, the author(s) have dedicated all </span></span><br><span class=\"line\"><span class=\"comment\"># copyright and related and neighboring rights to this software to the </span></span><br><span class=\"line\"><span class=\"comment\"># public domain worldwide. This software is distributed without any warranty. </span></span><br><span class=\"line\"><span class=\"comment\"># You should have received a copy of the CC0 Public Domain Dedication along </span></span><br><span class=\"line\"><span class=\"comment\"># with this software. </span></span><br><span class=\"line\"><span class=\"comment\"># If not, see &lt;http://creativecommons.org/publicdomain/zero/1.0/&gt;. </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ~/.inputrc: readline initialization file.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># The copy in your home directory (~/.inputrc) is yours, please</span></span><br><span class=\"line\"><span class=\"comment\"># feel free to customise it to create a shell</span></span><br><span class=\"line\"><span class=\"comment\"># environment to your liking.  If you feel a change</span></span><br><span class=\"line\"><span class=\"comment\"># would be benifitial to all, please feel free to send</span></span><br><span class=\"line\"><span class=\"comment\"># a patch to the msys2 mailing list.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># the following line is actually</span></span><br><span class=\"line\"><span class=\"comment\"># equivalent to \"\\C-?\": delete-char</span></span><br><span class=\"line\"><span class=\"comment\"># \"\\e[3~\": delete-char</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># VT</span></span><br><span class=\"line\"><span class=\"comment\"># \"\\e[1~\": beginning-of-line</span></span><br><span class=\"line\"><span class=\"comment\"># \"\\e[4~\": end-of-line</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># kvt</span></span><br><span class=\"line\"><span class=\"comment\"># \"\\e[H\": beginning-of-line</span></span><br><span class=\"line\"><span class=\"comment\"># \"\\e[F\": end-of-line</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># rxvt and konsole (i.e. the KDE-app...)</span></span><br><span class=\"line\"><span class=\"comment\"># \"\\e[7~\": beginning-of-line</span></span><br><span class=\"line\"><span class=\"comment\"># \"\\e[8~\": end-of-line</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># VT220</span></span><br><span class=\"line\"><span class=\"comment\"># \"\\eOH\": beginning-of-line</span></span><br><span class=\"line\"><span class=\"comment\"># \"\\eOF\": end-of-line</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Allow 8-bit input/output</span></span><br><span class=\"line\"><span class=\"comment\"># set meta-flag on</span></span><br><span class=\"line\"><span class=\"comment\"># set convert-meta off</span></span><br><span class=\"line\"><span class=\"comment\"># set input-meta on</span></span><br><span class=\"line\"><span class=\"comment\"># set output-meta on</span></span><br><span class=\"line\"><span class=\"comment\">#$if Bash</span></span><br><span class=\"line\">  <span class=\"comment\"># Don't ring bell on completion</span></span><br><span class=\"line\">  <span class=\"built_in\">set</span> bell-style none</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># or, don't beep at me - show me</span></span><br><span class=\"line\">  <span class=\"comment\">#set bell-style visible</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Show all instead of beeping first</span></span><br><span class=\"line\">  <span class=\"built_in\">set</span> show-all-if-ambiguous off</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Filename completion/expansion</span></span><br><span class=\"line\">  <span class=\"built_in\">set</span> completion-ignore-case on</span><br><span class=\"line\">  <span class=\"comment\">#set show-all-if-ambiguous on</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Expand homedir name</span></span><br><span class=\"line\">  <span class=\"comment\">#set expand-tilde on</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Append \"/\" to all dirnames</span></span><br><span class=\"line\">  <span class=\"comment\">#set mark-directories on</span></span><br><span class=\"line\">  <span class=\"comment\">#set mark-symlinked-directories on</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># visible-stats</span></span><br><span class=\"line\">  <span class=\"comment\"># Append a mark according to the file type in a listing</span></span><br><span class=\"line\">  <span class=\"built_in\">set</span> visible-stats off</span><br><span class=\"line\">  <span class=\"built_in\">set</span> mark-directories on</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Match all files</span></span><br><span class=\"line\">  <span class=\"comment\">#set match-hidden-files on</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># 'Magic Space'</span></span><br><span class=\"line\">  <span class=\"comment\"># Insert a space character then performs</span></span><br><span class=\"line\">  <span class=\"comment\"># a history expansion in the line</span></span><br><span class=\"line\">  <span class=\"comment\">#Space: magic-space</span></span><br><span class=\"line\"><span class=\"comment\">#$endif</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># MSYSTEM is emacs based</span></span><br><span class=\"line\"><span class=\"variable\">$if</span> mode=emacs</span><br><span class=\"line\">  <span class=\"comment\"># Common to Console &amp; RXVT</span></span><br><span class=\"line\">  <span class=\"string\">\"\\C-?\"</span>: backward-kill-line         <span class=\"comment\"># Ctrl-BackSpace</span></span><br><span class=\"line\">  <span class=\"string\">\"\\e[2~\"</span>: paste-from-clipboard      <span class=\"comment\"># \"Ins. Key\"</span></span><br><span class=\"line\">  <span class=\"string\">\"\\e[5~\"</span>: beginning-of-history      <span class=\"comment\"># Page up</span></span><br><span class=\"line\">  <span class=\"string\">\"\\e[6~\"</span>: end-of-history            <span class=\"comment\"># Page down</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"variable\">$if</span> term=msys <span class=\"comment\"># RXVT</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e[7~\"</span>: beginning-of-line      <span class=\"comment\"># Home Key</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e[8~\"</span>: end-of-line            <span class=\"comment\"># End Key</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e[11~\"</span>: display-shell-version <span class=\"comment\"># F1</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e[15~\"</span>: re-read-init-file     <span class=\"comment\"># F5</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e[12~\"</span>: <span class=\"string\">\"Function Key 2\"</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e[13~\"</span>: <span class=\"string\">\"Function Key 3\"</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e[14~\"</span>: <span class=\"string\">\"Function Key 4\"</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e[17~\"</span>: <span class=\"string\">\"Function Key 6\"</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e[18~\"</span>: <span class=\"string\">\"Function Key 7\"</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e[19~\"</span>: <span class=\"string\">\"Function Key 8\"</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e[20~\"</span>: <span class=\"string\">\"Function Key 9\"</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e[21~\"</span>: <span class=\"string\">\"Function Key 10\"</span></span><br><span class=\"line\">  <span class=\"variable\">$else</span></span><br><span class=\"line\">  <span class=\"comment\"># Eh, normal Console is not really cygwin anymore, is it? Using 'else' instead. -mstormo</span></span><br><span class=\"line\">  <span class=\"comment\"># $if term=cygwin # Console</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e[1~\"</span>: beginning-of-line      <span class=\"comment\"># Home Key</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e[4~\"</span>: end-of-line            <span class=\"comment\"># End Key</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e[3~\"</span>: delete-char      <span class=\"comment\"># Delete Key</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e\\e[C\"</span>: forward-word      <span class=\"comment\"># Alt-Right</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e\\e[D\"</span>: backward-word      <span class=\"comment\"># Alt-Left</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e[1;5C\"</span>: forward-word   <span class=\"comment\"># ctrl + right</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e[1;5D\"</span>: backward-word  <span class=\"comment\"># ctrl + left </span></span><br><span class=\"line\">    <span class=\"string\">\"\\e[17~\"</span>: <span class=\"string\">\"Function Key 6\"</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e[18~\"</span>: <span class=\"string\">\"Function Key 7\"</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e[19~\"</span>: <span class=\"string\">\"Function Key 8\"</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e[20~\"</span>: <span class=\"string\">\"Function Key 9\"</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e[21~\"</span>: <span class=\"string\">\"Function Key 10\"</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e[23~\"</span>: <span class=\"string\">\"Function Key 11\"</span></span><br><span class=\"line\">  <span class=\"variable\">$endif</span></span><br><span class=\"line\"><span class=\"variable\">$endif</span></span><br></pre></td></tr></table></figure>\n</div></div></li>\r\n<li>比如 Vim 配置文件 <a href=\"/src/vimrc\"><code>.vimrc</code></a></li>\r\n</ul>\r\n<h3 id=\"编译-vim\">编译 Vim</h3>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pacman -S ncurses-devel libcrypt-devel</span><br><span class=\"line\">./configure --with-features=huge \\</span><br><span class=\"line\">            --<span class=\"built_in\">enable</span>-luainterp=yes \\</span><br><span class=\"line\">            --<span class=\"built_in\">enable</span>-perlinterp=yes \\</span><br><span class=\"line\">            --<span class=\"built_in\">enable</span>-pythoninterp=yes \\</span><br><span class=\"line\">            --<span class=\"built_in\">enable</span>-python3interp=yes \\</span><br><span class=\"line\">            --with-lua-prefix=/usr/<span class=\"built_in\">local</span> \\</span><br><span class=\"line\">            --<span class=\"built_in\">enable</span>-fontset=yes \\</span><br><span class=\"line\">            --<span class=\"built_in\">enable</span>-cscope=yes \\</span><br><span class=\"line\">            --<span class=\"built_in\">enable</span>-multibyte \\</span><br><span class=\"line\">            --<span class=\"built_in\">disable</span>-gui \\</span><br><span class=\"line\">            --<span class=\"built_in\">enable</span>-fail-if-missing \\</span><br><span class=\"line\">            --prefix=/usr/<span class=\"built_in\">local</span> \\</span><br><span class=\"line\">            --with-compiledby=<span class=\"string\">'Professional operations'</span></span><br></pre></td></tr></table></figure>\r\n<p>这里提醒自己下，折腾有度，比如尝试在 MSYS2 中编译 <a href=\"https://github.com/Valloric/YouCompleteMe\" target=\"_blank\" rel=\"noopener\">ycm</a> 十几次未遂这种行为是不可取的。</p>\r\n<h3 id=\"替换默认终端\">替换默认终端</h3>\r\n<p>将自带的 <a href=\"https://mintty.github.io\" target=\"_blank\" rel=\"noopener\">Mintty</a> 换成 Windows 下很棒的终端模拟器：<a href=\"https://conemu.github.io\" target=\"_blank\" rel=\"noopener\">ConEmu</a>。</p>\r\n<ol type=\"1\">\r\n<li>设置为默认的系统终端程序，替换掉残废的 cmd：<code>Settings</code> - <code>Integration</code> - <code>Default term - Force ConEmu as default terminal for console applications</code></li>\r\n<li>如果希望「劫持」某些程序调试时使用的终端程序（比如 VS 在调试时会唤起系统默认的 cmd），在下面的输入框中填入 <code>explorer.exe|devenv.exe</code></li>\r\n<li>对于 MSYS2 的集成：\r\n<ol type=\"1\">\r\n<li>新建 Task：<code>set MSYSTEM=MINGW64 &amp; \"/path/to/MSYS-connector -cur_console:n\"</code></li>\r\n<li>Connector 网址：<a href=\"https://github.com/Maximus5/cygwin-connector\" target=\"_blank\" rel=\"noopener\">cygwin-connector</a>，不同版本的设置如下：\r\n<ul>\r\n<li>Cygwin：<code>conemu-cyg-32.exe</code> and <code>conemu-cyg-64.exe</code></li>\r\n<li>MSYS 1.0：<code>conemu-msys-32.exe</code></li>\r\n<li>MSYS 2.0：<code>conemu-msys2-32.exe</code> and <code>conemu-msys2-64.exe</code></li>\r\n</ul>\r\n复制到 <code>sh.exe</code> 同目录下即可</li>\r\n</ol></li>\r\n<li>启动时的相关设定（<code>Settings</code> - <code>Startup</code> - <code>Environment）</code>： <figure class=\"highlight bat\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">set</span> <span class=\"built_in\">PATH</span>=<span class=\"variable\">%ConEmuBaseDir%</span>\\Scripts;<span class=\"variable\">%PATH%</span></span><br><span class=\"line\"><span class=\"built_in\">chcp</span> utf-<span class=\"number\">8</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> LANG=en_US.utf-<span class=\"number\">8</span></span><br></pre></td></tr></table></figure></li>\r\n<li>当前的配置文件 <a href=\"/src/conemu.xml\">conemu.xml</a></li>\r\n</ol>\r\n<p><i class=\"fa fa-warning fa-fw\"></i>新版本的 ConEmu 已经自带了适配各种系统下的 <code>connector</code>，所以在 Task 里面关于 <code>connector</code> 的路径直接填写其程序名即可。（见 <a href=\"https://conemu.github.io/en/CygwinMsysConnector.html#cygwinmsys-terminal-connector\" target=\"_blank\" rel=\"noopener\">cygwin/msys terminal connector</a>）</p>\r\n<h4 id=\"题外话---sublime-text-调用-conemu\">题外话 - Sublime Text 调用 ConEmu</h4>\r\n<p>对于一般程序，在设置中的 <code>Integration</code> - <code>Default term</code> - <code>List of ...</code> 中添加程序，ConEmu 将被自动唤起以替代 cmd，但添加 Sublime Text 的 <code>sublime_text.exe</code> 并没有反应，只能曲线救国，比如 C 类型文件的编译配置文件 <code>C.sublime-build</code>：</p>\r\n<figure class=\"highlight\"><figcaption><span>C.sublime-build</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    // \"shell_cmd\": \"gcc -std=c11 -Wall -s \\\"$&#123;file&#125;\\\" -o \\\"$&#123;file_path&#125;/$&#123;file_base_name&#125;\\\" &amp;&amp; \\\"$&#123;file_path&#125;/$&#123;file_base_name&#125;\\\"\",</span><br><span class=\"line\">    \"shell_cmd\": \"/path/to/conemu /single -run cmd /c -cur_console:n \\\"gcc -std=c11 -Wall -s $&#123;file&#125; -o $&#123;file_path&#125;/$&#123;file_base_name&#125; &amp;&amp; $&#123;file_path&#125;/$&#123;file_base_name&#125; &amp; pause \\\"\",</span><br><span class=\"line\">    \"file_regex\": \"^(..[^:]*):([0-9]+):?([0-9]+)?:? (.*)$\",</span><br><span class=\"line\">    \"working_dir\": \"$&#123;file_path&#125;\",</span><br><span class=\"line\">    \"selector\": \"source.c\"</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<hr>\r\n<h2 id=\"问题\">问题</h2>\r\n<ul>\r\n<li>如果发现程序的输出被缓冲：可尝试利用工具 <code>winpty</code></li>\r\n<li><code>git clone</code> 时出现字符相关的奇怪问题：使用 <strong>MSYS</strong> 而不是 MinGW64 或者 MinGW32</li>\r\n<li>2018-02-09 <i class=\"fa fa-warning fa-fw\"></i> ncurses 版本升级为 <code>ncurses-6.1.20180127-1-x86_64</code> 后 ConEmu 终端会出现各种光标问题，可通过回退版本至 <a href=\"https://mirrors.tuna.tsinghua.edu.cn/msys2/msys/x86_64/ncurses-6.0.20170708-2-x86_64.pkg.tar.xz\" target=\"_blank\" rel=\"noopener\"><code>ncurses-6.0.20170708-2-x86_64</code></a> 来解决： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pacman -R ncurses-devel</span><br><span class=\"line\">pacman -U ncurses-6.0.20170708-2-x86_64.pkg.tar.xz --force</span><br></pre></td></tr></table></figure></li>\r\n<li>2018-02-10 <i class=\"fa fa-warning fa-fw\"></i> 如果集成在 VSCode 中的 MSYS2 也出现上述情况, 可考虑直接使用 <code>connector</code>： <figure class=\"highlight json\"><figcaption><span>settings.json</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"terminal.integrated.shell.windows\"</span>: <span class=\"string\">\"E:/UtilityPrograms/ConEmu/ConEmu/conemu-msys2-64.exe\"</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure> 或者如果仅需为清屏设置快捷键： <figure class=\"highlight json\"><figcaption><span>keybindings.json</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"key\"</span>: <span class=\"string\">\"ctrl+l\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"command\"</span>: <span class=\"string\">\"workbench.action.terminal.clear\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"when\"</span>: <span class=\"string\">\"terminalFocus\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\r\n</ul>\r\n","site":{"data":{}},"excerpt":"<p>在自己的 Windows 10 系统上使用 <a href=\"http://www.msys2.org\" target=\"_blank\" rel=\"noopener\">MSYS2</a> 已经有段时间了，Windows 上的类 *nix 工作环境简直不要太完美，办事效率杠杠的（如果没事少折腾的话）。为啥不用 Cygwin？因为很卡很慢，连 DUANG 的特效也拯救不了它，而且它的 POSIX 权限问题会把文件系统弄的一团糟。下面开始记录从刚开始的小白逐渐成为现在熟练使用的 <del>大牛</del> 大白的辛酸历程…</p>","more":"<h2 id=\"msys2-安装与配置\">MSYS2 安装与配置</h2>\r\n<p>这里主要参考 <a href=\"http://blog.csdn.net/callinglove/article/details/48601775\" target=\"_blank\" rel=\"noopener\">MSYS2开发环境搭建</a>。</p>\r\n<ol type=\"1\">\r\n<li>下载 MSYS2 installer，建议安装路径不要包含空格（个人装在了 <code>D:\\MSYS2</code> 下）</li>\r\n<li>安装完毕后，开始菜单中生成的三个快捷方式为： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MSYS2 MinGW 32-bit - D:\\MSYS2\\msys2_shell.cmd -mingw32</span><br><span class=\"line\">MSYS2 MinGW 64-bit - D:\\MSYS2\\msys2_shell.cmd -mingw64</span><br><span class=\"line\">MSYS2 MSYS         - D:\\MSYS2\\msys2_shell.cmd -msys</span><br></pre></td></tr></table></figure></li>\r\n<li>修改软件源，修改 <code>/etc/pacman.d/</code> 目录下的三个文件，换上清华的 repo，<code>.msys</code>，<code>.mingw32</code>，<code>.mingw64</code> 分别对应 MSYS2 里的三套系统，分别在三个文件最上方填写（注意对应）： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Server = https://mirrors.tuna.tsinghua.edu.cn/msys2/msys/<span class=\"variable\">$arch</span></span><br><span class=\"line\">Server = https://mirrors.tuna.tsinghua.edu.cn/msys2/mingw/i686</span><br><span class=\"line\">Server = https://mirrors.tuna.tsinghua.edu.cn/msys2/mingw/x86_64</span><br></pre></td></tr></table></figure></li>\r\n<li>任选一个（<code>mingw32.exe</code>，<code>mingw64.exe</code>，<code>msys2.exe</code>）进入 MSYS2 的终端，更新系统： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pacman -Syu</span><br></pre></td></tr></table></figure> 提示需退出后更新, 强行关闭后重进, 再重复上述命令即可。 更新其他包: <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pacman -Su</span><br></pre></td></tr></table></figure></li>\r\n<li>安装开发工具链： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pacman -S base-devel</span><br><span class=\"line\">pacman -S gcc</span><br><span class=\"line\">pacman -S mingw-w64-x86_64-toolchain</span><br><span class=\"line\">pacman -S mingw-w64-i686-toolchain</span><br><span class=\"line\">pacman -S mingw64/mingw-w64-x86_64-clang</span><br><span class=\"line\">pacman -S mingw32/mingw-w64-i686-clang</span><br></pre></td></tr></table></figure></li>\r\n<li>添加环境变量 <code>PATH</code>。由于个人 <code>PATH</code> 中存有 <code>Perl</code> 的开发工具路径，所以考虑将 MSYS2 的路径置于其后： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">\\Strawberry\\perl\\bin</span><br><span class=\"line\">\\Strawberry\\perl\\site\\bin</span><br><span class=\"line\">\\MSYS2\\usr\\bin</span><br><span class=\"line\">\\MSYS2\\mingw64\\bin</span><br><span class=\"line\">\\Strawberry\\c\\bin</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure></li>\r\n</ol>\r\n<h2 id=\"个性化设置\">个性化设置</h2>\r\n<h3 id=\"自动挂载文件\">自动挂载文件</h3>\r\n<!--�16-->\r\n<h3 id=\"配置文件\">配置文件</h3>\r\n<p>于个人 <code>home</code> 目录中，个性化各种配置：</p>\r\n<ul>\r\n<li>比如与 <code>mintty</code> 相关的配置： <div><div class=\"fold_hider\"><div class=\"close hider_title\">.minttyrc</div></div><div class=\"fold\">\n<figure class=\"highlight ini\"><figcaption><span>.minttyrc</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">BoldAsFont</span>=<span class=\"literal\">no</span></span><br><span class=\"line\"><span class=\"attr\">BoldAsColour</span>=<span class=\"literal\">yes</span></span><br><span class=\"line\"><span class=\"attr\">BoldColour</span>=<span class=\"number\">255</span>,<span class=\"number\">255</span>,<span class=\"number\">128</span></span><br><span class=\"line\"><span class=\"attr\">Font</span>=SauceCodePro NF</span><br><span class=\"line\"><span class=\"attr\">FontIsBold</span>=<span class=\"literal\">no</span></span><br><span class=\"line\"><span class=\"attr\">FontHeight</span>=<span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"attr\">RowSpacing</span>=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">ShowHiddenFonts</span>=<span class=\"literal\">yes</span></span><br><span class=\"line\"><span class=\"attr\">CursorColour</span>=<span class=\"number\">255</span>,<span class=\"number\">255</span>,<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"attr\">Transparency</span>=high</span><br><span class=\"line\"><span class=\"attr\">Locale</span>=en_US</span><br><span class=\"line\"><span class=\"attr\">Charset</span>=UTF-<span class=\"number\">8</span></span><br><span class=\"line\"><span class=\"attr\">BellType</span>=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"attr\">CursorType</span>=block</span><br><span class=\"line\"><span class=\"attr\">CursorBlinks</span>=<span class=\"literal\">no</span></span><br><span class=\"line\"><span class=\"attr\">Term</span>=xterm</span><br><span class=\"line\"><span class=\"attr\">Columns</span>=<span class=\"number\">135</span></span><br><span class=\"line\"><span class=\"attr\">Rows</span>=<span class=\"number\">35</span></span><br><span class=\"line\"><span class=\"attr\">CtrlShiftShortcuts</span>=<span class=\"literal\">no</span></span><br><span class=\"line\"><span class=\"attr\">Scrollbar</span>=none</span><br><span class=\"line\"><span class=\"attr\">ClicksTargetApp</span>=<span class=\"literal\">yes</span></span><br><span class=\"line\"><span class=\"attr\">ForegroundColour</span>=<span class=\"number\">223</span>,<span class=\"number\">223</span>,<span class=\"number\">223</span></span><br></pre></td></tr></table></figure>\n</div></div></li>\r\n<li>比如常用的 <a href=\"/src/bashrc\"><code>.bashrc</code></a>： <div><div class=\"fold_hider\"><div class=\"close hider_title\">.bashrc</div></div><div class=\"fold\">\n<figure class=\"highlight bash\"><figcaption><span>.bashrc</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># To the extent possible under law, the author(s) have dedicated all</span></span><br><span class=\"line\"><span class=\"comment\"># copyright and related and neighboring rights to this software to the</span></span><br><span class=\"line\"><span class=\"comment\"># public domain worldwide. This software is distributed without any warranty.</span></span><br><span class=\"line\"><span class=\"comment\"># You should have received a copy of the CC0 Public Domain Dedication along</span></span><br><span class=\"line\"><span class=\"comment\"># with this software.</span></span><br><span class=\"line\"><span class=\"comment\"># If not, see &lt;http://creativecommons.org/publicdomain/zero/1.0/&gt;.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ~/.bashrc: executed by bash(1) for interactive shells.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># The copy in your home directory (~/.bashrc) is yours, please</span></span><br><span class=\"line\"><span class=\"comment\"># feel free to customise it to create a shell</span></span><br><span class=\"line\"><span class=\"comment\"># environment to your liking.  If you feel a change</span></span><br><span class=\"line\"><span class=\"comment\"># would be benifitial to all, please feel free to send</span></span><br><span class=\"line\"><span class=\"comment\"># a patch to the msys2 mailing list.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># User dependent .bashrc file</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># If not running interactively, don't do anything</span></span><br><span class=\"line\">[[ <span class=\"string\">\"$-\"</span> != *i* ]] &amp;&amp; <span class=\"built_in\">return</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Shell Options</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># See man bash for more options...</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Don't wait for job termination notification</span></span><br><span class=\"line\"><span class=\"comment\"># set -o notify</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Don't use ^D to exit</span></span><br><span class=\"line\"><span class=\"comment\"># set -o ignoreeof</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Use case-insensitive filename globbing</span></span><br><span class=\"line\"><span class=\"comment\"># shopt -s nocaseglob</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Make bash append rather than overwrite the history on disk</span></span><br><span class=\"line\"><span class=\"comment\"># shopt -s histappend</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># When changing directory small typos can be ignored by bash</span></span><br><span class=\"line\"><span class=\"comment\"># for example, cd /vr/lgo/apaache would find /var/log/apache</span></span><br><span class=\"line\"><span class=\"comment\"># shopt -s cdspell</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Completion options</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># These completion tuning parameters change the default behavior of bash_completion:</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Define to access remotely checked-out files over passwordless ssh for CVS</span></span><br><span class=\"line\"><span class=\"comment\"># COMP_CVS_REMOTE=1</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Define to avoid stripping description in --option=description of './configure --help'</span></span><br><span class=\"line\"><span class=\"comment\"># COMP_CONFIGURE_HINTS=1</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Define to avoid flattening internal contents of tar files</span></span><br><span class=\"line\"><span class=\"comment\"># COMP_TAR_INTERNAL_PATHS=1</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Uncomment to turn on programmable completion enhancements.</span></span><br><span class=\"line\"><span class=\"comment\"># Any completions you add in ~/.bash_completion are sourced last.</span></span><br><span class=\"line\"><span class=\"comment\"># [[ -f /etc/bash_completion ]] &amp;&amp; . /etc/bash_completion</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># History Options</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Don't put duplicate lines in the history.</span></span><br><span class=\"line\"><span class=\"comment\"># export HISTCONTROL=$HISTCONTROL$&#123;HISTCONTROL+,&#125;ignoredups</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Ignore some controlling instructions</span></span><br><span class=\"line\"><span class=\"comment\"># HISTIGNORE is a colon-delimited list of patterns which should be excluded.</span></span><br><span class=\"line\"><span class=\"comment\"># The '&amp;' is a special pattern which suppresses duplicate entries.</span></span><br><span class=\"line\"><span class=\"comment\"># export HISTIGNORE=$'[ \\t]*:&amp;:[fb]g:exit'</span></span><br><span class=\"line\"><span class=\"comment\"># export HISTIGNORE=$'[ \\t]*:&amp;:[fb]g:exit:ls' # Ignore the ls command as well</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Whenever displaying the prompt, write the previous line to disk</span></span><br><span class=\"line\"><span class=\"comment\"># export PROMPT_COMMAND=\"history -a\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Aliases</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Some people use a different file for aliases</span></span><br><span class=\"line\"><span class=\"comment\"># if [ -f \"$&#123;HOME&#125;/.bash_aliases\" ]; then</span></span><br><span class=\"line\"><span class=\"comment\">#   source \"$&#123;HOME&#125;/.bash_aliases\"</span></span><br><span class=\"line\"><span class=\"comment\"># fi</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Some example alias instructions</span></span><br><span class=\"line\"><span class=\"comment\"># If these are enabled they will be used instead of any instructions</span></span><br><span class=\"line\"><span class=\"comment\"># they may mask.  For example, alias rm='rm -i' will mask the rm</span></span><br><span class=\"line\"><span class=\"comment\"># application.  To override the alias instruction use a \\ before, ie</span></span><br><span class=\"line\"><span class=\"comment\"># \\rm will call the real rm not the alias.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Interactive operation...</span></span><br><span class=\"line\"><span class=\"comment\"># alias rm='rm -i'</span></span><br><span class=\"line\"><span class=\"comment\"># alias cp='cp -i'</span></span><br><span class=\"line\"><span class=\"comment\"># alias mv='mv -i'</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Default to human readable figures</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> df=<span class=\"string\">'df -h'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> du=<span class=\"string\">'du -h'</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Misc :)</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> less=<span class=\"string\">'less -r'</span>                          <span class=\"comment\"># raw control characters</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> <span class=\"built_in\">whence</span>=<span class=\"string\">'type -a'</span>                        <span class=\"comment\"># where, of a sort</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> grep=<span class=\"string\">'grep --color'</span>                     <span class=\"comment\"># show differences in colour</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> egrep=<span class=\"string\">'egrep --color=auto'</span>              <span class=\"comment\"># show differences in colour</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> fgrep=<span class=\"string\">'fgrep --color=auto'</span>              <span class=\"comment\"># show differences in colour</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Some shortcuts for different directory listings</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> ls=<span class=\"string\">'ls -hF --color=tty'</span>                 <span class=\"comment\"># classify files in colour</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> dir=<span class=\"string\">'ls --color=auto --format=vertical'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> vdir=<span class=\"string\">'ls --color=auto --format=long'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> ll=<span class=\"string\">'ls -l'</span>                              <span class=\"comment\"># long list</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> la=<span class=\"string\">'ls -A'</span>                              <span class=\"comment\"># all but . and ..</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> l=<span class=\"string\">'ls -CF'</span>                              <span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> hexopull=<span class=\"string\">'cd ~/Hexo &amp;&amp; git fetch --all &amp;&amp; git reset --hard origin/master &amp;&amp; git pull'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> hexopush=<span class=\"string\">'cd ~/Hexo &amp;&amp; hexo clean &amp;&amp; hexo g -d &amp;&amp; git add -A &amp;&amp; git commit -m \"update\" &amp;&amp; git push origin master'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> algpull=<span class=\"string\">'cd ~/alg &amp;&amp; git fetch --all &amp;&amp; git reset --hard origin/master &amp;&amp; git pull'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> algpush=<span class=\"string\">'cd ~/alg &amp;&amp; hexo clean &amp;&amp; hexo g -d &amp;&amp; git add -A &amp;&amp; git commit -m \"update\" &amp;&amp; git push origin master'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> hexodebug=<span class=\"string\">'hexo clean &amp;&amp; hexo g &amp;&amp; hexo s --debug'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Umask</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># /etc/profile sets 022, removing write perms to group + others.</span></span><br><span class=\"line\"><span class=\"comment\"># Set a more restrictive umask: i.e. no exec perms for others:</span></span><br><span class=\"line\"><span class=\"comment\"># umask 027</span></span><br><span class=\"line\"><span class=\"comment\"># Paranoid: neither group nor others have any perms:</span></span><br><span class=\"line\"><span class=\"comment\"># umask 077</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Functions</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Some people use a different file for functions</span></span><br><span class=\"line\"><span class=\"comment\"># if [ -f \"$&#123;HOME&#125;/.bash_functions\" ]; then</span></span><br><span class=\"line\"><span class=\"comment\">#   source \"$&#123;HOME&#125;/.bash_functions\"</span></span><br><span class=\"line\"><span class=\"comment\"># fi</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Some example functions:</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># a) function settitle</span></span><br><span class=\"line\"><span class=\"comment\"># settitle ()</span></span><br><span class=\"line\"><span class=\"comment\"># &#123;</span></span><br><span class=\"line\"><span class=\"comment\">#   echo -ne \"\\e]2;$@\\a\\e]1;$@\\a\";</span></span><br><span class=\"line\"><span class=\"comment\"># &#125;</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># b) function cd_func</span></span><br><span class=\"line\"><span class=\"comment\"># This function defines a 'cd' replacement function capable of keeping,</span></span><br><span class=\"line\"><span class=\"comment\"># displaying and accessing history of visited directories, up to 10 entries.</span></span><br><span class=\"line\"><span class=\"comment\"># To use it, uncomment it, source this file and try 'cd --'.</span></span><br><span class=\"line\"><span class=\"comment\"># acd_func 1.0.5, 10-nov-2004</span></span><br><span class=\"line\"><span class=\"comment\"># Petar Marinov, http:/geocities.com/h2428, this is public domain</span></span><br><span class=\"line\"><span class=\"comment\"># cd_func ()</span></span><br><span class=\"line\"><span class=\"comment\"># &#123;</span></span><br><span class=\"line\"><span class=\"comment\">#   local x2 the_new_dir adir index</span></span><br><span class=\"line\"><span class=\"comment\">#   local -i cnt</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#   if [[ $1 ==  \"--\" ]]; then</span></span><br><span class=\"line\"><span class=\"comment\">#     dirs -v</span></span><br><span class=\"line\"><span class=\"comment\">#     return 0</span></span><br><span class=\"line\"><span class=\"comment\">#   fi</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#   the_new_dir=$1</span></span><br><span class=\"line\"><span class=\"comment\">#   [[ -z $1 ]] &amp;&amp; the_new_dir=$HOME</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#   if [[ $&#123;the_new_dir:0:1&#125; == '-' ]]; then</span></span><br><span class=\"line\"><span class=\"comment\">#     #</span></span><br><span class=\"line\"><span class=\"comment\">#     # Extract dir N from dirs</span></span><br><span class=\"line\"><span class=\"comment\">#     index=$&#123;the_new_dir:1&#125;</span></span><br><span class=\"line\"><span class=\"comment\">#     [[ -z $index ]] &amp;&amp; index=1</span></span><br><span class=\"line\"><span class=\"comment\">#     adir=$(dirs +$index)</span></span><br><span class=\"line\"><span class=\"comment\">#     [[ -z $adir ]] &amp;&amp; return 1</span></span><br><span class=\"line\"><span class=\"comment\">#     the_new_dir=$adir</span></span><br><span class=\"line\"><span class=\"comment\">#   fi</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#   #</span></span><br><span class=\"line\"><span class=\"comment\">#   # '~' has to be substituted by $&#123;HOME&#125;</span></span><br><span class=\"line\"><span class=\"comment\">#   [[ $&#123;the_new_dir:0:1&#125; == '~' ]] &amp;&amp; the_new_dir=\"$&#123;HOME&#125;$&#123;the_new_dir:1&#125;\"</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#   #</span></span><br><span class=\"line\"><span class=\"comment\">#   # Now change to the new dir and add to the top of the stack</span></span><br><span class=\"line\"><span class=\"comment\">#   pushd \"$&#123;the_new_dir&#125;\" &gt; /dev/null</span></span><br><span class=\"line\"><span class=\"comment\">#   [[ $? -ne 0 ]] &amp;&amp; return 1</span></span><br><span class=\"line\"><span class=\"comment\">#   the_new_dir=$(pwd)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#   #</span></span><br><span class=\"line\"><span class=\"comment\">#   # Trim down everything beyond 11th entry</span></span><br><span class=\"line\"><span class=\"comment\">#   popd -n +11 2&gt;/dev/null 1&gt;/dev/null</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#   #</span></span><br><span class=\"line\"><span class=\"comment\">#   # Remove any other occurence of this dir, skipping the top of the stack</span></span><br><span class=\"line\"><span class=\"comment\">#   for ((cnt=1; cnt &lt;= 10; cnt++)); do</span></span><br><span class=\"line\"><span class=\"comment\">#     x2=$(dirs +$&#123;cnt&#125; 2&gt;/dev/null)</span></span><br><span class=\"line\"><span class=\"comment\">#     [[ $? -ne 0 ]] &amp;&amp; return 0</span></span><br><span class=\"line\"><span class=\"comment\">#     [[ $&#123;x2:0:1&#125; == '~' ]] &amp;&amp; x2=\"$&#123;HOME&#125;$&#123;x2:1&#125;\"</span></span><br><span class=\"line\"><span class=\"comment\">#     if [[ \"$&#123;x2&#125;\" == \"$&#123;the_new_dir&#125;\" ]]; then</span></span><br><span class=\"line\"><span class=\"comment\">#       popd -n +$cnt 2&gt;/dev/null 1&gt;/dev/null</span></span><br><span class=\"line\"><span class=\"comment\">#       cnt=cnt-1</span></span><br><span class=\"line\"><span class=\"comment\">#     fi</span></span><br><span class=\"line\"><span class=\"comment\">#   done</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#   return 0</span></span><br><span class=\"line\"><span class=\"comment\"># &#125;</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># alias cd=cd_func</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">alias</span> grep=<span class=\"string\">'grep --color=auto --exclude-dir=&#123;.bzr,CVS,.git,.hg,.svn&#125;'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> e=explorer</span><br><span class=\"line\"><span class=\"built_in\">alias</span> giturl=<span class=\"string\">'curl -i https://git.io -F'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> poweroff=<span class=\"string\">'(shutdown -s -t 0 &amp;); (net stop autossh_5679 &amp;);'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> reboot=<span class=\"string\">'(shutdown -r -t 0 &amp;); (net stop autossh_5679 &amp;);'</span></span><br><span class=\"line\"><span class=\"comment\"># alias uptime='net stats server | grep -P -o \"[\\d/]+.*M$\" --color=never'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> lcd=<span class=\"string\">'/e/UtilityPrograms/_exe/TurnOffLCD.exe'</span></span><br><span class=\"line\"><span class=\"comment\"># alias pb='~/App/pastebinit/pastebinit -b http://paste.ubuntu.com'</span></span><br><span class=\"line\"><span class=\"comment\"># alias pb='~/App/pastebinit/pastebinit -b http://paste.ubuntu.org.cn'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> wolfram=<span class=\"string\">'winpty /e/Mathematica/11.1/wolfram'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> loginpc=<span class=\"string\">'cygrunsrv -S autossh_5679'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> viz=<span class=\"string\">'vim `which z`'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> memopull=<span class=\"string\">'cd ~/memos &amp;&amp; git fetch --all &amp;&amp; git reset --hard origin/master &amp;&amp; git pull'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> memopush=<span class=\"string\">'cd ~/memos &amp;&amp; hexo clean &amp;&amp; hexo g -d &amp;&amp; git add -A &amp;&amp; git commit -m \"update\" &amp;&amp; git push origin master'</span></span><br><span class=\"line\"></span><br><span class=\"line\">HISTTIMEFORMAT=<span class=\"string\">'%F %T '</span></span><br><span class=\"line\">HISTCONTROL=erasedups</span><br><span class=\"line\">HISTIGNORE=<span class=\"string\">\"ls:pwd:cd:clear:vim:fg:bg:jobs:top:htop\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">export</span> LESS_TERMCAP_mb=$(<span class=\"built_in\">printf</span> <span class=\"string\">'\\e[01;31m'</span>) <span class=\"comment\"># enter blinking mode - red</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> LESS_TERMCAP_md=$(<span class=\"built_in\">printf</span> <span class=\"string\">'\\e[01;35m'</span>) <span class=\"comment\"># enter double-bright mode - bold, magenta</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> LESS_TERMCAP_me=$(<span class=\"built_in\">printf</span> <span class=\"string\">'\\e[0m'</span>) <span class=\"comment\"># turn off all appearance modes (mb, md, so, us)</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> LESS_TERMCAP_se=$(<span class=\"built_in\">printf</span> <span class=\"string\">'\\e[0m'</span>) <span class=\"comment\"># leave standout mode</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> LESS_TERMCAP_so=$(<span class=\"built_in\">printf</span> <span class=\"string\">'\\e[01;33m'</span>) <span class=\"comment\"># enter standout mode - yellow</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> LESS_TERMCAP_ue=$(<span class=\"built_in\">printf</span> <span class=\"string\">'\\e[0m'</span>) <span class=\"comment\"># leave underline mode</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> LESS_TERMCAP_us=$(<span class=\"built_in\">printf</span> <span class=\"string\">'\\e[04;36m'</span>) <span class=\"comment\"># enter underline mode - cyan</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># export http_proxy=\"http://192.168.1.102:1888/\"</span></span><br><span class=\"line\"><span class=\"comment\"># export https_proxy=\"https://192.168.1.102:1888/\"</span></span><br><span class=\"line\"><span class=\"comment\"># export ftp_proxy=\"ftp://192.168.1.102:1888/\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># export PS1=\"[\\[\\e[01;33m\\]foo\\[\\e[37;40m\\]@\\[\\e[34;40m\\]PHANTOM \\[\\e[37;40m\\]\\t \\[\\e[34;40m\\]\\W\\[\\e[0m\\]]$ \"</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> PS1=<span class=\"string\">\"[ \\[\\e[37;40m\\]\\t \\[\\e[34;40m\\]\\W\\[\\e[0m\\] ]$ \"</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> GTAGSLIBPATH=<span class=\"variable\">$GTAGSLIBPATH</span>:/usr/include/</span><br><span class=\"line\"><span class=\"built_in\">export</span> HISTFILESIZE=50000</span><br><span class=\"line\"><span class=\"built_in\">export</span> HISTSIZE=50000</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:~/App/bin</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/e/Nodejs</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/c/Users/Liang/AppData/Roaming/npm</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/e/MySQL/bin</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/d/Java/jdk-10/bin</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/f/WorkingDirectory/Bin</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/e/TexLive/2018/bin/win32</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/e/R/bin/x64</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/f/WorkingDirectory/Bin</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/c/Users/Liang/AppData/Roaming/<span class=\"built_in\">local</span>/bin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># STACK_ROOT=/f/HaskellStack</span></span><br></pre></td></tr></table></figure>\n</div></div></li>\r\n<li>比如 Git 需要代理: <div><div class=\"fold_hider\"><div class=\"close hider_title\">.gitconfig</div></div><div class=\"fold\">\n<figure class=\"highlight\"><figcaption><span>.gitconfig</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[user]</span></span><br><span class=\"line\">    name = michaelHL</span><br><span class=\"line\">    email = lbgnmic@gmail.com</span><br><span class=\"line\"><span class=\"section\">[github]</span></span><br><span class=\"line\">    user = michaelHL</span><br><span class=\"line\"><span class=\"section\">[http]</span></span><br><span class=\"line\">    proxy = socks5://127.0.0.1:1888</span><br></pre></td></tr></table></figure>\n</div></div></li>\r\n<li>比如忽略大小写的 <code>.inputrc</code>： <div><div class=\"fold_hider\"><div class=\"close hider_title\">.inputrc</div></div><div class=\"fold\">\n<figure class=\"highlight bash\"><figcaption><span>.inputrc</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># To the extent possible under law, the author(s) have dedicated all </span></span><br><span class=\"line\"><span class=\"comment\"># copyright and related and neighboring rights to this software to the </span></span><br><span class=\"line\"><span class=\"comment\"># public domain worldwide. This software is distributed without any warranty. </span></span><br><span class=\"line\"><span class=\"comment\"># You should have received a copy of the CC0 Public Domain Dedication along </span></span><br><span class=\"line\"><span class=\"comment\"># with this software. </span></span><br><span class=\"line\"><span class=\"comment\"># If not, see &lt;http://creativecommons.org/publicdomain/zero/1.0/&gt;. </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ~/.inputrc: readline initialization file.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># The copy in your home directory (~/.inputrc) is yours, please</span></span><br><span class=\"line\"><span class=\"comment\"># feel free to customise it to create a shell</span></span><br><span class=\"line\"><span class=\"comment\"># environment to your liking.  If you feel a change</span></span><br><span class=\"line\"><span class=\"comment\"># would be benifitial to all, please feel free to send</span></span><br><span class=\"line\"><span class=\"comment\"># a patch to the msys2 mailing list.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># the following line is actually</span></span><br><span class=\"line\"><span class=\"comment\"># equivalent to \"\\C-?\": delete-char</span></span><br><span class=\"line\"><span class=\"comment\"># \"\\e[3~\": delete-char</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># VT</span></span><br><span class=\"line\"><span class=\"comment\"># \"\\e[1~\": beginning-of-line</span></span><br><span class=\"line\"><span class=\"comment\"># \"\\e[4~\": end-of-line</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># kvt</span></span><br><span class=\"line\"><span class=\"comment\"># \"\\e[H\": beginning-of-line</span></span><br><span class=\"line\"><span class=\"comment\"># \"\\e[F\": end-of-line</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># rxvt and konsole (i.e. the KDE-app...)</span></span><br><span class=\"line\"><span class=\"comment\"># \"\\e[7~\": beginning-of-line</span></span><br><span class=\"line\"><span class=\"comment\"># \"\\e[8~\": end-of-line</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># VT220</span></span><br><span class=\"line\"><span class=\"comment\"># \"\\eOH\": beginning-of-line</span></span><br><span class=\"line\"><span class=\"comment\"># \"\\eOF\": end-of-line</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Allow 8-bit input/output</span></span><br><span class=\"line\"><span class=\"comment\"># set meta-flag on</span></span><br><span class=\"line\"><span class=\"comment\"># set convert-meta off</span></span><br><span class=\"line\"><span class=\"comment\"># set input-meta on</span></span><br><span class=\"line\"><span class=\"comment\"># set output-meta on</span></span><br><span class=\"line\"><span class=\"comment\">#$if Bash</span></span><br><span class=\"line\">  <span class=\"comment\"># Don't ring bell on completion</span></span><br><span class=\"line\">  <span class=\"built_in\">set</span> bell-style none</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># or, don't beep at me - show me</span></span><br><span class=\"line\">  <span class=\"comment\">#set bell-style visible</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Show all instead of beeping first</span></span><br><span class=\"line\">  <span class=\"built_in\">set</span> show-all-if-ambiguous off</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Filename completion/expansion</span></span><br><span class=\"line\">  <span class=\"built_in\">set</span> completion-ignore-case on</span><br><span class=\"line\">  <span class=\"comment\">#set show-all-if-ambiguous on</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Expand homedir name</span></span><br><span class=\"line\">  <span class=\"comment\">#set expand-tilde on</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Append \"/\" to all dirnames</span></span><br><span class=\"line\">  <span class=\"comment\">#set mark-directories on</span></span><br><span class=\"line\">  <span class=\"comment\">#set mark-symlinked-directories on</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># visible-stats</span></span><br><span class=\"line\">  <span class=\"comment\"># Append a mark according to the file type in a listing</span></span><br><span class=\"line\">  <span class=\"built_in\">set</span> visible-stats off</span><br><span class=\"line\">  <span class=\"built_in\">set</span> mark-directories on</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Match all files</span></span><br><span class=\"line\">  <span class=\"comment\">#set match-hidden-files on</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># 'Magic Space'</span></span><br><span class=\"line\">  <span class=\"comment\"># Insert a space character then performs</span></span><br><span class=\"line\">  <span class=\"comment\"># a history expansion in the line</span></span><br><span class=\"line\">  <span class=\"comment\">#Space: magic-space</span></span><br><span class=\"line\"><span class=\"comment\">#$endif</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># MSYSTEM is emacs based</span></span><br><span class=\"line\"><span class=\"variable\">$if</span> mode=emacs</span><br><span class=\"line\">  <span class=\"comment\"># Common to Console &amp; RXVT</span></span><br><span class=\"line\">  <span class=\"string\">\"\\C-?\"</span>: backward-kill-line         <span class=\"comment\"># Ctrl-BackSpace</span></span><br><span class=\"line\">  <span class=\"string\">\"\\e[2~\"</span>: paste-from-clipboard      <span class=\"comment\"># \"Ins. Key\"</span></span><br><span class=\"line\">  <span class=\"string\">\"\\e[5~\"</span>: beginning-of-history      <span class=\"comment\"># Page up</span></span><br><span class=\"line\">  <span class=\"string\">\"\\e[6~\"</span>: end-of-history            <span class=\"comment\"># Page down</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"variable\">$if</span> term=msys <span class=\"comment\"># RXVT</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e[7~\"</span>: beginning-of-line      <span class=\"comment\"># Home Key</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e[8~\"</span>: end-of-line            <span class=\"comment\"># End Key</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e[11~\"</span>: display-shell-version <span class=\"comment\"># F1</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e[15~\"</span>: re-read-init-file     <span class=\"comment\"># F5</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e[12~\"</span>: <span class=\"string\">\"Function Key 2\"</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e[13~\"</span>: <span class=\"string\">\"Function Key 3\"</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e[14~\"</span>: <span class=\"string\">\"Function Key 4\"</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e[17~\"</span>: <span class=\"string\">\"Function Key 6\"</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e[18~\"</span>: <span class=\"string\">\"Function Key 7\"</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e[19~\"</span>: <span class=\"string\">\"Function Key 8\"</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e[20~\"</span>: <span class=\"string\">\"Function Key 9\"</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e[21~\"</span>: <span class=\"string\">\"Function Key 10\"</span></span><br><span class=\"line\">  <span class=\"variable\">$else</span></span><br><span class=\"line\">  <span class=\"comment\"># Eh, normal Console is not really cygwin anymore, is it? Using 'else' instead. -mstormo</span></span><br><span class=\"line\">  <span class=\"comment\"># $if term=cygwin # Console</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e[1~\"</span>: beginning-of-line      <span class=\"comment\"># Home Key</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e[4~\"</span>: end-of-line            <span class=\"comment\"># End Key</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e[3~\"</span>: delete-char      <span class=\"comment\"># Delete Key</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e\\e[C\"</span>: forward-word      <span class=\"comment\"># Alt-Right</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e\\e[D\"</span>: backward-word      <span class=\"comment\"># Alt-Left</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e[1;5C\"</span>: forward-word   <span class=\"comment\"># ctrl + right</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e[1;5D\"</span>: backward-word  <span class=\"comment\"># ctrl + left </span></span><br><span class=\"line\">    <span class=\"string\">\"\\e[17~\"</span>: <span class=\"string\">\"Function Key 6\"</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e[18~\"</span>: <span class=\"string\">\"Function Key 7\"</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e[19~\"</span>: <span class=\"string\">\"Function Key 8\"</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e[20~\"</span>: <span class=\"string\">\"Function Key 9\"</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e[21~\"</span>: <span class=\"string\">\"Function Key 10\"</span></span><br><span class=\"line\">    <span class=\"string\">\"\\e[23~\"</span>: <span class=\"string\">\"Function Key 11\"</span></span><br><span class=\"line\">  <span class=\"variable\">$endif</span></span><br><span class=\"line\"><span class=\"variable\">$endif</span></span><br></pre></td></tr></table></figure>\n</div></div></li>\r\n<li>比如 Vim 配置文件 <a href=\"/src/vimrc\"><code>.vimrc</code></a></li>\r\n</ul>\r\n<h3 id=\"编译-vim\">编译 Vim</h3>\r\n<!--�17-->\r\n<p>这里提醒自己下，折腾有度，比如尝试在 MSYS2 中编译 <a href=\"https://github.com/Valloric/YouCompleteMe\" target=\"_blank\" rel=\"noopener\">ycm</a> 十几次未遂这种行为是不可取的。</p>\r\n<h3 id=\"替换默认终端\">替换默认终端</h3>\r\n<p>将自带的 <a href=\"https://mintty.github.io\" target=\"_blank\" rel=\"noopener\">Mintty</a> 换成 Windows 下很棒的终端模拟器：<a href=\"https://conemu.github.io\" target=\"_blank\" rel=\"noopener\">ConEmu</a>。</p>\r\n<ol type=\"1\">\r\n<li>设置为默认的系统终端程序，替换掉残废的 cmd：<code>Settings</code> - <code>Integration</code> - <code>Default term - Force ConEmu as default terminal for console applications</code></li>\r\n<li>如果希望「劫持」某些程序调试时使用的终端程序（比如 VS 在调试时会唤起系统默认的 cmd），在下面的输入框中填入 <code>explorer.exe|devenv.exe</code></li>\r\n<li>对于 MSYS2 的集成：\r\n<ol type=\"1\">\r\n<li>新建 Task：<code>set MSYSTEM=MINGW64 &amp; \"/path/to/MSYS-connector -cur_console:n\"</code></li>\r\n<li>Connector 网址：<a href=\"https://github.com/Maximus5/cygwin-connector\" target=\"_blank\" rel=\"noopener\">cygwin-connector</a>，不同版本的设置如下：\r\n<ul>\r\n<li>Cygwin：<code>conemu-cyg-32.exe</code> and <code>conemu-cyg-64.exe</code></li>\r\n<li>MSYS 1.0：<code>conemu-msys-32.exe</code></li>\r\n<li>MSYS 2.0：<code>conemu-msys2-32.exe</code> and <code>conemu-msys2-64.exe</code></li>\r\n</ul>\r\n复制到 <code>sh.exe</code> 同目录下即可</li>\r\n</ol></li>\r\n<li>启动时的相关设定（<code>Settings</code> - <code>Startup</code> - <code>Environment）</code>： <figure class=\"highlight bat\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">set</span> <span class=\"built_in\">PATH</span>=<span class=\"variable\">%ConEmuBaseDir%</span>\\Scripts;<span class=\"variable\">%PATH%</span></span><br><span class=\"line\"><span class=\"built_in\">chcp</span> utf-<span class=\"number\">8</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> LANG=en_US.utf-<span class=\"number\">8</span></span><br></pre></td></tr></table></figure></li>\r\n<li>当前的配置文件 <a href=\"/src/conemu.xml\">conemu.xml</a></li>\r\n</ol>\r\n<p><i class=\"fa fa-warning fa-fw\"></i>新版本的 ConEmu 已经自带了适配各种系统下的 <code>connector</code>，所以在 Task 里面关于 <code>connector</code> 的路径直接填写其程序名即可。（见 <a href=\"https://conemu.github.io/en/CygwinMsysConnector.html#cygwinmsys-terminal-connector\" target=\"_blank\" rel=\"noopener\">cygwin/msys terminal connector</a>）</p>\r\n<h4 id=\"题外话---sublime-text-调用-conemu\">题外话 - Sublime Text 调用 ConEmu</h4>\r\n<p>对于一般程序，在设置中的 <code>Integration</code> - <code>Default term</code> - <code>List of ...</code> 中添加程序，ConEmu 将被自动唤起以替代 cmd，但添加 Sublime Text 的 <code>sublime_text.exe</code> 并没有反应，只能曲线救国，比如 C 类型文件的编译配置文件 <code>C.sublime-build</code>：</p>\r\n<figure class=\"highlight\"><figcaption><span>C.sublime-build</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    // \"shell_cmd\": \"gcc -std=c11 -Wall -s \\\"$&#123;file&#125;\\\" -o \\\"$&#123;file_path&#125;/$&#123;file_base_name&#125;\\\" &amp;&amp; \\\"$&#123;file_path&#125;/$&#123;file_base_name&#125;\\\"\",</span><br><span class=\"line\">    \"shell_cmd\": \"/path/to/conemu /single -run cmd /c -cur_console:n \\\"gcc -std=c11 -Wall -s $&#123;file&#125; -o $&#123;file_path&#125;/$&#123;file_base_name&#125; &amp;&amp; $&#123;file_path&#125;/$&#123;file_base_name&#125; &amp; pause \\\"\",</span><br><span class=\"line\">    \"file_regex\": \"^(..[^:]*):([0-9]+):?([0-9]+)?:? (.*)$\",</span><br><span class=\"line\">    \"working_dir\": \"$&#123;file_path&#125;\",</span><br><span class=\"line\">    \"selector\": \"source.c\"</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<hr>\r\n<h2 id=\"问题\">问题</h2>\r\n<ul>\r\n<li>如果发现程序的输出被缓冲：可尝试利用工具 <code>winpty</code></li>\r\n<li><code>git clone</code> 时出现字符相关的奇怪问题：使用 <strong>MSYS</strong> 而不是 MinGW64 或者 MinGW32</li>\r\n<li>2018-02-09 <i class=\"fa fa-warning fa-fw\"></i> ncurses 版本升级为 <code>ncurses-6.1.20180127-1-x86_64</code> 后 ConEmu 终端会出现各种光标问题，可通过回退版本至 <a href=\"https://mirrors.tuna.tsinghua.edu.cn/msys2/msys/x86_64/ncurses-6.0.20170708-2-x86_64.pkg.tar.xz\" target=\"_blank\" rel=\"noopener\"><code>ncurses-6.0.20170708-2-x86_64</code></a> 来解决： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pacman -R ncurses-devel</span><br><span class=\"line\">pacman -U ncurses-6.0.20170708-2-x86_64.pkg.tar.xz --force</span><br></pre></td></tr></table></figure></li>\r\n<li>2018-02-10 <i class=\"fa fa-warning fa-fw\"></i> 如果集成在 VSCode 中的 MSYS2 也出现上述情况, 可考虑直接使用 <code>connector</code>： <figure class=\"highlight json\"><figcaption><span>settings.json</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"terminal.integrated.shell.windows\"</span>: <span class=\"string\">\"E:/UtilityPrograms/ConEmu/ConEmu/conemu-msys2-64.exe\"</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure> 或者如果仅需为清屏设置快捷键： <figure class=\"highlight json\"><figcaption><span>keybindings.json</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"key\"</span>: <span class=\"string\">\"ctrl+l\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"command\"</span>: <span class=\"string\">\"workbench.action.terminal.clear\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"when\"</span>: <span class=\"string\">\"terminalFocus\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\r\n</ul>"},{"title":"部署 RStudio Server","date":"2018-02-03T13:18:51.000Z","_content":"\n在 Ubuntu 16.04.3 下部署 RStudio Server {% fa registered fw %}。\n\nRStudio 是一款优秀的 R 语言集成开发软件，官方免费提供社区版 RStudio Server，默认支持多用户登录。\n\n<!-- more -->\n\n首先安装 R 的最新版本（参考 [UBUNTU PACKAGES FOR R][cran-ubuntu-pkgs]）:\n\n```bash\nsudo apt-get remove r-base-core\necho 'deb https://mirrors.ustc.edu.cn/CRAN/bin/linux/ubuntu xenial/' | sudo tee -a /etc/apt/sources.list\nsudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9\nsudo apt-get update\nsudo apt-get install r-base r-base-dev\n```\n\n下载安装 RStudio Server（参考官方[下载页面][download-server]）：\n\n```bash\nsudo apt-get install gdebi-core\nwget https://download2.rstudio.org/rstudio-server-1.1.419-amd64.deb\nsudo gdebi rstudio-server-1.1.419-amd64.deb\n```\n\n完成之后可进行 `rstudio-server {status|start|stop|restart|}` 等操作。\n\n进一步，可对 RStudio Server 进行深度配置：\n\n```ini /etc/rstudio/rserver.conf\nwww-port=9999\nserver-app-armor-enabled=0\n```\n\nNginx 配置：\n\n```nginx nginx.conf\nhttp {\n\n  map $http_upgrade $connection_upgrade {\n    default upgrade;\n    ''      close;\n  }\n\n  server {\n    listen 80;\n\n    location / {\n      proxy_pass http://localhost:9999;\n      proxy_redirect http://localhost:9999/ $scheme://$host/;\n      proxy_http_version 1.1;\n      proxy_set_header Upgrade $http_upgrade;\n      proxy_set_header Connection $connection_upgrade;\n      proxy_read_timeout 20d;\n    }\n  }\n}\n```\n\n\n[cran-ubuntu-pkgs]: https://cran.rstudio.com/bin/linux/ubuntu/README.html\n[download-server]: https://www.rstudio.com/products/rstudio/download-server\n","source":"_posts/deployment-of-rstudio-server.md","raw":"---\ntitle: 部署 RStudio Server\ndate: 2018-02-03 21:18:51\ntags:\n    - R\n    - RStudio\n    - Server\ncategories: Development\n---\n\n在 Ubuntu 16.04.3 下部署 RStudio Server {% fa registered fw %}。\n\nRStudio 是一款优秀的 R 语言集成开发软件，官方免费提供社区版 RStudio Server，默认支持多用户登录。\n\n<!-- more -->\n\n首先安装 R 的最新版本（参考 [UBUNTU PACKAGES FOR R][cran-ubuntu-pkgs]）:\n\n```bash\nsudo apt-get remove r-base-core\necho 'deb https://mirrors.ustc.edu.cn/CRAN/bin/linux/ubuntu xenial/' | sudo tee -a /etc/apt/sources.list\nsudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9\nsudo apt-get update\nsudo apt-get install r-base r-base-dev\n```\n\n下载安装 RStudio Server（参考官方[下载页面][download-server]）：\n\n```bash\nsudo apt-get install gdebi-core\nwget https://download2.rstudio.org/rstudio-server-1.1.419-amd64.deb\nsudo gdebi rstudio-server-1.1.419-amd64.deb\n```\n\n完成之后可进行 `rstudio-server {status|start|stop|restart|}` 等操作。\n\n进一步，可对 RStudio Server 进行深度配置：\n\n```ini /etc/rstudio/rserver.conf\nwww-port=9999\nserver-app-armor-enabled=0\n```\n\nNginx 配置：\n\n```nginx nginx.conf\nhttp {\n\n  map $http_upgrade $connection_upgrade {\n    default upgrade;\n    ''      close;\n  }\n\n  server {\n    listen 80;\n\n    location / {\n      proxy_pass http://localhost:9999;\n      proxy_redirect http://localhost:9999/ $scheme://$host/;\n      proxy_http_version 1.1;\n      proxy_set_header Upgrade $http_upgrade;\n      proxy_set_header Connection $connection_upgrade;\n      proxy_read_timeout 20d;\n    }\n  }\n}\n```\n\n\n[cran-ubuntu-pkgs]: https://cran.rstudio.com/bin/linux/ubuntu/README.html\n[download-server]: https://www.rstudio.com/products/rstudio/download-server\n","slug":"deployment-of-rstudio-server","published":1,"updated":"2023-03-09T16:09:38.215Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u3361000gp4x0kvq4amp4","content":"<p>在 Ubuntu 16.04.3 下部署 RStudio Server <i class=\"fa fa-registered fa-fw\"></i>。</p>\r\n<p>RStudio 是一款优秀的 R 语言集成开发软件，官方免费提供社区版 RStudio Server，默认支持多用户登录。</p>\r\n<a id=\"more\"></a>\r\n<p>首先安装 R 的最新版本（参考 <a href=\"https://cran.rstudio.com/bin/linux/ubuntu/README.html\" target=\"_blank\" rel=\"noopener\">UBUNTU PACKAGES FOR R</a>）:</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get remove r-base-core</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">'deb https://mirrors.ustc.edu.cn/CRAN/bin/linux/ubuntu xenial/'</span> | sudo tee -a /etc/apt/sources.list</span><br><span class=\"line\">sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9</span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get install r-base r-base-dev</span><br></pre></td></tr></table></figure>\r\n<p>下载安装 RStudio Server（参考官方<a href=\"https://www.rstudio.com/products/rstudio/download-server\" target=\"_blank\" rel=\"noopener\">下载页面</a>）：</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install gdebi-core</span><br><span class=\"line\">wget https://download2.rstudio.org/rstudio-server-1.1.419-amd64.deb</span><br><span class=\"line\">sudo gdebi rstudio-server-1.1.419-amd64.deb</span><br></pre></td></tr></table></figure>\r\n<p>完成之后可进行 <code>rstudio-server {status|start|stop|restart|}</code> 等操作。</p>\r\n<p>进一步，可对 RStudio Server 进行深度配置：</p>\r\n<figure class=\"highlight ini\"><figcaption><span>/etc/rstudio/rserver.conf</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">www-port</span>=<span class=\"number\">9999</span></span><br><span class=\"line\"><span class=\"attr\">server-app-armor-enabled</span>=<span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\r\n<p>Nginx 配置：</p>\r\n<figure class=\"highlight nginx\"><figcaption><span>nginx.conf</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">http</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attribute\">map</span> <span class=\"variable\">$http_upgrade</span> <span class=\"variable\">$connection_upgrade</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">default</span> upgrade;</span><br><span class=\"line\">    ''      close;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">      <span class=\"attribute\">proxy_pass</span> http://localhost:9999;</span><br><span class=\"line\">      <span class=\"attribute\">proxy_redirect</span> http://localhost:9999/ <span class=\"variable\">$scheme</span>://<span class=\"variable\">$host</span>/;</span><br><span class=\"line\">      <span class=\"attribute\">proxy_http_version</span> <span class=\"number\">1</span>.<span class=\"number\">1</span>;</span><br><span class=\"line\">      <span class=\"attribute\">proxy_set_header</span> Upgrade <span class=\"variable\">$http_upgrade</span>;</span><br><span class=\"line\">      <span class=\"attribute\">proxy_set_header</span> Connection <span class=\"variable\">$connection_upgrade</span>;</span><br><span class=\"line\">      <span class=\"attribute\">proxy_read_timeout</span> <span class=\"number\">20d</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n","site":{"data":{}},"excerpt":"<p>在 Ubuntu 16.04.3 下部署 RStudio Server <i class=\"fa fa-registered fa-fw\"></i>。</p>\r\n<p>RStudio 是一款优秀的 R 语言集成开发软件，官方免费提供社区版 RStudio Server，默认支持多用户登录。</p>","more":"<p>首先安装 R 的最新版本（参考 <a href=\"https://cran.rstudio.com/bin/linux/ubuntu/README.html\" target=\"_blank\" rel=\"noopener\">UBUNTU PACKAGES FOR R</a>）:</p>\r\n<!--�18-->\r\n<p>下载安装 RStudio Server（参考官方<a href=\"https://www.rstudio.com/products/rstudio/download-server\" target=\"_blank\" rel=\"noopener\">下载页面</a>）：</p>\r\n<!--�19-->\r\n<p>完成之后可进行 <code>rstudio-server {status|start|stop|restart|}</code> 等操作。</p>\r\n<p>进一步，可对 RStudio Server 进行深度配置：</p>\r\n<!--�20-->\r\n<p>Nginx 配置：</p>\r\n<!--�21-->"},{"title":"Windows 下利用 MSYS2 搭建 sshd 服务器","date":"2017-11-30T07:10:41.000Z","_content":"\n若能在远程中非图形界面下访问到自己的 Windows 服务器，比如像 Linux 那样通过 SSH 连接便能进行日常操作，那确实是很方便的。然而 Windows 鸡肋的 cmd 足以毁坏每天的心情，所以 Windows 下装配一个 \\*nix 系统也是必要的。下面记录 Windows 中利用 MSYS2 **清真** 搭建 sshd 服务的全过程。\n\n<!-- more -->\n\n### 配置 sshd 服务\n\n脚本：[sshd_msys.sh][sshd-msys]，注意其中的 `tmp_pass` 可作为登录密码。\n\n1. 64 位的 MSYS2 下，以管理员身份登录 **MinGW64**\n1. 可能需要手动创建一些文件\n   {% codeblock lang:bash %}\n   # mkpasswd > /etc/passwd\n   touch /var/log/lastlog\n   {% endcodeblock %}\n1. 为灵活切换 `MSYS` / `MINGW64` / `MINGW32` 环境，将 `/etc/ssh/sshd_config` 文件中的 `PermitUserEnvironment` 置为 `yes`，并新建文件 `~/.ssh/environment` 并在其中添加 `MSYSTEM=MINGW64`\n1. `net start/stop sshd` 可启用 / 停止 `sshd` 服务\n   （此服务在系统的 `Services` 中的服务名为 `sshd`，登录账号应为 `.\\sshd_server`）\n\n如此一来就可以进行本地 SSH 登录了，如要进行远程 SSH 访问本机，需作反向代理。\n\n### 配置反向代理 ssh 服务\n\nMSYS2 默认的源中没有 `autossh`，所以需自行编译: [repo][autossh-additional-pkgs-repo]。在 **MSYS**  中一通操作：\n\n```bash\ngit clone https://github.com/mati865/MSYS2-additional-packages.git\ncd MSYS2-additional-packages/autossh\nmakepkg\npacman -U autossh*.pkg.tar.xz\n```\n\n如安装顺利，则二进制文件为 `/usr/bin/autossh`。安装系统服务：\n\n```bash\n# ssh-keygen -t 'rsa'\nssh-copy-id user@domain\ncygrunsrv -R autossh_12345\ncygrunsrv -I autossh_12345 -d \"MSYS2 Reverse Tunnel - xxxx\" -p \\\n          /usr/bin/autossh.exe -a \"-M 0 -o ExitOnForwardFailure=yes -o \\\n          ServerAliveInterval=30 -o ServerAliveCountMax=3 \\\n          -o ExitOnForwardFailure=yes \\\n          -NR 12345:localhost:22 user@domain -i ~/.ssh/id_rsa\" \\\n          -y tcpip -u \".\\${USER}\" -w \"${PASSWD}\"\ncygrunsrv -S autossh_12345\n```\n\n那么就在系统中注册了名为 `autossh_xxxx` 的服务，其中 `${USER}`，`${PASSWD}` 分别为系统用户名和密码，启动 / 停止服务同上述 `sshd` 服务。\n\n`cygrunsrv` 参数解释：\n\n- `-I` 或 `--install`：安装服务\n- `-d`：显示名\n- `-p`：程序路径\n- `-a`：参数\n- `-y`：服务依赖，服务名可直接在 `services.msc`查询\n- `-t`：服务启动类型（auto | manual）\n\n另外，Windows 下查询已开启服务可用 `net start`。\n\n### 笔记本无法开机启动解决方案\n\n在笔记本执行上述操作可能仍无法开机启动 sshd 服务，这时可以利用任务计划曲线救国：\n\n1. 上述操作执行到 `cygrunsrv -I xxx` 为止，即完成创建系统服务\n1. 新建文件 `reverse-tunnel.sh`：\n   {% codeblock lang:bash reverse-tunnel.sh %}\n   #!/usr/bin/bash\n   cygrunsrv -S autossh_12345\n   {% endcodeblock %}\n1. 在任务计划中添加新任务，触发器设为「成功联网后」，[示例][task-schedule-reverse-sshd-tunnel]。\n\n### 注意\n\n开始试验时经常出现重启后无法连接的情况，就上述例子而言，开机后打开日志 `/var/log/autossh_12345.log` 会显示：\n\n```\nError: remote port forwarding failed for listen port 12345\n```\n\n详情见 [SSH remote port forwarding failed][se-595323]。经过几十次的重启，处理方案如下：\n\n- 一旦计算机休眠或待机，服务将不可用，所以应关闭「自动待机」\n- `autossh` 服务中的启动需加上 `-o ExitOnForwardFailure=yes`\n- 如果重启时间过短，而且重启之前没有关闭 `autossh` 服务，那么开机的时候很可能无法启动这个服务，虽具体原因不是很懂，  但猜测是远程那端在本地计算机重启的时候，二者之前建立的隧道是被占用状态。所以为根除此问题，关机前务必停止 `autossh` 服务，这里可以对关机、重启命令进行包装：\n  {% codeblock lang:bash %}\n  alias poweroff='(shutdown -s -t 0 &); (net stop autossh_xxxx &);'\n  alias reboot='(shutdown -r -t 0 &); (net stop autossh_xxxx &);'\n  {% endcodeblock %}\n  而且该命令需要在管理员权限下执行，或者在远程执行\n- 不要试图更改服务中的登录选项，仅本机账密才能行的通\n- 可能需要设置失败后重启服务\n\n### 参考\n\n- [Configure sshd on MSYS2 and run it as a Windows service][gist-00ee]\n- [Autossh Windows][autossh-windows]\n- [Windows Task Scheduler: Trigger an Event When Internet Connects/Disconnects][task-schedule-trigger-tcp-ip]\n\n[gist-00ee]: https://gist.github.com/samhocevar/00eec26d9e9988d080ac\n[autossh-additional-pkgs-repo]: https://github.com/mati865/MSYS2-additional-packages\n[autossh-windows]: https://support.chartio.com/docs/data-sources/autossh-windows\n[sshd-msys]: /src/sshd_msys.sh\n[task-schedule-reverse-sshd-tunnel]: /src/reverse-tunnel-sshd.xml\n[se-595323]: https://serverfault.com/questions/595323/ssh-remote-port-forwarding-failed\n[task-schedule-trigger-tcp-ip]: https://www.groovypost.com/howto/automatically-run-script-on-internet-connect-network-connection-drop\n","source":"_posts/deployment-of-sshd-on-windows-via-msys.md","raw":"---\ntitle: Windows 下利用 MSYS2 搭建 sshd 服务器\ndate: 2017-11-30 15:10:41\ntags:\n    - MSYS2\n    - Windows\n    - Server\n    - SSH\n    - Autossh\ncategories: Development\n---\n\n若能在远程中非图形界面下访问到自己的 Windows 服务器，比如像 Linux 那样通过 SSH 连接便能进行日常操作，那确实是很方便的。然而 Windows 鸡肋的 cmd 足以毁坏每天的心情，所以 Windows 下装配一个 \\*nix 系统也是必要的。下面记录 Windows 中利用 MSYS2 **清真** 搭建 sshd 服务的全过程。\n\n<!-- more -->\n\n### 配置 sshd 服务\n\n脚本：[sshd_msys.sh][sshd-msys]，注意其中的 `tmp_pass` 可作为登录密码。\n\n1. 64 位的 MSYS2 下，以管理员身份登录 **MinGW64**\n1. 可能需要手动创建一些文件\n   {% codeblock lang:bash %}\n   # mkpasswd > /etc/passwd\n   touch /var/log/lastlog\n   {% endcodeblock %}\n1. 为灵活切换 `MSYS` / `MINGW64` / `MINGW32` 环境，将 `/etc/ssh/sshd_config` 文件中的 `PermitUserEnvironment` 置为 `yes`，并新建文件 `~/.ssh/environment` 并在其中添加 `MSYSTEM=MINGW64`\n1. `net start/stop sshd` 可启用 / 停止 `sshd` 服务\n   （此服务在系统的 `Services` 中的服务名为 `sshd`，登录账号应为 `.\\sshd_server`）\n\n如此一来就可以进行本地 SSH 登录了，如要进行远程 SSH 访问本机，需作反向代理。\n\n### 配置反向代理 ssh 服务\n\nMSYS2 默认的源中没有 `autossh`，所以需自行编译: [repo][autossh-additional-pkgs-repo]。在 **MSYS**  中一通操作：\n\n```bash\ngit clone https://github.com/mati865/MSYS2-additional-packages.git\ncd MSYS2-additional-packages/autossh\nmakepkg\npacman -U autossh*.pkg.tar.xz\n```\n\n如安装顺利，则二进制文件为 `/usr/bin/autossh`。安装系统服务：\n\n```bash\n# ssh-keygen -t 'rsa'\nssh-copy-id user@domain\ncygrunsrv -R autossh_12345\ncygrunsrv -I autossh_12345 -d \"MSYS2 Reverse Tunnel - xxxx\" -p \\\n          /usr/bin/autossh.exe -a \"-M 0 -o ExitOnForwardFailure=yes -o \\\n          ServerAliveInterval=30 -o ServerAliveCountMax=3 \\\n          -o ExitOnForwardFailure=yes \\\n          -NR 12345:localhost:22 user@domain -i ~/.ssh/id_rsa\" \\\n          -y tcpip -u \".\\${USER}\" -w \"${PASSWD}\"\ncygrunsrv -S autossh_12345\n```\n\n那么就在系统中注册了名为 `autossh_xxxx` 的服务，其中 `${USER}`，`${PASSWD}` 分别为系统用户名和密码，启动 / 停止服务同上述 `sshd` 服务。\n\n`cygrunsrv` 参数解释：\n\n- `-I` 或 `--install`：安装服务\n- `-d`：显示名\n- `-p`：程序路径\n- `-a`：参数\n- `-y`：服务依赖，服务名可直接在 `services.msc`查询\n- `-t`：服务启动类型（auto | manual）\n\n另外，Windows 下查询已开启服务可用 `net start`。\n\n### 笔记本无法开机启动解决方案\n\n在笔记本执行上述操作可能仍无法开机启动 sshd 服务，这时可以利用任务计划曲线救国：\n\n1. 上述操作执行到 `cygrunsrv -I xxx` 为止，即完成创建系统服务\n1. 新建文件 `reverse-tunnel.sh`：\n   {% codeblock lang:bash reverse-tunnel.sh %}\n   #!/usr/bin/bash\n   cygrunsrv -S autossh_12345\n   {% endcodeblock %}\n1. 在任务计划中添加新任务，触发器设为「成功联网后」，[示例][task-schedule-reverse-sshd-tunnel]。\n\n### 注意\n\n开始试验时经常出现重启后无法连接的情况，就上述例子而言，开机后打开日志 `/var/log/autossh_12345.log` 会显示：\n\n```\nError: remote port forwarding failed for listen port 12345\n```\n\n详情见 [SSH remote port forwarding failed][se-595323]。经过几十次的重启，处理方案如下：\n\n- 一旦计算机休眠或待机，服务将不可用，所以应关闭「自动待机」\n- `autossh` 服务中的启动需加上 `-o ExitOnForwardFailure=yes`\n- 如果重启时间过短，而且重启之前没有关闭 `autossh` 服务，那么开机的时候很可能无法启动这个服务，虽具体原因不是很懂，  但猜测是远程那端在本地计算机重启的时候，二者之前建立的隧道是被占用状态。所以为根除此问题，关机前务必停止 `autossh` 服务，这里可以对关机、重启命令进行包装：\n  {% codeblock lang:bash %}\n  alias poweroff='(shutdown -s -t 0 &); (net stop autossh_xxxx &);'\n  alias reboot='(shutdown -r -t 0 &); (net stop autossh_xxxx &);'\n  {% endcodeblock %}\n  而且该命令需要在管理员权限下执行，或者在远程执行\n- 不要试图更改服务中的登录选项，仅本机账密才能行的通\n- 可能需要设置失败后重启服务\n\n### 参考\n\n- [Configure sshd on MSYS2 and run it as a Windows service][gist-00ee]\n- [Autossh Windows][autossh-windows]\n- [Windows Task Scheduler: Trigger an Event When Internet Connects/Disconnects][task-schedule-trigger-tcp-ip]\n\n[gist-00ee]: https://gist.github.com/samhocevar/00eec26d9e9988d080ac\n[autossh-additional-pkgs-repo]: https://github.com/mati865/MSYS2-additional-packages\n[autossh-windows]: https://support.chartio.com/docs/data-sources/autossh-windows\n[sshd-msys]: /src/sshd_msys.sh\n[task-schedule-reverse-sshd-tunnel]: /src/reverse-tunnel-sshd.xml\n[se-595323]: https://serverfault.com/questions/595323/ssh-remote-port-forwarding-failed\n[task-schedule-trigger-tcp-ip]: https://www.groovypost.com/howto/automatically-run-script-on-internet-connect-network-connection-drop\n","slug":"deployment-of-sshd-on-windows-via-msys","published":1,"updated":"2023-03-09T16:09:38.217Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u3363000ip4x00di2xqq4","content":"<p>若能在远程中非图形界面下访问到自己的 Windows 服务器，比如像 Linux 那样通过 SSH 连接便能进行日常操作，那确实是很方便的。然而 Windows 鸡肋的 cmd 足以毁坏每天的心情，所以 Windows 下装配一个 *nix 系统也是必要的。下面记录 Windows 中利用 MSYS2 <strong>清真</strong> 搭建 sshd 服务的全过程。</p>\r\n<a id=\"more\"></a>\r\n<h3 id=\"配置-sshd-服务\">配置 sshd 服务</h3>\r\n<p>脚本：<a href=\"/src/sshd_msys.sh\">sshd_msys.sh</a>，注意其中的 <code>tmp_pass</code> 可作为登录密码。</p>\r\n<ol type=\"1\">\r\n<li>64 位的 MSYS2 下，以管理员身份登录 <strong>MinGW64</strong></li>\r\n<li>可能需要手动创建一些文件 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># mkpasswd &gt; /etc/passwd</span></span><br><span class=\"line\">touch /var/<span class=\"built_in\">log</span>/lastlog</span><br></pre></td></tr></table></figure></li>\r\n<li>为灵活切换 <code>MSYS</code> / <code>MINGW64</code> / <code>MINGW32</code> 环境，将 <code>/etc/ssh/sshd_config</code> 文件中的 <code>PermitUserEnvironment</code> 置为 <code>yes</code>，并新建文件 <code>~/.ssh/environment</code> 并在其中添加 <code>MSYSTEM=MINGW64</code></li>\r\n<li><code>net start/stop sshd</code> 可启用 / 停止 <code>sshd</code> 服务 （此服务在系统的 <code>Services</code> 中的服务名为 <code>sshd</code>，登录账号应为 <code>.\\sshd_server</code>）</li>\r\n</ol>\r\n<p>如此一来就可以进行本地 SSH 登录了，如要进行远程 SSH 访问本机，需作反向代理。</p>\r\n<h3 id=\"配置反向代理-ssh-服务\">配置反向代理 ssh 服务</h3>\r\n<p>MSYS2 默认的源中没有 <code>autossh</code>，所以需自行编译: <a href=\"https://github.com/mati865/MSYS2-additional-packages\" target=\"_blank\" rel=\"noopener\">repo</a>。在 <strong>MSYS</strong> 中一通操作：</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/mati865/MSYS2-additional-packages.git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> MSYS2-additional-packages/autossh</span><br><span class=\"line\">makepkg</span><br><span class=\"line\">pacman -U autossh*.pkg.tar.xz</span><br></pre></td></tr></table></figure>\r\n<p>如安装顺利，则二进制文件为 <code>/usr/bin/autossh</code>。安装系统服务：</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># ssh-keygen -t 'rsa'</span></span><br><span class=\"line\">ssh-copy-id user@domain</span><br><span class=\"line\">cygrunsrv -R autossh_12345</span><br><span class=\"line\">cygrunsrv -I autossh_12345 -d <span class=\"string\">\"MSYS2 Reverse Tunnel - xxxx\"</span> -p \\</span><br><span class=\"line\">          /usr/bin/autossh.exe -a <span class=\"string\">\"-M 0 -o ExitOnForwardFailure=yes -o \\</span></span><br><span class=\"line\"><span class=\"string\">          ServerAliveInterval=30 -o ServerAliveCountMax=3 \\</span></span><br><span class=\"line\"><span class=\"string\">          -o ExitOnForwardFailure=yes \\</span></span><br><span class=\"line\"><span class=\"string\">          -NR 12345:localhost:22 user@domain -i ~/.ssh/id_rsa\"</span> \\</span><br><span class=\"line\">          -y tcpip -u <span class=\"string\">\".\\$&#123;USER&#125;\"</span> -w <span class=\"string\">\"<span class=\"variable\">$&#123;PASSWD&#125;</span>\"</span></span><br><span class=\"line\">cygrunsrv -S autossh_12345</span><br></pre></td></tr></table></figure>\r\n<p>那么就在系统中注册了名为 <code>autossh_xxxx</code> 的服务，其中 <code>${USER}</code>，<code>${PASSWD}</code> 分别为系统用户名和密码，启动 / 停止服务同上述 <code>sshd</code> 服务。</p>\r\n<p><code>cygrunsrv</code> 参数解释：</p>\r\n<ul>\r\n<li><code>-I</code> 或 <code>--install</code>：安装服务</li>\r\n<li><code>-d</code>：显示名</li>\r\n<li><code>-p</code>：程序路径</li>\r\n<li><code>-a</code>：参数</li>\r\n<li><code>-y</code>：服务依赖，服务名可直接在 <code>services.msc</code>查询</li>\r\n<li><code>-t</code>：服务启动类型（auto | manual）</li>\r\n</ul>\r\n<p>另外，Windows 下查询已开启服务可用 <code>net start</code>。</p>\r\n<h3 id=\"笔记本无法开机启动解决方案\">笔记本无法开机启动解决方案</h3>\r\n<p>在笔记本执行上述操作可能仍无法开机启动 sshd 服务，这时可以利用任务计划曲线救国：</p>\r\n<ol type=\"1\">\r\n<li>上述操作执行到 <code>cygrunsrv -I xxx</code> 为止，即完成创建系统服务</li>\r\n<li>新建文件 <code>reverse-tunnel.sh</code>： <figure class=\"highlight bash\"><figcaption><span>reverse-tunnel.sh</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/usr/bin/bash</span></span><br><span class=\"line\">cygrunsrv -S autossh_12345</span><br></pre></td></tr></table></figure></li>\r\n<li>在任务计划中添加新任务，触发器设为「成功联网后」，<a href=\"/src/reverse-tunnel-sshd.xml\">示例</a>。</li>\r\n</ol>\r\n<h3 id=\"注意\">注意</h3>\r\n<p>开始试验时经常出现重启后无法连接的情况，就上述例子而言，开机后打开日志 <code>/var/log/autossh_12345.log</code> 会显示：</p>\r\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Error: remote port forwarding failed for listen port 12345</span><br></pre></td></tr></table></figure>\r\n<p>详情见 <a href=\"https://serverfault.com/questions/595323/ssh-remote-port-forwarding-failed\" target=\"_blank\" rel=\"noopener\">SSH remote port forwarding failed</a>。经过几十次的重启，处理方案如下：</p>\r\n<ul>\r\n<li>一旦计算机休眠或待机，服务将不可用，所以应关闭「自动待机」</li>\r\n<li><code>autossh</code> 服务中的启动需加上 <code>-o ExitOnForwardFailure=yes</code></li>\r\n<li>如果重启时间过短，而且重启之前没有关闭 <code>autossh</code> 服务，那么开机的时候很可能无法启动这个服务，虽具体原因不是很懂， 但猜测是远程那端在本地计算机重启的时候，二者之前建立的隧道是被占用状态。所以为根除此问题，关机前务必停止 <code>autossh</code> 服务，这里可以对关机、重启命令进行包装： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">alias</span> poweroff=<span class=\"string\">'(shutdown -s -t 0 &amp;); (net stop autossh_xxxx &amp;);'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> reboot=<span class=\"string\">'(shutdown -r -t 0 &amp;); (net stop autossh_xxxx &amp;);'</span></span><br></pre></td></tr></table></figure> 而且该命令需要在管理员权限下执行，或者在远程执行</li>\r\n<li>不要试图更改服务中的登录选项，仅本机账密才能行的通</li>\r\n<li>可能需要设置失败后重启服务</li>\r\n</ul>\r\n<h3 id=\"参考\">参考</h3>\r\n<ul>\r\n<li><a href=\"https://gist.github.com/samhocevar/00eec26d9e9988d080ac\" target=\"_blank\" rel=\"noopener\">Configure sshd on MSYS2 and run it as a Windows service</a></li>\r\n<li><a href=\"https://support.chartio.com/docs/data-sources/autossh-windows\" target=\"_blank\" rel=\"noopener\">Autossh Windows</a></li>\r\n<li><a href=\"https://www.groovypost.com/howto/automatically-run-script-on-internet-connect-network-connection-drop\" target=\"_blank\" rel=\"noopener\">Windows Task Scheduler: Trigger an Event When Internet Connects/Disconnects</a></li>\r\n</ul>\r\n","site":{"data":{}},"excerpt":"<p>若能在远程中非图形界面下访问到自己的 Windows 服务器，比如像 Linux 那样通过 SSH 连接便能进行日常操作，那确实是很方便的。然而 Windows 鸡肋的 cmd 足以毁坏每天的心情，所以 Windows 下装配一个 *nix 系统也是必要的。下面记录 Windows 中利用 MSYS2 <strong>清真</strong> 搭建 sshd 服务的全过程。</p>","more":"<h3 id=\"配置-sshd-服务\">配置 sshd 服务</h3>\r\n<p>脚本：<a href=\"/src/sshd_msys.sh\">sshd_msys.sh</a>，注意其中的 <code>tmp_pass</code> 可作为登录密码。</p>\r\n<ol type=\"1\">\r\n<li>64 位的 MSYS2 下，以管理员身份登录 <strong>MinGW64</strong></li>\r\n<li>可能需要手动创建一些文件 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># mkpasswd &gt; /etc/passwd</span></span><br><span class=\"line\">touch /var/<span class=\"built_in\">log</span>/lastlog</span><br></pre></td></tr></table></figure></li>\r\n<li>为灵活切换 <code>MSYS</code> / <code>MINGW64</code> / <code>MINGW32</code> 环境，将 <code>/etc/ssh/sshd_config</code> 文件中的 <code>PermitUserEnvironment</code> 置为 <code>yes</code>，并新建文件 <code>~/.ssh/environment</code> 并在其中添加 <code>MSYSTEM=MINGW64</code></li>\r\n<li><code>net start/stop sshd</code> 可启用 / 停止 <code>sshd</code> 服务 （此服务在系统的 <code>Services</code> 中的服务名为 <code>sshd</code>，登录账号应为 <code>.\\sshd_server</code>）</li>\r\n</ol>\r\n<p>如此一来就可以进行本地 SSH 登录了，如要进行远程 SSH 访问本机，需作反向代理。</p>\r\n<h3 id=\"配置反向代理-ssh-服务\">配置反向代理 ssh 服务</h3>\r\n<p>MSYS2 默认的源中没有 <code>autossh</code>，所以需自行编译: <a href=\"https://github.com/mati865/MSYS2-additional-packages\" target=\"_blank\" rel=\"noopener\">repo</a>。在 <strong>MSYS</strong> 中一通操作：</p>\r\n<!--�22-->\r\n<p>如安装顺利，则二进制文件为 <code>/usr/bin/autossh</code>。安装系统服务：</p>\r\n<!--�23-->\r\n<p>那么就在系统中注册了名为 <code>autossh_xxxx</code> 的服务，其中 <code>${USER}</code>，<code>${PASSWD}</code> 分别为系统用户名和密码，启动 / 停止服务同上述 <code>sshd</code> 服务。</p>\r\n<p><code>cygrunsrv</code> 参数解释：</p>\r\n<ul>\r\n<li><code>-I</code> 或 <code>--install</code>：安装服务</li>\r\n<li><code>-d</code>：显示名</li>\r\n<li><code>-p</code>：程序路径</li>\r\n<li><code>-a</code>：参数</li>\r\n<li><code>-y</code>：服务依赖，服务名可直接在 <code>services.msc</code>查询</li>\r\n<li><code>-t</code>：服务启动类型（auto | manual）</li>\r\n</ul>\r\n<p>另外，Windows 下查询已开启服务可用 <code>net start</code>。</p>\r\n<h3 id=\"笔记本无法开机启动解决方案\">笔记本无法开机启动解决方案</h3>\r\n<p>在笔记本执行上述操作可能仍无法开机启动 sshd 服务，这时可以利用任务计划曲线救国：</p>\r\n<ol type=\"1\">\r\n<li>上述操作执行到 <code>cygrunsrv -I xxx</code> 为止，即完成创建系统服务</li>\r\n<li>新建文件 <code>reverse-tunnel.sh</code>： <figure class=\"highlight bash\"><figcaption><span>reverse-tunnel.sh</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/usr/bin/bash</span></span><br><span class=\"line\">cygrunsrv -S autossh_12345</span><br></pre></td></tr></table></figure></li>\r\n<li>在任务计划中添加新任务，触发器设为「成功联网后」，<a href=\"/src/reverse-tunnel-sshd.xml\">示例</a>。</li>\r\n</ol>\r\n<h3 id=\"注意\">注意</h3>\r\n<p>开始试验时经常出现重启后无法连接的情况，就上述例子而言，开机后打开日志 <code>/var/log/autossh_12345.log</code> 会显示：</p>\r\n<!--�24-->\r\n<p>详情见 <a href=\"https://serverfault.com/questions/595323/ssh-remote-port-forwarding-failed\" target=\"_blank\" rel=\"noopener\">SSH remote port forwarding failed</a>。经过几十次的重启，处理方案如下：</p>\r\n<ul>\r\n<li>一旦计算机休眠或待机，服务将不可用，所以应关闭「自动待机」</li>\r\n<li><code>autossh</code> 服务中的启动需加上 <code>-o ExitOnForwardFailure=yes</code></li>\r\n<li>如果重启时间过短，而且重启之前没有关闭 <code>autossh</code> 服务，那么开机的时候很可能无法启动这个服务，虽具体原因不是很懂， 但猜测是远程那端在本地计算机重启的时候，二者之前建立的隧道是被占用状态。所以为根除此问题，关机前务必停止 <code>autossh</code> 服务，这里可以对关机、重启命令进行包装： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">alias</span> poweroff=<span class=\"string\">'(shutdown -s -t 0 &amp;); (net stop autossh_xxxx &amp;);'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> reboot=<span class=\"string\">'(shutdown -r -t 0 &amp;); (net stop autossh_xxxx &amp;);'</span></span><br></pre></td></tr></table></figure> 而且该命令需要在管理员权限下执行，或者在远程执行</li>\r\n<li>不要试图更改服务中的登录选项，仅本机账密才能行的通</li>\r\n<li>可能需要设置失败后重启服务</li>\r\n</ul>\r\n<h3 id=\"参考\">参考</h3>\r\n<ul>\r\n<li><a href=\"https://gist.github.com/samhocevar/00eec26d9e9988d080ac\" target=\"_blank\" rel=\"noopener\">Configure sshd on MSYS2 and run it as a Windows service</a></li>\r\n<li><a href=\"https://support.chartio.com/docs/data-sources/autossh-windows\" target=\"_blank\" rel=\"noopener\">Autossh Windows</a></li>\r\n<li><a href=\"https://www.groovypost.com/howto/automatically-run-script-on-internet-connect-network-connection-drop\" target=\"_blank\" rel=\"noopener\">Windows Task Scheduler: Trigger an Event When Internet Connects/Disconnects</a></li>\r\n</ul>"},{"title":"Matlab 程序设计示例","date":"2018-07-07T06:38:59.000Z","mathjax":true,"_content":"\n记录 Matlab 经典、有趣的程序例子。\n\n<!-- more -->\n\n### 三位数\n\n将 $1\\sim 9$ 这 $9$ 个数字组成 $3$ 个三位数，要求第 $2$ 个三位数是第 $1$ 个三位数的 $2$ 倍，要求第 $3$ 个三位数是第 $1$ 个三位数的 $3$ 倍，找出所有可行方案。  \n笔者的思路很简单，首先初始化一个 $1 \\times 10$ 数组代表数码 $0 \\sim 9$ 出现的次数，把试验的数组拼接成字符，再一个萝卜一个萝卜地填坑，如果坑 $1$ 至坑 $9$ 全部被填满则符合题意；比如 $123123123$ 填坑的结果就是\n$[0\\ 1\\ 1\\ 1\\ 0\\ 0\\ 0\\ 0\\ 0\\ 0]$，“坑”没有被填满，不符题意。\n{% fold 代码 %}\n{% codeblock lang:matlab %}\ncount = 0;\nfor m = 123:329\n    digs = zeros(1, 10);\n    nums = m * (1:3);\n    allc = strrep(num2str(nums), ' ', '');\n    for k = 1:9\n        digs(allc(k)-'0'+1) = 1;\n    end\n    if sum(digs(2:end)) == 9\n        count = count + 1;\n        fprintf('第 %d 组解: %s\\n', count, mat2str(nums));\n    end\nend\n\n% 第 1 组解: [192 384 576]\n% 第 2 组解: [219 438 657]\n% 第 3 组解: [273 546 819]\n% 第 4 组解: [327 654 981]\n{% endcodeblock %}\n{% endfold %}\n\n当然《MATLAB 数值计算实战》作者的代码更加赏心悦目：\n\n{% codeblock lang:matlab %}\ncount = 0;\nfor m = 123:329\n    s = num2str(m * [1;2;3]) - '0';\n    if isequal(sort(s(:)).', 1:9)\n        count = count + 1;\n        fprintf('第 %d 组解: %s\\n', count, mat2str(m * (1:3)));\n    end\nend\n{% endcodeblock %}\n首先其转化为字符的过程中使用了列向量而行向量，于是 `s` 为 $3 \\times 3$ 的数组，而笔者则需要把重心放在字符串的处理上，相当伤脑筋。后面直接将 `s` 拉直、转置为 $1 \\times 9$ 的字符数组进行排序，与 $1:9$ 进行对比即可，一气呵成。\n\n### 杨辉三角\n\n对于给定行数，美观输出杨辉三角，需要事先确定好每个数字所占宽度，这里将宽度设定为所有数字中最大数的字符个数的两倍（$2d$）。其次需要控制好三角形左边的空格长度。\n\n{% fold 代码 %}\n```matlab\nfunction pasc_triangle(N)\n    m = fix(log10(nchoosek(N-1, ceil((N-1)/2))))+1;\n    d = ceil((m+3)/2);\n    x = 1;\n    fprintf([blanks(d*(N-1)), '%-', int2str(2*d), 'd\\n'], x);\n    for k=2:N\n        fprintf(blanks(d*(N-k)));\n        x = [0, x]+[x, 0];\n        fprintf(['%-', int2str(2*d), 'd'], x);\n        % fprintf('%-*d', [repmat(2*d, 1, length(x)); x]);\n        fprintf('\\n');\n    end\nend\n```\n{% endfold %}\n\n### 约瑟夫环\n\n设有 $n$ 个人围成一圈，从位置 $s\\ (1 \\leqslant s \\leqslant n)$ 上的人从 $1$ 开始报数，数到 $m$ 的人即出列。下一个人即原来第 $m+1$ 位置上的人又从 $1$ 报数，报到第 $m$ 个人出列。重复此过程直至所有人全部出列位置。\n\n首先需要理解一个简单的公式。\n{% note %}\n$n$ 个有序点围成的圆圈中第 $x$ 个元素按照序号增大的方向移动 $k$ 步后所在的位置为\n$$\n    (x+k-1) \\ \\text{mod} \\ n + 1 \\tag{J} \\label{J}\n$$\n{% endnote %}\n\n于是以下两种方法均可实现算法。\n\n```matlab\nfunction seq = joseph1(n, s, m)\n    seq = [];\n    seat = ones(1, n);\n    s = s - 1;\n    while any(seat)\n        for k = 1:m\n            s = 1 + mod(s, n);\n            while ~seat(s)\n                s = 1 + mod(s, n);\n            end\n        end\n        seat(s) = 0;\n        seq = [seq, s];\n    end\nend\n\nfunction seq = joseph2(n, s, m)\n    seq = zeros(1, n);\n    seat = 1:n;\n    s = s - 1;\n    for k = n:-1:1\n        s = mod(s + m - 1, k);\n        seq(n - k + 1) = seat(s + 1);\n        seat(s + 1) = [];\n    end\nend\n```\n\n第一种方法思路很简单：总体不变，因为每轮会有人出局，所以设置“落座”记号，有人为 $1$ 无人为 $0$。每轮需要有 $m$ 次“有效的”移动，即移动到下一个座位上必须有人，否则继续移动。  \n第二种代码就比较简洁了，程序中的 $s$ 时始终表示下一轮第一个人前面的位置，所以公式 $\\eqref{J}$ 需要减去 $1$。每轮结束移除已出列的数字，直至数组为空为止。\n\n### 连续数字出现次数\n\n对于一个行向量 $[0\\ 0\\ 0\\ 1\\ 1\\ 1\\ 0\\ 1\\ 1\\ 0\\ 0\\ 1\\ 1\\ 1\\ 0\\ 0\\ 0\\ 1]$，统计连续 $1$ 出现的位置以及次数。\n\n考虑其一阶差分：$[0\\ 0\\ 1\\ 0\\ 0\\ -1\\ 1\\ 0\\ -1\\ 0\\ 1\\ 0\\ 0\\ -1\\ 0\\ 0\\ 1]$，可观察到原向量中开始出现 $1$ 的位置在差分后的向量中也为 $1$，并结束于 $-1$ 之前。但考虑到首末问题，应该在原向量首尾各添加 $0$ 以保证正确性。代码如下：\n\n```matlab\nx = [0 0 0 1 1 1 0 1 1 0 0 1 1 1 0 0 0 1];\ndx = diff([0 x 0]);\nres = [find(dx==1); find(dx==-1) - find(dx==1)]\n\n% res =\n%     4     8    12    18\n%     3     2     3     1\n```\n\n","source":"_posts/essentials-of-matlab-examples.md","raw":"---\ntitle: Matlab 程序设计示例\ndate: 2018-07-07 14:38:59\ncategories: Development\ntags:\n    - Matlab\nmathjax: true\n---\n\n记录 Matlab 经典、有趣的程序例子。\n\n<!-- more -->\n\n### 三位数\n\n将 $1\\sim 9$ 这 $9$ 个数字组成 $3$ 个三位数，要求第 $2$ 个三位数是第 $1$ 个三位数的 $2$ 倍，要求第 $3$ 个三位数是第 $1$ 个三位数的 $3$ 倍，找出所有可行方案。  \n笔者的思路很简单，首先初始化一个 $1 \\times 10$ 数组代表数码 $0 \\sim 9$ 出现的次数，把试验的数组拼接成字符，再一个萝卜一个萝卜地填坑，如果坑 $1$ 至坑 $9$ 全部被填满则符合题意；比如 $123123123$ 填坑的结果就是\n$[0\\ 1\\ 1\\ 1\\ 0\\ 0\\ 0\\ 0\\ 0\\ 0]$，“坑”没有被填满，不符题意。\n{% fold 代码 %}\n{% codeblock lang:matlab %}\ncount = 0;\nfor m = 123:329\n    digs = zeros(1, 10);\n    nums = m * (1:3);\n    allc = strrep(num2str(nums), ' ', '');\n    for k = 1:9\n        digs(allc(k)-'0'+1) = 1;\n    end\n    if sum(digs(2:end)) == 9\n        count = count + 1;\n        fprintf('第 %d 组解: %s\\n', count, mat2str(nums));\n    end\nend\n\n% 第 1 组解: [192 384 576]\n% 第 2 组解: [219 438 657]\n% 第 3 组解: [273 546 819]\n% 第 4 组解: [327 654 981]\n{% endcodeblock %}\n{% endfold %}\n\n当然《MATLAB 数值计算实战》作者的代码更加赏心悦目：\n\n{% codeblock lang:matlab %}\ncount = 0;\nfor m = 123:329\n    s = num2str(m * [1;2;3]) - '0';\n    if isequal(sort(s(:)).', 1:9)\n        count = count + 1;\n        fprintf('第 %d 组解: %s\\n', count, mat2str(m * (1:3)));\n    end\nend\n{% endcodeblock %}\n首先其转化为字符的过程中使用了列向量而行向量，于是 `s` 为 $3 \\times 3$ 的数组，而笔者则需要把重心放在字符串的处理上，相当伤脑筋。后面直接将 `s` 拉直、转置为 $1 \\times 9$ 的字符数组进行排序，与 $1:9$ 进行对比即可，一气呵成。\n\n### 杨辉三角\n\n对于给定行数，美观输出杨辉三角，需要事先确定好每个数字所占宽度，这里将宽度设定为所有数字中最大数的字符个数的两倍（$2d$）。其次需要控制好三角形左边的空格长度。\n\n{% fold 代码 %}\n```matlab\nfunction pasc_triangle(N)\n    m = fix(log10(nchoosek(N-1, ceil((N-1)/2))))+1;\n    d = ceil((m+3)/2);\n    x = 1;\n    fprintf([blanks(d*(N-1)), '%-', int2str(2*d), 'd\\n'], x);\n    for k=2:N\n        fprintf(blanks(d*(N-k)));\n        x = [0, x]+[x, 0];\n        fprintf(['%-', int2str(2*d), 'd'], x);\n        % fprintf('%-*d', [repmat(2*d, 1, length(x)); x]);\n        fprintf('\\n');\n    end\nend\n```\n{% endfold %}\n\n### 约瑟夫环\n\n设有 $n$ 个人围成一圈，从位置 $s\\ (1 \\leqslant s \\leqslant n)$ 上的人从 $1$ 开始报数，数到 $m$ 的人即出列。下一个人即原来第 $m+1$ 位置上的人又从 $1$ 报数，报到第 $m$ 个人出列。重复此过程直至所有人全部出列位置。\n\n首先需要理解一个简单的公式。\n{% note %}\n$n$ 个有序点围成的圆圈中第 $x$ 个元素按照序号增大的方向移动 $k$ 步后所在的位置为\n$$\n    (x+k-1) \\ \\text{mod} \\ n + 1 \\tag{J} \\label{J}\n$$\n{% endnote %}\n\n于是以下两种方法均可实现算法。\n\n```matlab\nfunction seq = joseph1(n, s, m)\n    seq = [];\n    seat = ones(1, n);\n    s = s - 1;\n    while any(seat)\n        for k = 1:m\n            s = 1 + mod(s, n);\n            while ~seat(s)\n                s = 1 + mod(s, n);\n            end\n        end\n        seat(s) = 0;\n        seq = [seq, s];\n    end\nend\n\nfunction seq = joseph2(n, s, m)\n    seq = zeros(1, n);\n    seat = 1:n;\n    s = s - 1;\n    for k = n:-1:1\n        s = mod(s + m - 1, k);\n        seq(n - k + 1) = seat(s + 1);\n        seat(s + 1) = [];\n    end\nend\n```\n\n第一种方法思路很简单：总体不变，因为每轮会有人出局，所以设置“落座”记号，有人为 $1$ 无人为 $0$。每轮需要有 $m$ 次“有效的”移动，即移动到下一个座位上必须有人，否则继续移动。  \n第二种代码就比较简洁了，程序中的 $s$ 时始终表示下一轮第一个人前面的位置，所以公式 $\\eqref{J}$ 需要减去 $1$。每轮结束移除已出列的数字，直至数组为空为止。\n\n### 连续数字出现次数\n\n对于一个行向量 $[0\\ 0\\ 0\\ 1\\ 1\\ 1\\ 0\\ 1\\ 1\\ 0\\ 0\\ 1\\ 1\\ 1\\ 0\\ 0\\ 0\\ 1]$，统计连续 $1$ 出现的位置以及次数。\n\n考虑其一阶差分：$[0\\ 0\\ 1\\ 0\\ 0\\ -1\\ 1\\ 0\\ -1\\ 0\\ 1\\ 0\\ 0\\ -1\\ 0\\ 0\\ 1]$，可观察到原向量中开始出现 $1$ 的位置在差分后的向量中也为 $1$，并结束于 $-1$ 之前。但考虑到首末问题，应该在原向量首尾各添加 $0$ 以保证正确性。代码如下：\n\n```matlab\nx = [0 0 0 1 1 1 0 1 1 0 0 1 1 1 0 0 0 1];\ndx = diff([0 x 0]);\nres = [find(dx==1); find(dx==-1) - find(dx==1)]\n\n% res =\n%     4     8    12    18\n%     3     2     3     1\n```\n\n","slug":"essentials-of-matlab-examples","published":1,"updated":"2023-03-09T16:09:38.219Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u3365000mp4x0zrgsdhct","content":"<p>记录 Matlab 经典、有趣的程序例子。</p>\r\n<a id=\"more\"></a>\r\n<h3 id=\"三位数\">三位数</h3>\r\n<p>将 <span class=\"math inline\">\\(1\\sim 9\\)</span> 这 <span class=\"math inline\">\\(9\\)</span> 个数字组成 <span class=\"math inline\">\\(3\\)</span> 个三位数，要求第 <span class=\"math inline\">\\(2\\)</span> 个三位数是第 <span class=\"math inline\">\\(1\\)</span> 个三位数的 <span class=\"math inline\">\\(2\\)</span> 倍，要求第 <span class=\"math inline\">\\(3\\)</span> 个三位数是第 <span class=\"math inline\">\\(1\\)</span> 个三位数的 <span class=\"math inline\">\\(3\\)</span> 倍，找出所有可行方案。<br>\r\n笔者的思路很简单，首先初始化一个 <span class=\"math inline\">\\(1 \\times 10\\)</span> 数组代表数码 <span class=\"math inline\">\\(0 \\sim 9\\)</span> 出现的次数，把试验的数组拼接成字符，再一个萝卜一个萝卜地填坑，如果坑 <span class=\"math inline\">\\(1\\)</span> 至坑 <span class=\"math inline\">\\(9\\)</span> 全部被填满则符合题意；比如 <span class=\"math inline\">\\(123123123\\)</span> 填坑的结果就是 <span class=\"math inline\">\\([0\\ 1\\ 1\\ 1\\ 0\\ 0\\ 0\\ 0\\ 0\\ 0]\\)</span>，“坑”没有被填满，不符题意。 <div><div class=\"fold_hider\"><div class=\"close hider_title\">代码</div></div><div class=\"fold\">\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">count = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> m = <span class=\"number\">123</span>:<span class=\"number\">329</span></span><br><span class=\"line\">    digs = <span class=\"built_in\">zeros</span>(<span class=\"number\">1</span>, <span class=\"number\">10</span>);</span><br><span class=\"line\">    nums = m * (<span class=\"number\">1</span>:<span class=\"number\">3</span>);</span><br><span class=\"line\">    allc = strrep(num2str(nums), <span class=\"string\">' '</span>, <span class=\"string\">''</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> k = <span class=\"number\">1</span>:<span class=\"number\">9</span></span><br><span class=\"line\">        digs(allc(k)-<span class=\"string\">'0'</span>+<span class=\"number\">1</span>) = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> sum(digs(<span class=\"number\">2</span>:<span class=\"keyword\">end</span>)) == <span class=\"number\">9</span></span><br><span class=\"line\">        count = count + <span class=\"number\">1</span>;</span><br><span class=\"line\">        fprintf(<span class=\"string\">'第 %d 组解: %s\\n'</span>, count, mat2str(nums));</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">% 第 1 组解: [192 384 576]</span></span><br><span class=\"line\"><span class=\"comment\">% 第 2 组解: [219 438 657]</span></span><br><span class=\"line\"><span class=\"comment\">% 第 3 组解: [273 546 819]</span></span><br><span class=\"line\"><span class=\"comment\">% 第 4 组解: [327 654 981]</span></span><br></pre></td></tr></table></figure>\n</div></div></p>\r\n<p>当然《MATLAB 数值计算实战》作者的代码更加赏心悦目：</p>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">count = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> m = <span class=\"number\">123</span>:<span class=\"number\">329</span></span><br><span class=\"line\">    s = num2str(m * [<span class=\"number\">1</span>;<span class=\"number\">2</span>;<span class=\"number\">3</span>]) - <span class=\"string\">'0'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">isequal</span>(sort(s(:)).<span class=\"string\">', 1:9)</span></span><br><span class=\"line\"><span class=\"string\">        count = count + 1;</span></span><br><span class=\"line\"><span class=\"string\">        fprintf('</span>第 <span class=\"comment\">%d 组解: %s\\n', count, mat2str(m * (1:3)));</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\r\n<p>首先其转化为字符的过程中使用了列向量而行向量，于是 <code>s</code> 为 <span class=\"math inline\">\\(3 \\times 3\\)</span> 的数组，而笔者则需要把重心放在字符串的处理上，相当伤脑筋。后面直接将 <code>s</code> 拉直、转置为 <span class=\"math inline\">\\(1 \\times 9\\)</span> 的字符数组进行排序，与 <span class=\"math inline\">\\(1:9\\)</span> 进行对比即可，一气呵成。</p>\r\n<h3 id=\"杨辉三角\">杨辉三角</h3>\r\n<p>对于给定行数，美观输出杨辉三角，需要事先确定好每个数字所占宽度，这里将宽度设定为所有数字中最大数的字符个数的两倍（<span class=\"math inline\">\\(2d\\)</span>）。其次需要控制好三角形左边的空格长度。</p>\r\n<div><div class=\"fold_hider\"><div class=\"close hider_title\">代码</div></div><div class=\"fold\">\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">pasc_triangle</span><span class=\"params\">(N)</span></span></span><br><span class=\"line\">    m = <span class=\"built_in\">fix</span>(<span class=\"built_in\">log10</span>(<span class=\"built_in\">nchoosek</span>(N<span class=\"number\">-1</span>, <span class=\"built_in\">ceil</span>((N<span class=\"number\">-1</span>)/<span class=\"number\">2</span>))))+<span class=\"number\">1</span>;</span><br><span class=\"line\">    d = <span class=\"built_in\">ceil</span>((m+<span class=\"number\">3</span>)/<span class=\"number\">2</span>);</span><br><span class=\"line\">    x = <span class=\"number\">1</span>;</span><br><span class=\"line\">    fprintf([blanks(d*(N<span class=\"number\">-1</span>)), <span class=\"string\">'%-'</span>, int2str(<span class=\"number\">2</span>*d), <span class=\"string\">'d\\n'</span>], x);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> k=<span class=\"number\">2</span>:N</span><br><span class=\"line\">        fprintf(blanks(d*(N-k)));</span><br><span class=\"line\">        x = [<span class=\"number\">0</span>, x]+[x, <span class=\"number\">0</span>];</span><br><span class=\"line\">        fprintf([<span class=\"string\">'%-'</span>, int2str(<span class=\"number\">2</span>*d), <span class=\"string\">'d'</span>], x);</span><br><span class=\"line\">        <span class=\"comment\">% fprintf('%-*d', [repmat(2*d, 1, length(x)); x]);</span></span><br><span class=\"line\">        fprintf(<span class=\"string\">'\\n'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n</div></div>\r\n<h3 id=\"约瑟夫环\">约瑟夫环</h3>\r\n<p>设有 <span class=\"math inline\">\\(n\\)</span> 个人围成一圈，从位置 <span class=\"math inline\">\\(s\\ (1 \\leqslant s \\leqslant n)\\)</span> 上的人从 <span class=\"math inline\">\\(1\\)</span> 开始报数，数到 <span class=\"math inline\">\\(m\\)</span> 的人即出列。下一个人即原来第 <span class=\"math inline\">\\(m+1\\)</span> 位置上的人又从 <span class=\"math inline\">\\(1\\)</span> 报数，报到第 <span class=\"math inline\">\\(m\\)</span> 个人出列。重复此过程直至所有人全部出列位置。</p>\r\n<p>首先需要理解一个简单的公式。 <div class=\"note \">$n$ 个有序点围成的圆圈中第 $x$ 个元素按照序号增大的方向移动 $k$ 步后所在的位置为\n$$\n    (x+k-1) \\ \\text{mod} \\ n + 1 \\tag{J} \\label{J}\n$$</div></p>\r\n<p>于是以下两种方法均可实现算法。</p>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">seq</span> = <span class=\"title\">joseph1</span><span class=\"params\">(n, s, m)</span></span></span><br><span class=\"line\">    seq = [];</span><br><span class=\"line\">    seat = <span class=\"built_in\">ones</span>(<span class=\"number\">1</span>, n);</span><br><span class=\"line\">    s = s - <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> any(seat)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> k = <span class=\"number\">1</span>:m</span><br><span class=\"line\">            s = <span class=\"number\">1</span> + <span class=\"built_in\">mod</span>(s, n);</span><br><span class=\"line\">            <span class=\"keyword\">while</span> ~seat(s)</span><br><span class=\"line\">                s = <span class=\"number\">1</span> + <span class=\"built_in\">mod</span>(s, n);</span><br><span class=\"line\">            <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        seat(s) = <span class=\"number\">0</span>;</span><br><span class=\"line\">        seq = [seq, s];</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">seq</span> = <span class=\"title\">joseph2</span><span class=\"params\">(n, s, m)</span></span></span><br><span class=\"line\">    seq = <span class=\"built_in\">zeros</span>(<span class=\"number\">1</span>, n);</span><br><span class=\"line\">    seat = <span class=\"number\">1</span>:n;</span><br><span class=\"line\">    s = s - <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> k = n:<span class=\"number\">-1</span>:<span class=\"number\">1</span></span><br><span class=\"line\">        s = <span class=\"built_in\">mod</span>(s + m - <span class=\"number\">1</span>, k);</span><br><span class=\"line\">        seq(n - k + <span class=\"number\">1</span>) = seat(s + <span class=\"number\">1</span>);</span><br><span class=\"line\">        seat(s + <span class=\"number\">1</span>) = [];</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\r\n<p>第一种方法思路很简单：总体不变，因为每轮会有人出局，所以设置“落座”记号，有人为 <span class=\"math inline\">\\(1\\)</span> 无人为 <span class=\"math inline\">\\(0\\)</span>。每轮需要有 <span class=\"math inline\">\\(m\\)</span> 次“有效的”移动，即移动到下一个座位上必须有人，否则继续移动。<br>\r\n第二种代码就比较简洁了，程序中的 <span class=\"math inline\">\\(s\\)</span> 时始终表示下一轮第一个人前面的位置，所以公式 <span class=\"math inline\">\\(\\eqref{J}\\)</span> 需要减去 <span class=\"math inline\">\\(1\\)</span>。每轮结束移除已出列的数字，直至数组为空为止。</p>\r\n<h3 id=\"连续数字出现次数\">连续数字出现次数</h3>\r\n<p>对于一个行向量 <span class=\"math inline\">\\([0\\ 0\\ 0\\ 1\\ 1\\ 1\\ 0\\ 1\\ 1\\ 0\\ 0\\ 1\\ 1\\ 1\\ 0\\ 0\\ 0\\ 1]\\)</span>，统计连续 <span class=\"math inline\">\\(1\\)</span> 出现的位置以及次数。</p>\r\n<p>考虑其一阶差分：<span class=\"math inline\">\\([0\\ 0\\ 1\\ 0\\ 0\\ -1\\ 1\\ 0\\ -1\\ 0\\ 1\\ 0\\ 0\\ -1\\ 0\\ 0\\ 1]\\)</span>，可观察到原向量中开始出现 <span class=\"math inline\">\\(1\\)</span> 的位置在差分后的向量中也为 <span class=\"math inline\">\\(1\\)</span>，并结束于 <span class=\"math inline\">\\(-1\\)</span> 之前。但考虑到首末问题，应该在原向量首尾各添加 <span class=\"math inline\">\\(0\\)</span> 以保证正确性。代码如下：</p>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x = [<span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">1</span> <span class=\"number\">1</span> <span class=\"number\">1</span> <span class=\"number\">0</span> <span class=\"number\">1</span> <span class=\"number\">1</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">1</span> <span class=\"number\">1</span> <span class=\"number\">1</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">1</span>];</span><br><span class=\"line\">dx = diff([<span class=\"number\">0</span> x <span class=\"number\">0</span>]);</span><br><span class=\"line\">res = [find(dx==<span class=\"number\">1</span>); find(dx==<span class=\"number\">-1</span>) - find(dx==<span class=\"number\">1</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">% res =</span></span><br><span class=\"line\"><span class=\"comment\">%     4     8    12    18</span></span><br><span class=\"line\"><span class=\"comment\">%     3     2     3     1</span></span><br></pre></td></tr></table></figure>\r\n","site":{"data":{}},"excerpt":"<p>记录 Matlab 经典、有趣的程序例子。</p>","more":"<h3 id=\"三位数\">三位数</h3>\r\n<p>将 <span class=\"math inline\">\\(1\\sim 9\\)</span> 这 <span class=\"math inline\">\\(9\\)</span> 个数字组成 <span class=\"math inline\">\\(3\\)</span> 个三位数，要求第 <span class=\"math inline\">\\(2\\)</span> 个三位数是第 <span class=\"math inline\">\\(1\\)</span> 个三位数的 <span class=\"math inline\">\\(2\\)</span> 倍，要求第 <span class=\"math inline\">\\(3\\)</span> 个三位数是第 <span class=\"math inline\">\\(1\\)</span> 个三位数的 <span class=\"math inline\">\\(3\\)</span> 倍，找出所有可行方案。<br>\r\n笔者的思路很简单，首先初始化一个 <span class=\"math inline\">\\(1 \\times 10\\)</span> 数组代表数码 <span class=\"math inline\">\\(0 \\sim 9\\)</span> 出现的次数，把试验的数组拼接成字符，再一个萝卜一个萝卜地填坑，如果坑 <span class=\"math inline\">\\(1\\)</span> 至坑 <span class=\"math inline\">\\(9\\)</span> 全部被填满则符合题意；比如 <span class=\"math inline\">\\(123123123\\)</span> 填坑的结果就是 <span class=\"math inline\">\\([0\\ 1\\ 1\\ 1\\ 0\\ 0\\ 0\\ 0\\ 0\\ 0]\\)</span>，“坑”没有被填满，不符题意。 <div><div class=\"fold_hider\"><div class=\"close hider_title\">代码</div></div><div class=\"fold\">\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">count = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> m = <span class=\"number\">123</span>:<span class=\"number\">329</span></span><br><span class=\"line\">    digs = <span class=\"built_in\">zeros</span>(<span class=\"number\">1</span>, <span class=\"number\">10</span>);</span><br><span class=\"line\">    nums = m * (<span class=\"number\">1</span>:<span class=\"number\">3</span>);</span><br><span class=\"line\">    allc = strrep(num2str(nums), <span class=\"string\">' '</span>, <span class=\"string\">''</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> k = <span class=\"number\">1</span>:<span class=\"number\">9</span></span><br><span class=\"line\">        digs(allc(k)-<span class=\"string\">'0'</span>+<span class=\"number\">1</span>) = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> sum(digs(<span class=\"number\">2</span>:<span class=\"keyword\">end</span>)) == <span class=\"number\">9</span></span><br><span class=\"line\">        count = count + <span class=\"number\">1</span>;</span><br><span class=\"line\">        fprintf(<span class=\"string\">'第 %d 组解: %s\\n'</span>, count, mat2str(nums));</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">% 第 1 组解: [192 384 576]</span></span><br><span class=\"line\"><span class=\"comment\">% 第 2 组解: [219 438 657]</span></span><br><span class=\"line\"><span class=\"comment\">% 第 3 组解: [273 546 819]</span></span><br><span class=\"line\"><span class=\"comment\">% 第 4 组解: [327 654 981]</span></span><br></pre></td></tr></table></figure>\n</div></div></p>\r\n<p>当然《MATLAB 数值计算实战》作者的代码更加赏心悦目：</p>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">count = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> m = <span class=\"number\">123</span>:<span class=\"number\">329</span></span><br><span class=\"line\">    s = num2str(m * [<span class=\"number\">1</span>;<span class=\"number\">2</span>;<span class=\"number\">3</span>]) - <span class=\"string\">'0'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">isequal</span>(sort(s(:)).<span class=\"string\">', 1:9)</span></span><br><span class=\"line\"><span class=\"string\">        count = count + 1;</span></span><br><span class=\"line\"><span class=\"string\">        fprintf('</span>第 <span class=\"comment\">%d 组解: %s\\n', count, mat2str(m * (1:3)));</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\r\n<p>首先其转化为字符的过程中使用了列向量而行向量，于是 <code>s</code> 为 <span class=\"math inline\">\\(3 \\times 3\\)</span> 的数组，而笔者则需要把重心放在字符串的处理上，相当伤脑筋。后面直接将 <code>s</code> 拉直、转置为 <span class=\"math inline\">\\(1 \\times 9\\)</span> 的字符数组进行排序，与 <span class=\"math inline\">\\(1:9\\)</span> 进行对比即可，一气呵成。</p>\r\n<h3 id=\"杨辉三角\">杨辉三角</h3>\r\n<p>对于给定行数，美观输出杨辉三角，需要事先确定好每个数字所占宽度，这里将宽度设定为所有数字中最大数的字符个数的两倍（<span class=\"math inline\">\\(2d\\)</span>）。其次需要控制好三角形左边的空格长度。</p>\r\n<div><div class=\"fold_hider\"><div class=\"close hider_title\">代码</div></div><div class=\"fold\">\n<!--�25-->\n\n</div></div>\r\n<h3 id=\"约瑟夫环\">约瑟夫环</h3>\r\n<p>设有 <span class=\"math inline\">\\(n\\)</span> 个人围成一圈，从位置 <span class=\"math inline\">\\(s\\ (1 \\leqslant s \\leqslant n)\\)</span> 上的人从 <span class=\"math inline\">\\(1\\)</span> 开始报数，数到 <span class=\"math inline\">\\(m\\)</span> 的人即出列。下一个人即原来第 <span class=\"math inline\">\\(m+1\\)</span> 位置上的人又从 <span class=\"math inline\">\\(1\\)</span> 报数，报到第 <span class=\"math inline\">\\(m\\)</span> 个人出列。重复此过程直至所有人全部出列位置。</p>\r\n<p>首先需要理解一个简单的公式。 <div class=\"note \">$n$ 个有序点围成的圆圈中第 $x$ 个元素按照序号增大的方向移动 $k$ 步后所在的位置为\n$$\n    (x+k-1) \\ \\text{mod} \\ n + 1 \\tag{J} \\label{J}\n$$</div></p>\r\n<p>于是以下两种方法均可实现算法。</p>\r\n<!--�26-->\r\n<p>第一种方法思路很简单：总体不变，因为每轮会有人出局，所以设置“落座”记号，有人为 <span class=\"math inline\">\\(1\\)</span> 无人为 <span class=\"math inline\">\\(0\\)</span>。每轮需要有 <span class=\"math inline\">\\(m\\)</span> 次“有效的”移动，即移动到下一个座位上必须有人，否则继续移动。<br>\r\n第二种代码就比较简洁了，程序中的 <span class=\"math inline\">\\(s\\)</span> 时始终表示下一轮第一个人前面的位置，所以公式 <span class=\"math inline\">\\(\\eqref{J}\\)</span> 需要减去 <span class=\"math inline\">\\(1\\)</span>。每轮结束移除已出列的数字，直至数组为空为止。</p>\r\n<h3 id=\"连续数字出现次数\">连续数字出现次数</h3>\r\n<p>对于一个行向量 <span class=\"math inline\">\\([0\\ 0\\ 0\\ 1\\ 1\\ 1\\ 0\\ 1\\ 1\\ 0\\ 0\\ 1\\ 1\\ 1\\ 0\\ 0\\ 0\\ 1]\\)</span>，统计连续 <span class=\"math inline\">\\(1\\)</span> 出现的位置以及次数。</p>\r\n<p>考虑其一阶差分：<span class=\"math inline\">\\([0\\ 0\\ 1\\ 0\\ 0\\ -1\\ 1\\ 0\\ -1\\ 0\\ 1\\ 0\\ 0\\ -1\\ 0\\ 0\\ 1]\\)</span>，可观察到原向量中开始出现 <span class=\"math inline\">\\(1\\)</span> 的位置在差分后的向量中也为 <span class=\"math inline\">\\(1\\)</span>，并结束于 <span class=\"math inline\">\\(-1\\)</span> 之前。但考虑到首末问题，应该在原向量首尾各添加 <span class=\"math inline\">\\(0\\)</span> 以保证正确性。代码如下：</p>\r\n<!--�27-->"},{"title":"Matlab 程序设计之编程基础","date":"2018-07-05T17:10:39.000Z","mathjax":true,"_content":"\n\n本系列试图将笔者在研究过程中认为比较重要、容易遗忘以及富有创新性或启发性的程序代码及思想一一记录，一来节省遇见同类问题时耗费在检索资料上的时间，二来也能见证自己构建知识体系框架的历程。\n\n<!-- more -->\n\n新版本的马特来布添加了诸多与时俱进的特性和工具箱，一直为人诟病的画图也自带抗锯齿了，R2016b 后的版本也支持脚本中函数了。MathWorks 始终坚持半年一新地迭代着 Matlab 的版本，可见其非常地用心。花了三天时间分别在 Windows 10 及 Ubuntu 16.04 x64 下安装好 Matlab，~~因个人感觉 2017 以后的版本在 Windows 上卡顿明显，所以~~ Win 和 Linux 下的版本均为 R2017b。当然后者是面向终端的命令行版的：\n\n```bash\n/usr/local/MATLAB/R2017b/bin/matlab -nodisplay\n```\n\n目前参考的书籍有：\n\n- 《MATLAB 语言常用算法程序集》（电子版）\n- 《MATLAB 之父：编程实践》（电子版）\n- 《高等应用数学问题的 MATLAB 求解》（电子版）\n- 《MATLAB 数值计算》（电子版）\n- 《大学数学实验》（电子版）\n- 《MATLAB 统计分析与应用：40 个案例分析》\n- 《MATLAB 数学建模》\n- 《MATLAB 数值计算实战》\n\n说实话，有点贪心，但也是种挑战。若能在短时间内去其糟粕取其精华，相比也是种奇妙的学习体验。\n\n一般社会哥人狠话不多，闲话至此，下面进入没有主题的正题。\n\nLinux 下安装的时候出现了点小插曲，在其中一台 Ubuntu 16.04.4 的机器上安装完 Matlab 2017b 后，无法使用数学符号工具箱，出现如下错误：\n\n```Matlab\n>> syms a b c;\nError using mupadmex\nError in MuPAD command: .\nError in symengine\nError in sym (line 189)\n        symengine;\nError in syms (line 197)\ntoDefine = sym(zeros(1, 0));\n```\n\n搜寻所有可能与该问题相关的途径后， 无论是更新、回滚 `fontconfig`，`libfreetype` 版本还是重新安装其他版本 Matlab for Linux 后均无效，说明 Linux 下操作系统状态对 Matlab 有一定影响，遂放弃此台服务器。\n\n由于笔者的系统为英文系统，而 Windows 下区分系统 Locale 的方式在于「格式」而非「地区」（具体设置为 Control Panel - Clock, Language, and Region - Region - Formats），所以会出现两个显著问题：程序界面为英文、编辑器里中文乱码。界面为英文倒不能说是问题，但乱码就很令人头疼了。查阅资料后得到的比较一劳永逸的方法是改动「格式」为中国。其他方法如修改文件 `lcdata.xml` 经亲测并不考谱。另，若仍坚持在英文系统下使用 Matlab，并需输出中文，务必运行语句\n```matlab\nfeature('DefaultCharacterSet', 'UTF-8');\n```\n\n-----------------------------------\n\n## Vim 插件\n\n在 `.vimrc` 中添加：\n\n```vim .vimrc\nPlugin 'michaelHL/matlab-screen'\nPlugin 'tdehaeze/matlab-vim'\n\nmap <F8> :call CompileRun()<CR>\nfunc! CompileRun()\n    exec \"w\"\n    if &filetype == 'c'\n       :!clear; gcc -std=c11 -Wall % -o %<; time ./%<\n    elseif &filetype == 'matlab'\n       :call RunMatlabCurrentFile()\n    endif\nendfunc\n```\n\n在 Vim 中打开 `.m` 文件，`F8` 即可运行。\n\n\n\n## 基本命令及快捷键\n\n| 命令                   | 功能                                                           | 命令              | 功能                                           |\n| :---                   | :----                                                          | :---              | :----                                          |\n| `clc`                  | 清屏（甚至清除了缓冲区）                                       | `clear`           | 清除工作空间所有变量                           |\n| `clear all`            | 从工作空间清除所有变量和函数                                   | `clear <变量名>`  | 清除指定变量                                   |\n| `clf`                  | 清除图形窗口内容（注意该命令会弹出新的画布，相当于 `figure` ） | `delete <文件名>` | 从**磁盘**中删除文件                           |\n| `cla`                  | 清空当前坐标系                                                 | `type`            | 显示 m 文件的内容                              |\n| `help <命令名>`        | 获取所列命令的帮助信息                                         | `which <文件名>`  | 查找指定文件路径                               |\n| `who`                  | 显示当前工作空间所有变量的一个**简单列表**                     | `whos`            | 列出变量大小、数据格式等**详细信息**           |\n| `what`                 | 列出当前目录下的 `.m` 文件和 `.mat` 文件                       | `load name`       | 下载 `name` 文件中的所有变量到工作空间         |\n| `load name x y`        | 下载 `name` 文件的变量 `x`, `y` 到工作空间                     | `importdata name` | 将 `name` 文件中的数据以结构体方式导入工作空间 |\n| `save name`            | 保存工作空间变量到文件 `name.mat` 中                           | `save name x y`   | 保存工作空间变量 `x`, `y` 到文件 `name.mat` 中 |\n| `↑` 或 `<C-p>`         | 调用上一行命令                                                 | `↓` 或 `<C-n>`    | 调用下一行命令                                 |\n| `←` 或 `<C-b>`         | 退后一格                                                       | `→` 或 `<C-f>`    | 前移一格                                       |\n| `Home` 或 `<C-a>`      | 光标移至行首                                                   | `Home` 或 `<C-e>` | 光标移至行尾                                   |\n| `Esc` 或 `<C-u>`       | 清除一行                                                       | `Del` 或 `<C-d>`  | 清除光标后字符                                 |\n| `Backspace` 或 `<C-h>` | 清除光标前一个字符                                             | `<C-k>`           | 清除光标至行尾字符                             |\n| `<C-0>`                | 激活命令窗口                                                   | `<C-S-0>`         | 激活编辑器窗口                                 |\n| `<C-1>`                | 激活命令历史窗口                                               | `<C-2>`           | 激活「当前目录」窗口                           |\n| `<C-3>`                | 激活工作空间窗口                                               |                   |                                                |\n\n如果以上键盘快捷键部分无效，说明是时候把键盘主题改为 Emacs-Style 了：Preference - MATLAB - Keyboard - Shortcuts - Active settings: Emacs Default Set。\n\n## 常用的帮助命令\n\n| 命令 | 功能 | 命令 | 功能 |\n| :--  | :--  | :--  | :--  |\n| `help matfun` | 矩阵函数 - 数值线性代数 | `help datafun` | 数据分析和傅立叶变换函数 |\n| `help general` | 通用命令 | `help ops` | 操作符和特殊字符 |\n| `help graphics` | 通用图形函数 | `help polyfun` | 多项式和内插函数 |\n| `help elfun` | 基本的数学函数 | `help lang` | 语言结构和调试 |\n| `help elmat` | 基本的矩阵和矩阵操作 | `help strfun` | 字符串函数 |\n| `help control` | 控制系统工具和工具箱函数 | | |\n\n## 部分预定义变量\n\n| 变量或函数 | 说明 | 变量或函数 | 说明 |\n| :--  | :--  | :--  | :--  |\n| `ans` | 默认变量名，以应答最近一次操作运算结果 | `eps` | 浮点数的相对误差 |\n| `i`, `j` | 虚数单数 | `pi` | 圆周率 |\n| `intmax` | 本计算机能表示的 8 位、16 位、32 位、64 位的最大整数 | `intmin` | 本计算机能表示的 8 位、16 位、32 位、64 位的最小整数 |\n| `realmax` | 本计算机能表达的最大浮点数 | `realmin` | 本计算机能表达的最小浮点数 |\n| `Inf` 或 `inf` | 无穷大 | `NaN` 或`nan` | 非数 |\n| `computer` | MATLAB 运行平台 | `version` | MATLAB 版本字符串 |\n\n## 数据显示格式\n\n摘自 [MathWorks 文档 - 设置命令行窗口输出显示格式](https://ww2.mathworks.cn/help/matlab/ref/format.html)：\n\n|   风格   |   结果  |   示例  |\n|   :-- |   :-- |   :-- |\n|   `short (default)` |   固定十进制短格式，小数点后包含 4 位数   |   3.1416  |\n|   `long`    |   长固定小数格式，double 值的小数点后包含 15 位数，single 值的小数点后包含 7 位数 |   3.141592654 |\n|   `shortE`  |   短科学记数法，小数点后包含 4 位数 |   3.14E+00    |\n|   `longE`   |   长科学记数法，double 值的小数点后包含 15 位数，single 值的小数点后包含 7 位数  |   3.14E+00    |\n|   `shortG`  |   短固定小数格式或科学记数法（取更紧凑的一个），总共 5 位  |   3.1416  |\n|   `longG`   |   长固定小数格式或科学记数法（取更紧凑的一个），对于 double 值，总共 15 位；对于 single 值，总共 7 位  |   3.141592654 |\n|   `shortEng`    |   短工程记数法，小数点后包含 4 位数，3 的倍数   |   3.14E+00    |\n|   `longEng` |   长工程记数法，包含 15 位有效位数，指数为 3 的倍数   |   3.14E+00    |\n|   `+`   |   正/负格式，对正、负和零元素分别显示 +、- 和空白字符   |   +   |\n|   `bank`    |   货币格式，小数点后包含 2 位数   |   3.14    |\n|   `hex` |   二进制双精度数字的十六进制表示形式  |   400921fb54442d18    |\n|   `rat` |   小整数的比率 |   355/113 |\n|   `compact` |    隐藏过多的空白行以便在一个屏幕上显示更多输出 | theta = pi/2 <br> theta =<br> &nbsp; &nbsp; 1.5708 |\n|   `loose` |   添加空白行以使输出更易于阅读 | theta = pi/2 <br><br> theta = <br><br> &nbsp; &nbsp; 1.5708\n\n## 数值型数据\n\n关于整型数据相关的操作函数（操作数可以是浮点数，也就是默认的数值类型）\n\n| 函数 | 说明 | 函数 | 说明 |\n| :--- | :--- | :--- | :--- |\n| `ceil` | 向正无穷大方向取整 | `fix` | 向 0 取整 |\n| `floor` | 向负无穷大方向取整 | `round` | 四舍五入取整 |\n| `isinteger` | 判断是否为整数 | `mod` / `rem` | 求模 / 余数 |\n\n关于虚数的一些操作函数\n\n| 函数 | 说明 | 函数 | 说明 |\n| :--- | :--- | :--- | :--- |\n| `isreal` | 检查是否为实数 | `abs` | 求复数幅值 |\n| `real` | 返回复数实部 | `angle` | 求复数相位 |\n| `imag` | 返回复数虚部 | `conj` | 返回复数的共轭复数 |\n\n## 字符向量及字符串\n\n类似于 C 语言里的「字符数组」， Matlab 中的字符向量也是以字符数组形式存在的。如 `size('abc\\nabc')` 返回 8。字符向量可由 `[...]` 以及 `char` 来创建。常见的字符向量操作函数如下表：\n\n| 函数 | 说明 | 函数 | 说明 |\n| :--- | :--- | :--- | :--- |\n| `ischar` | 检查是否为字符数组 | `isletter` | 检查数组元素是否为字母 |\n| `isspace` | 检查数组元素是否为空格 | `isstrprop` | 判断字符串是否属于某种特定类型 |\n| `strcat` | 横向连接字符数组 | `strvcat` | 纵向连接字符数组，建议用 `char` |\n| `blanks` | 创建空字符串 | `strjust` | 调整字符串的对齐方式 |\n| `strtrim` | 去掉字符串首尾的空格 | `deblank` | 去掉字符串尾部的空格 |\n| `strfind` | 在长字符串中搜索短字符串 | `strtok` | 找出字符串中第一个分隔符前面的部分 |\n| `strrep` | 字符串查找与替换 | `strmatch` | 查找匹配的字符串 |\n| `lower` | 将字符串中所包含的字母转换为小写 | `upper` | 将字符串中所包含的字母转换为大写 |\n| `strcmp` <br> `strcmpi` | 字符串比较，后者忽略大小写 | `strncmp` <br> `strncmpi` | 比较字符串前 n 个字符，后者忽略大小写 |\n| `strjoin` | 将字符串元胞连接成一个字符串 | `strsplit` | 将字符串分割成字符串元胞数组 |\n| `sprintf` | 格式化输出数据至字符串 | `sscanf` | 从字符串中读取格式化数据 |\n| `regexp` <br> `regexpi` | 匹配正则表达式，后者忽略大小写 | `regexprep` | 使用正则表达式替换文本 |\n| `regexptranslate` | 将文本转换为正则表达式 | | |\n\n令人吃驚的是，**R2017a** 以前的版本都不可用「双引号」括住字符以表示字符串。摘自 [MathWorks 文档 - 字符串数组](https://ww2.mathworks.cn/help/matlab/ref/string.html)：\n\n> 从 R2016b 开始，您可以使用字符串数组而不是字符数组来表示文本。字符串数组的每个元素存储一个字符序列。序列可以具有不同长度，无需填充，例如 \"yes\" 和 \"no\"。只有一个元素的字符串数组也称为字符串标量。  \n> 您可以通过用双引号括起一段文本来创建字符串。从 R2017a 开始引入双引号。\n\n针对字符数组 / 向量和字符串，有必要做一系列探究。\n\n最基本的 `char(A)` 或 `char(A1, ... , An)` 将数组 A 转为字符数组，相当于 Perl / Python 中的 `chr`，当然这里是向量版：\n\n```matlab\nchar(65:90, 97:122)\nstrcat(65:90, 97:122)\n\n%  2x26 char array\n%    'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n%    'abcdefghijklmnopqrstuvwxyz'\n%\n%  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'\n```\n\n字符向量可由 `disp` 直接输出：\n\n```matlab\ndisp(['Euler''s Formula: ', latex(sym('exp(i*pi)+1=0'))]);\n% Euler's Formula: {\\mathrm{e}}^{\\pi \\,i}+1=0\n```\n\n当然上面这个例子会跳出将来会弃用字符向量的警告，这里仅说明 `char` 的功效，无视即可。更多关于 `char` 的说明：\n\n- 如果 A 是数值数组，则 char 将数值转换为字符。有效数值范围从 0 到 65535，并且对应于 Unicode® 代码单元。值 0 到 127 还对应于 7 位 ASCII 字符。char 函数：\n  - 将非整数值向零舍入。\n  - 将小于 0 的值视为 0。\n  - 将大于 65535 的值视为 65535。\n- 如果 A 是字符数组，则 char 返回未改变的 A。\n- 如果 A 是字符数组元胞数组，则 char 将该元胞数组转换为字符数组。元胞数组中每个字符数组的每一行将变成 C 中的一行，并根据需要自动用空格填充。\n- 如果 A 是分类数组，则 char 按列顺序将 A 的每个元素转换为字符数组的一行。\n- 如果 A 是字符串数组，则 char 会将字符串数组转换为字符数组。char 会将 A 中的每个字符串元素转换为字符向量，然后将这些字符向量串联成字符数组，并根据需要自动用空格填充。\n\n除此之外，`char` 还可以格式化时间：\n\n```matlab\nchar(datetime, 'yyyy-M-d hh:mm')\n% '2018-7-7 11:44'\n```\n\n而 `string` 函数显得更为「高阶」一些，下面的例子可以明显看出区别：\n\n```matlab\nmatlabcode = [109 97 116 108 97 98];\ndisp(char(matlabcode));\ndisp(string(matlabcode));\n\n% matlab\n%    \"109\"    \"97\"    \"116\"    \"108\"    \"97\"    \"98\"\n```\n\n`string` 将数据看成一个整体进行操作（利用 `size` 可以看出），而不像 `char` 一样需要对齐数据以纳入矩阵。\n\n另外，对于 `strsplit` 和 `split`，大体可认为互为转置的关系：\n\n```matlab\ncarray = 'm a t l a b';\nstr = string(carray);\nstrsplit(carray)          % {'m'} {'a'} {'t'} {'l'} {'a'} {'b'}\nsplit(carray)             % strsplit(carray)'\nstrsplit(str)             % \"m\" \"a\" \"t\" \"l\" \"a\" \"b\"\nsplit(str)                % strsplit(str)'\n```\n\n## 元胞数组、结构体以及表数组\n\n对于元胞数组，注意索引 `C(m, n)` 返回 C 在 `(m, n)` 位置上的元胞，而花括号 `C{m, n}` 返回数据。\n\n对于结构体的创建，一般有两种方法：\n\n- 使用 `.` 创建：\n  {% codeblock sync.sh lang:matlab %}\n  patient1.name = 'John Doe';\n  patient1.billing = 127;\n  patient1.test = magic(3);\n  {% endcodeblock %}\n  当然多维数组也是类似：`patient2(1, 1).name = 'John Doe; ...`\n- 使用 `struct` 函数创建：\n  {% codeblock sync.sh lang:matlab %}\n  patient1 = struct('name', 'John Doe', 'billing', 127, 'test', magic(3));\n  {% endcodeblock %}\n\n对于 Matlab R2013b 开始引入的表数组类型，一般有两种创建方式：\n\n```matlab\nGender = {'M'; 'F'; 'M'; 'M'; 'F'};\nAge = [23; 24; 24; 22; 23];\nGrades = [78 86 80; 67 90 81; 66 70 76; 82 95 85; 64 78 75];\nLeader = logical([0; 1; 0; 0; 1]);\nID = strcat('2017SC', ['003'; '006'; '024'; '005'; '056']);\nT1 = table(ID, Gender, Age, Grades, Leader, 'RowNames', ...\n           {'Smith', 'Jones', 'Brown', 'Jim', 'Lily'});\nT2 = table;\nT2.ID = ID;\nT2.Gender = Gender;\nT2.Age = Age;\nT2.Grades = Grades;\nT2.Leader = Leader;\nT2.Properties.RowNames = {'Smith', 'Jones', 'Brown', 'Jim', 'Lily'};\n\n%   5x5 table\n%                 ID        Gender    Age        Grades        Leader\n%              _________    ______    ___    ______________    ______\n%     Smith    2017SC003    'M'       23     78    86    80    false\n%     Jones    2017SC006    'F'       24     67    90    81    true\n%     Brown    2017SC024    'M'       24     66    70    76    false\n%     Jim      2017SC005    'M'       22     82    95    85    false\n%     Lily     2017SC056    'F'       23     64    78    75    true\n```\n\n当然了，笔者不偏好后面这种方法，而是尽量从其他格式转换过来。\n\n表数组索引方式比较丰富：\n\n<table>\n  <tr>\n    <th>索引类型</th>\n    <th>语法格式</th>\n    <th>结果类型</th>\n    <th>备注</th>\n  </tr>\n  <tr>\n    <td>小括号</td>\n    <td><code>T(rows, vars)</code></td>\n    <td>表格型数据类型</td>\n    <td rowspan=\"2\"><code>rows / vars</code> 可以是数值向量、逻辑向量以及行/列名组成的元胞数组</td>\n  </tr>\n  <tr>\n    <td>大括号</td>\n    <td><code>T{rows, vars}</code></td>\n    <td>提取的数据</td>\n  </tr>\n  <tr>\n    <td>点号索引</td>\n    <td><code>T.var</code><br><code>T.(varindex)</code></td>\n    <td>提取的数据</td>\n    <td>可以提取表格的一列，还可以进一步对其提取的数据进行索引，如 <code>T.var(index)</code> 或 <code>T.var{index}</code></td>\n  </tr>\n</table>\n\n下面罗列元胞数组、结构体以及表数组的常用操作：\n\n| 函数 | 说明 | 函数 | 说明 |\n| :--  | :--  | :--  | :--  |\n| `iscell` | 判断数组是否为元胞数组 | `iscellstr` | 判断数组是否为字符串元胞数组 |\n| `cellstr` | 创建字符串元胞数组 | `cellfun` | 将函数应用于元胞数组的每一个元素 |\n| `celldisp` | 显示元胞的内容 | `cellplot` | 显示元胞的图形描述 |\n| `isstruct` | 判断是否为结构数组 | `isfield` | 判断某字段是否为结构数组中的字段 |\n| `getfield` | 获取结构数组中指定字段的值 | `setfield` | 设置结构数组中指定字段的值 |\n| `rmfield` | 移除结构数据中的指定字段 | `orderfields` | 对结构数组中的字段按指定顺序排序 |\n| `fieldnames` | 获得结构数组的字段名或对象的属性值 | `strcfun` | 将函数应用于结构数组的每一个字段 |\n| `istable` | 判断输入是否为表格型类型 | `summary` | 打印表格型数据的综述 |\n| `readtable` | 从文件中创建表格型数据 | `writetable` | 将表格型数据写入文件中 |\n| `height` | 表格型数据的行数 | `width` | 表格型数据的列数 |\n| `join` | 使用关键变量合并两个表格型数据 |  `innerjoin` | 以交集的形式合并两个表格型数据 |\n| `outerjoin` | 以并集的形式合并两个表格型数据 | `ismissing` | 查找表格型数据中的非正常量，如 `NaN`, `NaT`, `<undefined>`, 空字符向量以及空格向量 |\n| `varfun` | 将函数应用于表格型数据的每一个变量中 | `rowfun` | 将函数应用于表格型数据的每一行 |\n\nMatlab 提供丰富的类型转换函数，眼花缭乱，摘录如下：\n\n<table>\n  <tr>\n    <th>转换形式</th>\n    <th>转换函数</th>\n    <th>说明<br></th>\n  </tr>\n  <tr>\n    <td rowspan=\"3\">数值 ➠ 字符数组</td>\n    <td><code>num2str</code></td>\n    <td>数值转换为字符数组</td>\n  </tr>\n  <tr>\n    <td><code>mat2str</code></td>\n    <td>矩阵转换为字符数组</td>\n  </tr>\n  <tr>\n    <td><code>int2str</code></td>\n    <td>整数转换为字符数组</td>\n  </tr>\n  <tr>\n    <td rowspan=\"2\">字符数组 ➠ 数值</td>\n    <td><code>str2num</code></td>\n    <td>将字符数组转为数值，使用 <code>eval</code> 函数进行转换</td>\n  </tr>\n  <tr>\n    <td><code>str2double</code></td>\n    <td>将字符数组或字符串元胞数组转换为数值</td>\n  </tr>\n  <tr>\n    <td rowspan=\"2\">数值 ➠ 元胞数组</td>\n    <td><code>num2cell</code></td>\n    <td>将数值转换为元胞数组</td>\n  </tr>\n  <tr>\n    <td><code>mat2cell</code></td>\n    <td>将矩阵转换为元胞数组</td>\n  </tr>\n  <tr>\n    <td>元胞数组 ➠ 数值</td>\n    <td><code>cell2mat</code></td>\n    <td>将元胞数组转换为矩阵</td>\n  </tr>\n  <tr>\n    <td>字符串/数组 ➠ 元胞数组</td>\n    <td><code>cellstr</code></td>\n    <td>将字符串转换为字符串元胞数组</td>\n  </tr>\n  <tr>\n    <td>元胞数组 ➠ 字符串</td>\n    <td><code>char</code></td>\n    <td>将元胞数组转换为字符串，替换以前版本的 <code>str2mat</code> 函数</td>\n  </tr>\n  <tr>\n    <td>字符串 ➠ 函数句柄</td>\n    <td><code>str2func</code></td>\n    <td>由函数名或字符串表达式构造函数句柄</td>\n  </tr>\n  <tr>\n    <td>函数句柄 ➠ 字符串</td>\n    <td><code>func2str</code></td>\n    <td>由函数句柄构造函数名或字符串表达式，也可用 <code>char</code> 函数</td>\n  </tr>\n  <tr>\n    <td>元胞数组 ➠ 结构数组</td>\n    <td><code>cell2struct</code></td>\n    <td>将元胞数组转换为结构数组</td>\n  </tr>\n  <tr>\n    <td>结构数组 ➠ 元胞数组</td>\n    <td><code>struct2cell</code></td>\n    <td>将结构数组转换为元胞数组</td>\n  </tr>\n  <tr>\n    <td>数组 ➠ 表格</td>\n    <td><code>array2table</code></td>\n    <td>将同类二维数组转换为表格</td>\n  </tr>\n  <tr>\n    <td>表格 ➠ 数组</td>\n    <td><code>table2array</code></td>\n    <td>将表格转换为同类数组</td>\n  </tr>\n  <tr>\n    <td>元胞数组 ➠ 表格</td>\n    <td><code>cell2table</code></td>\n    <td>将元胞数组转换为表格</td>\n  </tr>\n  <tr>\n    <td>表格 ➠ 元胞数组</td>\n    <td><code>table2cell</code></td>\n    <td>将表格转换为元胞数组</td>\n  </tr>\n  <tr>\n    <td>结构数组 ➠ 表格</td>\n    <td><code>struct2table</code></td>\n    <td>将结构数组转换为表格</td>\n  </tr>\n  <tr>\n    <td>表格 ➠ 结构数组</td>\n    <td><code>table2struct</code></td>\n    <td>将表格转换为结构数组</td>\n  </tr>\n</table>\n\n----------------\n\n关于基本的算术运算符，有几处备忘：\n\n- `/` 表示矩阵右除，$C=A/B$ 表示 $C$ 是方程 $XB=A$ 的解 $C=AB^{-1}$\n- `\\` 表示矩阵左除，$C=A\\backslash B$ 表示 $C$ 是方程 $AX=B$ 的解 $C=A^{-1}B$\n- 关于转置，`'` 或者函数 `ctranspose` 表 Hermit 转置或共轭转置，`.'` 或 `transpose` 为非共轭转置\n\n<br>\n\nMatlab 数组元素的索引主要有 $3$ 种方式，即全下标方式、单下标方式和逻辑 $1$ 方式。在单下标方式中，存在这样的换算：\n\n- 对于 $m\\times n$ 的矩阵 $A$，元素 $A(i, j)$ 对应的单下标为 $s = m(j-1) + i$\n- 对于 $m \\times n \\times t$ 的数组 $B$，元素 $B(i, j, k)$ 对应的单下标为\n  $s=mn(k-1) + m(j-1) + i$\n- 对于维度为 $n_1 \\times n_2 \\times \\cdots \\times n_k$ 的多维数组 $C$，元素 $C(i_1, i_2, \\cdots, i_k)$ 对应的单下标为 $s = \\sum\\limits_{i=1}^{k-1} (i_{k+1} - 1)\\prod\\limits_{j=1}^i n_j + i_1$\n\nMatlab 自带函数 `sub2ind` 可对上述第三条结论进行验证：\n\n```matlab\nA = randi([1 10], 2, 7, 17, 3, 101);\ndisp(my_sub2ind(size(A), 1, 4, 2, 2, 20));\ndisp(sub2ind(size(A), 1, 4, 2, 2, 20));\ndisp(my_sub2ind(size(A), 2, 7, 13, 3, 52));\ndisp(sub2ind(size(A), 2, 7, 13, 3, 52));\n\nfunction ind = my_sub2ind(dims, varargin)\n    indx = cell2mat(varargin);\n    ind = indx(1) + dot(indx(2:end)-1, cumprod(dims(1:end-1)));\nend\n\n% 13825\n% 37072\n```\n","source":"_posts/essentials-of-matlab-foundation-of-programming.md","raw":"---\ntitle: Matlab 程序设计之编程基础\ndate: 2018-07-06 01:10:39\ntags:\n    - Matlab\ncategories: Memos\nmathjax: true\n---\n\n\n本系列试图将笔者在研究过程中认为比较重要、容易遗忘以及富有创新性或启发性的程序代码及思想一一记录，一来节省遇见同类问题时耗费在检索资料上的时间，二来也能见证自己构建知识体系框架的历程。\n\n<!-- more -->\n\n新版本的马特来布添加了诸多与时俱进的特性和工具箱，一直为人诟病的画图也自带抗锯齿了，R2016b 后的版本也支持脚本中函数了。MathWorks 始终坚持半年一新地迭代着 Matlab 的版本，可见其非常地用心。花了三天时间分别在 Windows 10 及 Ubuntu 16.04 x64 下安装好 Matlab，~~因个人感觉 2017 以后的版本在 Windows 上卡顿明显，所以~~ Win 和 Linux 下的版本均为 R2017b。当然后者是面向终端的命令行版的：\n\n```bash\n/usr/local/MATLAB/R2017b/bin/matlab -nodisplay\n```\n\n目前参考的书籍有：\n\n- 《MATLAB 语言常用算法程序集》（电子版）\n- 《MATLAB 之父：编程实践》（电子版）\n- 《高等应用数学问题的 MATLAB 求解》（电子版）\n- 《MATLAB 数值计算》（电子版）\n- 《大学数学实验》（电子版）\n- 《MATLAB 统计分析与应用：40 个案例分析》\n- 《MATLAB 数学建模》\n- 《MATLAB 数值计算实战》\n\n说实话，有点贪心，但也是种挑战。若能在短时间内去其糟粕取其精华，相比也是种奇妙的学习体验。\n\n一般社会哥人狠话不多，闲话至此，下面进入没有主题的正题。\n\nLinux 下安装的时候出现了点小插曲，在其中一台 Ubuntu 16.04.4 的机器上安装完 Matlab 2017b 后，无法使用数学符号工具箱，出现如下错误：\n\n```Matlab\n>> syms a b c;\nError using mupadmex\nError in MuPAD command: .\nError in symengine\nError in sym (line 189)\n        symengine;\nError in syms (line 197)\ntoDefine = sym(zeros(1, 0));\n```\n\n搜寻所有可能与该问题相关的途径后， 无论是更新、回滚 `fontconfig`，`libfreetype` 版本还是重新安装其他版本 Matlab for Linux 后均无效，说明 Linux 下操作系统状态对 Matlab 有一定影响，遂放弃此台服务器。\n\n由于笔者的系统为英文系统，而 Windows 下区分系统 Locale 的方式在于「格式」而非「地区」（具体设置为 Control Panel - Clock, Language, and Region - Region - Formats），所以会出现两个显著问题：程序界面为英文、编辑器里中文乱码。界面为英文倒不能说是问题，但乱码就很令人头疼了。查阅资料后得到的比较一劳永逸的方法是改动「格式」为中国。其他方法如修改文件 `lcdata.xml` 经亲测并不考谱。另，若仍坚持在英文系统下使用 Matlab，并需输出中文，务必运行语句\n```matlab\nfeature('DefaultCharacterSet', 'UTF-8');\n```\n\n-----------------------------------\n\n## Vim 插件\n\n在 `.vimrc` 中添加：\n\n```vim .vimrc\nPlugin 'michaelHL/matlab-screen'\nPlugin 'tdehaeze/matlab-vim'\n\nmap <F8> :call CompileRun()<CR>\nfunc! CompileRun()\n    exec \"w\"\n    if &filetype == 'c'\n       :!clear; gcc -std=c11 -Wall % -o %<; time ./%<\n    elseif &filetype == 'matlab'\n       :call RunMatlabCurrentFile()\n    endif\nendfunc\n```\n\n在 Vim 中打开 `.m` 文件，`F8` 即可运行。\n\n\n\n## 基本命令及快捷键\n\n| 命令                   | 功能                                                           | 命令              | 功能                                           |\n| :---                   | :----                                                          | :---              | :----                                          |\n| `clc`                  | 清屏（甚至清除了缓冲区）                                       | `clear`           | 清除工作空间所有变量                           |\n| `clear all`            | 从工作空间清除所有变量和函数                                   | `clear <变量名>`  | 清除指定变量                                   |\n| `clf`                  | 清除图形窗口内容（注意该命令会弹出新的画布，相当于 `figure` ） | `delete <文件名>` | 从**磁盘**中删除文件                           |\n| `cla`                  | 清空当前坐标系                                                 | `type`            | 显示 m 文件的内容                              |\n| `help <命令名>`        | 获取所列命令的帮助信息                                         | `which <文件名>`  | 查找指定文件路径                               |\n| `who`                  | 显示当前工作空间所有变量的一个**简单列表**                     | `whos`            | 列出变量大小、数据格式等**详细信息**           |\n| `what`                 | 列出当前目录下的 `.m` 文件和 `.mat` 文件                       | `load name`       | 下载 `name` 文件中的所有变量到工作空间         |\n| `load name x y`        | 下载 `name` 文件的变量 `x`, `y` 到工作空间                     | `importdata name` | 将 `name` 文件中的数据以结构体方式导入工作空间 |\n| `save name`            | 保存工作空间变量到文件 `name.mat` 中                           | `save name x y`   | 保存工作空间变量 `x`, `y` 到文件 `name.mat` 中 |\n| `↑` 或 `<C-p>`         | 调用上一行命令                                                 | `↓` 或 `<C-n>`    | 调用下一行命令                                 |\n| `←` 或 `<C-b>`         | 退后一格                                                       | `→` 或 `<C-f>`    | 前移一格                                       |\n| `Home` 或 `<C-a>`      | 光标移至行首                                                   | `Home` 或 `<C-e>` | 光标移至行尾                                   |\n| `Esc` 或 `<C-u>`       | 清除一行                                                       | `Del` 或 `<C-d>`  | 清除光标后字符                                 |\n| `Backspace` 或 `<C-h>` | 清除光标前一个字符                                             | `<C-k>`           | 清除光标至行尾字符                             |\n| `<C-0>`                | 激活命令窗口                                                   | `<C-S-0>`         | 激活编辑器窗口                                 |\n| `<C-1>`                | 激活命令历史窗口                                               | `<C-2>`           | 激活「当前目录」窗口                           |\n| `<C-3>`                | 激活工作空间窗口                                               |                   |                                                |\n\n如果以上键盘快捷键部分无效，说明是时候把键盘主题改为 Emacs-Style 了：Preference - MATLAB - Keyboard - Shortcuts - Active settings: Emacs Default Set。\n\n## 常用的帮助命令\n\n| 命令 | 功能 | 命令 | 功能 |\n| :--  | :--  | :--  | :--  |\n| `help matfun` | 矩阵函数 - 数值线性代数 | `help datafun` | 数据分析和傅立叶变换函数 |\n| `help general` | 通用命令 | `help ops` | 操作符和特殊字符 |\n| `help graphics` | 通用图形函数 | `help polyfun` | 多项式和内插函数 |\n| `help elfun` | 基本的数学函数 | `help lang` | 语言结构和调试 |\n| `help elmat` | 基本的矩阵和矩阵操作 | `help strfun` | 字符串函数 |\n| `help control` | 控制系统工具和工具箱函数 | | |\n\n## 部分预定义变量\n\n| 变量或函数 | 说明 | 变量或函数 | 说明 |\n| :--  | :--  | :--  | :--  |\n| `ans` | 默认变量名，以应答最近一次操作运算结果 | `eps` | 浮点数的相对误差 |\n| `i`, `j` | 虚数单数 | `pi` | 圆周率 |\n| `intmax` | 本计算机能表示的 8 位、16 位、32 位、64 位的最大整数 | `intmin` | 本计算机能表示的 8 位、16 位、32 位、64 位的最小整数 |\n| `realmax` | 本计算机能表达的最大浮点数 | `realmin` | 本计算机能表达的最小浮点数 |\n| `Inf` 或 `inf` | 无穷大 | `NaN` 或`nan` | 非数 |\n| `computer` | MATLAB 运行平台 | `version` | MATLAB 版本字符串 |\n\n## 数据显示格式\n\n摘自 [MathWorks 文档 - 设置命令行窗口输出显示格式](https://ww2.mathworks.cn/help/matlab/ref/format.html)：\n\n|   风格   |   结果  |   示例  |\n|   :-- |   :-- |   :-- |\n|   `short (default)` |   固定十进制短格式，小数点后包含 4 位数   |   3.1416  |\n|   `long`    |   长固定小数格式，double 值的小数点后包含 15 位数，single 值的小数点后包含 7 位数 |   3.141592654 |\n|   `shortE`  |   短科学记数法，小数点后包含 4 位数 |   3.14E+00    |\n|   `longE`   |   长科学记数法，double 值的小数点后包含 15 位数，single 值的小数点后包含 7 位数  |   3.14E+00    |\n|   `shortG`  |   短固定小数格式或科学记数法（取更紧凑的一个），总共 5 位  |   3.1416  |\n|   `longG`   |   长固定小数格式或科学记数法（取更紧凑的一个），对于 double 值，总共 15 位；对于 single 值，总共 7 位  |   3.141592654 |\n|   `shortEng`    |   短工程记数法，小数点后包含 4 位数，3 的倍数   |   3.14E+00    |\n|   `longEng` |   长工程记数法，包含 15 位有效位数，指数为 3 的倍数   |   3.14E+00    |\n|   `+`   |   正/负格式，对正、负和零元素分别显示 +、- 和空白字符   |   +   |\n|   `bank`    |   货币格式，小数点后包含 2 位数   |   3.14    |\n|   `hex` |   二进制双精度数字的十六进制表示形式  |   400921fb54442d18    |\n|   `rat` |   小整数的比率 |   355/113 |\n|   `compact` |    隐藏过多的空白行以便在一个屏幕上显示更多输出 | theta = pi/2 <br> theta =<br> &nbsp; &nbsp; 1.5708 |\n|   `loose` |   添加空白行以使输出更易于阅读 | theta = pi/2 <br><br> theta = <br><br> &nbsp; &nbsp; 1.5708\n\n## 数值型数据\n\n关于整型数据相关的操作函数（操作数可以是浮点数，也就是默认的数值类型）\n\n| 函数 | 说明 | 函数 | 说明 |\n| :--- | :--- | :--- | :--- |\n| `ceil` | 向正无穷大方向取整 | `fix` | 向 0 取整 |\n| `floor` | 向负无穷大方向取整 | `round` | 四舍五入取整 |\n| `isinteger` | 判断是否为整数 | `mod` / `rem` | 求模 / 余数 |\n\n关于虚数的一些操作函数\n\n| 函数 | 说明 | 函数 | 说明 |\n| :--- | :--- | :--- | :--- |\n| `isreal` | 检查是否为实数 | `abs` | 求复数幅值 |\n| `real` | 返回复数实部 | `angle` | 求复数相位 |\n| `imag` | 返回复数虚部 | `conj` | 返回复数的共轭复数 |\n\n## 字符向量及字符串\n\n类似于 C 语言里的「字符数组」， Matlab 中的字符向量也是以字符数组形式存在的。如 `size('abc\\nabc')` 返回 8。字符向量可由 `[...]` 以及 `char` 来创建。常见的字符向量操作函数如下表：\n\n| 函数 | 说明 | 函数 | 说明 |\n| :--- | :--- | :--- | :--- |\n| `ischar` | 检查是否为字符数组 | `isletter` | 检查数组元素是否为字母 |\n| `isspace` | 检查数组元素是否为空格 | `isstrprop` | 判断字符串是否属于某种特定类型 |\n| `strcat` | 横向连接字符数组 | `strvcat` | 纵向连接字符数组，建议用 `char` |\n| `blanks` | 创建空字符串 | `strjust` | 调整字符串的对齐方式 |\n| `strtrim` | 去掉字符串首尾的空格 | `deblank` | 去掉字符串尾部的空格 |\n| `strfind` | 在长字符串中搜索短字符串 | `strtok` | 找出字符串中第一个分隔符前面的部分 |\n| `strrep` | 字符串查找与替换 | `strmatch` | 查找匹配的字符串 |\n| `lower` | 将字符串中所包含的字母转换为小写 | `upper` | 将字符串中所包含的字母转换为大写 |\n| `strcmp` <br> `strcmpi` | 字符串比较，后者忽略大小写 | `strncmp` <br> `strncmpi` | 比较字符串前 n 个字符，后者忽略大小写 |\n| `strjoin` | 将字符串元胞连接成一个字符串 | `strsplit` | 将字符串分割成字符串元胞数组 |\n| `sprintf` | 格式化输出数据至字符串 | `sscanf` | 从字符串中读取格式化数据 |\n| `regexp` <br> `regexpi` | 匹配正则表达式，后者忽略大小写 | `regexprep` | 使用正则表达式替换文本 |\n| `regexptranslate` | 将文本转换为正则表达式 | | |\n\n令人吃驚的是，**R2017a** 以前的版本都不可用「双引号」括住字符以表示字符串。摘自 [MathWorks 文档 - 字符串数组](https://ww2.mathworks.cn/help/matlab/ref/string.html)：\n\n> 从 R2016b 开始，您可以使用字符串数组而不是字符数组来表示文本。字符串数组的每个元素存储一个字符序列。序列可以具有不同长度，无需填充，例如 \"yes\" 和 \"no\"。只有一个元素的字符串数组也称为字符串标量。  \n> 您可以通过用双引号括起一段文本来创建字符串。从 R2017a 开始引入双引号。\n\n针对字符数组 / 向量和字符串，有必要做一系列探究。\n\n最基本的 `char(A)` 或 `char(A1, ... , An)` 将数组 A 转为字符数组，相当于 Perl / Python 中的 `chr`，当然这里是向量版：\n\n```matlab\nchar(65:90, 97:122)\nstrcat(65:90, 97:122)\n\n%  2x26 char array\n%    'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n%    'abcdefghijklmnopqrstuvwxyz'\n%\n%  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'\n```\n\n字符向量可由 `disp` 直接输出：\n\n```matlab\ndisp(['Euler''s Formula: ', latex(sym('exp(i*pi)+1=0'))]);\n% Euler's Formula: {\\mathrm{e}}^{\\pi \\,i}+1=0\n```\n\n当然上面这个例子会跳出将来会弃用字符向量的警告，这里仅说明 `char` 的功效，无视即可。更多关于 `char` 的说明：\n\n- 如果 A 是数值数组，则 char 将数值转换为字符。有效数值范围从 0 到 65535，并且对应于 Unicode® 代码单元。值 0 到 127 还对应于 7 位 ASCII 字符。char 函数：\n  - 将非整数值向零舍入。\n  - 将小于 0 的值视为 0。\n  - 将大于 65535 的值视为 65535。\n- 如果 A 是字符数组，则 char 返回未改变的 A。\n- 如果 A 是字符数组元胞数组，则 char 将该元胞数组转换为字符数组。元胞数组中每个字符数组的每一行将变成 C 中的一行，并根据需要自动用空格填充。\n- 如果 A 是分类数组，则 char 按列顺序将 A 的每个元素转换为字符数组的一行。\n- 如果 A 是字符串数组，则 char 会将字符串数组转换为字符数组。char 会将 A 中的每个字符串元素转换为字符向量，然后将这些字符向量串联成字符数组，并根据需要自动用空格填充。\n\n除此之外，`char` 还可以格式化时间：\n\n```matlab\nchar(datetime, 'yyyy-M-d hh:mm')\n% '2018-7-7 11:44'\n```\n\n而 `string` 函数显得更为「高阶」一些，下面的例子可以明显看出区别：\n\n```matlab\nmatlabcode = [109 97 116 108 97 98];\ndisp(char(matlabcode));\ndisp(string(matlabcode));\n\n% matlab\n%    \"109\"    \"97\"    \"116\"    \"108\"    \"97\"    \"98\"\n```\n\n`string` 将数据看成一个整体进行操作（利用 `size` 可以看出），而不像 `char` 一样需要对齐数据以纳入矩阵。\n\n另外，对于 `strsplit` 和 `split`，大体可认为互为转置的关系：\n\n```matlab\ncarray = 'm a t l a b';\nstr = string(carray);\nstrsplit(carray)          % {'m'} {'a'} {'t'} {'l'} {'a'} {'b'}\nsplit(carray)             % strsplit(carray)'\nstrsplit(str)             % \"m\" \"a\" \"t\" \"l\" \"a\" \"b\"\nsplit(str)                % strsplit(str)'\n```\n\n## 元胞数组、结构体以及表数组\n\n对于元胞数组，注意索引 `C(m, n)` 返回 C 在 `(m, n)` 位置上的元胞，而花括号 `C{m, n}` 返回数据。\n\n对于结构体的创建，一般有两种方法：\n\n- 使用 `.` 创建：\n  {% codeblock sync.sh lang:matlab %}\n  patient1.name = 'John Doe';\n  patient1.billing = 127;\n  patient1.test = magic(3);\n  {% endcodeblock %}\n  当然多维数组也是类似：`patient2(1, 1).name = 'John Doe; ...`\n- 使用 `struct` 函数创建：\n  {% codeblock sync.sh lang:matlab %}\n  patient1 = struct('name', 'John Doe', 'billing', 127, 'test', magic(3));\n  {% endcodeblock %}\n\n对于 Matlab R2013b 开始引入的表数组类型，一般有两种创建方式：\n\n```matlab\nGender = {'M'; 'F'; 'M'; 'M'; 'F'};\nAge = [23; 24; 24; 22; 23];\nGrades = [78 86 80; 67 90 81; 66 70 76; 82 95 85; 64 78 75];\nLeader = logical([0; 1; 0; 0; 1]);\nID = strcat('2017SC', ['003'; '006'; '024'; '005'; '056']);\nT1 = table(ID, Gender, Age, Grades, Leader, 'RowNames', ...\n           {'Smith', 'Jones', 'Brown', 'Jim', 'Lily'});\nT2 = table;\nT2.ID = ID;\nT2.Gender = Gender;\nT2.Age = Age;\nT2.Grades = Grades;\nT2.Leader = Leader;\nT2.Properties.RowNames = {'Smith', 'Jones', 'Brown', 'Jim', 'Lily'};\n\n%   5x5 table\n%                 ID        Gender    Age        Grades        Leader\n%              _________    ______    ___    ______________    ______\n%     Smith    2017SC003    'M'       23     78    86    80    false\n%     Jones    2017SC006    'F'       24     67    90    81    true\n%     Brown    2017SC024    'M'       24     66    70    76    false\n%     Jim      2017SC005    'M'       22     82    95    85    false\n%     Lily     2017SC056    'F'       23     64    78    75    true\n```\n\n当然了，笔者不偏好后面这种方法，而是尽量从其他格式转换过来。\n\n表数组索引方式比较丰富：\n\n<table>\n  <tr>\n    <th>索引类型</th>\n    <th>语法格式</th>\n    <th>结果类型</th>\n    <th>备注</th>\n  </tr>\n  <tr>\n    <td>小括号</td>\n    <td><code>T(rows, vars)</code></td>\n    <td>表格型数据类型</td>\n    <td rowspan=\"2\"><code>rows / vars</code> 可以是数值向量、逻辑向量以及行/列名组成的元胞数组</td>\n  </tr>\n  <tr>\n    <td>大括号</td>\n    <td><code>T{rows, vars}</code></td>\n    <td>提取的数据</td>\n  </tr>\n  <tr>\n    <td>点号索引</td>\n    <td><code>T.var</code><br><code>T.(varindex)</code></td>\n    <td>提取的数据</td>\n    <td>可以提取表格的一列，还可以进一步对其提取的数据进行索引，如 <code>T.var(index)</code> 或 <code>T.var{index}</code></td>\n  </tr>\n</table>\n\n下面罗列元胞数组、结构体以及表数组的常用操作：\n\n| 函数 | 说明 | 函数 | 说明 |\n| :--  | :--  | :--  | :--  |\n| `iscell` | 判断数组是否为元胞数组 | `iscellstr` | 判断数组是否为字符串元胞数组 |\n| `cellstr` | 创建字符串元胞数组 | `cellfun` | 将函数应用于元胞数组的每一个元素 |\n| `celldisp` | 显示元胞的内容 | `cellplot` | 显示元胞的图形描述 |\n| `isstruct` | 判断是否为结构数组 | `isfield` | 判断某字段是否为结构数组中的字段 |\n| `getfield` | 获取结构数组中指定字段的值 | `setfield` | 设置结构数组中指定字段的值 |\n| `rmfield` | 移除结构数据中的指定字段 | `orderfields` | 对结构数组中的字段按指定顺序排序 |\n| `fieldnames` | 获得结构数组的字段名或对象的属性值 | `strcfun` | 将函数应用于结构数组的每一个字段 |\n| `istable` | 判断输入是否为表格型类型 | `summary` | 打印表格型数据的综述 |\n| `readtable` | 从文件中创建表格型数据 | `writetable` | 将表格型数据写入文件中 |\n| `height` | 表格型数据的行数 | `width` | 表格型数据的列数 |\n| `join` | 使用关键变量合并两个表格型数据 |  `innerjoin` | 以交集的形式合并两个表格型数据 |\n| `outerjoin` | 以并集的形式合并两个表格型数据 | `ismissing` | 查找表格型数据中的非正常量，如 `NaN`, `NaT`, `<undefined>`, 空字符向量以及空格向量 |\n| `varfun` | 将函数应用于表格型数据的每一个变量中 | `rowfun` | 将函数应用于表格型数据的每一行 |\n\nMatlab 提供丰富的类型转换函数，眼花缭乱，摘录如下：\n\n<table>\n  <tr>\n    <th>转换形式</th>\n    <th>转换函数</th>\n    <th>说明<br></th>\n  </tr>\n  <tr>\n    <td rowspan=\"3\">数值 ➠ 字符数组</td>\n    <td><code>num2str</code></td>\n    <td>数值转换为字符数组</td>\n  </tr>\n  <tr>\n    <td><code>mat2str</code></td>\n    <td>矩阵转换为字符数组</td>\n  </tr>\n  <tr>\n    <td><code>int2str</code></td>\n    <td>整数转换为字符数组</td>\n  </tr>\n  <tr>\n    <td rowspan=\"2\">字符数组 ➠ 数值</td>\n    <td><code>str2num</code></td>\n    <td>将字符数组转为数值，使用 <code>eval</code> 函数进行转换</td>\n  </tr>\n  <tr>\n    <td><code>str2double</code></td>\n    <td>将字符数组或字符串元胞数组转换为数值</td>\n  </tr>\n  <tr>\n    <td rowspan=\"2\">数值 ➠ 元胞数组</td>\n    <td><code>num2cell</code></td>\n    <td>将数值转换为元胞数组</td>\n  </tr>\n  <tr>\n    <td><code>mat2cell</code></td>\n    <td>将矩阵转换为元胞数组</td>\n  </tr>\n  <tr>\n    <td>元胞数组 ➠ 数值</td>\n    <td><code>cell2mat</code></td>\n    <td>将元胞数组转换为矩阵</td>\n  </tr>\n  <tr>\n    <td>字符串/数组 ➠ 元胞数组</td>\n    <td><code>cellstr</code></td>\n    <td>将字符串转换为字符串元胞数组</td>\n  </tr>\n  <tr>\n    <td>元胞数组 ➠ 字符串</td>\n    <td><code>char</code></td>\n    <td>将元胞数组转换为字符串，替换以前版本的 <code>str2mat</code> 函数</td>\n  </tr>\n  <tr>\n    <td>字符串 ➠ 函数句柄</td>\n    <td><code>str2func</code></td>\n    <td>由函数名或字符串表达式构造函数句柄</td>\n  </tr>\n  <tr>\n    <td>函数句柄 ➠ 字符串</td>\n    <td><code>func2str</code></td>\n    <td>由函数句柄构造函数名或字符串表达式，也可用 <code>char</code> 函数</td>\n  </tr>\n  <tr>\n    <td>元胞数组 ➠ 结构数组</td>\n    <td><code>cell2struct</code></td>\n    <td>将元胞数组转换为结构数组</td>\n  </tr>\n  <tr>\n    <td>结构数组 ➠ 元胞数组</td>\n    <td><code>struct2cell</code></td>\n    <td>将结构数组转换为元胞数组</td>\n  </tr>\n  <tr>\n    <td>数组 ➠ 表格</td>\n    <td><code>array2table</code></td>\n    <td>将同类二维数组转换为表格</td>\n  </tr>\n  <tr>\n    <td>表格 ➠ 数组</td>\n    <td><code>table2array</code></td>\n    <td>将表格转换为同类数组</td>\n  </tr>\n  <tr>\n    <td>元胞数组 ➠ 表格</td>\n    <td><code>cell2table</code></td>\n    <td>将元胞数组转换为表格</td>\n  </tr>\n  <tr>\n    <td>表格 ➠ 元胞数组</td>\n    <td><code>table2cell</code></td>\n    <td>将表格转换为元胞数组</td>\n  </tr>\n  <tr>\n    <td>结构数组 ➠ 表格</td>\n    <td><code>struct2table</code></td>\n    <td>将结构数组转换为表格</td>\n  </tr>\n  <tr>\n    <td>表格 ➠ 结构数组</td>\n    <td><code>table2struct</code></td>\n    <td>将表格转换为结构数组</td>\n  </tr>\n</table>\n\n----------------\n\n关于基本的算术运算符，有几处备忘：\n\n- `/` 表示矩阵右除，$C=A/B$ 表示 $C$ 是方程 $XB=A$ 的解 $C=AB^{-1}$\n- `\\` 表示矩阵左除，$C=A\\backslash B$ 表示 $C$ 是方程 $AX=B$ 的解 $C=A^{-1}B$\n- 关于转置，`'` 或者函数 `ctranspose` 表 Hermit 转置或共轭转置，`.'` 或 `transpose` 为非共轭转置\n\n<br>\n\nMatlab 数组元素的索引主要有 $3$ 种方式，即全下标方式、单下标方式和逻辑 $1$ 方式。在单下标方式中，存在这样的换算：\n\n- 对于 $m\\times n$ 的矩阵 $A$，元素 $A(i, j)$ 对应的单下标为 $s = m(j-1) + i$\n- 对于 $m \\times n \\times t$ 的数组 $B$，元素 $B(i, j, k)$ 对应的单下标为\n  $s=mn(k-1) + m(j-1) + i$\n- 对于维度为 $n_1 \\times n_2 \\times \\cdots \\times n_k$ 的多维数组 $C$，元素 $C(i_1, i_2, \\cdots, i_k)$ 对应的单下标为 $s = \\sum\\limits_{i=1}^{k-1} (i_{k+1} - 1)\\prod\\limits_{j=1}^i n_j + i_1$\n\nMatlab 自带函数 `sub2ind` 可对上述第三条结论进行验证：\n\n```matlab\nA = randi([1 10], 2, 7, 17, 3, 101);\ndisp(my_sub2ind(size(A), 1, 4, 2, 2, 20));\ndisp(sub2ind(size(A), 1, 4, 2, 2, 20));\ndisp(my_sub2ind(size(A), 2, 7, 13, 3, 52));\ndisp(sub2ind(size(A), 2, 7, 13, 3, 52));\n\nfunction ind = my_sub2ind(dims, varargin)\n    indx = cell2mat(varargin);\n    ind = indx(1) + dot(indx(2:end)-1, cumprod(dims(1:end-1)));\nend\n\n% 13825\n% 37072\n```\n","slug":"essentials-of-matlab-foundation-of-programming","published":1,"updated":"2023-03-09T16:09:38.221Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u3366000op4x02ufhf6yx","content":"<p>本系列试图将笔者在研究过程中认为比较重要、容易遗忘以及富有创新性或启发性的程序代码及思想一一记录，一来节省遇见同类问题时耗费在检索资料上的时间，二来也能见证自己构建知识体系框架的历程。</p>\r\n<a id=\"more\"></a>\r\n<p>新版本的马特来布添加了诸多与时俱进的特性和工具箱，一直为人诟病的画图也自带抗锯齿了，R2016b 后的版本也支持脚本中函数了。MathWorks 始终坚持半年一新地迭代着 Matlab 的版本，可见其非常地用心。花了三天时间分别在 Windows 10 及 Ubuntu 16.04 x64 下安装好 Matlab，<del>因个人感觉 2017 以后的版本在 Windows 上卡顿明显，所以</del> Win 和 Linux 下的版本均为 R2017b。当然后者是面向终端的命令行版的：</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/<span class=\"built_in\">local</span>/MATLAB/R2017b/bin/matlab -nodisplay</span><br></pre></td></tr></table></figure>\r\n<p>目前参考的书籍有：</p>\r\n<ul>\r\n<li>《MATLAB 语言常用算法程序集》（电子版）</li>\r\n<li>《MATLAB 之父：编程实践》（电子版）</li>\r\n<li>《高等应用数学问题的 MATLAB 求解》（电子版）</li>\r\n<li>《MATLAB 数值计算》（电子版）</li>\r\n<li>《大学数学实验》（电子版）</li>\r\n<li>《MATLAB 统计分析与应用：40 个案例分析》</li>\r\n<li>《MATLAB 数学建模》</li>\r\n<li>《MATLAB 数值计算实战》</li>\r\n</ul>\r\n<p>说实话，有点贪心，但也是种挑战。若能在短时间内去其糟粕取其精华，相比也是种奇妙的学习体验。</p>\r\n<p>一般社会哥人狠话不多，闲话至此，下面进入没有主题的正题。</p>\r\n<p>Linux 下安装的时候出现了点小插曲，在其中一台 Ubuntu 16.04.4 的机器上安装完 Matlab 2017b 后，无法使用数学符号工具箱，出现如下错误：</p>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt; syms a b c;</span><br><span class=\"line\">Error using mupadmex</span><br><span class=\"line\">Error in MuPAD command: .</span><br><span class=\"line\">Error in symengine</span><br><span class=\"line\">Error in sym (line <span class=\"number\">189</span>)</span><br><span class=\"line\">        symengine;</span><br><span class=\"line\">Error in syms (line <span class=\"number\">197</span>)</span><br><span class=\"line\">toDefine = sym(<span class=\"built_in\">zeros</span>(<span class=\"number\">1</span>, <span class=\"number\">0</span>));</span><br></pre></td></tr></table></figure>\r\n<p>搜寻所有可能与该问题相关的途径后， 无论是更新、回滚 <code>fontconfig</code>，<code>libfreetype</code> 版本还是重新安装其他版本 Matlab for Linux 后均无效，说明 Linux 下操作系统状态对 Matlab 有一定影响，遂放弃此台服务器。</p>\r\n<p>由于笔者的系统为英文系统，而 Windows 下区分系统 Locale 的方式在于「格式」而非「地区」（具体设置为 Control Panel - Clock, Language, and Region - Region - Formats），所以会出现两个显著问题：程序界面为英文、编辑器里中文乱码。界面为英文倒不能说是问题，但乱码就很令人头疼了。查阅资料后得到的比较一劳永逸的方法是改动「格式」为中国。其他方法如修改文件 <code>lcdata.xml</code> 经亲测并不考谱。另，若仍坚持在英文系统下使用 Matlab，并需输出中文，务必运行语句 <figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">feature(<span class=\"string\">'DefaultCharacterSet'</span>, <span class=\"string\">'UTF-8'</span>);</span><br></pre></td></tr></table></figure></p>\r\n<hr>\r\n<h2 id=\"vim-插件\">Vim 插件</h2>\r\n<p>在 <code>.vimrc</code> 中添加：</p>\r\n<figure class=\"highlight vim\"><figcaption><span>.vimrc</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Plugin <span class=\"string\">'michaelHL/matlab-screen'</span></span><br><span class=\"line\">Plugin <span class=\"string\">'tdehaeze/matlab-vim'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">map</span> <span class=\"symbol\">&lt;F8&gt;</span> :<span class=\"keyword\">call</span> CompileRun()<span class=\"symbol\">&lt;CR&gt;</span></span><br><span class=\"line\">func! CompileRun()</span><br><span class=\"line\">    exec <span class=\"string\">\"w\"</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> &amp;<span class=\"keyword\">filetype</span> == <span class=\"string\">'c'</span></span><br><span class=\"line\">       :!clear; gcc -std=c11 -Wall % -o %&lt;; time ./%&lt;</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> &amp;<span class=\"keyword\">filetype</span> == <span class=\"string\">'matlab'</span></span><br><span class=\"line\">       :<span class=\"keyword\">call</span> RunMatlabCurrentFile()</span><br><span class=\"line\">    <span class=\"keyword\">endif</span></span><br><span class=\"line\">endfunc</span><br></pre></td></tr></table></figure>\r\n<p>在 Vim 中打开 <code>.m</code> 文件，<code>F8</code> 即可运行。</p>\r\n<h2 id=\"基本命令及快捷键\">基本命令及快捷键</h2>\r\n<table>\r\n<colgroup>\r\n<col style=\"width: 22%\">\r\n<col style=\"width: 27%\">\r\n<col style=\"width: 22%\">\r\n<col style=\"width: 27%\">\r\n</colgroup>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: left;\">命令</th>\r\n<th style=\"text-align: left;\">功能</th>\r\n<th style=\"text-align: left;\">命令</th>\r\n<th style=\"text-align: left;\">功能</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>clc</code></td>\r\n<td style=\"text-align: left;\">清屏（甚至清除了缓冲区）</td>\r\n<td style=\"text-align: left;\"><code>clear</code></td>\r\n<td style=\"text-align: left;\">清除工作空间所有变量</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>clear all</code></td>\r\n<td style=\"text-align: left;\">从工作空间清除所有变量和函数</td>\r\n<td style=\"text-align: left;\"><code>clear &lt;变量名&gt;</code></td>\r\n<td style=\"text-align: left;\">清除指定变量</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>clf</code></td>\r\n<td style=\"text-align: left;\">清除图形窗口内容（注意该命令会弹出新的画布，相当于 <code>figure</code> ）</td>\r\n<td style=\"text-align: left;\"><code>delete &lt;文件名&gt;</code></td>\r\n<td style=\"text-align: left;\">从<strong>磁盘</strong>中删除文件</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>cla</code></td>\r\n<td style=\"text-align: left;\">清空当前坐标系</td>\r\n<td style=\"text-align: left;\"><code>type</code></td>\r\n<td style=\"text-align: left;\">显示 m 文件的内容</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>help &lt;命令名&gt;</code></td>\r\n<td style=\"text-align: left;\">获取所列命令的帮助信息</td>\r\n<td style=\"text-align: left;\"><code>which &lt;文件名&gt;</code></td>\r\n<td style=\"text-align: left;\">查找指定文件路径</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>who</code></td>\r\n<td style=\"text-align: left;\">显示当前工作空间所有变量的一个<strong>简单列表</strong></td>\r\n<td style=\"text-align: left;\"><code>whos</code></td>\r\n<td style=\"text-align: left;\">列出变量大小、数据格式等<strong>详细信息</strong></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>what</code></td>\r\n<td style=\"text-align: left;\">列出当前目录下的 <code>.m</code> 文件和 <code>.mat</code> 文件</td>\r\n<td style=\"text-align: left;\"><code>load name</code></td>\r\n<td style=\"text-align: left;\">下载 <code>name</code> 文件中的所有变量到工作空间</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>load name x y</code></td>\r\n<td style=\"text-align: left;\">下载 <code>name</code> 文件的变量 <code>x</code>, <code>y</code> 到工作空间</td>\r\n<td style=\"text-align: left;\"><code>importdata name</code></td>\r\n<td style=\"text-align: left;\">将 <code>name</code> 文件中的数据以结构体方式导入工作空间</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>save name</code></td>\r\n<td style=\"text-align: left;\">保存工作空间变量到文件 <code>name.mat</code> 中</td>\r\n<td style=\"text-align: left;\"><code>save name x y</code></td>\r\n<td style=\"text-align: left;\">保存工作空间变量 <code>x</code>, <code>y</code> 到文件 <code>name.mat</code> 中</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>↑</code> 或 <code>&lt;C-p&gt;</code></td>\r\n<td style=\"text-align: left;\">调用上一行命令</td>\r\n<td style=\"text-align: left;\"><code>↓</code> 或 <code>&lt;C-n&gt;</code></td>\r\n<td style=\"text-align: left;\">调用下一行命令</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>←</code> 或 <code>&lt;C-b&gt;</code></td>\r\n<td style=\"text-align: left;\">退后一格</td>\r\n<td style=\"text-align: left;\"><code>→</code> 或 <code>&lt;C-f&gt;</code></td>\r\n<td style=\"text-align: left;\">前移一格</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>Home</code> 或 <code>&lt;C-a&gt;</code></td>\r\n<td style=\"text-align: left;\">光标移至行首</td>\r\n<td style=\"text-align: left;\"><code>Home</code> 或 <code>&lt;C-e&gt;</code></td>\r\n<td style=\"text-align: left;\">光标移至行尾</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>Esc</code> 或 <code>&lt;C-u&gt;</code></td>\r\n<td style=\"text-align: left;\">清除一行</td>\r\n<td style=\"text-align: left;\"><code>Del</code> 或 <code>&lt;C-d&gt;</code></td>\r\n<td style=\"text-align: left;\">清除光标后字符</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>Backspace</code> 或 <code>&lt;C-h&gt;</code></td>\r\n<td style=\"text-align: left;\">清除光标前一个字符</td>\r\n<td style=\"text-align: left;\"><code>&lt;C-k&gt;</code></td>\r\n<td style=\"text-align: left;\">清除光标至行尾字符</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>&lt;C-0&gt;</code></td>\r\n<td style=\"text-align: left;\">激活命令窗口</td>\r\n<td style=\"text-align: left;\"><code>&lt;C-S-0&gt;</code></td>\r\n<td style=\"text-align: left;\">激活编辑器窗口</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>&lt;C-1&gt;</code></td>\r\n<td style=\"text-align: left;\">激活命令历史窗口</td>\r\n<td style=\"text-align: left;\"><code>&lt;C-2&gt;</code></td>\r\n<td style=\"text-align: left;\">激活「当前目录」窗口</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>&lt;C-3&gt;</code></td>\r\n<td style=\"text-align: left;\">激活工作空间窗口</td>\r\n<td style=\"text-align: left;\"></td>\r\n<td style=\"text-align: left;\"></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p>如果以上键盘快捷键部分无效，说明是时候把键盘主题改为 Emacs-Style 了：Preference - MATLAB - Keyboard - Shortcuts - Active settings: Emacs Default Set。</p>\r\n<h2 id=\"常用的帮助命令\">常用的帮助命令</h2>\r\n<table>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: left;\">命令</th>\r\n<th style=\"text-align: left;\">功能</th>\r\n<th style=\"text-align: left;\">命令</th>\r\n<th style=\"text-align: left;\">功能</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>help matfun</code></td>\r\n<td style=\"text-align: left;\">矩阵函数 - 数值线性代数</td>\r\n<td style=\"text-align: left;\"><code>help datafun</code></td>\r\n<td style=\"text-align: left;\">数据分析和傅立叶变换函数</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>help general</code></td>\r\n<td style=\"text-align: left;\">通用命令</td>\r\n<td style=\"text-align: left;\"><code>help ops</code></td>\r\n<td style=\"text-align: left;\">操作符和特殊字符</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>help graphics</code></td>\r\n<td style=\"text-align: left;\">通用图形函数</td>\r\n<td style=\"text-align: left;\"><code>help polyfun</code></td>\r\n<td style=\"text-align: left;\">多项式和内插函数</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>help elfun</code></td>\r\n<td style=\"text-align: left;\">基本的数学函数</td>\r\n<td style=\"text-align: left;\"><code>help lang</code></td>\r\n<td style=\"text-align: left;\">语言结构和调试</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>help elmat</code></td>\r\n<td style=\"text-align: left;\">基本的矩阵和矩阵操作</td>\r\n<td style=\"text-align: left;\"><code>help strfun</code></td>\r\n<td style=\"text-align: left;\">字符串函数</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>help control</code></td>\r\n<td style=\"text-align: left;\">控制系统工具和工具箱函数</td>\r\n<td style=\"text-align: left;\"></td>\r\n<td style=\"text-align: left;\"></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h2 id=\"部分预定义变量\">部分预定义变量</h2>\r\n<table>\r\n<colgroup>\r\n<col style=\"width: 25%\">\r\n<col style=\"width: 25%\">\r\n<col style=\"width: 25%\">\r\n<col style=\"width: 25%\">\r\n</colgroup>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: left;\">变量或函数</th>\r\n<th style=\"text-align: left;\">说明</th>\r\n<th style=\"text-align: left;\">变量或函数</th>\r\n<th style=\"text-align: left;\">说明</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>ans</code></td>\r\n<td style=\"text-align: left;\">默认变量名，以应答最近一次操作运算结果</td>\r\n<td style=\"text-align: left;\"><code>eps</code></td>\r\n<td style=\"text-align: left;\">浮点数的相对误差</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>i</code>, <code>j</code></td>\r\n<td style=\"text-align: left;\">虚数单数</td>\r\n<td style=\"text-align: left;\"><code>pi</code></td>\r\n<td style=\"text-align: left;\">圆周率</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>intmax</code></td>\r\n<td style=\"text-align: left;\">本计算机能表示的 8 位、16 位、32 位、64 位的最大整数</td>\r\n<td style=\"text-align: left;\"><code>intmin</code></td>\r\n<td style=\"text-align: left;\">本计算机能表示的 8 位、16 位、32 位、64 位的最小整数</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>realmax</code></td>\r\n<td style=\"text-align: left;\">本计算机能表达的最大浮点数</td>\r\n<td style=\"text-align: left;\"><code>realmin</code></td>\r\n<td style=\"text-align: left;\">本计算机能表达的最小浮点数</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>Inf</code> 或 <code>inf</code></td>\r\n<td style=\"text-align: left;\">无穷大</td>\r\n<td style=\"text-align: left;\"><code>NaN</code> 或<code>nan</code></td>\r\n<td style=\"text-align: left;\">非数</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>computer</code></td>\r\n<td style=\"text-align: left;\">MATLAB 运行平台</td>\r\n<td style=\"text-align: left;\"><code>version</code></td>\r\n<td style=\"text-align: left;\">MATLAB 版本字符串</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h2 id=\"数据显示格式\">数据显示格式</h2>\r\n<p>摘自 <a href=\"https://ww2.mathworks.cn/help/matlab/ref/format.html\" target=\"_blank\" rel=\"noopener\">MathWorks 文档 - 设置命令行窗口输出显示格式</a>：</p>\r\n<table>\r\n<colgroup>\r\n<col style=\"width: 33%\">\r\n<col style=\"width: 33%\">\r\n<col style=\"width: 33%\">\r\n</colgroup>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: left;\">风格</th>\r\n<th style=\"text-align: left;\">结果</th>\r\n<th style=\"text-align: left;\">示例</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>short (default)</code></td>\r\n<td style=\"text-align: left;\">固定十进制短格式，小数点后包含 4 位数</td>\r\n<td style=\"text-align: left;\">3.1416</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>long</code></td>\r\n<td style=\"text-align: left;\">长固定小数格式，double 值的小数点后包含 15 位数，single 值的小数点后包含 7 位数</td>\r\n<td style=\"text-align: left;\">3.141592654</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>shortE</code></td>\r\n<td style=\"text-align: left;\">短科学记数法，小数点后包含 4 位数</td>\r\n<td style=\"text-align: left;\">3.14E+00</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>longE</code></td>\r\n<td style=\"text-align: left;\">长科学记数法，double 值的小数点后包含 15 位数，single 值的小数点后包含 7 位数</td>\r\n<td style=\"text-align: left;\">3.14E+00</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>shortG</code></td>\r\n<td style=\"text-align: left;\">短固定小数格式或科学记数法（取更紧凑的一个），总共 5 位</td>\r\n<td style=\"text-align: left;\">3.1416</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>longG</code></td>\r\n<td style=\"text-align: left;\">长固定小数格式或科学记数法（取更紧凑的一个），对于 double 值，总共 15 位；对于 single 值，总共 7 位</td>\r\n<td style=\"text-align: left;\">3.141592654</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>shortEng</code></td>\r\n<td style=\"text-align: left;\">短工程记数法，小数点后包含 4 位数，3 的倍数</td>\r\n<td style=\"text-align: left;\">3.14E+00</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>longEng</code></td>\r\n<td style=\"text-align: left;\">长工程记数法，包含 15 位有效位数，指数为 3 的倍数</td>\r\n<td style=\"text-align: left;\">3.14E+00</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>+</code></td>\r\n<td style=\"text-align: left;\">正/负格式，对正、负和零元素分别显示 +、- 和空白字符</td>\r\n<td style=\"text-align: left;\">+</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>bank</code></td>\r\n<td style=\"text-align: left;\">货币格式，小数点后包含 2 位数</td>\r\n<td style=\"text-align: left;\">3.14</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>hex</code></td>\r\n<td style=\"text-align: left;\">二进制双精度数字的十六进制表示形式</td>\r\n<td style=\"text-align: left;\">400921fb54442d18</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>rat</code></td>\r\n<td style=\"text-align: left;\">小整数的比率</td>\r\n<td style=\"text-align: left;\">355/113</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>compact</code></td>\r\n<td style=\"text-align: left;\">隐藏过多的空白行以便在一个屏幕上显示更多输出</td>\r\n<td style=\"text-align: left;\">theta = pi/2 <br> theta =<br>     1.5708</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>loose</code></td>\r\n<td style=\"text-align: left;\">添加空白行以使输出更易于阅读</td>\r\n<td style=\"text-align: left;\">theta = pi/2 <br><br> theta = <br><br>     1.5708</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h2 id=\"数值型数据\">数值型数据</h2>\r\n<p>关于整型数据相关的操作函数（操作数可以是浮点数，也就是默认的数值类型）</p>\r\n<table>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: left;\">函数</th>\r\n<th style=\"text-align: left;\">说明</th>\r\n<th style=\"text-align: left;\">函数</th>\r\n<th style=\"text-align: left;\">说明</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>ceil</code></td>\r\n<td style=\"text-align: left;\">向正无穷大方向取整</td>\r\n<td style=\"text-align: left;\"><code>fix</code></td>\r\n<td style=\"text-align: left;\">向 0 取整</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>floor</code></td>\r\n<td style=\"text-align: left;\">向负无穷大方向取整</td>\r\n<td style=\"text-align: left;\"><code>round</code></td>\r\n<td style=\"text-align: left;\">四舍五入取整</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>isinteger</code></td>\r\n<td style=\"text-align: left;\">判断是否为整数</td>\r\n<td style=\"text-align: left;\"><code>mod</code> / <code>rem</code></td>\r\n<td style=\"text-align: left;\">求模 / 余数</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p>关于虚数的一些操作函数</p>\r\n<table>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: left;\">函数</th>\r\n<th style=\"text-align: left;\">说明</th>\r\n<th style=\"text-align: left;\">函数</th>\r\n<th style=\"text-align: left;\">说明</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>isreal</code></td>\r\n<td style=\"text-align: left;\">检查是否为实数</td>\r\n<td style=\"text-align: left;\"><code>abs</code></td>\r\n<td style=\"text-align: left;\">求复数幅值</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>real</code></td>\r\n<td style=\"text-align: left;\">返回复数实部</td>\r\n<td style=\"text-align: left;\"><code>angle</code></td>\r\n<td style=\"text-align: left;\">求复数相位</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>imag</code></td>\r\n<td style=\"text-align: left;\">返回复数虚部</td>\r\n<td style=\"text-align: left;\"><code>conj</code></td>\r\n<td style=\"text-align: left;\">返回复数的共轭复数</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h2 id=\"字符向量及字符串\">字符向量及字符串</h2>\r\n<p>类似于 C 语言里的「字符数组」， Matlab 中的字符向量也是以字符数组形式存在的。如 <code>size('abc\\nabc')</code> 返回 8。字符向量可由 <code>[...]</code> 以及 <code>char</code> 来创建。常见的字符向量操作函数如下表：</p>\r\n<table>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: left;\">函数</th>\r\n<th style=\"text-align: left;\">说明</th>\r\n<th style=\"text-align: left;\">函数</th>\r\n<th style=\"text-align: left;\">说明</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>ischar</code></td>\r\n<td style=\"text-align: left;\">检查是否为字符数组</td>\r\n<td style=\"text-align: left;\"><code>isletter</code></td>\r\n<td style=\"text-align: left;\">检查数组元素是否为字母</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>isspace</code></td>\r\n<td style=\"text-align: left;\">检查数组元素是否为空格</td>\r\n<td style=\"text-align: left;\"><code>isstrprop</code></td>\r\n<td style=\"text-align: left;\">判断字符串是否属于某种特定类型</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>strcat</code></td>\r\n<td style=\"text-align: left;\">横向连接字符数组</td>\r\n<td style=\"text-align: left;\"><code>strvcat</code></td>\r\n<td style=\"text-align: left;\">纵向连接字符数组，建议用 <code>char</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>blanks</code></td>\r\n<td style=\"text-align: left;\">创建空字符串</td>\r\n<td style=\"text-align: left;\"><code>strjust</code></td>\r\n<td style=\"text-align: left;\">调整字符串的对齐方式</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>strtrim</code></td>\r\n<td style=\"text-align: left;\">去掉字符串首尾的空格</td>\r\n<td style=\"text-align: left;\"><code>deblank</code></td>\r\n<td style=\"text-align: left;\">去掉字符串尾部的空格</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>strfind</code></td>\r\n<td style=\"text-align: left;\">在长字符串中搜索短字符串</td>\r\n<td style=\"text-align: left;\"><code>strtok</code></td>\r\n<td style=\"text-align: left;\">找出字符串中第一个分隔符前面的部分</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>strrep</code></td>\r\n<td style=\"text-align: left;\">字符串查找与替换</td>\r\n<td style=\"text-align: left;\"><code>strmatch</code></td>\r\n<td style=\"text-align: left;\">查找匹配的字符串</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>lower</code></td>\r\n<td style=\"text-align: left;\">将字符串中所包含的字母转换为小写</td>\r\n<td style=\"text-align: left;\"><code>upper</code></td>\r\n<td style=\"text-align: left;\">将字符串中所包含的字母转换为大写</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>strcmp</code> <br> <code>strcmpi</code></td>\r\n<td style=\"text-align: left;\">字符串比较，后者忽略大小写</td>\r\n<td style=\"text-align: left;\"><code>strncmp</code> <br> <code>strncmpi</code></td>\r\n<td style=\"text-align: left;\">比较字符串前 n 个字符，后者忽略大小写</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>strjoin</code></td>\r\n<td style=\"text-align: left;\">将字符串元胞连接成一个字符串</td>\r\n<td style=\"text-align: left;\"><code>strsplit</code></td>\r\n<td style=\"text-align: left;\">将字符串分割成字符串元胞数组</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>sprintf</code></td>\r\n<td style=\"text-align: left;\">格式化输出数据至字符串</td>\r\n<td style=\"text-align: left;\"><code>sscanf</code></td>\r\n<td style=\"text-align: left;\">从字符串中读取格式化数据</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>regexp</code> <br> <code>regexpi</code></td>\r\n<td style=\"text-align: left;\">匹配正则表达式，后者忽略大小写</td>\r\n<td style=\"text-align: left;\"><code>regexprep</code></td>\r\n<td style=\"text-align: left;\">使用正则表达式替换文本</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>regexptranslate</code></td>\r\n<td style=\"text-align: left;\">将文本转换为正则表达式</td>\r\n<td style=\"text-align: left;\"></td>\r\n<td style=\"text-align: left;\"></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p>令人吃驚的是，<strong>R2017a</strong> 以前的版本都不可用「双引号」括住字符以表示字符串。摘自 <a href=\"https://ww2.mathworks.cn/help/matlab/ref/string.html\" target=\"_blank\" rel=\"noopener\">MathWorks 文档 - 字符串数组</a>：</p>\r\n<blockquote>\r\n<p>从 R2016b 开始，您可以使用字符串数组而不是字符数组来表示文本。字符串数组的每个元素存储一个字符序列。序列可以具有不同长度，无需填充，例如 “yes” 和 “no”。只有一个元素的字符串数组也称为字符串标量。<br>\r\n您可以通过用双引号括起一段文本来创建字符串。从 R2017a 开始引入双引号。</p>\r\n</blockquote>\r\n<p>针对字符数组 / 向量和字符串，有必要做一系列探究。</p>\r\n<p>最基本的 <code>char(A)</code> 或 <code>char(A1, ... , An)</code> 将数组 A 转为字符数组，相当于 Perl / Python 中的 <code>chr</code>，当然这里是向量版：</p>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">char(<span class=\"number\">65</span>:<span class=\"number\">90</span>, <span class=\"number\">97</span>:<span class=\"number\">122</span>)</span><br><span class=\"line\">strcat(<span class=\"number\">65</span>:<span class=\"number\">90</span>, <span class=\"number\">97</span>:<span class=\"number\">122</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%  2x26 char array</span></span><br><span class=\"line\"><span class=\"comment\">%    'ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span></span><br><span class=\"line\"><span class=\"comment\">%    'abcdefghijklmnopqrstuvwxyz'</span></span><br><span class=\"line\"><span class=\"comment\">%</span></span><br><span class=\"line\"><span class=\"comment\">%  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'</span></span><br></pre></td></tr></table></figure>\r\n<p>字符向量可由 <code>disp</code> 直接输出：</p>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">disp</span>([<span class=\"string\">'Euler''s Formula: '</span>, latex(sym(<span class=\"string\">'exp(i*pi)+1=0'</span>))]);</span><br><span class=\"line\"><span class=\"comment\">% Euler's Formula: &#123;\\mathrm&#123;e&#125;&#125;^&#123;\\pi \\,i&#125;+1=0</span></span><br></pre></td></tr></table></figure>\r\n<p>当然上面这个例子会跳出将来会弃用字符向量的警告，这里仅说明 <code>char</code> 的功效，无视即可。更多关于 <code>char</code> 的说明：</p>\r\n<ul>\r\n<li>如果 A 是数值数组，则 char 将数值转换为字符。有效数值范围从 0 到 65535，并且对应于 Unicode® 代码单元。值 0 到 127 还对应于 7 位 ASCII 字符。char 函数：\r\n<ul>\r\n<li>将非整数值向零舍入。</li>\r\n<li>将小于 0 的值视为 0。</li>\r\n<li>将大于 65535 的值视为 65535。</li>\r\n</ul></li>\r\n<li>如果 A 是字符数组，则 char 返回未改变的 A。</li>\r\n<li>如果 A 是字符数组元胞数组，则 char 将该元胞数组转换为字符数组。元胞数组中每个字符数组的每一行将变成 C 中的一行，并根据需要自动用空格填充。</li>\r\n<li>如果 A 是分类数组，则 char 按列顺序将 A 的每个元素转换为字符数组的一行。</li>\r\n<li>如果 A 是字符串数组，则 char 会将字符串数组转换为字符数组。char 会将 A 中的每个字符串元素转换为字符向量，然后将这些字符向量串联成字符数组，并根据需要自动用空格填充。</li>\r\n</ul>\r\n<p>除此之外，<code>char</code> 还可以格式化时间：</p>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">char(datetime, <span class=\"string\">'yyyy-M-d hh:mm'</span>)</span><br><span class=\"line\"><span class=\"comment\">% '2018-7-7 11:44'</span></span><br></pre></td></tr></table></figure>\r\n<p>而 <code>string</code> 函数显得更为「高阶」一些，下面的例子可以明显看出区别：</p>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">matlabcode = [<span class=\"number\">109</span> <span class=\"number\">97</span> <span class=\"number\">116</span> <span class=\"number\">108</span> <span class=\"number\">97</span> <span class=\"number\">98</span>];</span><br><span class=\"line\"><span class=\"built_in\">disp</span>(char(matlabcode));</span><br><span class=\"line\"><span class=\"built_in\">disp</span>(string(matlabcode));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">% matlab</span></span><br><span class=\"line\"><span class=\"comment\">%    \"109\"    \"97\"    \"116\"    \"108\"    \"97\"    \"98\"</span></span><br></pre></td></tr></table></figure>\r\n<p><code>string</code> 将数据看成一个整体进行操作（利用 <code>size</code> 可以看出），而不像 <code>char</code> 一样需要对齐数据以纳入矩阵。</p>\r\n<p>另外，对于 <code>strsplit</code> 和 <code>split</code>，大体可认为互为转置的关系：</p>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">carray = <span class=\"string\">'m a t l a b'</span>;</span><br><span class=\"line\">str = string(carray);</span><br><span class=\"line\">strsplit(carray)          <span class=\"comment\">% &#123;'m'&#125; &#123;'a'&#125; &#123;'t'&#125; &#123;'l'&#125; &#123;'a'&#125; &#123;'b'&#125;</span></span><br><span class=\"line\">split(carray)             <span class=\"comment\">% strsplit(carray)'</span></span><br><span class=\"line\">strsplit(str)             <span class=\"comment\">% \"m\" \"a\" \"t\" \"l\" \"a\" \"b\"</span></span><br><span class=\"line\">split(str)                <span class=\"comment\">% strsplit(str)'</span></span><br></pre></td></tr></table></figure>\r\n<h2 id=\"元胞数组结构体以及表数组\">元胞数组、结构体以及表数组</h2>\r\n<p>对于元胞数组，注意索引 <code>C(m, n)</code> 返回 C 在 <code>(m, n)</code> 位置上的元胞，而花括号 <code>C{m, n}</code> 返回数据。</p>\r\n<p>对于结构体的创建，一般有两种方法：</p>\r\n<ul>\r\n<li>使用 <code>.</code> 创建： <figure class=\"highlight matlab\"><figcaption><span>sync.sh</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">patient1.name = <span class=\"string\">'John Doe'</span>;</span><br><span class=\"line\">patient1.billing = <span class=\"number\">127</span>;</span><br><span class=\"line\">patient1.test = <span class=\"built_in\">magic</span>(<span class=\"number\">3</span>);</span><br></pre></td></tr></table></figure> 当然多维数组也是类似：<code>patient2(1, 1).name = 'John Doe; ...</code></li>\r\n<li>使用 <code>struct</code> 函数创建： <figure class=\"highlight matlab\"><figcaption><span>sync.sh</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">patient1 = struct(<span class=\"string\">'name'</span>, <span class=\"string\">'John Doe'</span>, <span class=\"string\">'billing'</span>, <span class=\"number\">127</span>, <span class=\"string\">'test'</span>, <span class=\"built_in\">magic</span>(<span class=\"number\">3</span>));</span><br></pre></td></tr></table></figure></li>\r\n</ul>\r\n<p>对于 Matlab R2013b 开始引入的表数组类型，一般有两种创建方式：</p>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Gender = &#123;<span class=\"string\">'M'</span>; <span class=\"string\">'F'</span>; <span class=\"string\">'M'</span>; <span class=\"string\">'M'</span>; <span class=\"string\">'F'</span>&#125;;</span><br><span class=\"line\">Age = [<span class=\"number\">23</span>; <span class=\"number\">24</span>; <span class=\"number\">24</span>; <span class=\"number\">22</span>; <span class=\"number\">23</span>];</span><br><span class=\"line\">Grades = [<span class=\"number\">78</span> <span class=\"number\">86</span> <span class=\"number\">80</span>; <span class=\"number\">67</span> <span class=\"number\">90</span> <span class=\"number\">81</span>; <span class=\"number\">66</span> <span class=\"number\">70</span> <span class=\"number\">76</span>; <span class=\"number\">82</span> <span class=\"number\">95</span> <span class=\"number\">85</span>; <span class=\"number\">64</span> <span class=\"number\">78</span> <span class=\"number\">75</span>];</span><br><span class=\"line\">Leader = logical([<span class=\"number\">0</span>; <span class=\"number\">1</span>; <span class=\"number\">0</span>; <span class=\"number\">0</span>; <span class=\"number\">1</span>]);</span><br><span class=\"line\">ID = strcat(<span class=\"string\">'2017SC'</span>, [<span class=\"string\">'003'</span>; <span class=\"string\">'006'</span>; <span class=\"string\">'024'</span>; <span class=\"string\">'005'</span>; <span class=\"string\">'056'</span>]);</span><br><span class=\"line\">T1 = table(ID, Gender, Age, Grades, Leader, <span class=\"string\">'RowNames'</span>, ...</span><br><span class=\"line\">           &#123;<span class=\"string\">'Smith'</span>, <span class=\"string\">'Jones'</span>, <span class=\"string\">'Brown'</span>, <span class=\"string\">'Jim'</span>, <span class=\"string\">'Lily'</span>&#125;);</span><br><span class=\"line\">T2 = table;</span><br><span class=\"line\">T2.ID = ID;</span><br><span class=\"line\">T2.Gender = Gender;</span><br><span class=\"line\">T2.Age = Age;</span><br><span class=\"line\">T2.Grades = Grades;</span><br><span class=\"line\">T2.Leader = Leader;</span><br><span class=\"line\">T2.Properties.RowNames = &#123;<span class=\"string\">'Smith'</span>, <span class=\"string\">'Jones'</span>, <span class=\"string\">'Brown'</span>, <span class=\"string\">'Jim'</span>, <span class=\"string\">'Lily'</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%   5x5 table</span></span><br><span class=\"line\"><span class=\"comment\">%                 ID        Gender    Age        Grades        Leader</span></span><br><span class=\"line\"><span class=\"comment\">%              _________    ______    ___    ______________    ______</span></span><br><span class=\"line\"><span class=\"comment\">%     Smith    2017SC003    'M'       23     78    86    80    false</span></span><br><span class=\"line\"><span class=\"comment\">%     Jones    2017SC006    'F'       24     67    90    81    true</span></span><br><span class=\"line\"><span class=\"comment\">%     Brown    2017SC024    'M'       24     66    70    76    false</span></span><br><span class=\"line\"><span class=\"comment\">%     Jim      2017SC005    'M'       22     82    95    85    false</span></span><br><span class=\"line\"><span class=\"comment\">%     Lily     2017SC056    'F'       23     64    78    75    true</span></span><br></pre></td></tr></table></figure>\r\n<p>当然了，笔者不偏好后面这种方法，而是尽量从其他格式转换过来。</p>\r\n<p>表数组索引方式比较丰富：</p>\r\n<table>\r\n<tr>\r\n<th>\r\n索引类型\r\n</th>\r\n<th>\r\n语法格式\r\n</th>\r\n<th>\r\n结果类型\r\n</th>\r\n<th>\r\n备注\r\n</th>\r\n</tr>\r\n<tr>\r\n<td>\r\n小括号\r\n</td>\r\n<td>\r\n<code>T(rows, vars)</code>\r\n</td>\r\n<td>\r\n表格型数据类型\r\n</td>\r\n<td rowspan=\"2\">\r\n<code>rows / vars</code> 可以是数值向量、逻辑向量以及行/列名组成的元胞数组\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n大括号\r\n</td>\r\n<td>\r\n<code>T{rows, vars}</code>\r\n</td>\r\n<td>\r\n提取的数据\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n点号索引\r\n</td>\r\n<td>\r\n<code>T.var</code><br><code>T.(varindex)</code>\r\n</td>\r\n<td>\r\n提取的数据\r\n</td>\r\n<td>\r\n可以提取表格的一列，还可以进一步对其提取的数据进行索引，如 <code>T.var(index)</code> 或 <code>T.var{index}</code>\r\n</td>\r\n</tr>\r\n</table>\r\n<p>下面罗列元胞数组、结构体以及表数组的常用操作：</p>\r\n<table>\r\n<colgroup>\r\n<col style=\"width: 25%\">\r\n<col style=\"width: 25%\">\r\n<col style=\"width: 25%\">\r\n<col style=\"width: 25%\">\r\n</colgroup>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: left;\">函数</th>\r\n<th style=\"text-align: left;\">说明</th>\r\n<th style=\"text-align: left;\">函数</th>\r\n<th style=\"text-align: left;\">说明</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>iscell</code></td>\r\n<td style=\"text-align: left;\">判断数组是否为元胞数组</td>\r\n<td style=\"text-align: left;\"><code>iscellstr</code></td>\r\n<td style=\"text-align: left;\">判断数组是否为字符串元胞数组</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>cellstr</code></td>\r\n<td style=\"text-align: left;\">创建字符串元胞数组</td>\r\n<td style=\"text-align: left;\"><code>cellfun</code></td>\r\n<td style=\"text-align: left;\">将函数应用于元胞数组的每一个元素</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>celldisp</code></td>\r\n<td style=\"text-align: left;\">显示元胞的内容</td>\r\n<td style=\"text-align: left;\"><code>cellplot</code></td>\r\n<td style=\"text-align: left;\">显示元胞的图形描述</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>isstruct</code></td>\r\n<td style=\"text-align: left;\">判断是否为结构数组</td>\r\n<td style=\"text-align: left;\"><code>isfield</code></td>\r\n<td style=\"text-align: left;\">判断某字段是否为结构数组中的字段</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>getfield</code></td>\r\n<td style=\"text-align: left;\">获取结构数组中指定字段的值</td>\r\n<td style=\"text-align: left;\"><code>setfield</code></td>\r\n<td style=\"text-align: left;\">设置结构数组中指定字段的值</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>rmfield</code></td>\r\n<td style=\"text-align: left;\">移除结构数据中的指定字段</td>\r\n<td style=\"text-align: left;\"><code>orderfields</code></td>\r\n<td style=\"text-align: left;\">对结构数组中的字段按指定顺序排序</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>fieldnames</code></td>\r\n<td style=\"text-align: left;\">获得结构数组的字段名或对象的属性值</td>\r\n<td style=\"text-align: left;\"><code>strcfun</code></td>\r\n<td style=\"text-align: left;\">将函数应用于结构数组的每一个字段</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>istable</code></td>\r\n<td style=\"text-align: left;\">判断输入是否为表格型类型</td>\r\n<td style=\"text-align: left;\"><code>summary</code></td>\r\n<td style=\"text-align: left;\">打印表格型数据的综述</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>readtable</code></td>\r\n<td style=\"text-align: left;\">从文件中创建表格型数据</td>\r\n<td style=\"text-align: left;\"><code>writetable</code></td>\r\n<td style=\"text-align: left;\">将表格型数据写入文件中</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>height</code></td>\r\n<td style=\"text-align: left;\">表格型数据的行数</td>\r\n<td style=\"text-align: left;\"><code>width</code></td>\r\n<td style=\"text-align: left;\">表格型数据的列数</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>join</code></td>\r\n<td style=\"text-align: left;\">使用关键变量合并两个表格型数据</td>\r\n<td style=\"text-align: left;\"><code>innerjoin</code></td>\r\n<td style=\"text-align: left;\">以交集的形式合并两个表格型数据</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>outerjoin</code></td>\r\n<td style=\"text-align: left;\">以并集的形式合并两个表格型数据</td>\r\n<td style=\"text-align: left;\"><code>ismissing</code></td>\r\n<td style=\"text-align: left;\">查找表格型数据中的非正常量，如 <code>NaN</code>, <code>NaT</code>, <code>&lt;undefined&gt;</code>, 空字符向量以及空格向量</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>varfun</code></td>\r\n<td style=\"text-align: left;\">将函数应用于表格型数据的每一个变量中</td>\r\n<td style=\"text-align: left;\"><code>rowfun</code></td>\r\n<td style=\"text-align: left;\">将函数应用于表格型数据的每一行</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p>Matlab 提供丰富的类型转换函数，眼花缭乱，摘录如下：</p>\r\n<table>\r\n<tr>\r\n<th>\r\n转换形式\r\n</th>\r\n<th>\r\n转换函数\r\n</th>\r\n<th>\r\n说明<br>\r\n</th>\r\n</tr>\r\n<tr>\r\n<td rowspan=\"3\">\r\n数值 ➠ 字符数组\r\n</td>\r\n<td>\r\n<code>num2str</code>\r\n</td>\r\n<td>\r\n数值转换为字符数组\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n<code>mat2str</code>\r\n</td>\r\n<td>\r\n矩阵转换为字符数组\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n<code>int2str</code>\r\n</td>\r\n<td>\r\n整数转换为字符数组\r\n</td>\r\n</tr>\r\n<tr>\r\n<td rowspan=\"2\">\r\n字符数组 ➠ 数值\r\n</td>\r\n<td>\r\n<code>str2num</code>\r\n</td>\r\n<td>\r\n将字符数组转为数值，使用 <code>eval</code> 函数进行转换\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n<code>str2double</code>\r\n</td>\r\n<td>\r\n将字符数组或字符串元胞数组转换为数值\r\n</td>\r\n</tr>\r\n<tr>\r\n<td rowspan=\"2\">\r\n数值 ➠ 元胞数组\r\n</td>\r\n<td>\r\n<code>num2cell</code>\r\n</td>\r\n<td>\r\n将数值转换为元胞数组\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n<code>mat2cell</code>\r\n</td>\r\n<td>\r\n将矩阵转换为元胞数组\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n元胞数组 ➠ 数值\r\n</td>\r\n<td>\r\n<code>cell2mat</code>\r\n</td>\r\n<td>\r\n将元胞数组转换为矩阵\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n字符串/数组 ➠ 元胞数组\r\n</td>\r\n<td>\r\n<code>cellstr</code>\r\n</td>\r\n<td>\r\n将字符串转换为字符串元胞数组\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n元胞数组 ➠ 字符串\r\n</td>\r\n<td>\r\n<code>char</code>\r\n</td>\r\n<td>\r\n将元胞数组转换为字符串，替换以前版本的 <code>str2mat</code> 函数\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n字符串 ➠ 函数句柄\r\n</td>\r\n<td>\r\n<code>str2func</code>\r\n</td>\r\n<td>\r\n由函数名或字符串表达式构造函数句柄\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n函数句柄 ➠ 字符串\r\n</td>\r\n<td>\r\n<code>func2str</code>\r\n</td>\r\n<td>\r\n由函数句柄构造函数名或字符串表达式，也可用 <code>char</code> 函数\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n元胞数组 ➠ 结构数组\r\n</td>\r\n<td>\r\n<code>cell2struct</code>\r\n</td>\r\n<td>\r\n将元胞数组转换为结构数组\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n结构数组 ➠ 元胞数组\r\n</td>\r\n<td>\r\n<code>struct2cell</code>\r\n</td>\r\n<td>\r\n将结构数组转换为元胞数组\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n数组 ➠ 表格\r\n</td>\r\n<td>\r\n<code>array2table</code>\r\n</td>\r\n<td>\r\n将同类二维数组转换为表格\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n表格 ➠ 数组\r\n</td>\r\n<td>\r\n<code>table2array</code>\r\n</td>\r\n<td>\r\n将表格转换为同类数组\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n元胞数组 ➠ 表格\r\n</td>\r\n<td>\r\n<code>cell2table</code>\r\n</td>\r\n<td>\r\n将元胞数组转换为表格\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n表格 ➠ 元胞数组\r\n</td>\r\n<td>\r\n<code>table2cell</code>\r\n</td>\r\n<td>\r\n将表格转换为元胞数组\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n结构数组 ➠ 表格\r\n</td>\r\n<td>\r\n<code>struct2table</code>\r\n</td>\r\n<td>\r\n将结构数组转换为表格\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n表格 ➠ 结构数组\r\n</td>\r\n<td>\r\n<code>table2struct</code>\r\n</td>\r\n<td>\r\n将表格转换为结构数组\r\n</td>\r\n</tr>\r\n</table>\r\n<hr>\r\n<p>关于基本的算术运算符，有几处备忘：</p>\r\n<ul>\r\n<li><code>/</code> 表示矩阵右除，<span class=\"math inline\">\\(C=A/B\\)</span> 表示 <span class=\"math inline\">\\(C\\)</span> 是方程 <span class=\"math inline\">\\(XB=A\\)</span> 的解 <span class=\"math inline\">\\(C=AB^{-1}\\)</span></li>\r\n<li><code>\\</code> 表示矩阵左除，<span class=\"math inline\">\\(C=A\\backslash B\\)</span> 表示 <span class=\"math inline\">\\(C\\)</span> 是方程 <span class=\"math inline\">\\(AX=B\\)</span> 的解 <span class=\"math inline\">\\(C=A^{-1}B\\)</span></li>\r\n<li>关于转置，<code>'</code> 或者函数 <code>ctranspose</code> 表 Hermit 转置或共轭转置，<code>.'</code> 或 <code>transpose</code> 为非共轭转置</li>\r\n</ul>\r\n<p><br></p>\r\n<p>Matlab 数组元素的索引主要有 <span class=\"math inline\">\\(3\\)</span> 种方式，即全下标方式、单下标方式和逻辑 <span class=\"math inline\">\\(1\\)</span> 方式。在单下标方式中，存在这样的换算：</p>\r\n<ul>\r\n<li>对于 <span class=\"math inline\">\\(m\\times n\\)</span> 的矩阵 <span class=\"math inline\">\\(A\\)</span>，元素 <span class=\"math inline\">\\(A(i, j)\\)</span> 对应的单下标为 <span class=\"math inline\">\\(s = m(j-1) + i\\)</span></li>\r\n<li>对于 <span class=\"math inline\">\\(m \\times n \\times t\\)</span> 的数组 <span class=\"math inline\">\\(B\\)</span>，元素 <span class=\"math inline\">\\(B(i, j, k)\\)</span> 对应的单下标为 <span class=\"math inline\">\\(s=mn(k-1) + m(j-1) + i\\)</span></li>\r\n<li>对于维度为 <span class=\"math inline\">\\(n_1 \\times n_2 \\times \\cdots \\times n_k\\)</span> 的多维数组 <span class=\"math inline\">\\(C\\)</span>，元素 <span class=\"math inline\">\\(C(i_1, i_2, \\cdots, i_k)\\)</span> 对应的单下标为 <span class=\"math inline\">\\(s = \\sum\\limits_{i=1}^{k-1} (i_{k+1} - 1)\\prod\\limits_{j=1}^i n_j + i_1\\)</span></li>\r\n</ul>\r\n<p>Matlab 自带函数 <code>sub2ind</code> 可对上述第三条结论进行验证：</p>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A = randi([<span class=\"number\">1</span> <span class=\"number\">10</span>], <span class=\"number\">2</span>, <span class=\"number\">7</span>, <span class=\"number\">17</span>, <span class=\"number\">3</span>, <span class=\"number\">101</span>);</span><br><span class=\"line\"><span class=\"built_in\">disp</span>(my_sub2ind(<span class=\"built_in\">size</span>(A), <span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">20</span>));</span><br><span class=\"line\"><span class=\"built_in\">disp</span>(<span class=\"built_in\">sub2ind</span>(<span class=\"built_in\">size</span>(A), <span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">20</span>));</span><br><span class=\"line\"><span class=\"built_in\">disp</span>(my_sub2ind(<span class=\"built_in\">size</span>(A), <span class=\"number\">2</span>, <span class=\"number\">7</span>, <span class=\"number\">13</span>, <span class=\"number\">3</span>, <span class=\"number\">52</span>));</span><br><span class=\"line\"><span class=\"built_in\">disp</span>(<span class=\"built_in\">sub2ind</span>(<span class=\"built_in\">size</span>(A), <span class=\"number\">2</span>, <span class=\"number\">7</span>, <span class=\"number\">13</span>, <span class=\"number\">3</span>, <span class=\"number\">52</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">ind</span> = <span class=\"title\">my_sub2ind</span><span class=\"params\">(dims, varargin)</span></span></span><br><span class=\"line\">    indx = cell2mat(varargin);</span><br><span class=\"line\">    ind = indx(<span class=\"number\">1</span>) + <span class=\"built_in\">dot</span>(indx(<span class=\"number\">2</span>:<span class=\"keyword\">end</span>)<span class=\"number\">-1</span>, cumprod(dims(<span class=\"number\">1</span>:<span class=\"keyword\">end</span><span class=\"number\">-1</span>)));</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">% 13825</span></span><br><span class=\"line\"><span class=\"comment\">% 37072</span></span><br></pre></td></tr></table></figure>\r\n","site":{"data":{}},"excerpt":"<p>本系列试图将笔者在研究过程中认为比较重要、容易遗忘以及富有创新性或启发性的程序代码及思想一一记录，一来节省遇见同类问题时耗费在检索资料上的时间，二来也能见证自己构建知识体系框架的历程。</p>","more":"<p>新版本的马特来布添加了诸多与时俱进的特性和工具箱，一直为人诟病的画图也自带抗锯齿了，R2016b 后的版本也支持脚本中函数了。MathWorks 始终坚持半年一新地迭代着 Matlab 的版本，可见其非常地用心。花了三天时间分别在 Windows 10 及 Ubuntu 16.04 x64 下安装好 Matlab，<del>因个人感觉 2017 以后的版本在 Windows 上卡顿明显，所以</del> Win 和 Linux 下的版本均为 R2017b。当然后者是面向终端的命令行版的：</p>\r\n<!--�28-->\r\n<p>目前参考的书籍有：</p>\r\n<ul>\r\n<li>《MATLAB 语言常用算法程序集》（电子版）</li>\r\n<li>《MATLAB 之父：编程实践》（电子版）</li>\r\n<li>《高等应用数学问题的 MATLAB 求解》（电子版）</li>\r\n<li>《MATLAB 数值计算》（电子版）</li>\r\n<li>《大学数学实验》（电子版）</li>\r\n<li>《MATLAB 统计分析与应用：40 个案例分析》</li>\r\n<li>《MATLAB 数学建模》</li>\r\n<li>《MATLAB 数值计算实战》</li>\r\n</ul>\r\n<p>说实话，有点贪心，但也是种挑战。若能在短时间内去其糟粕取其精华，相比也是种奇妙的学习体验。</p>\r\n<p>一般社会哥人狠话不多，闲话至此，下面进入没有主题的正题。</p>\r\n<p>Linux 下安装的时候出现了点小插曲，在其中一台 Ubuntu 16.04.4 的机器上安装完 Matlab 2017b 后，无法使用数学符号工具箱，出现如下错误：</p>\r\n<!--�29-->\r\n<p>搜寻所有可能与该问题相关的途径后， 无论是更新、回滚 <code>fontconfig</code>，<code>libfreetype</code> 版本还是重新安装其他版本 Matlab for Linux 后均无效，说明 Linux 下操作系统状态对 Matlab 有一定影响，遂放弃此台服务器。</p>\r\n<p>由于笔者的系统为英文系统，而 Windows 下区分系统 Locale 的方式在于「格式」而非「地区」（具体设置为 Control Panel - Clock, Language, and Region - Region - Formats），所以会出现两个显著问题：程序界面为英文、编辑器里中文乱码。界面为英文倒不能说是问题，但乱码就很令人头疼了。查阅资料后得到的比较一劳永逸的方法是改动「格式」为中国。其他方法如修改文件 <code>lcdata.xml</code> 经亲测并不考谱。另，若仍坚持在英文系统下使用 Matlab，并需输出中文，务必运行语句 <!--�30--></p>\r\n<hr>\r\n<h2 id=\"vim-插件\">Vim 插件</h2>\r\n<p>在 <code>.vimrc</code> 中添加：</p>\r\n<!--�31-->\r\n<p>在 Vim 中打开 <code>.m</code> 文件，<code>F8</code> 即可运行。</p>\r\n<h2 id=\"基本命令及快捷键\">基本命令及快捷键</h2>\r\n<table>\r\n<colgroup>\r\n<col style=\"width: 22%\">\r\n<col style=\"width: 27%\">\r\n<col style=\"width: 22%\">\r\n<col style=\"width: 27%\">\r\n</colgroup>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: left;\">命令</th>\r\n<th style=\"text-align: left;\">功能</th>\r\n<th style=\"text-align: left;\">命令</th>\r\n<th style=\"text-align: left;\">功能</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>clc</code></td>\r\n<td style=\"text-align: left;\">清屏（甚至清除了缓冲区）</td>\r\n<td style=\"text-align: left;\"><code>clear</code></td>\r\n<td style=\"text-align: left;\">清除工作空间所有变量</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>clear all</code></td>\r\n<td style=\"text-align: left;\">从工作空间清除所有变量和函数</td>\r\n<td style=\"text-align: left;\"><code>clear &lt;变量名&gt;</code></td>\r\n<td style=\"text-align: left;\">清除指定变量</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>clf</code></td>\r\n<td style=\"text-align: left;\">清除图形窗口内容（注意该命令会弹出新的画布，相当于 <code>figure</code> ）</td>\r\n<td style=\"text-align: left;\"><code>delete &lt;文件名&gt;</code></td>\r\n<td style=\"text-align: left;\">从<strong>磁盘</strong>中删除文件</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>cla</code></td>\r\n<td style=\"text-align: left;\">清空当前坐标系</td>\r\n<td style=\"text-align: left;\"><code>type</code></td>\r\n<td style=\"text-align: left;\">显示 m 文件的内容</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>help &lt;命令名&gt;</code></td>\r\n<td style=\"text-align: left;\">获取所列命令的帮助信息</td>\r\n<td style=\"text-align: left;\"><code>which &lt;文件名&gt;</code></td>\r\n<td style=\"text-align: left;\">查找指定文件路径</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>who</code></td>\r\n<td style=\"text-align: left;\">显示当前工作空间所有变量的一个<strong>简单列表</strong></td>\r\n<td style=\"text-align: left;\"><code>whos</code></td>\r\n<td style=\"text-align: left;\">列出变量大小、数据格式等<strong>详细信息</strong></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>what</code></td>\r\n<td style=\"text-align: left;\">列出当前目录下的 <code>.m</code> 文件和 <code>.mat</code> 文件</td>\r\n<td style=\"text-align: left;\"><code>load name</code></td>\r\n<td style=\"text-align: left;\">下载 <code>name</code> 文件中的所有变量到工作空间</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>load name x y</code></td>\r\n<td style=\"text-align: left;\">下载 <code>name</code> 文件的变量 <code>x</code>, <code>y</code> 到工作空间</td>\r\n<td style=\"text-align: left;\"><code>importdata name</code></td>\r\n<td style=\"text-align: left;\">将 <code>name</code> 文件中的数据以结构体方式导入工作空间</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>save name</code></td>\r\n<td style=\"text-align: left;\">保存工作空间变量到文件 <code>name.mat</code> 中</td>\r\n<td style=\"text-align: left;\"><code>save name x y</code></td>\r\n<td style=\"text-align: left;\">保存工作空间变量 <code>x</code>, <code>y</code> 到文件 <code>name.mat</code> 中</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>↑</code> 或 <code>&lt;C-p&gt;</code></td>\r\n<td style=\"text-align: left;\">调用上一行命令</td>\r\n<td style=\"text-align: left;\"><code>↓</code> 或 <code>&lt;C-n&gt;</code></td>\r\n<td style=\"text-align: left;\">调用下一行命令</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>←</code> 或 <code>&lt;C-b&gt;</code></td>\r\n<td style=\"text-align: left;\">退后一格</td>\r\n<td style=\"text-align: left;\"><code>→</code> 或 <code>&lt;C-f&gt;</code></td>\r\n<td style=\"text-align: left;\">前移一格</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>Home</code> 或 <code>&lt;C-a&gt;</code></td>\r\n<td style=\"text-align: left;\">光标移至行首</td>\r\n<td style=\"text-align: left;\"><code>Home</code> 或 <code>&lt;C-e&gt;</code></td>\r\n<td style=\"text-align: left;\">光标移至行尾</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>Esc</code> 或 <code>&lt;C-u&gt;</code></td>\r\n<td style=\"text-align: left;\">清除一行</td>\r\n<td style=\"text-align: left;\"><code>Del</code> 或 <code>&lt;C-d&gt;</code></td>\r\n<td style=\"text-align: left;\">清除光标后字符</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>Backspace</code> 或 <code>&lt;C-h&gt;</code></td>\r\n<td style=\"text-align: left;\">清除光标前一个字符</td>\r\n<td style=\"text-align: left;\"><code>&lt;C-k&gt;</code></td>\r\n<td style=\"text-align: left;\">清除光标至行尾字符</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>&lt;C-0&gt;</code></td>\r\n<td style=\"text-align: left;\">激活命令窗口</td>\r\n<td style=\"text-align: left;\"><code>&lt;C-S-0&gt;</code></td>\r\n<td style=\"text-align: left;\">激活编辑器窗口</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>&lt;C-1&gt;</code></td>\r\n<td style=\"text-align: left;\">激活命令历史窗口</td>\r\n<td style=\"text-align: left;\"><code>&lt;C-2&gt;</code></td>\r\n<td style=\"text-align: left;\">激活「当前目录」窗口</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>&lt;C-3&gt;</code></td>\r\n<td style=\"text-align: left;\">激活工作空间窗口</td>\r\n<td style=\"text-align: left;\"></td>\r\n<td style=\"text-align: left;\"></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p>如果以上键盘快捷键部分无效，说明是时候把键盘主题改为 Emacs-Style 了：Preference - MATLAB - Keyboard - Shortcuts - Active settings: Emacs Default Set。</p>\r\n<h2 id=\"常用的帮助命令\">常用的帮助命令</h2>\r\n<table>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: left;\">命令</th>\r\n<th style=\"text-align: left;\">功能</th>\r\n<th style=\"text-align: left;\">命令</th>\r\n<th style=\"text-align: left;\">功能</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>help matfun</code></td>\r\n<td style=\"text-align: left;\">矩阵函数 - 数值线性代数</td>\r\n<td style=\"text-align: left;\"><code>help datafun</code></td>\r\n<td style=\"text-align: left;\">数据分析和傅立叶变换函数</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>help general</code></td>\r\n<td style=\"text-align: left;\">通用命令</td>\r\n<td style=\"text-align: left;\"><code>help ops</code></td>\r\n<td style=\"text-align: left;\">操作符和特殊字符</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>help graphics</code></td>\r\n<td style=\"text-align: left;\">通用图形函数</td>\r\n<td style=\"text-align: left;\"><code>help polyfun</code></td>\r\n<td style=\"text-align: left;\">多项式和内插函数</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>help elfun</code></td>\r\n<td style=\"text-align: left;\">基本的数学函数</td>\r\n<td style=\"text-align: left;\"><code>help lang</code></td>\r\n<td style=\"text-align: left;\">语言结构和调试</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>help elmat</code></td>\r\n<td style=\"text-align: left;\">基本的矩阵和矩阵操作</td>\r\n<td style=\"text-align: left;\"><code>help strfun</code></td>\r\n<td style=\"text-align: left;\">字符串函数</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>help control</code></td>\r\n<td style=\"text-align: left;\">控制系统工具和工具箱函数</td>\r\n<td style=\"text-align: left;\"></td>\r\n<td style=\"text-align: left;\"></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h2 id=\"部分预定义变量\">部分预定义变量</h2>\r\n<table>\r\n<colgroup>\r\n<col style=\"width: 25%\">\r\n<col style=\"width: 25%\">\r\n<col style=\"width: 25%\">\r\n<col style=\"width: 25%\">\r\n</colgroup>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: left;\">变量或函数</th>\r\n<th style=\"text-align: left;\">说明</th>\r\n<th style=\"text-align: left;\">变量或函数</th>\r\n<th style=\"text-align: left;\">说明</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>ans</code></td>\r\n<td style=\"text-align: left;\">默认变量名，以应答最近一次操作运算结果</td>\r\n<td style=\"text-align: left;\"><code>eps</code></td>\r\n<td style=\"text-align: left;\">浮点数的相对误差</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>i</code>, <code>j</code></td>\r\n<td style=\"text-align: left;\">虚数单数</td>\r\n<td style=\"text-align: left;\"><code>pi</code></td>\r\n<td style=\"text-align: left;\">圆周率</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>intmax</code></td>\r\n<td style=\"text-align: left;\">本计算机能表示的 8 位、16 位、32 位、64 位的最大整数</td>\r\n<td style=\"text-align: left;\"><code>intmin</code></td>\r\n<td style=\"text-align: left;\">本计算机能表示的 8 位、16 位、32 位、64 位的最小整数</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>realmax</code></td>\r\n<td style=\"text-align: left;\">本计算机能表达的最大浮点数</td>\r\n<td style=\"text-align: left;\"><code>realmin</code></td>\r\n<td style=\"text-align: left;\">本计算机能表达的最小浮点数</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>Inf</code> 或 <code>inf</code></td>\r\n<td style=\"text-align: left;\">无穷大</td>\r\n<td style=\"text-align: left;\"><code>NaN</code> 或<code>nan</code></td>\r\n<td style=\"text-align: left;\">非数</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>computer</code></td>\r\n<td style=\"text-align: left;\">MATLAB 运行平台</td>\r\n<td style=\"text-align: left;\"><code>version</code></td>\r\n<td style=\"text-align: left;\">MATLAB 版本字符串</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h2 id=\"数据显示格式\">数据显示格式</h2>\r\n<p>摘自 <a href=\"https://ww2.mathworks.cn/help/matlab/ref/format.html\" target=\"_blank\" rel=\"noopener\">MathWorks 文档 - 设置命令行窗口输出显示格式</a>：</p>\r\n<table>\r\n<colgroup>\r\n<col style=\"width: 33%\">\r\n<col style=\"width: 33%\">\r\n<col style=\"width: 33%\">\r\n</colgroup>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: left;\">风格</th>\r\n<th style=\"text-align: left;\">结果</th>\r\n<th style=\"text-align: left;\">示例</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>short (default)</code></td>\r\n<td style=\"text-align: left;\">固定十进制短格式，小数点后包含 4 位数</td>\r\n<td style=\"text-align: left;\">3.1416</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>long</code></td>\r\n<td style=\"text-align: left;\">长固定小数格式，double 值的小数点后包含 15 位数，single 值的小数点后包含 7 位数</td>\r\n<td style=\"text-align: left;\">3.141592654</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>shortE</code></td>\r\n<td style=\"text-align: left;\">短科学记数法，小数点后包含 4 位数</td>\r\n<td style=\"text-align: left;\">3.14E+00</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>longE</code></td>\r\n<td style=\"text-align: left;\">长科学记数法，double 值的小数点后包含 15 位数，single 值的小数点后包含 7 位数</td>\r\n<td style=\"text-align: left;\">3.14E+00</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>shortG</code></td>\r\n<td style=\"text-align: left;\">短固定小数格式或科学记数法（取更紧凑的一个），总共 5 位</td>\r\n<td style=\"text-align: left;\">3.1416</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>longG</code></td>\r\n<td style=\"text-align: left;\">长固定小数格式或科学记数法（取更紧凑的一个），对于 double 值，总共 15 位；对于 single 值，总共 7 位</td>\r\n<td style=\"text-align: left;\">3.141592654</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>shortEng</code></td>\r\n<td style=\"text-align: left;\">短工程记数法，小数点后包含 4 位数，3 的倍数</td>\r\n<td style=\"text-align: left;\">3.14E+00</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>longEng</code></td>\r\n<td style=\"text-align: left;\">长工程记数法，包含 15 位有效位数，指数为 3 的倍数</td>\r\n<td style=\"text-align: left;\">3.14E+00</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>+</code></td>\r\n<td style=\"text-align: left;\">正/负格式，对正、负和零元素分别显示 +、- 和空白字符</td>\r\n<td style=\"text-align: left;\">+</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>bank</code></td>\r\n<td style=\"text-align: left;\">货币格式，小数点后包含 2 位数</td>\r\n<td style=\"text-align: left;\">3.14</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>hex</code></td>\r\n<td style=\"text-align: left;\">二进制双精度数字的十六进制表示形式</td>\r\n<td style=\"text-align: left;\">400921fb54442d18</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>rat</code></td>\r\n<td style=\"text-align: left;\">小整数的比率</td>\r\n<td style=\"text-align: left;\">355/113</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>compact</code></td>\r\n<td style=\"text-align: left;\">隐藏过多的空白行以便在一个屏幕上显示更多输出</td>\r\n<td style=\"text-align: left;\">theta = pi/2 <br> theta =<br>     1.5708</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>loose</code></td>\r\n<td style=\"text-align: left;\">添加空白行以使输出更易于阅读</td>\r\n<td style=\"text-align: left;\">theta = pi/2 <br><br> theta = <br><br>     1.5708</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h2 id=\"数值型数据\">数值型数据</h2>\r\n<p>关于整型数据相关的操作函数（操作数可以是浮点数，也就是默认的数值类型）</p>\r\n<table>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: left;\">函数</th>\r\n<th style=\"text-align: left;\">说明</th>\r\n<th style=\"text-align: left;\">函数</th>\r\n<th style=\"text-align: left;\">说明</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>ceil</code></td>\r\n<td style=\"text-align: left;\">向正无穷大方向取整</td>\r\n<td style=\"text-align: left;\"><code>fix</code></td>\r\n<td style=\"text-align: left;\">向 0 取整</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>floor</code></td>\r\n<td style=\"text-align: left;\">向负无穷大方向取整</td>\r\n<td style=\"text-align: left;\"><code>round</code></td>\r\n<td style=\"text-align: left;\">四舍五入取整</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>isinteger</code></td>\r\n<td style=\"text-align: left;\">判断是否为整数</td>\r\n<td style=\"text-align: left;\"><code>mod</code> / <code>rem</code></td>\r\n<td style=\"text-align: left;\">求模 / 余数</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p>关于虚数的一些操作函数</p>\r\n<table>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: left;\">函数</th>\r\n<th style=\"text-align: left;\">说明</th>\r\n<th style=\"text-align: left;\">函数</th>\r\n<th style=\"text-align: left;\">说明</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>isreal</code></td>\r\n<td style=\"text-align: left;\">检查是否为实数</td>\r\n<td style=\"text-align: left;\"><code>abs</code></td>\r\n<td style=\"text-align: left;\">求复数幅值</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>real</code></td>\r\n<td style=\"text-align: left;\">返回复数实部</td>\r\n<td style=\"text-align: left;\"><code>angle</code></td>\r\n<td style=\"text-align: left;\">求复数相位</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>imag</code></td>\r\n<td style=\"text-align: left;\">返回复数虚部</td>\r\n<td style=\"text-align: left;\"><code>conj</code></td>\r\n<td style=\"text-align: left;\">返回复数的共轭复数</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h2 id=\"字符向量及字符串\">字符向量及字符串</h2>\r\n<p>类似于 C 语言里的「字符数组」， Matlab 中的字符向量也是以字符数组形式存在的。如 <code>size('abc\\nabc')</code> 返回 8。字符向量可由 <code>[...]</code> 以及 <code>char</code> 来创建。常见的字符向量操作函数如下表：</p>\r\n<table>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: left;\">函数</th>\r\n<th style=\"text-align: left;\">说明</th>\r\n<th style=\"text-align: left;\">函数</th>\r\n<th style=\"text-align: left;\">说明</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>ischar</code></td>\r\n<td style=\"text-align: left;\">检查是否为字符数组</td>\r\n<td style=\"text-align: left;\"><code>isletter</code></td>\r\n<td style=\"text-align: left;\">检查数组元素是否为字母</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>isspace</code></td>\r\n<td style=\"text-align: left;\">检查数组元素是否为空格</td>\r\n<td style=\"text-align: left;\"><code>isstrprop</code></td>\r\n<td style=\"text-align: left;\">判断字符串是否属于某种特定类型</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>strcat</code></td>\r\n<td style=\"text-align: left;\">横向连接字符数组</td>\r\n<td style=\"text-align: left;\"><code>strvcat</code></td>\r\n<td style=\"text-align: left;\">纵向连接字符数组，建议用 <code>char</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>blanks</code></td>\r\n<td style=\"text-align: left;\">创建空字符串</td>\r\n<td style=\"text-align: left;\"><code>strjust</code></td>\r\n<td style=\"text-align: left;\">调整字符串的对齐方式</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>strtrim</code></td>\r\n<td style=\"text-align: left;\">去掉字符串首尾的空格</td>\r\n<td style=\"text-align: left;\"><code>deblank</code></td>\r\n<td style=\"text-align: left;\">去掉字符串尾部的空格</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>strfind</code></td>\r\n<td style=\"text-align: left;\">在长字符串中搜索短字符串</td>\r\n<td style=\"text-align: left;\"><code>strtok</code></td>\r\n<td style=\"text-align: left;\">找出字符串中第一个分隔符前面的部分</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>strrep</code></td>\r\n<td style=\"text-align: left;\">字符串查找与替换</td>\r\n<td style=\"text-align: left;\"><code>strmatch</code></td>\r\n<td style=\"text-align: left;\">查找匹配的字符串</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>lower</code></td>\r\n<td style=\"text-align: left;\">将字符串中所包含的字母转换为小写</td>\r\n<td style=\"text-align: left;\"><code>upper</code></td>\r\n<td style=\"text-align: left;\">将字符串中所包含的字母转换为大写</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>strcmp</code> <br> <code>strcmpi</code></td>\r\n<td style=\"text-align: left;\">字符串比较，后者忽略大小写</td>\r\n<td style=\"text-align: left;\"><code>strncmp</code> <br> <code>strncmpi</code></td>\r\n<td style=\"text-align: left;\">比较字符串前 n 个字符，后者忽略大小写</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>strjoin</code></td>\r\n<td style=\"text-align: left;\">将字符串元胞连接成一个字符串</td>\r\n<td style=\"text-align: left;\"><code>strsplit</code></td>\r\n<td style=\"text-align: left;\">将字符串分割成字符串元胞数组</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>sprintf</code></td>\r\n<td style=\"text-align: left;\">格式化输出数据至字符串</td>\r\n<td style=\"text-align: left;\"><code>sscanf</code></td>\r\n<td style=\"text-align: left;\">从字符串中读取格式化数据</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>regexp</code> <br> <code>regexpi</code></td>\r\n<td style=\"text-align: left;\">匹配正则表达式，后者忽略大小写</td>\r\n<td style=\"text-align: left;\"><code>regexprep</code></td>\r\n<td style=\"text-align: left;\">使用正则表达式替换文本</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>regexptranslate</code></td>\r\n<td style=\"text-align: left;\">将文本转换为正则表达式</td>\r\n<td style=\"text-align: left;\"></td>\r\n<td style=\"text-align: left;\"></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p>令人吃驚的是，<strong>R2017a</strong> 以前的版本都不可用「双引号」括住字符以表示字符串。摘自 <a href=\"https://ww2.mathworks.cn/help/matlab/ref/string.html\" target=\"_blank\" rel=\"noopener\">MathWorks 文档 - 字符串数组</a>：</p>\r\n<blockquote>\r\n<p>从 R2016b 开始，您可以使用字符串数组而不是字符数组来表示文本。字符串数组的每个元素存储一个字符序列。序列可以具有不同长度，无需填充，例如 “yes” 和 “no”。只有一个元素的字符串数组也称为字符串标量。<br>\r\n您可以通过用双引号括起一段文本来创建字符串。从 R2017a 开始引入双引号。</p>\r\n</blockquote>\r\n<p>针对字符数组 / 向量和字符串，有必要做一系列探究。</p>\r\n<p>最基本的 <code>char(A)</code> 或 <code>char(A1, ... , An)</code> 将数组 A 转为字符数组，相当于 Perl / Python 中的 <code>chr</code>，当然这里是向量版：</p>\r\n<!--�32-->\r\n<p>字符向量可由 <code>disp</code> 直接输出：</p>\r\n<!--�33-->\r\n<p>当然上面这个例子会跳出将来会弃用字符向量的警告，这里仅说明 <code>char</code> 的功效，无视即可。更多关于 <code>char</code> 的说明：</p>\r\n<ul>\r\n<li>如果 A 是数值数组，则 char 将数值转换为字符。有效数值范围从 0 到 65535，并且对应于 Unicode® 代码单元。值 0 到 127 还对应于 7 位 ASCII 字符。char 函数：\r\n<ul>\r\n<li>将非整数值向零舍入。</li>\r\n<li>将小于 0 的值视为 0。</li>\r\n<li>将大于 65535 的值视为 65535。</li>\r\n</ul></li>\r\n<li>如果 A 是字符数组，则 char 返回未改变的 A。</li>\r\n<li>如果 A 是字符数组元胞数组，则 char 将该元胞数组转换为字符数组。元胞数组中每个字符数组的每一行将变成 C 中的一行，并根据需要自动用空格填充。</li>\r\n<li>如果 A 是分类数组，则 char 按列顺序将 A 的每个元素转换为字符数组的一行。</li>\r\n<li>如果 A 是字符串数组，则 char 会将字符串数组转换为字符数组。char 会将 A 中的每个字符串元素转换为字符向量，然后将这些字符向量串联成字符数组，并根据需要自动用空格填充。</li>\r\n</ul>\r\n<p>除此之外，<code>char</code> 还可以格式化时间：</p>\r\n<!--�34-->\r\n<p>而 <code>string</code> 函数显得更为「高阶」一些，下面的例子可以明显看出区别：</p>\r\n<!--�35-->\r\n<p><code>string</code> 将数据看成一个整体进行操作（利用 <code>size</code> 可以看出），而不像 <code>char</code> 一样需要对齐数据以纳入矩阵。</p>\r\n<p>另外，对于 <code>strsplit</code> 和 <code>split</code>，大体可认为互为转置的关系：</p>\r\n<!--�36-->\r\n<h2 id=\"元胞数组结构体以及表数组\">元胞数组、结构体以及表数组</h2>\r\n<p>对于元胞数组，注意索引 <code>C(m, n)</code> 返回 C 在 <code>(m, n)</code> 位置上的元胞，而花括号 <code>C{m, n}</code> 返回数据。</p>\r\n<p>对于结构体的创建，一般有两种方法：</p>\r\n<ul>\r\n<li>使用 <code>.</code> 创建： <figure class=\"highlight matlab\"><figcaption><span>sync.sh</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">patient1.name = <span class=\"string\">'John Doe'</span>;</span><br><span class=\"line\">patient1.billing = <span class=\"number\">127</span>;</span><br><span class=\"line\">patient1.test = <span class=\"built_in\">magic</span>(<span class=\"number\">3</span>);</span><br></pre></td></tr></table></figure> 当然多维数组也是类似：<code>patient2(1, 1).name = 'John Doe; ...</code></li>\r\n<li>使用 <code>struct</code> 函数创建： <figure class=\"highlight matlab\"><figcaption><span>sync.sh</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">patient1 = struct(<span class=\"string\">'name'</span>, <span class=\"string\">'John Doe'</span>, <span class=\"string\">'billing'</span>, <span class=\"number\">127</span>, <span class=\"string\">'test'</span>, <span class=\"built_in\">magic</span>(<span class=\"number\">3</span>));</span><br></pre></td></tr></table></figure></li>\r\n</ul>\r\n<p>对于 Matlab R2013b 开始引入的表数组类型，一般有两种创建方式：</p>\r\n<!--�37-->\r\n<p>当然了，笔者不偏好后面这种方法，而是尽量从其他格式转换过来。</p>\r\n<p>表数组索引方式比较丰富：</p>\r\n<table>\r\n<tr>\r\n<th>\r\n索引类型\r\n</th>\r\n<th>\r\n语法格式\r\n</th>\r\n<th>\r\n结果类型\r\n</th>\r\n<th>\r\n备注\r\n</th>\r\n</tr>\r\n<tr>\r\n<td>\r\n小括号\r\n</td>\r\n<td>\r\n<code>T(rows, vars)</code>\r\n</td>\r\n<td>\r\n表格型数据类型\r\n</td>\r\n<td rowspan=\"2\">\r\n<code>rows / vars</code> 可以是数值向量、逻辑向量以及行/列名组成的元胞数组\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n大括号\r\n</td>\r\n<td>\r\n<code>T{rows, vars}</code>\r\n</td>\r\n<td>\r\n提取的数据\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n点号索引\r\n</td>\r\n<td>\r\n<code>T.var</code><br><code>T.(varindex)</code>\r\n</td>\r\n<td>\r\n提取的数据\r\n</td>\r\n<td>\r\n可以提取表格的一列，还可以进一步对其提取的数据进行索引，如 <code>T.var(index)</code> 或 <code>T.var{index}</code>\r\n</td>\r\n</tr>\r\n</table>\r\n<p>下面罗列元胞数组、结构体以及表数组的常用操作：</p>\r\n<table>\r\n<colgroup>\r\n<col style=\"width: 25%\">\r\n<col style=\"width: 25%\">\r\n<col style=\"width: 25%\">\r\n<col style=\"width: 25%\">\r\n</colgroup>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: left;\">函数</th>\r\n<th style=\"text-align: left;\">说明</th>\r\n<th style=\"text-align: left;\">函数</th>\r\n<th style=\"text-align: left;\">说明</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>iscell</code></td>\r\n<td style=\"text-align: left;\">判断数组是否为元胞数组</td>\r\n<td style=\"text-align: left;\"><code>iscellstr</code></td>\r\n<td style=\"text-align: left;\">判断数组是否为字符串元胞数组</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>cellstr</code></td>\r\n<td style=\"text-align: left;\">创建字符串元胞数组</td>\r\n<td style=\"text-align: left;\"><code>cellfun</code></td>\r\n<td style=\"text-align: left;\">将函数应用于元胞数组的每一个元素</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>celldisp</code></td>\r\n<td style=\"text-align: left;\">显示元胞的内容</td>\r\n<td style=\"text-align: left;\"><code>cellplot</code></td>\r\n<td style=\"text-align: left;\">显示元胞的图形描述</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>isstruct</code></td>\r\n<td style=\"text-align: left;\">判断是否为结构数组</td>\r\n<td style=\"text-align: left;\"><code>isfield</code></td>\r\n<td style=\"text-align: left;\">判断某字段是否为结构数组中的字段</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>getfield</code></td>\r\n<td style=\"text-align: left;\">获取结构数组中指定字段的值</td>\r\n<td style=\"text-align: left;\"><code>setfield</code></td>\r\n<td style=\"text-align: left;\">设置结构数组中指定字段的值</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>rmfield</code></td>\r\n<td style=\"text-align: left;\">移除结构数据中的指定字段</td>\r\n<td style=\"text-align: left;\"><code>orderfields</code></td>\r\n<td style=\"text-align: left;\">对结构数组中的字段按指定顺序排序</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>fieldnames</code></td>\r\n<td style=\"text-align: left;\">获得结构数组的字段名或对象的属性值</td>\r\n<td style=\"text-align: left;\"><code>strcfun</code></td>\r\n<td style=\"text-align: left;\">将函数应用于结构数组的每一个字段</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>istable</code></td>\r\n<td style=\"text-align: left;\">判断输入是否为表格型类型</td>\r\n<td style=\"text-align: left;\"><code>summary</code></td>\r\n<td style=\"text-align: left;\">打印表格型数据的综述</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>readtable</code></td>\r\n<td style=\"text-align: left;\">从文件中创建表格型数据</td>\r\n<td style=\"text-align: left;\"><code>writetable</code></td>\r\n<td style=\"text-align: left;\">将表格型数据写入文件中</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>height</code></td>\r\n<td style=\"text-align: left;\">表格型数据的行数</td>\r\n<td style=\"text-align: left;\"><code>width</code></td>\r\n<td style=\"text-align: left;\">表格型数据的列数</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>join</code></td>\r\n<td style=\"text-align: left;\">使用关键变量合并两个表格型数据</td>\r\n<td style=\"text-align: left;\"><code>innerjoin</code></td>\r\n<td style=\"text-align: left;\">以交集的形式合并两个表格型数据</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>outerjoin</code></td>\r\n<td style=\"text-align: left;\">以并集的形式合并两个表格型数据</td>\r\n<td style=\"text-align: left;\"><code>ismissing</code></td>\r\n<td style=\"text-align: left;\">查找表格型数据中的非正常量，如 <code>NaN</code>, <code>NaT</code>, <code>&lt;undefined&gt;</code>, 空字符向量以及空格向量</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>varfun</code></td>\r\n<td style=\"text-align: left;\">将函数应用于表格型数据的每一个变量中</td>\r\n<td style=\"text-align: left;\"><code>rowfun</code></td>\r\n<td style=\"text-align: left;\">将函数应用于表格型数据的每一行</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p>Matlab 提供丰富的类型转换函数，眼花缭乱，摘录如下：</p>\r\n<table>\r\n<tr>\r\n<th>\r\n转换形式\r\n</th>\r\n<th>\r\n转换函数\r\n</th>\r\n<th>\r\n说明<br>\r\n</th>\r\n</tr>\r\n<tr>\r\n<td rowspan=\"3\">\r\n数值 ➠ 字符数组\r\n</td>\r\n<td>\r\n<code>num2str</code>\r\n</td>\r\n<td>\r\n数值转换为字符数组\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n<code>mat2str</code>\r\n</td>\r\n<td>\r\n矩阵转换为字符数组\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n<code>int2str</code>\r\n</td>\r\n<td>\r\n整数转换为字符数组\r\n</td>\r\n</tr>\r\n<tr>\r\n<td rowspan=\"2\">\r\n字符数组 ➠ 数值\r\n</td>\r\n<td>\r\n<code>str2num</code>\r\n</td>\r\n<td>\r\n将字符数组转为数值，使用 <code>eval</code> 函数进行转换\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n<code>str2double</code>\r\n</td>\r\n<td>\r\n将字符数组或字符串元胞数组转换为数值\r\n</td>\r\n</tr>\r\n<tr>\r\n<td rowspan=\"2\">\r\n数值 ➠ 元胞数组\r\n</td>\r\n<td>\r\n<code>num2cell</code>\r\n</td>\r\n<td>\r\n将数值转换为元胞数组\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n<code>mat2cell</code>\r\n</td>\r\n<td>\r\n将矩阵转换为元胞数组\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n元胞数组 ➠ 数值\r\n</td>\r\n<td>\r\n<code>cell2mat</code>\r\n</td>\r\n<td>\r\n将元胞数组转换为矩阵\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n字符串/数组 ➠ 元胞数组\r\n</td>\r\n<td>\r\n<code>cellstr</code>\r\n</td>\r\n<td>\r\n将字符串转换为字符串元胞数组\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n元胞数组 ➠ 字符串\r\n</td>\r\n<td>\r\n<code>char</code>\r\n</td>\r\n<td>\r\n将元胞数组转换为字符串，替换以前版本的 <code>str2mat</code> 函数\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n字符串 ➠ 函数句柄\r\n</td>\r\n<td>\r\n<code>str2func</code>\r\n</td>\r\n<td>\r\n由函数名或字符串表达式构造函数句柄\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n函数句柄 ➠ 字符串\r\n</td>\r\n<td>\r\n<code>func2str</code>\r\n</td>\r\n<td>\r\n由函数句柄构造函数名或字符串表达式，也可用 <code>char</code> 函数\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n元胞数组 ➠ 结构数组\r\n</td>\r\n<td>\r\n<code>cell2struct</code>\r\n</td>\r\n<td>\r\n将元胞数组转换为结构数组\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n结构数组 ➠ 元胞数组\r\n</td>\r\n<td>\r\n<code>struct2cell</code>\r\n</td>\r\n<td>\r\n将结构数组转换为元胞数组\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n数组 ➠ 表格\r\n</td>\r\n<td>\r\n<code>array2table</code>\r\n</td>\r\n<td>\r\n将同类二维数组转换为表格\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n表格 ➠ 数组\r\n</td>\r\n<td>\r\n<code>table2array</code>\r\n</td>\r\n<td>\r\n将表格转换为同类数组\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n元胞数组 ➠ 表格\r\n</td>\r\n<td>\r\n<code>cell2table</code>\r\n</td>\r\n<td>\r\n将元胞数组转换为表格\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n表格 ➠ 元胞数组\r\n</td>\r\n<td>\r\n<code>table2cell</code>\r\n</td>\r\n<td>\r\n将表格转换为元胞数组\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n结构数组 ➠ 表格\r\n</td>\r\n<td>\r\n<code>struct2table</code>\r\n</td>\r\n<td>\r\n将结构数组转换为表格\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n表格 ➠ 结构数组\r\n</td>\r\n<td>\r\n<code>table2struct</code>\r\n</td>\r\n<td>\r\n将表格转换为结构数组\r\n</td>\r\n</tr>\r\n</table>\r\n<hr>\r\n<p>关于基本的算术运算符，有几处备忘：</p>\r\n<ul>\r\n<li><code>/</code> 表示矩阵右除，<span class=\"math inline\">\\(C=A/B\\)</span> 表示 <span class=\"math inline\">\\(C\\)</span> 是方程 <span class=\"math inline\">\\(XB=A\\)</span> 的解 <span class=\"math inline\">\\(C=AB^{-1}\\)</span></li>\r\n<li><code>\\</code> 表示矩阵左除，<span class=\"math inline\">\\(C=A\\backslash B\\)</span> 表示 <span class=\"math inline\">\\(C\\)</span> 是方程 <span class=\"math inline\">\\(AX=B\\)</span> 的解 <span class=\"math inline\">\\(C=A^{-1}B\\)</span></li>\r\n<li>关于转置，<code>'</code> 或者函数 <code>ctranspose</code> 表 Hermit 转置或共轭转置，<code>.'</code> 或 <code>transpose</code> 为非共轭转置</li>\r\n</ul>\r\n<p><br></p>\r\n<p>Matlab 数组元素的索引主要有 <span class=\"math inline\">\\(3\\)</span> 种方式，即全下标方式、单下标方式和逻辑 <span class=\"math inline\">\\(1\\)</span> 方式。在单下标方式中，存在这样的换算：</p>\r\n<ul>\r\n<li>对于 <span class=\"math inline\">\\(m\\times n\\)</span> 的矩阵 <span class=\"math inline\">\\(A\\)</span>，元素 <span class=\"math inline\">\\(A(i, j)\\)</span> 对应的单下标为 <span class=\"math inline\">\\(s = m(j-1) + i\\)</span></li>\r\n<li>对于 <span class=\"math inline\">\\(m \\times n \\times t\\)</span> 的数组 <span class=\"math inline\">\\(B\\)</span>，元素 <span class=\"math inline\">\\(B(i, j, k)\\)</span> 对应的单下标为 <span class=\"math inline\">\\(s=mn(k-1) + m(j-1) + i\\)</span></li>\r\n<li>对于维度为 <span class=\"math inline\">\\(n_1 \\times n_2 \\times \\cdots \\times n_k\\)</span> 的多维数组 <span class=\"math inline\">\\(C\\)</span>，元素 <span class=\"math inline\">\\(C(i_1, i_2, \\cdots, i_k)\\)</span> 对应的单下标为 <span class=\"math inline\">\\(s = \\sum\\limits_{i=1}^{k-1} (i_{k+1} - 1)\\prod\\limits_{j=1}^i n_j + i_1\\)</span></li>\r\n</ul>\r\n<p>Matlab 自带函数 <code>sub2ind</code> 可对上述第三条结论进行验证：</p>\r\n<!--�38-->"},{"title":"Matlab 程序设计之作图","date":"2018-07-06T12:42:34.000Z","mathjax":true,"_content":"\nMatlab 画图质量随着版本号迭代有着显著提升，而且入门较简单。\n\n<!-- more -->\n\n比如这个「奥运五环」：\n\n```matlab\na = 2;\nr = 1.2;\nhold on;\ntheta = linspace(0, 2 * pi).';\nX = [-a, 0, a, a / 2, -a / 2];\nY = [0, 0, 0, -sqrt(2) / 2 * a, -sqrt(2) / 2 * a];\nplot([X, X(1)], [Y, Y(1)], '.--', 'markersize', 20);\ncircles = plot((X + Y * 1i) + r * exp(theta * 1i), 'linewidth', 5);\n% circles = plot(X+r*cos(theta), Y+r*sin(theta), 'linewidth', 5);\nset(circles, {'color'}, num2cell('bkrgy')');\naxis off equal;\nhold off;\nsaveas(gcf, 'olympic-rings.svg');\n```\n\n<img src=\"/img/olympic-rings.svg\" width=\"45%\">\n\n其中利用极坐标画圆有点意思，由于 `plot` 函数能直接对复数的实数 - 虚数对进行绘图，所以通过\n$$\n    x+r\\cos\\theta + \\mathrm{i}\\, (y+r\\sin\\theta)\n    = r e^{\\mathrm i\\, \\theta} + (x + \\mathrm i\\, y)\n$$\n也能绘制出圆形。另外批量对线条改变颜色的代码参考了 [Explicitly specifying line colors when plotting a matrix](https://ww2.mathworks.cn/matlabcentral/answers/19815-explicitly-specifying-line-colors-when-plotting-a-matrix)。\n\n------------------------------------\n\n交互图形的制作也十分方便。对于定积分 $\\displaystyle I = \\int_0^{\\frac 12} \\frac{1}{1+x^3}\\, \\mathrm dx$ 考察其被积函数以及其 $5$ 阶 Taylor 展开函数的图形。\n\n```matlab\nsyms x;\nf = 1 / (1 + x ^ 3);\nI1 = int(f, 0, 1/2);\nft = taylor(f, 'order', 6);\nI2 = int(ft, 0, 1/2);\nfpl = fplot([f, ft], [0, 1/2]);\nset(gca, 'fontname', 'Euclid', 'fontweight', 'bold');\nset(fpl, 'linewidth', 1.2, {'linestyle'}, {'-'; '--'}, 'color', 'k');\nlegend({['$$f=', latex(f), '$$'], ['$$f_{\\rm Taylor}=', latex(ft), '$$']}, ...\n       'interpreter', 'latex', 'fontsize', 11);\ngtext({['$$\\int_0^{\\frac 12}', latex(f), '\\, \\mathrm dx=', latex(I1), ...\n        '\\approx', latex(vpa(I1, 4)), '$$'], ...\n       ['$$\\int_0^{\\frac 12}\\left(', latex(ft), '\\right)\\, \\mathrm dx=', ...\n        latex(I2), '\\approx', latex(vpa(I2, 4)), '$$']}, ...\n      'interpreter', 'latex', 'fontsize', 11);\nbox off;\n```\n\n<img src=\"/img/integrate(1+x3).svg\" width=\"45%\">\n\n","source":"_posts/essentials-of-matlab-plotting.md","raw":"---\ntitle: Matlab 程序设计之作图\ndate: 2018-07-06 20:42:34\ntags:\n    - Matlab\ncategories: Memos\nmathjax: true\n---\n\nMatlab 画图质量随着版本号迭代有着显著提升，而且入门较简单。\n\n<!-- more -->\n\n比如这个「奥运五环」：\n\n```matlab\na = 2;\nr = 1.2;\nhold on;\ntheta = linspace(0, 2 * pi).';\nX = [-a, 0, a, a / 2, -a / 2];\nY = [0, 0, 0, -sqrt(2) / 2 * a, -sqrt(2) / 2 * a];\nplot([X, X(1)], [Y, Y(1)], '.--', 'markersize', 20);\ncircles = plot((X + Y * 1i) + r * exp(theta * 1i), 'linewidth', 5);\n% circles = plot(X+r*cos(theta), Y+r*sin(theta), 'linewidth', 5);\nset(circles, {'color'}, num2cell('bkrgy')');\naxis off equal;\nhold off;\nsaveas(gcf, 'olympic-rings.svg');\n```\n\n<img src=\"/img/olympic-rings.svg\" width=\"45%\">\n\n其中利用极坐标画圆有点意思，由于 `plot` 函数能直接对复数的实数 - 虚数对进行绘图，所以通过\n$$\n    x+r\\cos\\theta + \\mathrm{i}\\, (y+r\\sin\\theta)\n    = r e^{\\mathrm i\\, \\theta} + (x + \\mathrm i\\, y)\n$$\n也能绘制出圆形。另外批量对线条改变颜色的代码参考了 [Explicitly specifying line colors when plotting a matrix](https://ww2.mathworks.cn/matlabcentral/answers/19815-explicitly-specifying-line-colors-when-plotting-a-matrix)。\n\n------------------------------------\n\n交互图形的制作也十分方便。对于定积分 $\\displaystyle I = \\int_0^{\\frac 12} \\frac{1}{1+x^3}\\, \\mathrm dx$ 考察其被积函数以及其 $5$ 阶 Taylor 展开函数的图形。\n\n```matlab\nsyms x;\nf = 1 / (1 + x ^ 3);\nI1 = int(f, 0, 1/2);\nft = taylor(f, 'order', 6);\nI2 = int(ft, 0, 1/2);\nfpl = fplot([f, ft], [0, 1/2]);\nset(gca, 'fontname', 'Euclid', 'fontweight', 'bold');\nset(fpl, 'linewidth', 1.2, {'linestyle'}, {'-'; '--'}, 'color', 'k');\nlegend({['$$f=', latex(f), '$$'], ['$$f_{\\rm Taylor}=', latex(ft), '$$']}, ...\n       'interpreter', 'latex', 'fontsize', 11);\ngtext({['$$\\int_0^{\\frac 12}', latex(f), '\\, \\mathrm dx=', latex(I1), ...\n        '\\approx', latex(vpa(I1, 4)), '$$'], ...\n       ['$$\\int_0^{\\frac 12}\\left(', latex(ft), '\\right)\\, \\mathrm dx=', ...\n        latex(I2), '\\approx', latex(vpa(I2, 4)), '$$']}, ...\n      'interpreter', 'latex', 'fontsize', 11);\nbox off;\n```\n\n<img src=\"/img/integrate(1+x3).svg\" width=\"45%\">\n\n","slug":"essentials-of-matlab-plotting","published":1,"updated":"2023-03-09T16:09:38.224Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u3367000tp4x0vnzk8zsr","content":"<p>Matlab 画图质量随着版本号迭代有着显著提升，而且入门较简单。</p>\r\n<a id=\"more\"></a>\r\n<p>比如这个「奥运五环」：</p>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"number\">2</span>;</span><br><span class=\"line\">r = <span class=\"number\">1.2</span>;</span><br><span class=\"line\">hold on;</span><br><span class=\"line\">theta = <span class=\"built_in\">linspace</span>(<span class=\"number\">0</span>, <span class=\"number\">2</span> * <span class=\"built_in\">pi</span>).<span class=\"string\">';</span></span><br><span class=\"line\"><span class=\"string\">X = [-a, 0, a, a / 2, -a / 2];</span></span><br><span class=\"line\"><span class=\"string\">Y = [0, 0, 0, -sqrt(2) / 2 * a, -sqrt(2) / 2 * a];</span></span><br><span class=\"line\"><span class=\"string\">plot([X, X(1)], [Y, Y(1)], '</span>.--<span class=\"string\">', '</span>markersize', <span class=\"number\">20</span>);</span><br><span class=\"line\">circles = plot((X + Y * <span class=\"number\">1</span><span class=\"built_in\">i</span>) + r * <span class=\"built_in\">exp</span>(theta * <span class=\"number\">1</span><span class=\"built_in\">i</span>), <span class=\"string\">'linewidth'</span>, <span class=\"number\">5</span>);</span><br><span class=\"line\"><span class=\"comment\">% circles = plot(X+r*cos(theta), Y+r*sin(theta), 'linewidth', 5);</span></span><br><span class=\"line\">set(circles, &#123;<span class=\"string\">'color'</span>&#125;, num2cell(<span class=\"string\">'bkrgy'</span>)');</span><br><span class=\"line\">axis off equal;</span><br><span class=\"line\">hold off;</span><br><span class=\"line\">saveas(gcf, <span class=\"string\">'olympic-rings.svg'</span>);</span><br></pre></td></tr></table></figure>\r\n<p><img src=\"/img/olympic-rings.svg\" width=\"45%\"></p>\r\n<p>其中利用极坐标画圆有点意思，由于 <code>plot</code> 函数能直接对复数的实数 - 虚数对进行绘图，所以通过 <span class=\"math display\">\\[\r\n    x+r\\cos\\theta + \\mathrm{i}\\, (y+r\\sin\\theta)\r\n    = r e^{\\mathrm i\\, \\theta} + (x + \\mathrm i\\, y)\r\n\\]</span> 也能绘制出圆形。另外批量对线条改变颜色的代码参考了 <a href=\"https://ww2.mathworks.cn/matlabcentral/answers/19815-explicitly-specifying-line-colors-when-plotting-a-matrix\" target=\"_blank\" rel=\"noopener\">Explicitly specifying line colors when plotting a matrix</a>。</p>\r\n<hr>\r\n<p>交互图形的制作也十分方便。对于定积分 <span class=\"math inline\">\\(\\displaystyle I = \\int_0^{\\frac 12} \\frac{1}{1+x^3}\\, \\mathrm dx\\)</span> 考察其被积函数以及其 <span class=\"math inline\">\\(5\\)</span> 阶 Taylor 展开函数的图形。</p>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">syms x;</span><br><span class=\"line\">f = <span class=\"number\">1</span> / (<span class=\"number\">1</span> + x ^ <span class=\"number\">3</span>);</span><br><span class=\"line\">I1 = int(f, <span class=\"number\">0</span>, <span class=\"number\">1</span>/<span class=\"number\">2</span>);</span><br><span class=\"line\">ft = taylor(f, <span class=\"string\">'order'</span>, <span class=\"number\">6</span>);</span><br><span class=\"line\">I2 = int(ft, <span class=\"number\">0</span>, <span class=\"number\">1</span>/<span class=\"number\">2</span>);</span><br><span class=\"line\">fpl = fplot([f, ft], [<span class=\"number\">0</span>, <span class=\"number\">1</span>/<span class=\"number\">2</span>]);</span><br><span class=\"line\">set(gca, <span class=\"string\">'fontname'</span>, <span class=\"string\">'Euclid'</span>, <span class=\"string\">'fontweight'</span>, <span class=\"string\">'bold'</span>);</span><br><span class=\"line\">set(fpl, <span class=\"string\">'linewidth'</span>, <span class=\"number\">1.2</span>, &#123;<span class=\"string\">'linestyle'</span>&#125;, &#123;<span class=\"string\">'-'</span>; <span class=\"string\">'--'</span>&#125;, <span class=\"string\">'color'</span>, <span class=\"string\">'k'</span>);</span><br><span class=\"line\">legend(&#123;[<span class=\"string\">'$$f='</span>, latex(f), <span class=\"string\">'$$'</span>], [<span class=\"string\">'$$f_&#123;\\rm Taylor&#125;='</span>, latex(ft), <span class=\"string\">'$$'</span>]&#125;, ...</span><br><span class=\"line\">       <span class=\"string\">'interpreter'</span>, <span class=\"string\">'latex'</span>, <span class=\"string\">'fontsize'</span>, <span class=\"number\">11</span>);</span><br><span class=\"line\">gtext(&#123;[<span class=\"string\">'$$\\int_0^&#123;\\frac 12&#125;'</span>, latex(f), <span class=\"string\">'\\, \\mathrm dx='</span>, latex(I1), ...</span><br><span class=\"line\">        <span class=\"string\">'\\approx'</span>, latex(vpa(I1, <span class=\"number\">4</span>)), <span class=\"string\">'$$'</span>], ...</span><br><span class=\"line\">       [<span class=\"string\">'$$\\int_0^&#123;\\frac 12&#125;\\left('</span>, latex(ft), <span class=\"string\">'\\right)\\, \\mathrm dx='</span>, ...</span><br><span class=\"line\">        latex(I2), <span class=\"string\">'\\approx'</span>, latex(vpa(I2, <span class=\"number\">4</span>)), <span class=\"string\">'$$'</span>]&#125;, ...</span><br><span class=\"line\">      <span class=\"string\">'interpreter'</span>, <span class=\"string\">'latex'</span>, <span class=\"string\">'fontsize'</span>, <span class=\"number\">11</span>);</span><br><span class=\"line\">box off;</span><br></pre></td></tr></table></figure>\r\n<p><img src=\"/img/integrate(1+x3).svg\" width=\"45%\"></p>\r\n","site":{"data":{}},"excerpt":"<p>Matlab 画图质量随着版本号迭代有着显著提升，而且入门较简单。</p>","more":"<p>比如这个「奥运五环」：</p>\r\n<!--�39-->\r\n<p><img src=\"/img/olympic-rings.svg\" width=\"45%\"></p>\r\n<p>其中利用极坐标画圆有点意思，由于 <code>plot</code> 函数能直接对复数的实数 - 虚数对进行绘图，所以通过 <span class=\"math display\">\\[\r\n    x+r\\cos\\theta + \\mathrm{i}\\, (y+r\\sin\\theta)\r\n    = r e^{\\mathrm i\\, \\theta} + (x + \\mathrm i\\, y)\r\n\\]</span> 也能绘制出圆形。另外批量对线条改变颜色的代码参考了 <a href=\"https://ww2.mathworks.cn/matlabcentral/answers/19815-explicitly-specifying-line-colors-when-plotting-a-matrix\" target=\"_blank\" rel=\"noopener\">Explicitly specifying line colors when plotting a matrix</a>。</p>\r\n<hr>\r\n<p>交互图形的制作也十分方便。对于定积分 <span class=\"math inline\">\\(\\displaystyle I = \\int_0^{\\frac 12} \\frac{1}{1+x^3}\\, \\mathrm dx\\)</span> 考察其被积函数以及其 <span class=\"math inline\">\\(5\\)</span> 阶 Taylor 展开函数的图形。</p>\r\n<!--�40-->\r\n<p><img src=\"/img/integrate(1+x3).svg\" width=\"45%\"></p>"},{"title":"Matlab 程序设计之编程技巧","date":"2018-07-07T06:37:06.000Z","mathjax":true,"_content":"\n记录学习 Matlab 中的技巧。\n\n<!-- more -->\n\n### fprintf 技巧\n\nMatlab 中的运算均基于向量，甚至连输出函数 `fprintf` 也不例外。\n对于一个实际问题：\n\n{% note info %}\n$3$ 对情侣参加婚礼，$3$ 个新郎为 $A$、$B$、$C$，$3$ 个新娘为 $X$、$Y$、$Z$。有人不知道谁和谁结婚，于是询问 $6$ 位新人中的 $3$ 位，$3$ 人回答道：$A$ 和 $X$ 结婚；$X$ 和 $C$ 结婚；$C$ 和 $Z$ 结婚。但 $3$ 人说的全是假话。\n{% endnote %}\n\n为判明事实真相，穷举即可：\n\n```matlab\nfor A='X':'Z' for B='X':'Z' for C='X':'Z'\n    if A ~= 'X' && C ~= 'X' && C ~= 'Z' && A ~= B && B ~= C && C ~= A\n        fprintf('新郎 %c 将和新娘 %c 结婚\\n', ['A', 'B', 'C'; A, B, C]);\n    end\nend; end; end\n\n% 新郎 A 将和新娘 Z 结婚\n% 新郎 B 将和新娘 X 结婚\n% 新郎 C 将和新娘 Y 结婚\n```\n\n注意到一条语句便可产生 $3$ 条输出，说明应以向量的角度思考看待问题。\n\n### 灵活的输入输出\n\n验证算术平均数 $A_n=\\frac 1n \\sum a$、几何平均数 $G_n=\\prod a^{1/n}$、调和平均数 $H_n=n/(\\sum 1/a)$、平方平均数 $Q_n=\\sqrt{1/n \\sum a^2}$ 的大小关系为 $H_n \\leqslant G_n \\leqslant A_n \\leqslant Q_n$。代码如下：\n\n```matlab\n[A, G, H, Q] = averages(1, 2, 3, 4, 5, 6, 7, 8);\nT = averages([1;2;3], [2;4;5], [6;4;7], [9;7;4], [8;3;5]);\ndisp([A G H Q]);\ndisp(T);\n\nfunction varargout = averages(varargin)\n    n = nargin;\n    [An, Gn, Hn, Qn] = deal(0, 1, 0, 0);\n    for k=1:n\n        ak = varargin{k};\n        if any(ak) <= 0, error('输入参数必须为正数.'), end;\n        An = An + ak;\n        Gn = Gn .* ak;\n        Hn = Hn + 1 ./ ak;\n        Qn = Qn + ak .^ 2;\n    end\n    A = An / n;\n    G = Gn .^ (1/n);\n    H = n ./ Hn;\n    Q = sqrt(Qn/n);\n\n    if nargout == 1\n        varargout{1} = table(...\n            A, G, H, Q, 'VariableNames', ...\n            {'Arithmetic', 'Geometric', 'Harmonic', 'Square'} ...\n        );\n    else\n        [varargout{1:4}] = deal(A, G, H, Q);\n    end\nend\n\n%    4.5000    3.7644    2.9435    5.0498\n\n%    Arithmetic    Geometric    Harmonic    Square\n%    __________    _________    ________    ______\n%    5.2           3.8664       2.6277      6.0992\n%      4           3.6768       3.3871      4.3359\n%    4.8           4.6179       4.4397        4.98\n```\n\n这段代码有很多地方可圈可点。首先通过 `varargin`、`varargout` 说明函数 `averages` 是「变长度」输入输出函数，也就是说如果调用该函数的时候可以针对不同的输入、输出表现出不同的结果，如代码中的判断语句，针对 `nargout` 实现了分别赋值给四个输出参数、输出表格的不同表现形式；在初始化参数时运用 `deal` 实现了「多重赋值」；在处理每个 `varargin(k)` 时将其视为数组，并进行必要的判断。\n","source":"_posts/essentials-of-matlab-skills.md","raw":"---\ntitle: Matlab 程序设计之编程技巧\ndate: 2018-07-07 14:37:06\ntags:\n    - Matlab\ncategories: Tips and Tricks\nmathjax: true\n---\n\n记录学习 Matlab 中的技巧。\n\n<!-- more -->\n\n### fprintf 技巧\n\nMatlab 中的运算均基于向量，甚至连输出函数 `fprintf` 也不例外。\n对于一个实际问题：\n\n{% note info %}\n$3$ 对情侣参加婚礼，$3$ 个新郎为 $A$、$B$、$C$，$3$ 个新娘为 $X$、$Y$、$Z$。有人不知道谁和谁结婚，于是询问 $6$ 位新人中的 $3$ 位，$3$ 人回答道：$A$ 和 $X$ 结婚；$X$ 和 $C$ 结婚；$C$ 和 $Z$ 结婚。但 $3$ 人说的全是假话。\n{% endnote %}\n\n为判明事实真相，穷举即可：\n\n```matlab\nfor A='X':'Z' for B='X':'Z' for C='X':'Z'\n    if A ~= 'X' && C ~= 'X' && C ~= 'Z' && A ~= B && B ~= C && C ~= A\n        fprintf('新郎 %c 将和新娘 %c 结婚\\n', ['A', 'B', 'C'; A, B, C]);\n    end\nend; end; end\n\n% 新郎 A 将和新娘 Z 结婚\n% 新郎 B 将和新娘 X 结婚\n% 新郎 C 将和新娘 Y 结婚\n```\n\n注意到一条语句便可产生 $3$ 条输出，说明应以向量的角度思考看待问题。\n\n### 灵活的输入输出\n\n验证算术平均数 $A_n=\\frac 1n \\sum a$、几何平均数 $G_n=\\prod a^{1/n}$、调和平均数 $H_n=n/(\\sum 1/a)$、平方平均数 $Q_n=\\sqrt{1/n \\sum a^2}$ 的大小关系为 $H_n \\leqslant G_n \\leqslant A_n \\leqslant Q_n$。代码如下：\n\n```matlab\n[A, G, H, Q] = averages(1, 2, 3, 4, 5, 6, 7, 8);\nT = averages([1;2;3], [2;4;5], [6;4;7], [9;7;4], [8;3;5]);\ndisp([A G H Q]);\ndisp(T);\n\nfunction varargout = averages(varargin)\n    n = nargin;\n    [An, Gn, Hn, Qn] = deal(0, 1, 0, 0);\n    for k=1:n\n        ak = varargin{k};\n        if any(ak) <= 0, error('输入参数必须为正数.'), end;\n        An = An + ak;\n        Gn = Gn .* ak;\n        Hn = Hn + 1 ./ ak;\n        Qn = Qn + ak .^ 2;\n    end\n    A = An / n;\n    G = Gn .^ (1/n);\n    H = n ./ Hn;\n    Q = sqrt(Qn/n);\n\n    if nargout == 1\n        varargout{1} = table(...\n            A, G, H, Q, 'VariableNames', ...\n            {'Arithmetic', 'Geometric', 'Harmonic', 'Square'} ...\n        );\n    else\n        [varargout{1:4}] = deal(A, G, H, Q);\n    end\nend\n\n%    4.5000    3.7644    2.9435    5.0498\n\n%    Arithmetic    Geometric    Harmonic    Square\n%    __________    _________    ________    ______\n%    5.2           3.8664       2.6277      6.0992\n%      4           3.6768       3.3871      4.3359\n%    4.8           4.6179       4.4397        4.98\n```\n\n这段代码有很多地方可圈可点。首先通过 `varargin`、`varargout` 说明函数 `averages` 是「变长度」输入输出函数，也就是说如果调用该函数的时候可以针对不同的输入、输出表现出不同的结果，如代码中的判断语句，针对 `nargout` 实现了分别赋值给四个输出参数、输出表格的不同表现形式；在初始化参数时运用 `deal` 实现了「多重赋值」；在处理每个 `varargin(k)` 时将其视为数组，并进行必要的判断。\n","slug":"essentials-of-matlab-skills","published":1,"updated":"2023-03-09T16:09:38.226Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u3368000vp4x0inxvdshl","content":"<p>记录学习 Matlab 中的技巧。</p>\r\n<a id=\"more\"></a>\r\n<h3 id=\"fprintf-技巧\">fprintf 技巧</h3>\r\n<p>Matlab 中的运算均基于向量，甚至连输出函数 <code>fprintf</code> 也不例外。 对于一个实际问题：</p>\r\n<div class=\"note info\">$3$ 对情侣参加婚礼，$3$ 个新郎为 $A$、$B$、$C$，$3$ 个新娘为 $X$、$Y$、$Z$。有人不知道谁和谁结婚，于是询问 $6$ 位新人中的 $3$ 位，$3$ 人回答道：$A$ 和 $X$ 结婚；$X$ 和 $C$ 结婚；$C$ 和 $Z$ 结婚。但 $3$ 人说的全是假话。</div>\r\n<p>为判明事实真相，穷举即可：</p>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> A=<span class=\"string\">'X'</span>:<span class=\"string\">'Z'</span> <span class=\"keyword\">for</span> B=<span class=\"string\">'X'</span>:<span class=\"string\">'Z'</span> <span class=\"keyword\">for</span> C=<span class=\"string\">'X'</span>:<span class=\"string\">'Z'</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> A ~= <span class=\"string\">'X'</span> &amp;&amp; C ~= <span class=\"string\">'X'</span> &amp;&amp; C ~= <span class=\"string\">'Z'</span> &amp;&amp; A ~= B &amp;&amp; B ~= C &amp;&amp; C ~= A</span><br><span class=\"line\">        fprintf(<span class=\"string\">'新郎 %c 将和新娘 %c 结婚\\n'</span>, [<span class=\"string\">'A'</span>, <span class=\"string\">'B'</span>, <span class=\"string\">'C'</span>; A, B, C]);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span>; <span class=\"keyword\">end</span>; <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">% 新郎 A 将和新娘 Z 结婚</span></span><br><span class=\"line\"><span class=\"comment\">% 新郎 B 将和新娘 X 结婚</span></span><br><span class=\"line\"><span class=\"comment\">% 新郎 C 将和新娘 Y 结婚</span></span><br></pre></td></tr></table></figure>\r\n<p>注意到一条语句便可产生 <span class=\"math inline\">\\(3\\)</span> 条输出，说明应以向量的角度思考看待问题。</p>\r\n<h3 id=\"灵活的输入输出\">灵活的输入输出</h3>\r\n<p>验证算术平均数 <span class=\"math inline\">\\(A_n=\\frac 1n \\sum a\\)</span>、几何平均数 <span class=\"math inline\">\\(G_n=\\prod a^{1/n}\\)</span>、调和平均数 <span class=\"math inline\">\\(H_n=n/(\\sum 1/a)\\)</span>、平方平均数 <span class=\"math inline\">\\(Q_n=\\sqrt{1/n \\sum a^2}\\)</span> 的大小关系为 <span class=\"math inline\">\\(H_n \\leqslant G_n \\leqslant A_n \\leqslant Q_n\\)</span>。代码如下：</p>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[A, G, H, Q] = averages(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>);</span><br><span class=\"line\">T = averages([<span class=\"number\">1</span>;<span class=\"number\">2</span>;<span class=\"number\">3</span>], [<span class=\"number\">2</span>;<span class=\"number\">4</span>;<span class=\"number\">5</span>], [<span class=\"number\">6</span>;<span class=\"number\">4</span>;<span class=\"number\">7</span>], [<span class=\"number\">9</span>;<span class=\"number\">7</span>;<span class=\"number\">4</span>], [<span class=\"number\">8</span>;<span class=\"number\">3</span>;<span class=\"number\">5</span>]);</span><br><span class=\"line\"><span class=\"built_in\">disp</span>([A G H Q]);</span><br><span class=\"line\"><span class=\"built_in\">disp</span>(T);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">varargout</span> = <span class=\"title\">averages</span><span class=\"params\">(varargin)</span></span></span><br><span class=\"line\">    n = nargin;</span><br><span class=\"line\">    [An, Gn, Hn, Qn] = deal(<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> k=<span class=\"number\">1</span>:n</span><br><span class=\"line\">        ak = varargin&#123;k&#125;;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> any(ak) &lt;= <span class=\"number\">0</span>, error(<span class=\"string\">'输入参数必须为正数.'</span>), <span class=\"keyword\">end</span>;</span><br><span class=\"line\">        An = An + ak;</span><br><span class=\"line\">        Gn = Gn .* ak;</span><br><span class=\"line\">        Hn = Hn + <span class=\"number\">1</span> ./ ak;</span><br><span class=\"line\">        Qn = Qn + ak .^ <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    A = An / n;</span><br><span class=\"line\">    G = Gn .^ (<span class=\"number\">1</span>/n);</span><br><span class=\"line\">    H = n ./ Hn;</span><br><span class=\"line\">    Q = <span class=\"built_in\">sqrt</span>(Qn/n);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> nargout == <span class=\"number\">1</span></span><br><span class=\"line\">        varargout&#123;<span class=\"number\">1</span>&#125; = table(...</span><br><span class=\"line\">            A, G, H, Q, <span class=\"string\">'VariableNames'</span>, ...</span><br><span class=\"line\">            &#123;<span class=\"string\">'Arithmetic'</span>, <span class=\"string\">'Geometric'</span>, <span class=\"string\">'Harmonic'</span>, <span class=\"string\">'Square'</span>&#125; ...</span><br><span class=\"line\">        );</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        [varargout&#123;<span class=\"number\">1</span>:<span class=\"number\">4</span>&#125;] = deal(A, G, H, Q);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%    4.5000    3.7644    2.9435    5.0498</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%    Arithmetic    Geometric    Harmonic    Square</span></span><br><span class=\"line\"><span class=\"comment\">%    __________    _________    ________    ______</span></span><br><span class=\"line\"><span class=\"comment\">%    5.2           3.8664       2.6277      6.0992</span></span><br><span class=\"line\"><span class=\"comment\">%      4           3.6768       3.3871      4.3359</span></span><br><span class=\"line\"><span class=\"comment\">%    4.8           4.6179       4.4397        4.98</span></span><br></pre></td></tr></table></figure>\r\n<p>这段代码有很多地方可圈可点。首先通过 <code>varargin</code>、<code>varargout</code> 说明函数 <code>averages</code> 是「变长度」输入输出函数，也就是说如果调用该函数的时候可以针对不同的输入、输出表现出不同的结果，如代码中的判断语句，针对 <code>nargout</code> 实现了分别赋值给四个输出参数、输出表格的不同表现形式；在初始化参数时运用 <code>deal</code> 实现了「多重赋值」；在处理每个 <code>varargin(k)</code> 时将其视为数组，并进行必要的判断。</p>\r\n","site":{"data":{}},"excerpt":"<p>记录学习 Matlab 中的技巧。</p>","more":"<h3 id=\"fprintf-技巧\">fprintf 技巧</h3>\r\n<p>Matlab 中的运算均基于向量，甚至连输出函数 <code>fprintf</code> 也不例外。 对于一个实际问题：</p>\r\n<div class=\"note info\">$3$ 对情侣参加婚礼，$3$ 个新郎为 $A$、$B$、$C$，$3$ 个新娘为 $X$、$Y$、$Z$。有人不知道谁和谁结婚，于是询问 $6$ 位新人中的 $3$ 位，$3$ 人回答道：$A$ 和 $X$ 结婚；$X$ 和 $C$ 结婚；$C$ 和 $Z$ 结婚。但 $3$ 人说的全是假话。</div>\r\n<p>为判明事实真相，穷举即可：</p>\r\n<!--�41-->\r\n<p>注意到一条语句便可产生 <span class=\"math inline\">\\(3\\)</span> 条输出，说明应以向量的角度思考看待问题。</p>\r\n<h3 id=\"灵活的输入输出\">灵活的输入输出</h3>\r\n<p>验证算术平均数 <span class=\"math inline\">\\(A_n=\\frac 1n \\sum a\\)</span>、几何平均数 <span class=\"math inline\">\\(G_n=\\prod a^{1/n}\\)</span>、调和平均数 <span class=\"math inline\">\\(H_n=n/(\\sum 1/a)\\)</span>、平方平均数 <span class=\"math inline\">\\(Q_n=\\sqrt{1/n \\sum a^2}\\)</span> 的大小关系为 <span class=\"math inline\">\\(H_n \\leqslant G_n \\leqslant A_n \\leqslant Q_n\\)</span>。代码如下：</p>\r\n<!--�42-->\r\n<p>这段代码有很多地方可圈可点。首先通过 <code>varargin</code>、<code>varargout</code> 说明函数 <code>averages</code> 是「变长度」输入输出函数，也就是说如果调用该函数的时候可以针对不同的输入、输出表现出不同的结果，如代码中的判断语句，针对 <code>nargout</code> 实现了分别赋值给四个输出参数、输出表格的不同表现形式；在初始化参数时运用 <code>deal</code> 实现了「多重赋值」；在处理每个 <code>varargin(k)</code> 时将其视为数组，并进行必要的判断。</p>"},{"title":"Matlab 数值计算之函数插值","date":"2018-07-08T15:19:15.000Z","mathjax":true,"_content":"\n\n微积分中对于连续或可导函数的研究虽有各路方法各显神通，但对于一个实际问题，若仅给出离散的数据点，通常首先要做的工作是根据这些离散点拟合出便于研究的连续函数。这类问题通常称作「数据拟合」，而其中的特殊情形便是函数插值。\n\n<!-- more -->\n\n多项式拟合插值中最「直接」的算法，就是对于 $n+1$ 个给定的数据点对 $(x_i, y_i), i=0,1,\\ldots,n$，假设 $n$ 次多项式 $p_n(x)=\\sum\\limits_{i=0}^n a_ix^i$ 过所有的数据点，即 $p_n(x_i) = y_i$，即：\n\n$$\n    \\underbrace{\n    \\begin{pmatrix}\n        1 & x_0^1 & x_0^2 & \\cdots & x_0^{n-1} & x_0^n \\\\\n        1 & x_1^1 & x_1^2 & \\cdots & x_1^{n-1} & x_1^n \\\\\n        1 & x_2^1 & x_2^2 & \\cdots & x_2^{n-1} & x_2^n \\\\\n        \\vdots & \\vdots & \\vdots & \\ddots & \\vdots & \\vdots \\\\\n        1 & x_{n-1}^1 & x_{n-1}^2 & \\cdots & x_{n-1}^{n-1} & x_{n-1}^n \\\\\n        1 & x_n^1 & x_n^2 & \\cdots & x_n^{n-1} & x_n^n\n    \\end{pmatrix}\n    }_{\\boldsymbol{V}}\n    \\underbrace{\n    \\begin{pmatrix}\n        a_0 \\vphantom{x_0^{n-1}} \\\\\n        a_1 \\vphantom{x_1^{n-1}} \\\\\n        a_2 \\vphantom{x_2^{n-1}} \\\\\n        \\vdots \\vphantom{\\ddots \\vdots} \\\\\n        a_{n-1} \\vphantom{x_{n-1}^{n-1}} \\\\\n        a_{n} \\vphantom{x_n^{n-1}}\n    \\end{pmatrix}\n    }_{\\boldsymbol{a}}\n    =\n    \\underbrace{\n    \\begin{pmatrix}\n        y_0 \\vphantom{x_0^{n-1}} \\\\\n        y_1 \\vphantom{x_1^{n-1}} \\\\\n        y_2 \\vphantom{x_2^{n-1}} \\\\\n        \\vdots \\vphantom{\\ddots \\vdots} \\\\\n        y_{n-1} \\vphantom{x_{n-1}^{n-1}} \\\\\n        y_{n} \\vphantom{x_n^{n-1}}\n    \\end{pmatrix}\n    }_{\\boldsymbol{y}}\n$$\n\n显然 $\\boldsymbol{V}$ 为 Vandermonde 矩阵。关于 Vandermonde 行列式的计算，这里列出两种计算方法。\n\n{% fold \"Vandermonde 行列式计算方法\" %}\n{% note %}\n$n$ 阶 Vandermonde 行列式\n$$\nV_n = \\begin{vmatrix}\n  1 & x_1 & x_1^2 & \\cdots & x_1^{n-2} & x_1^{n-1} \\\\\n  1 & x_2 & x_2^2 & \\cdots & x_2^{n-2} & x_2^{n-1} \\\\\n\\vdots & \\vdots & \\vdots & \\ddots & \\vdots & \\vdots \\\\\n  1 & x_n & x_n^2 & \\cdots & x_n^{n-2} & x_n^{n-1}\n\\end{vmatrix}\n$$\n的值为\n$$\nV_n = \\prod_{1 \\mathop \\leqslant i \\mathop < j \\mathop \\leqslant n} \\left({x_j - x_i}\\right)\n$$\n{% endnote %}\n\n以下证明过程摘自 <a href=\"https://proofwiki.org/wiki/Vandermonde_Determinant\">Vandermonde Determinant</a>。\n\n<p><strong>方法一</strong></p>\n\n从 $V_n$ 第二行开始，以后每行减去第一行，由初等变换得到的行列式值不变：\n\n\\begin{align*}\nV_n &= \\begin{vmatrix}\n  1 & x_1 & x_1^2 & \\cdots & x_1^{n-2} & x_1^{n-1} \\\\\n  1 & x_2 & x_2^2 & \\cdots & x_2^{n-2} & x_2^{n-1} \\\\\n  1 & x_3 & x_3^2 & \\cdots & x_3^{n-2} & x_3^{n-1} \\\\\n\\vdots & \\vdots & \\vdots & \\ddots & \\vdots & \\vdots \\\\\n  1 & x_{n-1} & x_{n-1}^2 & \\cdots & x_{n-1}^{n-2} & x_{n-1}^{n-1} \\\\\n  1 & x_n & x_n^2 & \\cdots & x_n^{n-2} & x_n^{n-1}\n\\end{vmatrix} \\\\\n&= \\begin{vmatrix}\n  1 & x_1 & x_1^2 & \\cdots & x_1^{n-2} & x_1^{n-1} \\\\\n  0 & x_2 - x_1 & x_2^2 - x_1^2 & \\cdots & x_2^{n-2} - x_1^{n-2} & x_2^{n-1} - x_1^{n-1} \\\\\n  0 & x_3 - x_1 & x_3^2 - x_1^2 & \\cdots & x_3^{n-2} - x_1^{n-2} & x_3^{n-1} - x_1^{n-1} \\\\\n\\vdots & \\vdots & \\vdots & \\ddots & \\vdots & \\vdots \\\\\n  0 & x_{n-1} - x_1 & x_{n-1}^2 - x_1^2 & \\cdots & x_{n-1}^{n-2} - x_1^{n-2} & x_{n-1}^{n-1} - x_1^{n-1} \\\\\n  0 & x_n - x_1 & x_n^2 - x_1^2 & \\cdots & x_n^{n-2} - x_1^{n-2} & x_n^{n-1} - x_1^{n-1}\n\\end{vmatrix} \\\\\n&= \\begin{vmatrix}\n  1 & 0 & 0 & \\cdots & 0 & 0 \\\\\n  0 & x_2 - x_1 & \\left({x_2 - x_1}\\right) x_2 & \\cdots & \\left({x_2 - x_1}\\right) x_2^{n-3} & \\left({x_2 - x_1}\\right) x_2^{n-2} \\\\\n  0 & x_3 - x_1 & \\left({x_3 - x_1}\\right) x_3 & \\cdots & \\left({x_3 - x_1}\\right) x_3^{n-3} & \\left({x_3 - x_1}\\right) x_3^{n-2} \\\\\n\\vdots & \\vdots & \\vdots & \\ddots & \\vdots & \\vdots \\\\\n  0 & x_{n-1} - x_1 & \\left({x_{n-1} - x_1}\\right) x_{n-1} & \\cdots & \\left({x_{n-1} - x_1}\\right) x_{n-1}^{n-3} & \\left({x_{n-1} - x_1}\\right) x_{n-1}^{n-2} \\\\\n  0 & x_n - x_1 & \\left({x_n - x_1}\\right) x_n & \\cdots & \\left({x_n - x_1}\\right) x_n^{n-3} & \\left({x_n - x_1}\\right) x_n^{n-2}\n\\end{vmatrix} \\\\\n&= \\prod_{k \\mathop = 2}^n \\left({x_k - x_1}\\right) \\begin{vmatrix}\n  1 & 0 & 0 & \\cdots & 0 & 0 \\\\\n  0 & 1 & x_2 & \\cdots & x_2^{n-3} & x_2^{n-2} \\\\\n  0 & 1 & x_3 & \\cdots & x_3^{n-3} & x_3^{n-2} \\\\\n\\vdots & \\vdots & \\vdots & \\ddots & \\vdots & \\vdots \\\\\n  0 & 1 & x_{n-1} & \\cdots & x_{n-1}^{n-3} & x_{n-1}^{n-2} \\\\\n  0 & 1 & x_n & \\cdots & x_n^{n-3} & x_n^{n-2}\n\\end{vmatrix} \\\\\n&= \\prod_{k \\mathop = 2}^n \\left({x_k - x_1}\\right) V_{n-1}\n\\end{align*}\n\n以此类推，\n\n$$\nV_n = \\prod_{k \\mathop = 2}^n \\left({x_k - x_1}\\right)\n    \\prod_{k \\mathop = 3}^n \\left({x_k - x_2}\\right) V_{n-2}\n= \\cdots\n= \\prod_{1 \\mathop \\leqslant i \\mathop < j \\mathop \\leqslant n} \\left({x_j - x_i}\\right)\n= \\prod_{1 \\mathop \\leqslant i \\mathop < j \\mathop \\leqslant n} \\left({x_j - x_i}\\right)\n$$\n\n<hr>\n\n<p><strong>方法二</strong></p>\n\n将行列式中 $V_n$ 中的所有 $x_n$ 替换为未知量 $x$，则 $V_n$ 可视为关于 $x$ 的 $n-1$ 次多项式，记为 $P(x)$，并按最后一行展开：\n\n\\begin{align*}\nP \\left({x}\\right)\n&= \\begin{vmatrix}\n  1 & x_1 & x_1^2 & \\cdots & x_1^{n-2} & x_1^{n-1} \\\\\n  1 & x_2 & x_2^2 & \\cdots & x_2^{n-2} & x_2^{n-1} \\\\\n  1 & x_3 & x_3^2 & \\cdots & x_3^{n-2} & x_3^{n-1} \\\\\n\\vdots & \\vdots & \\vdots & \\ddots & \\vdots & \\vdots \\\\\n  1 & x_{n-1} & x_{n-1}^2 & \\cdots & x_{n-1}^{n-2} & x_{n-1}^{n-1} \\\\\n  1 & x & x^2 & \\cdots & x^{n-2} & x^{n-1}\n\\end{vmatrix} \\\\\n&= \\begin{vmatrix}\n  x_1 & x_1^2 & \\cdots & x_1^{n-2} & x_1^{n-1} \\\\\n  x_2 & x_2^2 & \\cdots & x_2^{n-2} & x_2^{n-1} \\\\\n  x_3 & x_3^2 & \\cdots & x_3^{n-2} & x_3^{n-1} \\\\\n\\vdots & \\vdots & \\vdots & \\ddots & \\vdots \\\\\n  x_{n-1} & x_{n-1}^2 & \\cdots & x_{n-1}^{n-2} & x_{n-1}^{n-1}\n\\end{vmatrix} \\ \\  + \\ \\ \\begin{vmatrix}\n  1 & x_1^2 & \\cdots & x_1^{n-2} & x_1^{n-1} \\\\\n  1 & x_2^2 & \\cdots & x_2^{n-2} & x_2^{n-1} \\\\\n  1 & x_3^2 & \\cdots & x_3^{n-2} & x_3^{n-1} \\\\\n\\vdots & \\vdots & \\vdots & \\ddots & \\vdots \\\\\n  1 & x_{n-1}^2 & \\cdots & x_{n-1}^{n-2} & x_{n-1}^{n-1}\n\\end{vmatrix}x \\\\\n& \\mathrel{\\phantom{=}}\n+ \\ \\ \\cdots \\ \\ + \\ \\\n\\begin{vmatrix}\n  1 & x_1 & x_1^2 & \\cdots & x_1^{n-2} \\\\\n  1 & x_2 & x_2^2 & \\cdots & x_2^{n-2} \\\\\n  1 & x_3 & x_3^2 & \\cdots & x_3^{n-2} \\\\\n\\vdots & \\vdots & \\vdots & \\ddots & \\vdots \\\\\n  1 & x_{n-1} & x_{n-1}^2 & \\cdots & x_{n-1}^{n-2}\n\\end{vmatrix}x^{n-1}\n\\end{align*}\n\n显然 $P(x_1) = P(x_2) = \\cdots = P(x_{n-1}) = 0$，由多项式分解定理可知\n\n$$\n    P(x) = V_{n-1} \\prod_{i=1}^{n-1} (x-x_i)\n$$\n\n将 $x$ 替换成 $x_n$，由递推可得：\n\n$$\n    V_n = \\prod_{1 \\leqslant i < n} (x_n - x_i) V_{n-1}\n        = \\prod_{1 \\leqslant i < n} (x_n - x_i)\n          \\prod_{1 \\leqslant i < n-1} (x_{n-1} - x_i) V_{n-2}\n        = \\cdots\n        = \\prod_{1 \\leqslant i < j \\leqslant n} (x_j - x_i)\n$$\n\n<hr>\n\n{% endfold %}\n\n但是解这个线性方程组是很不明智的，如果数据点较近，$\\boldsymbol{V}$ 会接近奇异矩阵。而拉格朗日插值法则不需要硬着头皮解方程。\n\n## 拉格朗日插值\n\n$n$ 次 Lagrange 插值多项式系数 $l_0(x), l_1(x), \\ldots, l_n(x)$ 定义为\n$l_i(x_j)= \\begin{cases} 1, & i=j \\\\ 0, & i\\neq j \\\\ \\end{cases}$，则多项式可表示为\n\n$$\n    P(x) = y_0 l_0(x) + y_1l_1(x) + \\cdots + y_nl_n(x) = \\sum_{i=0}^n y_il_i(x)\n$$\n\n注意这里的每个 $l_i(x)$ 均为 $n$ 次多项式，且由定义可知 $l_i(x)$ 有 $n$ 个根\n\n$$\n    x_0, x_1, x_2, \\ldots, x_{i-1}, x_{i+1}, \\ldots, x_n\n$$\n\n所以 $l_i(x)$ 可表示成 $l_i(x) = C_i \\prod\\limits_{j\\neq i} (x - x_j)$，进一步由 $l_i(x)$ 定义，\n\n$$\n    1 = l_i(x_i) = C_i \\prod_{j\\neq i} (x_i - x_j)\n    \\ \\Rightarrow \\ C_i = \\frac{1}{\\prod\\limits_{j\\neq i} (x_i - x_j)}\n    \\ \\Rightarrow \\ l_i(x) = \\frac{\\prod\\limits_{j\\neq i}(x - x_j)}\n                                  {\\prod\\limits_{j\\neq i}(x_i - x_j)}\n$$\n\n所以 Lagrange 插值多项式为\n\n$$\n    p(x) = \\sum_{i=0}^n y_i \\frac{\\prod\\limits_{j\\neq i}(x - x_j)}\n                             {\\prod\\limits_{j\\neq i}(x_i - x_j)}\n         = \\sum_{i=0}^n y_i \\frac{(x-x_0)(x-x_1)\\cdots (x-x_{i-1})(x-x_{i+1})\\cdots (x-x_n)}\n                                 {(x_i-x_0)(x_i-x_1)\\cdots (x_i-x_{i-1})(x_i-x_{i+1})\\cdots (x_i-x_n)}\n$$\n\n从形式上看，Lagrange 插值法是容易实现的，但如果加入新的数据点，则需要重新计算多项式系数，即算法随着数据点的增多不能复用以前的计算结果。\n\n{% fold \"拉格朗日插值 Matlab 程序代码\" %}\n```matlab\nfunction [f, f0] = interp_lagrange(x, y, x0, prec)\n    if nargin <= 3, prec = 4;\n\n    if length(x) == length(y), n = length(x) - 1;\n    else error('Incompatible dimension of x and y !!');\n    end\n\n    syms t;\n    f = 0;\n\n    for k = 1:n\n        xs = [x(1:k-1) x(k+1:n)];\n        f = f + y(k) * prod((t-xs)./(x(k)-xs));\n    end\n\n    f = vpa(f, prec);\n    if nargin > 2, f0 = vpa(subs(f, t, x0), prec); end;\nend\n```\n{% endfold %}\n\n\n## 艾特肯插值\n\n首先，由点 $(x_0, y_0)$ 到 $(x_j, y_j), j=1,2,\\ldots,n$ 可以确定 $n$ 组一次多项式，即穿过两点的直线；第二步，根据 $$，进一步生成 $n-1$ 组二次多项式。次过程共重复 $n$ 次，最终得到一个 $n$ 次多项式。\n\n具体而言，由点 $(x_0, y_0)$ 及 $(x_1, y_1)$ 得到的一次多项式为\n\n$$\n    p_{01}(x) = \\frac{x-x_1}{x_0-x_1}y_0 - \\frac{x-x_0}{x_1-x_0}y_1\n              = \\frac{1}{x_1-x_0} \\begin{vmatrix}\n                  y_0 & x_0 - x \\\\\n                  y_1 & x_1 - x\n                \\end{vmatrix}\n$$\n\n类比之，由 $x_0$ 及 $x_j$ 确定的一次多项式表示为\n\n$$\n    p_{0j}(x) = \\frac{1}{x_j-x_0} \\begin{vmatrix}\n                    y_0 & x_0 - x \\\\\n                    y_j & x_j - x\n                \\end{vmatrix}, \\quad j = 1,2,\\ldots,n\n$$\n\n进一步，由点 $(x_0, y_0), (x_1, y_1), (x_j, y_j)$ 确定的二次多项式为\n\n$$\n    p_{01j}(x) = \\frac{1}{x_j - x_1} \\begin{vmatrix}\n                     p_{01}(x) & x_1 - x \\\\\n                     p_{0j}(x) & x_j - x\n                 \\end{vmatrix}, \\quad j=2,3,\\ldots,n\n$$\n\n一般而言，对于 $k+2$ 个数据点 $(x_0, y_0), (x_1, y_1), \\ldots, (x_k, y_k)$ 及 $(x_j, y_j)$，$k+1$ 次插值多项式为\n\n$$\n    p_{012\\cdots kj}(x) = \\frac{1}{x_j - x_k}\n        \\begin{vmatrix}\n            p_{012\\cdots k}(x) & x_k - x \\\\\n            p_{012\\cdots (k-1)}(x) & x_j - x\n        \\end{vmatrix} \\quad j=k+1,\\ldots, n\n$$\n\n整个计算过程如下表\n\n$$\n\\begin{array}{cccccc|c}\n    \\hline\n    x_j &   y_j &   p_{0j}  &   p_{01j} &   p_{012j}    &   p_{0123j}   &   x_j-x \\\\\n    \\hline\n    x_0 &   y_0 &           &           &               &               &   x_0-x \\\\\n    x_1 &   y_1 &   p_{01}  &           &               &               &   x_1-x \\\\\n    x_2 &   y_2 &   p_{02}  &   p_{012} &               &               &   x_2-x \\\\\n    x_3 &   y_3 &   p_{03}  &   p_{013} &   p_{0123}    &               &   x_3-x \\\\\n    x_4 &   y_4 &   p_{04}  &   p_{014} &   p_{0124}    &   p_{01234}   &   x_4-x \\\\\n    \\cdots      &   \\cdots  &   \\cdots  &   \\cdots      &   \\cdots      &   \\cdots  &   \\cdots \\\\\n    x_n &   y_n &   p_{0n}  &   p_{01n} &   p_{012n}    &   p_{0123n}   &   x_n-x \\\\\n    \\hline\n\\end{array}\n$$\n\n{% fold \"艾特肯插值 Matlab 程序代码\" %}\n```matlab\nfunction [f, f0] = interp_aitken(x, y, x0, prec)\n    if nargin <= 3, prec = 4;\n    if length(x) == length(y), n = length(x) - 1;\n    else error('Incompatible dimension of x and y !!');\n    end\n\n    syms t;\n    f = 0;\n    lastp = y;\n    xs = x - t;\n\n    for k = 1:n\n        for j = k+1:n+1\n            curp(j) = (lastp(k)*xs(j) - lastp(j)*xs(k)) / (xs(j)-xs(k));\n        end\n        lastp = curp;\n    end\n\n    f = vpa(simplify(lastp(end)), prec);\n    if nargin > 2, f0 = vpa(subs(f, t, x0), prec); end;\nend\n```\n{% endfold %}\n\n","source":"_posts/function-interpolation-by-matlab.md","raw":"---\ntitle: Matlab 数值计算之函数插值\ndate: 2018-07-08 23:19:15\ntags:\n    - Matlab\n    - Interpolation\ncategories: Applied Mathematics\nmathjax: true\n---\n\n\n微积分中对于连续或可导函数的研究虽有各路方法各显神通，但对于一个实际问题，若仅给出离散的数据点，通常首先要做的工作是根据这些离散点拟合出便于研究的连续函数。这类问题通常称作「数据拟合」，而其中的特殊情形便是函数插值。\n\n<!-- more -->\n\n多项式拟合插值中最「直接」的算法，就是对于 $n+1$ 个给定的数据点对 $(x_i, y_i), i=0,1,\\ldots,n$，假设 $n$ 次多项式 $p_n(x)=\\sum\\limits_{i=0}^n a_ix^i$ 过所有的数据点，即 $p_n(x_i) = y_i$，即：\n\n$$\n    \\underbrace{\n    \\begin{pmatrix}\n        1 & x_0^1 & x_0^2 & \\cdots & x_0^{n-1} & x_0^n \\\\\n        1 & x_1^1 & x_1^2 & \\cdots & x_1^{n-1} & x_1^n \\\\\n        1 & x_2^1 & x_2^2 & \\cdots & x_2^{n-1} & x_2^n \\\\\n        \\vdots & \\vdots & \\vdots & \\ddots & \\vdots & \\vdots \\\\\n        1 & x_{n-1}^1 & x_{n-1}^2 & \\cdots & x_{n-1}^{n-1} & x_{n-1}^n \\\\\n        1 & x_n^1 & x_n^2 & \\cdots & x_n^{n-1} & x_n^n\n    \\end{pmatrix}\n    }_{\\boldsymbol{V}}\n    \\underbrace{\n    \\begin{pmatrix}\n        a_0 \\vphantom{x_0^{n-1}} \\\\\n        a_1 \\vphantom{x_1^{n-1}} \\\\\n        a_2 \\vphantom{x_2^{n-1}} \\\\\n        \\vdots \\vphantom{\\ddots \\vdots} \\\\\n        a_{n-1} \\vphantom{x_{n-1}^{n-1}} \\\\\n        a_{n} \\vphantom{x_n^{n-1}}\n    \\end{pmatrix}\n    }_{\\boldsymbol{a}}\n    =\n    \\underbrace{\n    \\begin{pmatrix}\n        y_0 \\vphantom{x_0^{n-1}} \\\\\n        y_1 \\vphantom{x_1^{n-1}} \\\\\n        y_2 \\vphantom{x_2^{n-1}} \\\\\n        \\vdots \\vphantom{\\ddots \\vdots} \\\\\n        y_{n-1} \\vphantom{x_{n-1}^{n-1}} \\\\\n        y_{n} \\vphantom{x_n^{n-1}}\n    \\end{pmatrix}\n    }_{\\boldsymbol{y}}\n$$\n\n显然 $\\boldsymbol{V}$ 为 Vandermonde 矩阵。关于 Vandermonde 行列式的计算，这里列出两种计算方法。\n\n{% fold \"Vandermonde 行列式计算方法\" %}\n{% note %}\n$n$ 阶 Vandermonde 行列式\n$$\nV_n = \\begin{vmatrix}\n  1 & x_1 & x_1^2 & \\cdots & x_1^{n-2} & x_1^{n-1} \\\\\n  1 & x_2 & x_2^2 & \\cdots & x_2^{n-2} & x_2^{n-1} \\\\\n\\vdots & \\vdots & \\vdots & \\ddots & \\vdots & \\vdots \\\\\n  1 & x_n & x_n^2 & \\cdots & x_n^{n-2} & x_n^{n-1}\n\\end{vmatrix}\n$$\n的值为\n$$\nV_n = \\prod_{1 \\mathop \\leqslant i \\mathop < j \\mathop \\leqslant n} \\left({x_j - x_i}\\right)\n$$\n{% endnote %}\n\n以下证明过程摘自 <a href=\"https://proofwiki.org/wiki/Vandermonde_Determinant\">Vandermonde Determinant</a>。\n\n<p><strong>方法一</strong></p>\n\n从 $V_n$ 第二行开始，以后每行减去第一行，由初等变换得到的行列式值不变：\n\n\\begin{align*}\nV_n &= \\begin{vmatrix}\n  1 & x_1 & x_1^2 & \\cdots & x_1^{n-2} & x_1^{n-1} \\\\\n  1 & x_2 & x_2^2 & \\cdots & x_2^{n-2} & x_2^{n-1} \\\\\n  1 & x_3 & x_3^2 & \\cdots & x_3^{n-2} & x_3^{n-1} \\\\\n\\vdots & \\vdots & \\vdots & \\ddots & \\vdots & \\vdots \\\\\n  1 & x_{n-1} & x_{n-1}^2 & \\cdots & x_{n-1}^{n-2} & x_{n-1}^{n-1} \\\\\n  1 & x_n & x_n^2 & \\cdots & x_n^{n-2} & x_n^{n-1}\n\\end{vmatrix} \\\\\n&= \\begin{vmatrix}\n  1 & x_1 & x_1^2 & \\cdots & x_1^{n-2} & x_1^{n-1} \\\\\n  0 & x_2 - x_1 & x_2^2 - x_1^2 & \\cdots & x_2^{n-2} - x_1^{n-2} & x_2^{n-1} - x_1^{n-1} \\\\\n  0 & x_3 - x_1 & x_3^2 - x_1^2 & \\cdots & x_3^{n-2} - x_1^{n-2} & x_3^{n-1} - x_1^{n-1} \\\\\n\\vdots & \\vdots & \\vdots & \\ddots & \\vdots & \\vdots \\\\\n  0 & x_{n-1} - x_1 & x_{n-1}^2 - x_1^2 & \\cdots & x_{n-1}^{n-2} - x_1^{n-2} & x_{n-1}^{n-1} - x_1^{n-1} \\\\\n  0 & x_n - x_1 & x_n^2 - x_1^2 & \\cdots & x_n^{n-2} - x_1^{n-2} & x_n^{n-1} - x_1^{n-1}\n\\end{vmatrix} \\\\\n&= \\begin{vmatrix}\n  1 & 0 & 0 & \\cdots & 0 & 0 \\\\\n  0 & x_2 - x_1 & \\left({x_2 - x_1}\\right) x_2 & \\cdots & \\left({x_2 - x_1}\\right) x_2^{n-3} & \\left({x_2 - x_1}\\right) x_2^{n-2} \\\\\n  0 & x_3 - x_1 & \\left({x_3 - x_1}\\right) x_3 & \\cdots & \\left({x_3 - x_1}\\right) x_3^{n-3} & \\left({x_3 - x_1}\\right) x_3^{n-2} \\\\\n\\vdots & \\vdots & \\vdots & \\ddots & \\vdots & \\vdots \\\\\n  0 & x_{n-1} - x_1 & \\left({x_{n-1} - x_1}\\right) x_{n-1} & \\cdots & \\left({x_{n-1} - x_1}\\right) x_{n-1}^{n-3} & \\left({x_{n-1} - x_1}\\right) x_{n-1}^{n-2} \\\\\n  0 & x_n - x_1 & \\left({x_n - x_1}\\right) x_n & \\cdots & \\left({x_n - x_1}\\right) x_n^{n-3} & \\left({x_n - x_1}\\right) x_n^{n-2}\n\\end{vmatrix} \\\\\n&= \\prod_{k \\mathop = 2}^n \\left({x_k - x_1}\\right) \\begin{vmatrix}\n  1 & 0 & 0 & \\cdots & 0 & 0 \\\\\n  0 & 1 & x_2 & \\cdots & x_2^{n-3} & x_2^{n-2} \\\\\n  0 & 1 & x_3 & \\cdots & x_3^{n-3} & x_3^{n-2} \\\\\n\\vdots & \\vdots & \\vdots & \\ddots & \\vdots & \\vdots \\\\\n  0 & 1 & x_{n-1} & \\cdots & x_{n-1}^{n-3} & x_{n-1}^{n-2} \\\\\n  0 & 1 & x_n & \\cdots & x_n^{n-3} & x_n^{n-2}\n\\end{vmatrix} \\\\\n&= \\prod_{k \\mathop = 2}^n \\left({x_k - x_1}\\right) V_{n-1}\n\\end{align*}\n\n以此类推，\n\n$$\nV_n = \\prod_{k \\mathop = 2}^n \\left({x_k - x_1}\\right)\n    \\prod_{k \\mathop = 3}^n \\left({x_k - x_2}\\right) V_{n-2}\n= \\cdots\n= \\prod_{1 \\mathop \\leqslant i \\mathop < j \\mathop \\leqslant n} \\left({x_j - x_i}\\right)\n= \\prod_{1 \\mathop \\leqslant i \\mathop < j \\mathop \\leqslant n} \\left({x_j - x_i}\\right)\n$$\n\n<hr>\n\n<p><strong>方法二</strong></p>\n\n将行列式中 $V_n$ 中的所有 $x_n$ 替换为未知量 $x$，则 $V_n$ 可视为关于 $x$ 的 $n-1$ 次多项式，记为 $P(x)$，并按最后一行展开：\n\n\\begin{align*}\nP \\left({x}\\right)\n&= \\begin{vmatrix}\n  1 & x_1 & x_1^2 & \\cdots & x_1^{n-2} & x_1^{n-1} \\\\\n  1 & x_2 & x_2^2 & \\cdots & x_2^{n-2} & x_2^{n-1} \\\\\n  1 & x_3 & x_3^2 & \\cdots & x_3^{n-2} & x_3^{n-1} \\\\\n\\vdots & \\vdots & \\vdots & \\ddots & \\vdots & \\vdots \\\\\n  1 & x_{n-1} & x_{n-1}^2 & \\cdots & x_{n-1}^{n-2} & x_{n-1}^{n-1} \\\\\n  1 & x & x^2 & \\cdots & x^{n-2} & x^{n-1}\n\\end{vmatrix} \\\\\n&= \\begin{vmatrix}\n  x_1 & x_1^2 & \\cdots & x_1^{n-2} & x_1^{n-1} \\\\\n  x_2 & x_2^2 & \\cdots & x_2^{n-2} & x_2^{n-1} \\\\\n  x_3 & x_3^2 & \\cdots & x_3^{n-2} & x_3^{n-1} \\\\\n\\vdots & \\vdots & \\vdots & \\ddots & \\vdots \\\\\n  x_{n-1} & x_{n-1}^2 & \\cdots & x_{n-1}^{n-2} & x_{n-1}^{n-1}\n\\end{vmatrix} \\ \\  + \\ \\ \\begin{vmatrix}\n  1 & x_1^2 & \\cdots & x_1^{n-2} & x_1^{n-1} \\\\\n  1 & x_2^2 & \\cdots & x_2^{n-2} & x_2^{n-1} \\\\\n  1 & x_3^2 & \\cdots & x_3^{n-2} & x_3^{n-1} \\\\\n\\vdots & \\vdots & \\vdots & \\ddots & \\vdots \\\\\n  1 & x_{n-1}^2 & \\cdots & x_{n-1}^{n-2} & x_{n-1}^{n-1}\n\\end{vmatrix}x \\\\\n& \\mathrel{\\phantom{=}}\n+ \\ \\ \\cdots \\ \\ + \\ \\\n\\begin{vmatrix}\n  1 & x_1 & x_1^2 & \\cdots & x_1^{n-2} \\\\\n  1 & x_2 & x_2^2 & \\cdots & x_2^{n-2} \\\\\n  1 & x_3 & x_3^2 & \\cdots & x_3^{n-2} \\\\\n\\vdots & \\vdots & \\vdots & \\ddots & \\vdots \\\\\n  1 & x_{n-1} & x_{n-1}^2 & \\cdots & x_{n-1}^{n-2}\n\\end{vmatrix}x^{n-1}\n\\end{align*}\n\n显然 $P(x_1) = P(x_2) = \\cdots = P(x_{n-1}) = 0$，由多项式分解定理可知\n\n$$\n    P(x) = V_{n-1} \\prod_{i=1}^{n-1} (x-x_i)\n$$\n\n将 $x$ 替换成 $x_n$，由递推可得：\n\n$$\n    V_n = \\prod_{1 \\leqslant i < n} (x_n - x_i) V_{n-1}\n        = \\prod_{1 \\leqslant i < n} (x_n - x_i)\n          \\prod_{1 \\leqslant i < n-1} (x_{n-1} - x_i) V_{n-2}\n        = \\cdots\n        = \\prod_{1 \\leqslant i < j \\leqslant n} (x_j - x_i)\n$$\n\n<hr>\n\n{% endfold %}\n\n但是解这个线性方程组是很不明智的，如果数据点较近，$\\boldsymbol{V}$ 会接近奇异矩阵。而拉格朗日插值法则不需要硬着头皮解方程。\n\n## 拉格朗日插值\n\n$n$ 次 Lagrange 插值多项式系数 $l_0(x), l_1(x), \\ldots, l_n(x)$ 定义为\n$l_i(x_j)= \\begin{cases} 1, & i=j \\\\ 0, & i\\neq j \\\\ \\end{cases}$，则多项式可表示为\n\n$$\n    P(x) = y_0 l_0(x) + y_1l_1(x) + \\cdots + y_nl_n(x) = \\sum_{i=0}^n y_il_i(x)\n$$\n\n注意这里的每个 $l_i(x)$ 均为 $n$ 次多项式，且由定义可知 $l_i(x)$ 有 $n$ 个根\n\n$$\n    x_0, x_1, x_2, \\ldots, x_{i-1}, x_{i+1}, \\ldots, x_n\n$$\n\n所以 $l_i(x)$ 可表示成 $l_i(x) = C_i \\prod\\limits_{j\\neq i} (x - x_j)$，进一步由 $l_i(x)$ 定义，\n\n$$\n    1 = l_i(x_i) = C_i \\prod_{j\\neq i} (x_i - x_j)\n    \\ \\Rightarrow \\ C_i = \\frac{1}{\\prod\\limits_{j\\neq i} (x_i - x_j)}\n    \\ \\Rightarrow \\ l_i(x) = \\frac{\\prod\\limits_{j\\neq i}(x - x_j)}\n                                  {\\prod\\limits_{j\\neq i}(x_i - x_j)}\n$$\n\n所以 Lagrange 插值多项式为\n\n$$\n    p(x) = \\sum_{i=0}^n y_i \\frac{\\prod\\limits_{j\\neq i}(x - x_j)}\n                             {\\prod\\limits_{j\\neq i}(x_i - x_j)}\n         = \\sum_{i=0}^n y_i \\frac{(x-x_0)(x-x_1)\\cdots (x-x_{i-1})(x-x_{i+1})\\cdots (x-x_n)}\n                                 {(x_i-x_0)(x_i-x_1)\\cdots (x_i-x_{i-1})(x_i-x_{i+1})\\cdots (x_i-x_n)}\n$$\n\n从形式上看，Lagrange 插值法是容易实现的，但如果加入新的数据点，则需要重新计算多项式系数，即算法随着数据点的增多不能复用以前的计算结果。\n\n{% fold \"拉格朗日插值 Matlab 程序代码\" %}\n```matlab\nfunction [f, f0] = interp_lagrange(x, y, x0, prec)\n    if nargin <= 3, prec = 4;\n\n    if length(x) == length(y), n = length(x) - 1;\n    else error('Incompatible dimension of x and y !!');\n    end\n\n    syms t;\n    f = 0;\n\n    for k = 1:n\n        xs = [x(1:k-1) x(k+1:n)];\n        f = f + y(k) * prod((t-xs)./(x(k)-xs));\n    end\n\n    f = vpa(f, prec);\n    if nargin > 2, f0 = vpa(subs(f, t, x0), prec); end;\nend\n```\n{% endfold %}\n\n\n## 艾特肯插值\n\n首先，由点 $(x_0, y_0)$ 到 $(x_j, y_j), j=1,2,\\ldots,n$ 可以确定 $n$ 组一次多项式，即穿过两点的直线；第二步，根据 $$，进一步生成 $n-1$ 组二次多项式。次过程共重复 $n$ 次，最终得到一个 $n$ 次多项式。\n\n具体而言，由点 $(x_0, y_0)$ 及 $(x_1, y_1)$ 得到的一次多项式为\n\n$$\n    p_{01}(x) = \\frac{x-x_1}{x_0-x_1}y_0 - \\frac{x-x_0}{x_1-x_0}y_1\n              = \\frac{1}{x_1-x_0} \\begin{vmatrix}\n                  y_0 & x_0 - x \\\\\n                  y_1 & x_1 - x\n                \\end{vmatrix}\n$$\n\n类比之，由 $x_0$ 及 $x_j$ 确定的一次多项式表示为\n\n$$\n    p_{0j}(x) = \\frac{1}{x_j-x_0} \\begin{vmatrix}\n                    y_0 & x_0 - x \\\\\n                    y_j & x_j - x\n                \\end{vmatrix}, \\quad j = 1,2,\\ldots,n\n$$\n\n进一步，由点 $(x_0, y_0), (x_1, y_1), (x_j, y_j)$ 确定的二次多项式为\n\n$$\n    p_{01j}(x) = \\frac{1}{x_j - x_1} \\begin{vmatrix}\n                     p_{01}(x) & x_1 - x \\\\\n                     p_{0j}(x) & x_j - x\n                 \\end{vmatrix}, \\quad j=2,3,\\ldots,n\n$$\n\n一般而言，对于 $k+2$ 个数据点 $(x_0, y_0), (x_1, y_1), \\ldots, (x_k, y_k)$ 及 $(x_j, y_j)$，$k+1$ 次插值多项式为\n\n$$\n    p_{012\\cdots kj}(x) = \\frac{1}{x_j - x_k}\n        \\begin{vmatrix}\n            p_{012\\cdots k}(x) & x_k - x \\\\\n            p_{012\\cdots (k-1)}(x) & x_j - x\n        \\end{vmatrix} \\quad j=k+1,\\ldots, n\n$$\n\n整个计算过程如下表\n\n$$\n\\begin{array}{cccccc|c}\n    \\hline\n    x_j &   y_j &   p_{0j}  &   p_{01j} &   p_{012j}    &   p_{0123j}   &   x_j-x \\\\\n    \\hline\n    x_0 &   y_0 &           &           &               &               &   x_0-x \\\\\n    x_1 &   y_1 &   p_{01}  &           &               &               &   x_1-x \\\\\n    x_2 &   y_2 &   p_{02}  &   p_{012} &               &               &   x_2-x \\\\\n    x_3 &   y_3 &   p_{03}  &   p_{013} &   p_{0123}    &               &   x_3-x \\\\\n    x_4 &   y_4 &   p_{04}  &   p_{014} &   p_{0124}    &   p_{01234}   &   x_4-x \\\\\n    \\cdots      &   \\cdots  &   \\cdots  &   \\cdots      &   \\cdots      &   \\cdots  &   \\cdots \\\\\n    x_n &   y_n &   p_{0n}  &   p_{01n} &   p_{012n}    &   p_{0123n}   &   x_n-x \\\\\n    \\hline\n\\end{array}\n$$\n\n{% fold \"艾特肯插值 Matlab 程序代码\" %}\n```matlab\nfunction [f, f0] = interp_aitken(x, y, x0, prec)\n    if nargin <= 3, prec = 4;\n    if length(x) == length(y), n = length(x) - 1;\n    else error('Incompatible dimension of x and y !!');\n    end\n\n    syms t;\n    f = 0;\n    lastp = y;\n    xs = x - t;\n\n    for k = 1:n\n        for j = k+1:n+1\n            curp(j) = (lastp(k)*xs(j) - lastp(j)*xs(k)) / (xs(j)-xs(k));\n        end\n        lastp = curp;\n    end\n\n    f = vpa(simplify(lastp(end)), prec);\n    if nargin > 2, f0 = vpa(subs(f, t, x0), prec); end;\nend\n```\n{% endfold %}\n\n","slug":"function-interpolation-by-matlab","published":1,"updated":"2023-03-09T16:09:38.228Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u3369000zp4x01qlzgtrc","content":"<p>微积分中对于连续或可导函数的研究虽有各路方法各显神通，但对于一个实际问题，若仅给出离散的数据点，通常首先要做的工作是根据这些离散点拟合出便于研究的连续函数。这类问题通常称作「数据拟合」，而其中的特殊情形便是函数插值。</p>\r\n<a id=\"more\"></a>\r\n<p>多项式拟合插值中最「直接」的算法，就是对于 <span class=\"math inline\">\\(n+1\\)</span> 个给定的数据点对 <span class=\"math inline\">\\((x_i, y_i), i=0,1,\\ldots,n\\)</span>，假设 <span class=\"math inline\">\\(n\\)</span> 次多项式 <span class=\"math inline\">\\(p_n(x)=\\sum\\limits_{i=0}^n a_ix^i\\)</span> 过所有的数据点，即 <span class=\"math inline\">\\(p_n(x_i) = y_i\\)</span>，即：</p>\r\n<p><span class=\"math display\">\\[\r\n    \\underbrace{\r\n    \\begin{pmatrix}\r\n        1 &amp; x_0^1 &amp; x_0^2 &amp; \\cdots &amp; x_0^{n-1} &amp; x_0^n \\\\\r\n        1 &amp; x_1^1 &amp; x_1^2 &amp; \\cdots &amp; x_1^{n-1} &amp; x_1^n \\\\\r\n        1 &amp; x_2^1 &amp; x_2^2 &amp; \\cdots &amp; x_2^{n-1} &amp; x_2^n \\\\\r\n        \\vdots &amp; \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots &amp; \\vdots \\\\\r\n        1 &amp; x_{n-1}^1 &amp; x_{n-1}^2 &amp; \\cdots &amp; x_{n-1}^{n-1} &amp; x_{n-1}^n \\\\\r\n        1 &amp; x_n^1 &amp; x_n^2 &amp; \\cdots &amp; x_n^{n-1} &amp; x_n^n\r\n    \\end{pmatrix}\r\n    }_{\\boldsymbol{V}}\r\n    \\underbrace{\r\n    \\begin{pmatrix}\r\n        a_0 \\vphantom{x_0^{n-1}} \\\\\r\n        a_1 \\vphantom{x_1^{n-1}} \\\\\r\n        a_2 \\vphantom{x_2^{n-1}} \\\\\r\n        \\vdots \\vphantom{\\ddots \\vdots} \\\\\r\n        a_{n-1} \\vphantom{x_{n-1}^{n-1}} \\\\\r\n        a_{n} \\vphantom{x_n^{n-1}}\r\n    \\end{pmatrix}\r\n    }_{\\boldsymbol{a}}\r\n    =\r\n    \\underbrace{\r\n    \\begin{pmatrix}\r\n        y_0 \\vphantom{x_0^{n-1}} \\\\\r\n        y_1 \\vphantom{x_1^{n-1}} \\\\\r\n        y_2 \\vphantom{x_2^{n-1}} \\\\\r\n        \\vdots \\vphantom{\\ddots \\vdots} \\\\\r\n        y_{n-1} \\vphantom{x_{n-1}^{n-1}} \\\\\r\n        y_{n} \\vphantom{x_n^{n-1}}\r\n    \\end{pmatrix}\r\n    }_{\\boldsymbol{y}}\r\n\\]</span></p>\r\n<p>显然 <span class=\"math inline\">\\(\\boldsymbol{V}\\)</span> 为 Vandermonde 矩阵。关于 Vandermonde 行列式的计算，这里列出两种计算方法。</p>\r\n<div><div class=\"fold_hider\"><div class=\"close hider_title\">Vandermonde 行列式计算方法</div></div><div class=\"fold\">\n<div class=\"note \">$n$ 阶 Vandermonde 行列式\n$$\nV_n = \\begin{vmatrix}\n  1 & x_1 & x_1^2 & \\cdots & x_1^{n-2} & x_1^{n-1} \\\\\n  1 & x_2 & x_2^2 & \\cdots & x_2^{n-2} & x_2^{n-1} \\\\\n\\vdots & \\vdots & \\vdots & \\ddots & \\vdots & \\vdots \\\\\n  1 & x_n & x_n^2 & \\cdots & x_n^{n-2} & x_n^{n-1}\n\\end{vmatrix}\n$$\n的值为\n$$\nV_n = \\prod_{1 \\mathop \\leqslant i \\mathop < j \\mathop \\leqslant n} \\left({x_j - x_i}\\right)\n$$</div>\n\n以下证明过程摘自 <a href=\"https://proofwiki.org/wiki/Vandermonde_Determinant\" target=\"_blank\" rel=\"noopener\">Vandermonde Determinant</a>。\n\n<p><strong>方法一</strong></p>\n\n从 $V_n$ 第二行开始，以后每行减去第一行，由初等变换得到的行列式值不变：\n\n\\begin{align*}\nV_n &= \\begin{vmatrix}\n  1 & x_1 & x_1^2 & \\cdots & x_1^{n-2} & x_1^{n-1} \\\\\n  1 & x_2 & x_2^2 & \\cdots & x_2^{n-2} & x_2^{n-1} \\\\\n  1 & x_3 & x_3^2 & \\cdots & x_3^{n-2} & x_3^{n-1} \\\\\n\\vdots & \\vdots & \\vdots & \\ddots & \\vdots & \\vdots \\\\\n  1 & x_{n-1} & x_{n-1}^2 & \\cdots & x_{n-1}^{n-2} & x_{n-1}^{n-1} \\\\\n  1 & x_n & x_n^2 & \\cdots & x_n^{n-2} & x_n^{n-1}\n\\end{vmatrix} \\\\\n&= \\begin{vmatrix}\n  1 & x_1 & x_1^2 & \\cdots & x_1^{n-2} & x_1^{n-1} \\\\\n  0 & x_2 - x_1 & x_2^2 - x_1^2 & \\cdots & x_2^{n-2} - x_1^{n-2} & x_2^{n-1} - x_1^{n-1} \\\\\n  0 & x_3 - x_1 & x_3^2 - x_1^2 & \\cdots & x_3^{n-2} - x_1^{n-2} & x_3^{n-1} - x_1^{n-1} \\\\\n\\vdots & \\vdots & \\vdots & \\ddots & \\vdots & \\vdots \\\\\n  0 & x_{n-1} - x_1 & x_{n-1}^2 - x_1^2 & \\cdots & x_{n-1}^{n-2} - x_1^{n-2} & x_{n-1}^{n-1} - x_1^{n-1} \\\\\n  0 & x_n - x_1 & x_n^2 - x_1^2 & \\cdots & x_n^{n-2} - x_1^{n-2} & x_n^{n-1} - x_1^{n-1}\n\\end{vmatrix} \\\\\n&= \\begin{vmatrix}\n  1 & 0 & 0 & \\cdots & 0 & 0 \\\\\n  0 & x_2 - x_1 & \\left({x_2 - x_1}\\right) x_2 & \\cdots & \\left({x_2 - x_1}\\right) x_2^{n-3} & \\left({x_2 - x_1}\\right) x_2^{n-2} \\\\\n  0 & x_3 - x_1 & \\left({x_3 - x_1}\\right) x_3 & \\cdots & \\left({x_3 - x_1}\\right) x_3^{n-3} & \\left({x_3 - x_1}\\right) x_3^{n-2} \\\\\n\\vdots & \\vdots & \\vdots & \\ddots & \\vdots & \\vdots \\\\\n  0 & x_{n-1} - x_1 & \\left({x_{n-1} - x_1}\\right) x_{n-1} & \\cdots & \\left({x_{n-1} - x_1}\\right) x_{n-1}^{n-3} & \\left({x_{n-1} - x_1}\\right) x_{n-1}^{n-2} \\\\\n  0 & x_n - x_1 & \\left({x_n - x_1}\\right) x_n & \\cdots & \\left({x_n - x_1}\\right) x_n^{n-3} & \\left({x_n - x_1}\\right) x_n^{n-2}\n\\end{vmatrix} \\\\\n&= \\prod_{k \\mathop = 2}^n \\left({x_k - x_1}\\right) \\begin{vmatrix}\n  1 & 0 & 0 & \\cdots & 0 & 0 \\\\\n  0 & 1 & x_2 & \\cdots & x_2^{n-3} & x_2^{n-2} \\\\\n  0 & 1 & x_3 & \\cdots & x_3^{n-3} & x_3^{n-2} \\\\\n\\vdots & \\vdots & \\vdots & \\ddots & \\vdots & \\vdots \\\\\n  0 & 1 & x_{n-1} & \\cdots & x_{n-1}^{n-3} & x_{n-1}^{n-2} \\\\\n  0 & 1 & x_n & \\cdots & x_n^{n-3} & x_n^{n-2}\n\\end{vmatrix} \\\\\n&= \\prod_{k \\mathop = 2}^n \\left({x_k - x_1}\\right) V_{n-1}\n\\end{align*}\n\n以此类推，\n\n$$\nV_n = \\prod_{k \\mathop = 2}^n \\left({x_k - x_1}\\right)\n    \\prod_{k \\mathop = 3}^n \\left({x_k - x_2}\\right) V_{n-2}\n= \\cdots\n= \\prod_{1 \\mathop \\leqslant i \\mathop < j \\mathop \\leqslant n} \\left({x_j - x_i}\\right)\n= \\prod_{1 \\mathop \\leqslant i \\mathop < j \\mathop \\leqslant n} \\left({x_j - x_i}\\right)\n$$\n\n<hr>\n\n<p><strong>方法二</strong></p>\n\n将行列式中 $V_n$ 中的所有 $x_n$ 替换为未知量 $x$，则 $V_n$ 可视为关于 $x$ 的 $n-1$ 次多项式，记为 $P(x)$，并按最后一行展开：\n\n\\begin{align*}\nP \\left({x}\\right)\n&= \\begin{vmatrix}\n  1 & x_1 & x_1^2 & \\cdots & x_1^{n-2} & x_1^{n-1} \\\\\n  1 & x_2 & x_2^2 & \\cdots & x_2^{n-2} & x_2^{n-1} \\\\\n  1 & x_3 & x_3^2 & \\cdots & x_3^{n-2} & x_3^{n-1} \\\\\n\\vdots & \\vdots & \\vdots & \\ddots & \\vdots & \\vdots \\\\\n  1 & x_{n-1} & x_{n-1}^2 & \\cdots & x_{n-1}^{n-2} & x_{n-1}^{n-1} \\\\\n  1 & x & x^2 & \\cdots & x^{n-2} & x^{n-1}\n\\end{vmatrix} \\\\\n&= \\begin{vmatrix}\n  x_1 & x_1^2 & \\cdots & x_1^{n-2} & x_1^{n-1} \\\\\n  x_2 & x_2^2 & \\cdots & x_2^{n-2} & x_2^{n-1} \\\\\n  x_3 & x_3^2 & \\cdots & x_3^{n-2} & x_3^{n-1} \\\\\n\\vdots & \\vdots & \\vdots & \\ddots & \\vdots \\\\\n  x_{n-1} & x_{n-1}^2 & \\cdots & x_{n-1}^{n-2} & x_{n-1}^{n-1}\n\\end{vmatrix} \\ \\  + \\ \\ \\begin{vmatrix}\n  1 & x_1^2 & \\cdots & x_1^{n-2} & x_1^{n-1} \\\\\n  1 & x_2^2 & \\cdots & x_2^{n-2} & x_2^{n-1} \\\\\n  1 & x_3^2 & \\cdots & x_3^{n-2} & x_3^{n-1} \\\\\n\\vdots & \\vdots & \\vdots & \\ddots & \\vdots \\\\\n  1 & x_{n-1}^2 & \\cdots & x_{n-1}^{n-2} & x_{n-1}^{n-1}\n\\end{vmatrix}x \\\\\n& \\mathrel{\\phantom{=}}\n+ \\ \\ \\cdots \\ \\ + \\ \\\n\\begin{vmatrix}\n  1 & x_1 & x_1^2 & \\cdots & x_1^{n-2} \\\\\n  1 & x_2 & x_2^2 & \\cdots & x_2^{n-2} \\\\\n  1 & x_3 & x_3^2 & \\cdots & x_3^{n-2} \\\\\n\\vdots & \\vdots & \\vdots & \\ddots & \\vdots \\\\\n  1 & x_{n-1} & x_{n-1}^2 & \\cdots & x_{n-1}^{n-2}\n\\end{vmatrix}x^{n-1}\n\\end{align*}\n\n显然 $P(x_1) = P(x_2) = \\cdots = P(x_{n-1}) = 0$，由多项式分解定理可知\n\n$$\n    P(x) = V_{n-1} \\prod_{i=1}^{n-1} (x-x_i)\n$$\n\n将 $x$ 替换成 $x_n$，由递推可得：\n\n$$\n    V_n = \\prod_{1 \\leqslant i < n} (x_n - x_i) V_{n-1}\n        = \\prod_{1 \\leqslant i < n} (x_n - x_i)\n          \\prod_{1 \\leqslant i < n-1} (x_{n-1} - x_i) V_{n-2}\n        = \\cdots\n        = \\prod_{1 \\leqslant i < j \\leqslant n} (x_j - x_i)\n$$\n\n<hr>\n\n</div></div>\r\n<p>但是解这个线性方程组是很不明智的，如果数据点较近，<span class=\"math inline\">\\(\\boldsymbol{V}\\)</span> 会接近奇异矩阵。而拉格朗日插值法则不需要硬着头皮解方程。</p>\r\n<h2 id=\"拉格朗日插值\">拉格朗日插值</h2>\r\n<p><span class=\"math inline\">\\(n\\)</span> 次 Lagrange 插值多项式系数 <span class=\"math inline\">\\(l_0(x), l_1(x), \\ldots, l_n(x)\\)</span> 定义为 <span class=\"math inline\">\\(l_i(x_j)= \\begin{cases} 1, &amp; i=j \\\\ 0, &amp; i\\neq j \\\\ \\end{cases}\\)</span>，则多项式可表示为</p>\r\n<p><span class=\"math display\">\\[\r\n    P(x) = y_0 l_0(x) + y_1l_1(x) + \\cdots + y_nl_n(x) = \\sum_{i=0}^n y_il_i(x)\r\n\\]</span></p>\r\n<p>注意这里的每个 <span class=\"math inline\">\\(l_i(x)\\)</span> 均为 <span class=\"math inline\">\\(n\\)</span> 次多项式，且由定义可知 <span class=\"math inline\">\\(l_i(x)\\)</span> 有 <span class=\"math inline\">\\(n\\)</span> 个根</p>\r\n<p><span class=\"math display\">\\[\r\n    x_0, x_1, x_2, \\ldots, x_{i-1}, x_{i+1}, \\ldots, x_n\r\n\\]</span></p>\r\n<p>所以 <span class=\"math inline\">\\(l_i(x)\\)</span> 可表示成 <span class=\"math inline\">\\(l_i(x) = C_i \\prod\\limits_{j\\neq i} (x - x_j)\\)</span>，进一步由 <span class=\"math inline\">\\(l_i(x)\\)</span> 定义，</p>\r\n<p><span class=\"math display\">\\[\r\n    1 = l_i(x_i) = C_i \\prod_{j\\neq i} (x_i - x_j)\r\n    \\ \\Rightarrow \\ C_i = \\frac{1}{\\prod\\limits_{j\\neq i} (x_i - x_j)}\r\n    \\ \\Rightarrow \\ l_i(x) = \\frac{\\prod\\limits_{j\\neq i}(x - x_j)}\r\n                                  {\\prod\\limits_{j\\neq i}(x_i - x_j)}\r\n\\]</span></p>\r\n<p>所以 Lagrange 插值多项式为</p>\r\n<p><span class=\"math display\">\\[\r\n    p(x) = \\sum_{i=0}^n y_i \\frac{\\prod\\limits_{j\\neq i}(x - x_j)}\r\n                             {\\prod\\limits_{j\\neq i}(x_i - x_j)}\r\n         = \\sum_{i=0}^n y_i \\frac{(x-x_0)(x-x_1)\\cdots (x-x_{i-1})(x-x_{i+1})\\cdots (x-x_n)}\r\n                                 {(x_i-x_0)(x_i-x_1)\\cdots (x_i-x_{i-1})(x_i-x_{i+1})\\cdots (x_i-x_n)}\r\n\\]</span></p>\r\n<p>从形式上看，Lagrange 插值法是容易实现的，但如果加入新的数据点，则需要重新计算多项式系数，即算法随着数据点的增多不能复用以前的计算结果。</p>\r\n<div><div class=\"fold_hider\"><div class=\"close hider_title\">拉格朗日插值 Matlab 程序代码</div></div><div class=\"fold\">\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">[f, f0]</span> = <span class=\"title\">interp_lagrange</span><span class=\"params\">(x, y, x0, prec)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> nargin &lt;= <span class=\"number\">3</span>, prec = <span class=\"number\">4</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">length</span>(x) == <span class=\"built_in\">length</span>(y), n = <span class=\"built_in\">length</span>(x) - <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> error(<span class=\"string\">'Incompatible dimension of x and y !!'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    syms t;</span><br><span class=\"line\">    f = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> k = <span class=\"number\">1</span>:n</span><br><span class=\"line\">        xs = [x(<span class=\"number\">1</span>:k<span class=\"number\">-1</span>) x(k+<span class=\"number\">1</span>:n)];</span><br><span class=\"line\">        f = f + y(k) * prod((t-xs)./(x(k)-xs));</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    f = vpa(f, prec);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> nargin &gt; <span class=\"number\">2</span>, f0 = vpa(subs(f, t, x0), prec); <span class=\"keyword\">end</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n</div></div>\r\n<h2 id=\"艾特肯插值\">艾特肯插值</h2>\r\n<p>首先，由点 <span class=\"math inline\">\\((x_0, y_0)\\)</span> 到 <span class=\"math inline\">\\((x_j, y_j), j=1,2,\\ldots,n\\)</span> 可以确定 <span class=\"math inline\">\\(n\\)</span> 组一次多项式，即穿过两点的直线；第二步，根据 $$，进一步生成 <span class=\"math inline\">\\(n-1\\)</span> 组二次多项式。次过程共重复 <span class=\"math inline\">\\(n\\)</span> 次，最终得到一个 <span class=\"math inline\">\\(n\\)</span> 次多项式。</p>\r\n<p>具体而言，由点 <span class=\"math inline\">\\((x_0, y_0)\\)</span> 及 <span class=\"math inline\">\\((x_1, y_1)\\)</span> 得到的一次多项式为</p>\r\n<p><span class=\"math display\">\\[\r\n    p_{01}(x) = \\frac{x-x_1}{x_0-x_1}y_0 - \\frac{x-x_0}{x_1-x_0}y_1\r\n              = \\frac{1}{x_1-x_0} \\begin{vmatrix}\r\n                  y_0 &amp; x_0 - x \\\\\r\n                  y_1 &amp; x_1 - x\r\n                \\end{vmatrix}\r\n\\]</span></p>\r\n<p>类比之，由 <span class=\"math inline\">\\(x_0\\)</span> 及 <span class=\"math inline\">\\(x_j\\)</span> 确定的一次多项式表示为</p>\r\n<p><span class=\"math display\">\\[\r\n    p_{0j}(x) = \\frac{1}{x_j-x_0} \\begin{vmatrix}\r\n                    y_0 &amp; x_0 - x \\\\\r\n                    y_j &amp; x_j - x\r\n                \\end{vmatrix}, \\quad j = 1,2,\\ldots,n\r\n\\]</span></p>\r\n<p>进一步，由点 <span class=\"math inline\">\\((x_0, y_0), (x_1, y_1), (x_j, y_j)\\)</span> 确定的二次多项式为</p>\r\n<p><span class=\"math display\">\\[\r\n    p_{01j}(x) = \\frac{1}{x_j - x_1} \\begin{vmatrix}\r\n                     p_{01}(x) &amp; x_1 - x \\\\\r\n                     p_{0j}(x) &amp; x_j - x\r\n                 \\end{vmatrix}, \\quad j=2,3,\\ldots,n\r\n\\]</span></p>\r\n<p>一般而言，对于 <span class=\"math inline\">\\(k+2\\)</span> 个数据点 <span class=\"math inline\">\\((x_0, y_0), (x_1, y_1), \\ldots, (x_k, y_k)\\)</span> 及 <span class=\"math inline\">\\((x_j, y_j)\\)</span>，<span class=\"math inline\">\\(k+1\\)</span> 次插值多项式为</p>\r\n<p><span class=\"math display\">\\[\r\n    p_{012\\cdots kj}(x) = \\frac{1}{x_j - x_k}\r\n        \\begin{vmatrix}\r\n            p_{012\\cdots k}(x) &amp; x_k - x \\\\\r\n            p_{012\\cdots (k-1)}(x) &amp; x_j - x\r\n        \\end{vmatrix} \\quad j=k+1,\\ldots, n\r\n\\]</span></p>\r\n<p>整个计算过程如下表</p>\r\n<p><span class=\"math display\">\\[\r\n\\begin{array}{cccccc|c}\r\n    \\hline\r\n    x_j &amp;   y_j &amp;   p_{0j}  &amp;   p_{01j} &amp;   p_{012j}    &amp;   p_{0123j}   &amp;   x_j-x \\\\\r\n    \\hline\r\n    x_0 &amp;   y_0 &amp;           &amp;           &amp;               &amp;               &amp;   x_0-x \\\\\r\n    x_1 &amp;   y_1 &amp;   p_{01}  &amp;           &amp;               &amp;               &amp;   x_1-x \\\\\r\n    x_2 &amp;   y_2 &amp;   p_{02}  &amp;   p_{012} &amp;               &amp;               &amp;   x_2-x \\\\\r\n    x_3 &amp;   y_3 &amp;   p_{03}  &amp;   p_{013} &amp;   p_{0123}    &amp;               &amp;   x_3-x \\\\\r\n    x_4 &amp;   y_4 &amp;   p_{04}  &amp;   p_{014} &amp;   p_{0124}    &amp;   p_{01234}   &amp;   x_4-x \\\\\r\n    \\cdots      &amp;   \\cdots  &amp;   \\cdots  &amp;   \\cdots      &amp;   \\cdots      &amp;   \\cdots  &amp;   \\cdots \\\\\r\n    x_n &amp;   y_n &amp;   p_{0n}  &amp;   p_{01n} &amp;   p_{012n}    &amp;   p_{0123n}   &amp;   x_n-x \\\\\r\n    \\hline\r\n\\end{array}\r\n\\]</span></p>\r\n<div><div class=\"fold_hider\"><div class=\"close hider_title\">艾特肯插值 Matlab 程序代码</div></div><div class=\"fold\">\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">[f, f0]</span> = <span class=\"title\">interp_aitken</span><span class=\"params\">(x, y, x0, prec)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> nargin &lt;= <span class=\"number\">3</span>, prec = <span class=\"number\">4</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">length</span>(x) == <span class=\"built_in\">length</span>(y), n = <span class=\"built_in\">length</span>(x) - <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> error(<span class=\"string\">'Incompatible dimension of x and y !!'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    syms t;</span><br><span class=\"line\">    f = <span class=\"number\">0</span>;</span><br><span class=\"line\">    lastp = y;</span><br><span class=\"line\">    xs = x - t;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> k = <span class=\"number\">1</span>:n</span><br><span class=\"line\">        <span class=\"keyword\">for</span> <span class=\"built_in\">j</span> = k+<span class=\"number\">1</span>:n+<span class=\"number\">1</span></span><br><span class=\"line\">            curp(<span class=\"built_in\">j</span>) = (lastp(k)*xs(<span class=\"built_in\">j</span>) - lastp(<span class=\"built_in\">j</span>)*xs(k)) / (xs(<span class=\"built_in\">j</span>)-xs(k));</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        lastp = curp;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    f = vpa(simplify(lastp(<span class=\"keyword\">end</span>)), prec);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> nargin &gt; <span class=\"number\">2</span>, f0 = vpa(subs(f, t, x0), prec); <span class=\"keyword\">end</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n</div></div>\r\n","site":{"data":{}},"excerpt":"<p>微积分中对于连续或可导函数的研究虽有各路方法各显神通，但对于一个实际问题，若仅给出离散的数据点，通常首先要做的工作是根据这些离散点拟合出便于研究的连续函数。这类问题通常称作「数据拟合」，而其中的特殊情形便是函数插值。</p>","more":"<p>多项式拟合插值中最「直接」的算法，就是对于 <span class=\"math inline\">\\(n+1\\)</span> 个给定的数据点对 <span class=\"math inline\">\\((x_i, y_i), i=0,1,\\ldots,n\\)</span>，假设 <span class=\"math inline\">\\(n\\)</span> 次多项式 <span class=\"math inline\">\\(p_n(x)=\\sum\\limits_{i=0}^n a_ix^i\\)</span> 过所有的数据点，即 <span class=\"math inline\">\\(p_n(x_i) = y_i\\)</span>，即：</p>\r\n<p><span class=\"math display\">\\[\r\n    \\underbrace{\r\n    \\begin{pmatrix}\r\n        1 &amp; x_0^1 &amp; x_0^2 &amp; \\cdots &amp; x_0^{n-1} &amp; x_0^n \\\\\r\n        1 &amp; x_1^1 &amp; x_1^2 &amp; \\cdots &amp; x_1^{n-1} &amp; x_1^n \\\\\r\n        1 &amp; x_2^1 &amp; x_2^2 &amp; \\cdots &amp; x_2^{n-1} &amp; x_2^n \\\\\r\n        \\vdots &amp; \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots &amp; \\vdots \\\\\r\n        1 &amp; x_{n-1}^1 &amp; x_{n-1}^2 &amp; \\cdots &amp; x_{n-1}^{n-1} &amp; x_{n-1}^n \\\\\r\n        1 &amp; x_n^1 &amp; x_n^2 &amp; \\cdots &amp; x_n^{n-1} &amp; x_n^n\r\n    \\end{pmatrix}\r\n    }_{\\boldsymbol{V}}\r\n    \\underbrace{\r\n    \\begin{pmatrix}\r\n        a_0 \\vphantom{x_0^{n-1}} \\\\\r\n        a_1 \\vphantom{x_1^{n-1}} \\\\\r\n        a_2 \\vphantom{x_2^{n-1}} \\\\\r\n        \\vdots \\vphantom{\\ddots \\vdots} \\\\\r\n        a_{n-1} \\vphantom{x_{n-1}^{n-1}} \\\\\r\n        a_{n} \\vphantom{x_n^{n-1}}\r\n    \\end{pmatrix}\r\n    }_{\\boldsymbol{a}}\r\n    =\r\n    \\underbrace{\r\n    \\begin{pmatrix}\r\n        y_0 \\vphantom{x_0^{n-1}} \\\\\r\n        y_1 \\vphantom{x_1^{n-1}} \\\\\r\n        y_2 \\vphantom{x_2^{n-1}} \\\\\r\n        \\vdots \\vphantom{\\ddots \\vdots} \\\\\r\n        y_{n-1} \\vphantom{x_{n-1}^{n-1}} \\\\\r\n        y_{n} \\vphantom{x_n^{n-1}}\r\n    \\end{pmatrix}\r\n    }_{\\boldsymbol{y}}\r\n\\]</span></p>\r\n<p>显然 <span class=\"math inline\">\\(\\boldsymbol{V}\\)</span> 为 Vandermonde 矩阵。关于 Vandermonde 行列式的计算，这里列出两种计算方法。</p>\r\n<div><div class=\"fold_hider\"><div class=\"close hider_title\">Vandermonde 行列式计算方法</div></div><div class=\"fold\">\n<div class=\"note \">$n$ 阶 Vandermonde 行列式\n$$\nV_n = \\begin{vmatrix}\n  1 & x_1 & x_1^2 & \\cdots & x_1^{n-2} & x_1^{n-1} \\\\\n  1 & x_2 & x_2^2 & \\cdots & x_2^{n-2} & x_2^{n-1} \\\\\n\\vdots & \\vdots & \\vdots & \\ddots & \\vdots & \\vdots \\\\\n  1 & x_n & x_n^2 & \\cdots & x_n^{n-2} & x_n^{n-1}\n\\end{vmatrix}\n$$\n的值为\n$$\nV_n = \\prod_{1 \\mathop \\leqslant i \\mathop < j \\mathop \\leqslant n} \\left({x_j - x_i}\\right)\n$$</div>\n\n以下证明过程摘自 <a href=\"https://proofwiki.org/wiki/Vandermonde_Determinant\" target=\"_blank\" rel=\"noopener\">Vandermonde Determinant</a>。\n\n<p><strong>方法一</strong></p>\n\n从 $V_n$ 第二行开始，以后每行减去第一行，由初等变换得到的行列式值不变：\n\n\\begin{align*}\nV_n &= \\begin{vmatrix}\n  1 & x_1 & x_1^2 & \\cdots & x_1^{n-2} & x_1^{n-1} \\\\\n  1 & x_2 & x_2^2 & \\cdots & x_2^{n-2} & x_2^{n-1} \\\\\n  1 & x_3 & x_3^2 & \\cdots & x_3^{n-2} & x_3^{n-1} \\\\\n\\vdots & \\vdots & \\vdots & \\ddots & \\vdots & \\vdots \\\\\n  1 & x_{n-1} & x_{n-1}^2 & \\cdots & x_{n-1}^{n-2} & x_{n-1}^{n-1} \\\\\n  1 & x_n & x_n^2 & \\cdots & x_n^{n-2} & x_n^{n-1}\n\\end{vmatrix} \\\\\n&= \\begin{vmatrix}\n  1 & x_1 & x_1^2 & \\cdots & x_1^{n-2} & x_1^{n-1} \\\\\n  0 & x_2 - x_1 & x_2^2 - x_1^2 & \\cdots & x_2^{n-2} - x_1^{n-2} & x_2^{n-1} - x_1^{n-1} \\\\\n  0 & x_3 - x_1 & x_3^2 - x_1^2 & \\cdots & x_3^{n-2} - x_1^{n-2} & x_3^{n-1} - x_1^{n-1} \\\\\n\\vdots & \\vdots & \\vdots & \\ddots & \\vdots & \\vdots \\\\\n  0 & x_{n-1} - x_1 & x_{n-1}^2 - x_1^2 & \\cdots & x_{n-1}^{n-2} - x_1^{n-2} & x_{n-1}^{n-1} - x_1^{n-1} \\\\\n  0 & x_n - x_1 & x_n^2 - x_1^2 & \\cdots & x_n^{n-2} - x_1^{n-2} & x_n^{n-1} - x_1^{n-1}\n\\end{vmatrix} \\\\\n&= \\begin{vmatrix}\n  1 & 0 & 0 & \\cdots & 0 & 0 \\\\\n  0 & x_2 - x_1 & \\left({x_2 - x_1}\\right) x_2 & \\cdots & \\left({x_2 - x_1}\\right) x_2^{n-3} & \\left({x_2 - x_1}\\right) x_2^{n-2} \\\\\n  0 & x_3 - x_1 & \\left({x_3 - x_1}\\right) x_3 & \\cdots & \\left({x_3 - x_1}\\right) x_3^{n-3} & \\left({x_3 - x_1}\\right) x_3^{n-2} \\\\\n\\vdots & \\vdots & \\vdots & \\ddots & \\vdots & \\vdots \\\\\n  0 & x_{n-1} - x_1 & \\left({x_{n-1} - x_1}\\right) x_{n-1} & \\cdots & \\left({x_{n-1} - x_1}\\right) x_{n-1}^{n-3} & \\left({x_{n-1} - x_1}\\right) x_{n-1}^{n-2} \\\\\n  0 & x_n - x_1 & \\left({x_n - x_1}\\right) x_n & \\cdots & \\left({x_n - x_1}\\right) x_n^{n-3} & \\left({x_n - x_1}\\right) x_n^{n-2}\n\\end{vmatrix} \\\\\n&= \\prod_{k \\mathop = 2}^n \\left({x_k - x_1}\\right) \\begin{vmatrix}\n  1 & 0 & 0 & \\cdots & 0 & 0 \\\\\n  0 & 1 & x_2 & \\cdots & x_2^{n-3} & x_2^{n-2} \\\\\n  0 & 1 & x_3 & \\cdots & x_3^{n-3} & x_3^{n-2} \\\\\n\\vdots & \\vdots & \\vdots & \\ddots & \\vdots & \\vdots \\\\\n  0 & 1 & x_{n-1} & \\cdots & x_{n-1}^{n-3} & x_{n-1}^{n-2} \\\\\n  0 & 1 & x_n & \\cdots & x_n^{n-3} & x_n^{n-2}\n\\end{vmatrix} \\\\\n&= \\prod_{k \\mathop = 2}^n \\left({x_k - x_1}\\right) V_{n-1}\n\\end{align*}\n\n以此类推，\n\n$$\nV_n = \\prod_{k \\mathop = 2}^n \\left({x_k - x_1}\\right)\n    \\prod_{k \\mathop = 3}^n \\left({x_k - x_2}\\right) V_{n-2}\n= \\cdots\n= \\prod_{1 \\mathop \\leqslant i \\mathop < j \\mathop \\leqslant n} \\left({x_j - x_i}\\right)\n= \\prod_{1 \\mathop \\leqslant i \\mathop < j \\mathop \\leqslant n} \\left({x_j - x_i}\\right)\n$$\n\n<hr>\n\n<p><strong>方法二</strong></p>\n\n将行列式中 $V_n$ 中的所有 $x_n$ 替换为未知量 $x$，则 $V_n$ 可视为关于 $x$ 的 $n-1$ 次多项式，记为 $P(x)$，并按最后一行展开：\n\n\\begin{align*}\nP \\left({x}\\right)\n&= \\begin{vmatrix}\n  1 & x_1 & x_1^2 & \\cdots & x_1^{n-2} & x_1^{n-1} \\\\\n  1 & x_2 & x_2^2 & \\cdots & x_2^{n-2} & x_2^{n-1} \\\\\n  1 & x_3 & x_3^2 & \\cdots & x_3^{n-2} & x_3^{n-1} \\\\\n\\vdots & \\vdots & \\vdots & \\ddots & \\vdots & \\vdots \\\\\n  1 & x_{n-1} & x_{n-1}^2 & \\cdots & x_{n-1}^{n-2} & x_{n-1}^{n-1} \\\\\n  1 & x & x^2 & \\cdots & x^{n-2} & x^{n-1}\n\\end{vmatrix} \\\\\n&= \\begin{vmatrix}\n  x_1 & x_1^2 & \\cdots & x_1^{n-2} & x_1^{n-1} \\\\\n  x_2 & x_2^2 & \\cdots & x_2^{n-2} & x_2^{n-1} \\\\\n  x_3 & x_3^2 & \\cdots & x_3^{n-2} & x_3^{n-1} \\\\\n\\vdots & \\vdots & \\vdots & \\ddots & \\vdots \\\\\n  x_{n-1} & x_{n-1}^2 & \\cdots & x_{n-1}^{n-2} & x_{n-1}^{n-1}\n\\end{vmatrix} \\ \\  + \\ \\ \\begin{vmatrix}\n  1 & x_1^2 & \\cdots & x_1^{n-2} & x_1^{n-1} \\\\\n  1 & x_2^2 & \\cdots & x_2^{n-2} & x_2^{n-1} \\\\\n  1 & x_3^2 & \\cdots & x_3^{n-2} & x_3^{n-1} \\\\\n\\vdots & \\vdots & \\vdots & \\ddots & \\vdots \\\\\n  1 & x_{n-1}^2 & \\cdots & x_{n-1}^{n-2} & x_{n-1}^{n-1}\n\\end{vmatrix}x \\\\\n& \\mathrel{\\phantom{=}}\n+ \\ \\ \\cdots \\ \\ + \\ \\\n\\begin{vmatrix}\n  1 & x_1 & x_1^2 & \\cdots & x_1^{n-2} \\\\\n  1 & x_2 & x_2^2 & \\cdots & x_2^{n-2} \\\\\n  1 & x_3 & x_3^2 & \\cdots & x_3^{n-2} \\\\\n\\vdots & \\vdots & \\vdots & \\ddots & \\vdots \\\\\n  1 & x_{n-1} & x_{n-1}^2 & \\cdots & x_{n-1}^{n-2}\n\\end{vmatrix}x^{n-1}\n\\end{align*}\n\n显然 $P(x_1) = P(x_2) = \\cdots = P(x_{n-1}) = 0$，由多项式分解定理可知\n\n$$\n    P(x) = V_{n-1} \\prod_{i=1}^{n-1} (x-x_i)\n$$\n\n将 $x$ 替换成 $x_n$，由递推可得：\n\n$$\n    V_n = \\prod_{1 \\leqslant i < n} (x_n - x_i) V_{n-1}\n        = \\prod_{1 \\leqslant i < n} (x_n - x_i)\n          \\prod_{1 \\leqslant i < n-1} (x_{n-1} - x_i) V_{n-2}\n        = \\cdots\n        = \\prod_{1 \\leqslant i < j \\leqslant n} (x_j - x_i)\n$$\n\n<hr>\n\n</div></div>\r\n<p>但是解这个线性方程组是很不明智的，如果数据点较近，<span class=\"math inline\">\\(\\boldsymbol{V}\\)</span> 会接近奇异矩阵。而拉格朗日插值法则不需要硬着头皮解方程。</p>\r\n<h2 id=\"拉格朗日插值\">拉格朗日插值</h2>\r\n<p><span class=\"math inline\">\\(n\\)</span> 次 Lagrange 插值多项式系数 <span class=\"math inline\">\\(l_0(x), l_1(x), \\ldots, l_n(x)\\)</span> 定义为 <span class=\"math inline\">\\(l_i(x_j)= \\begin{cases} 1, &amp; i=j \\\\ 0, &amp; i\\neq j \\\\ \\end{cases}\\)</span>，则多项式可表示为</p>\r\n<p><span class=\"math display\">\\[\r\n    P(x) = y_0 l_0(x) + y_1l_1(x) + \\cdots + y_nl_n(x) = \\sum_{i=0}^n y_il_i(x)\r\n\\]</span></p>\r\n<p>注意这里的每个 <span class=\"math inline\">\\(l_i(x)\\)</span> 均为 <span class=\"math inline\">\\(n\\)</span> 次多项式，且由定义可知 <span class=\"math inline\">\\(l_i(x)\\)</span> 有 <span class=\"math inline\">\\(n\\)</span> 个根</p>\r\n<p><span class=\"math display\">\\[\r\n    x_0, x_1, x_2, \\ldots, x_{i-1}, x_{i+1}, \\ldots, x_n\r\n\\]</span></p>\r\n<p>所以 <span class=\"math inline\">\\(l_i(x)\\)</span> 可表示成 <span class=\"math inline\">\\(l_i(x) = C_i \\prod\\limits_{j\\neq i} (x - x_j)\\)</span>，进一步由 <span class=\"math inline\">\\(l_i(x)\\)</span> 定义，</p>\r\n<p><span class=\"math display\">\\[\r\n    1 = l_i(x_i) = C_i \\prod_{j\\neq i} (x_i - x_j)\r\n    \\ \\Rightarrow \\ C_i = \\frac{1}{\\prod\\limits_{j\\neq i} (x_i - x_j)}\r\n    \\ \\Rightarrow \\ l_i(x) = \\frac{\\prod\\limits_{j\\neq i}(x - x_j)}\r\n                                  {\\prod\\limits_{j\\neq i}(x_i - x_j)}\r\n\\]</span></p>\r\n<p>所以 Lagrange 插值多项式为</p>\r\n<p><span class=\"math display\">\\[\r\n    p(x) = \\sum_{i=0}^n y_i \\frac{\\prod\\limits_{j\\neq i}(x - x_j)}\r\n                             {\\prod\\limits_{j\\neq i}(x_i - x_j)}\r\n         = \\sum_{i=0}^n y_i \\frac{(x-x_0)(x-x_1)\\cdots (x-x_{i-1})(x-x_{i+1})\\cdots (x-x_n)}\r\n                                 {(x_i-x_0)(x_i-x_1)\\cdots (x_i-x_{i-1})(x_i-x_{i+1})\\cdots (x_i-x_n)}\r\n\\]</span></p>\r\n<p>从形式上看，Lagrange 插值法是容易实现的，但如果加入新的数据点，则需要重新计算多项式系数，即算法随着数据点的增多不能复用以前的计算结果。</p>\r\n<div><div class=\"fold_hider\"><div class=\"close hider_title\">拉格朗日插值 Matlab 程序代码</div></div><div class=\"fold\">\n<!--�43-->\n\n</div></div>\r\n<h2 id=\"艾特肯插值\">艾特肯插值</h2>\r\n<p>首先，由点 <span class=\"math inline\">\\((x_0, y_0)\\)</span> 到 <span class=\"math inline\">\\((x_j, y_j), j=1,2,\\ldots,n\\)</span> 可以确定 <span class=\"math inline\">\\(n\\)</span> 组一次多项式，即穿过两点的直线；第二步，根据 $$，进一步生成 <span class=\"math inline\">\\(n-1\\)</span> 组二次多项式。次过程共重复 <span class=\"math inline\">\\(n\\)</span> 次，最终得到一个 <span class=\"math inline\">\\(n\\)</span> 次多项式。</p>\r\n<p>具体而言，由点 <span class=\"math inline\">\\((x_0, y_0)\\)</span> 及 <span class=\"math inline\">\\((x_1, y_1)\\)</span> 得到的一次多项式为</p>\r\n<p><span class=\"math display\">\\[\r\n    p_{01}(x) = \\frac{x-x_1}{x_0-x_1}y_0 - \\frac{x-x_0}{x_1-x_0}y_1\r\n              = \\frac{1}{x_1-x_0} \\begin{vmatrix}\r\n                  y_0 &amp; x_0 - x \\\\\r\n                  y_1 &amp; x_1 - x\r\n                \\end{vmatrix}\r\n\\]</span></p>\r\n<p>类比之，由 <span class=\"math inline\">\\(x_0\\)</span> 及 <span class=\"math inline\">\\(x_j\\)</span> 确定的一次多项式表示为</p>\r\n<p><span class=\"math display\">\\[\r\n    p_{0j}(x) = \\frac{1}{x_j-x_0} \\begin{vmatrix}\r\n                    y_0 &amp; x_0 - x \\\\\r\n                    y_j &amp; x_j - x\r\n                \\end{vmatrix}, \\quad j = 1,2,\\ldots,n\r\n\\]</span></p>\r\n<p>进一步，由点 <span class=\"math inline\">\\((x_0, y_0), (x_1, y_1), (x_j, y_j)\\)</span> 确定的二次多项式为</p>\r\n<p><span class=\"math display\">\\[\r\n    p_{01j}(x) = \\frac{1}{x_j - x_1} \\begin{vmatrix}\r\n                     p_{01}(x) &amp; x_1 - x \\\\\r\n                     p_{0j}(x) &amp; x_j - x\r\n                 \\end{vmatrix}, \\quad j=2,3,\\ldots,n\r\n\\]</span></p>\r\n<p>一般而言，对于 <span class=\"math inline\">\\(k+2\\)</span> 个数据点 <span class=\"math inline\">\\((x_0, y_0), (x_1, y_1), \\ldots, (x_k, y_k)\\)</span> 及 <span class=\"math inline\">\\((x_j, y_j)\\)</span>，<span class=\"math inline\">\\(k+1\\)</span> 次插值多项式为</p>\r\n<p><span class=\"math display\">\\[\r\n    p_{012\\cdots kj}(x) = \\frac{1}{x_j - x_k}\r\n        \\begin{vmatrix}\r\n            p_{012\\cdots k}(x) &amp; x_k - x \\\\\r\n            p_{012\\cdots (k-1)}(x) &amp; x_j - x\r\n        \\end{vmatrix} \\quad j=k+1,\\ldots, n\r\n\\]</span></p>\r\n<p>整个计算过程如下表</p>\r\n<p><span class=\"math display\">\\[\r\n\\begin{array}{cccccc|c}\r\n    \\hline\r\n    x_j &amp;   y_j &amp;   p_{0j}  &amp;   p_{01j} &amp;   p_{012j}    &amp;   p_{0123j}   &amp;   x_j-x \\\\\r\n    \\hline\r\n    x_0 &amp;   y_0 &amp;           &amp;           &amp;               &amp;               &amp;   x_0-x \\\\\r\n    x_1 &amp;   y_1 &amp;   p_{01}  &amp;           &amp;               &amp;               &amp;   x_1-x \\\\\r\n    x_2 &amp;   y_2 &amp;   p_{02}  &amp;   p_{012} &amp;               &amp;               &amp;   x_2-x \\\\\r\n    x_3 &amp;   y_3 &amp;   p_{03}  &amp;   p_{013} &amp;   p_{0123}    &amp;               &amp;   x_3-x \\\\\r\n    x_4 &amp;   y_4 &amp;   p_{04}  &amp;   p_{014} &amp;   p_{0124}    &amp;   p_{01234}   &amp;   x_4-x \\\\\r\n    \\cdots      &amp;   \\cdots  &amp;   \\cdots  &amp;   \\cdots      &amp;   \\cdots      &amp;   \\cdots  &amp;   \\cdots \\\\\r\n    x_n &amp;   y_n &amp;   p_{0n}  &amp;   p_{01n} &amp;   p_{012n}    &amp;   p_{0123n}   &amp;   x_n-x \\\\\r\n    \\hline\r\n\\end{array}\r\n\\]</span></p>\r\n<div><div class=\"fold_hider\"><div class=\"close hider_title\">艾特肯插值 Matlab 程序代码</div></div><div class=\"fold\">\n<!--�44-->\n\n</div></div>"},{"title":"CentOS 服务器部署 Hexo 博客并利用 Webhook 自动更新","date":"2017-07-16T15:01:23.000Z","mathjax":true,"_content":"\n{% cq %}\n<a href=\"https://hexo.io\">Hexo, A fast, simple & powerful blog framework.</a>\n{% endcq %}\n\n<!-- more -->\n\n## 本地部署 Hexo\n\n### 安装\n\n根据 Hexo 官网的介绍，首先要安装 `Git` 以及 `Nodejs`，CentOS 系统下直接 `yum` 安装即可：\n\n```bash\nyum install git\nyum install nodejs\n```\n\n两个工具都装好之后，必要时设置 `npm` 的源：\n\n```bash\nnpm config set proxy https://domain:port\nnpm config set registry http://registry.npm.taobao.org/\n```\n\n利用 `npm` 安装 `hexo`：\n\n```bash\nnpm install hexo-cli -g\n```\n\n注意 `npm` 安装的包在 `~/.npm` 目录下（所以是用户级别的）。\n\n### 配置\n\n初始化 Hexo:\n\n```bash\nmkdir ~/Hexo\ncd ~/Hexo\nhexo init\nnpm install\n```\n\n`Hexo` 文件夹下的 `_config.yml` 为站点配置文件，比如\n\n```yaml _config.yml\n# Site\ntitle:\nsubtitle:\ndescription:\nauthor:\nlanguage:\ntimezone:\n```\n\n### 服务器\n\n这里摘自 Hexo 官网的介绍。安装 `hexo-server` 包：\n\n```bash\nnpm install hexo-server --save\n```\n\n那么输入\n\n```bash\nhexo server\n```\n\n网站就会在 `http://localhost:4000` 下启动，并且 Hexo 会监视文件变动并更新，如需改变端口或遇到 `EADDRINUSE` 错误，加上 `-p` 参数并指定端口：\n\n```bash\nhexo server -p 5000\n```\n\n### 生成器\n\n利用 `hexo generate` 或者 `hexo g` 即可生成静态文件，生成的文件目录为 `~/Hexo/public`。\n\n## 同步到代码托管平台\n\n安装 [hexo-deployer-git][hexo-deployer-git]：\n\n```bash\nnpm install hexo-deployer-git --save\n```\n\n在前述 `_config.yml` 文件中，找到 `deploy` 项，配置为：\n\n```yaml _config.yml\ndeploy:\n  type: git\n  repo:\n    github: git@github.com:xxx/blog.git\n    coding: git@git.coding.net:xxx/blog.git\n  branch: master\n```\n\n {% fa warning fw %} 这里将 Github 上的仓库命名为 `blog`，与后文中本地仓库名相同。\n\n直接利用 `hexo deploy` 或 `hexo d` 直接 push 到 Github 上。生成静态文件与同步可以合为一步（两者作用相同）：\n\n```bash\nhexo g -d\nhexo d -g\n```\n\n详细配置过程见[官方文档][hexo-deployment]。\n\n## 配置 Nginx\n\n添加 [Nginx][nginx] 的 repo 并安装：\n\n```bash\nrpm -ivh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm\nyum info nginx\nyum install nginx\n```\n\n`Nginx` 二进制文件所在目录为 `/usr/sbin/nginx`，配置目录为 `/etc/nginx/`。由于 `/etc/nginx/nginx.conf` 文件中包含\n\n```\ninclude /etc/nginx/conf.d/*.conf;\n```\n\n所以仅需在 `/etc/nginx/conf.d/` 下新建 `hexo.conf` 文件，配置网站信息即可：\n\n```nginx hexo.conf\nserver {\n  listen 80;\n  server_name domain.com;\n  root /var/www/blog;\n  index  index.html index.htm;\n}\n```\n\n- 启动Nginx服务：`service nginx start`\n- 重载Nginx服务：`service nginx reload`\n\n这里的 `root` 即为网站所在目录，大量的教程中将 `/var/www/` 设成网站所在目录，估计是约定俗成吧。那么这里就有权限问题了，刚入坑的我还并不是很了解 Linux 的权限机制，所以干脆决定在普通用户下生成静态文件，并同步至 Github，再利用系统用户利用 Webhook 从 Github 更新网站目录。\n\n## 配置 Webhook\n\n以 `root` 用户登录，创建两个文件：\n- `sync.sh`：用于从 Github 上 pull 数据，即更新本地网站目录，注意加上执行权限\n  {% codeblock sync.sh lang:bash %}\n  #!/bin/bash\n  echo -e \"\\033[32m [AUTO SYNC] sync hexo start \\033[0m\"\n  cd /var/www/blog\n  echo -e \"\\033[32m [AUTO SYNC] git pull...  \\033[0m\"\n  git fetch --all\n  git reset --hard origin/master\n  git pull\n  echo -e \"\\033[32m [AUTO SYNC] sync hexo finish \\033[0m\"\n  {% endcodeblock %}\n- `hexo-server.js`：接受 Github 的 post 信息后执行 `sync.sh`\n  {% codeblock hexo-server.js lang:javascript %}\n  var http = require('http')\n  var exec = require('child_process').exec\n  var createHandler = require('github-webhook-handler')\n  var handler = createHandler({ path: '/webhook', secret: '******' })\n\n  http.createServer(function (req, res) {\n    handler(req, res, function (err) {\n      res.statusCode = 404\n      res.end('no such location')\n    })\n  }).listen(7777)\n\n  handler.on('error', function (err) {\n    console.error('Error:', err.message)\n  })\n\n  handler.on('push', function (event) {\n    console.log('Received a push event for %s to %s',\n      event.payload.repository.name,\n      event.payload.ref)\n    exec('/root/Scripts/sync.sh', function(err, stdout, stderr){\n      if(err) {\n        console.log('sync server err: ' + stderr)\n      } else {\n        console.log(stdout)\n      }\n    })\n  })\n\n  handler.on('issues', function (event) {\n    console.log('Received an issue event for %s action=%s: #%d %s',\n      event.payload.repository.name,\n      event.payload.action,\n      event.payload.issue.number,\n      event.payload.issue.title)\n  })\n  {% endcodeblock %}\n\n注意 `hexo-server.js` 中的 `sync.sh` 填写的是绝对路径。  \n安装 `github-webhook-handler` 以及 `forever`：\n\n```bash\nnpm install github-webhook-handler\nnpm install forever -g\n```\n\n在 Github 的仓库设置的 Webhooks 选项中，`Payload URL` 填写为：\n\n```\nhttp://domain.com:7777/webhook\n```\n\n这里的端口7777与上面 `hexo-server.js` 中设定的端口是一致的，`Content type` 选择 `application/json`，秘钥 `Secret` 自行设置，与上述 `js` 文件中 `******` 相同。触发事件选择仅 `push` 的时候即可。之前生成静态文件并更新至 Github 时发现 Webhooks 设置页面最下方的记录中，总出现\n\n```bash\nWe couldn’t deliver this payload: Service Timeout\n```\n\n的提示，当然外网访问的博客也没有更新，说明是 Github 与阿里云服务器的沟通出了问题。结合之前部署 RStudio 服务器的经历，想起阿里云服务器配备了安全组，所以在阿里云服务器安全组规则设置页面中开放 7777 端口，这样才能正常访问。这里不知道是否可用 Nginx 来做中转，以后再折腾。  \n利用之前安装的 `forever` 运行 `js` 脚本：{% codeblock hexo-server.js %}\nforever start hexo-server.js\n{% endcodeblock %}\n当然如果要停止这个脚本: `forever stop ***.js`.\n\n于是，写完博客，`hexo g -d` 同步到 Github 仓库，就万事大吉了：Github 接受到这样的一个 `push` 请求之后向服务器特定端口发送了一个 HTTP POST，服务器接受到这个POST后自动执行 `sync.sh`，也就是到定位本地仓库/网页目录，从 Github 上拉取最新的网页文件。\n\n## 更新历史\n\n- 2017-07-17 {% fa plane fw %} 修改了部分主题样式，添加部分插件，注意利用 `npm` 安装插件必须加上 `--save` 选项！\n    - [{% fa font-awesome fw %}font-awesome][font-awesome] 图标：`hexo-tag-fontawesome`\n    - 字数统计插件 `hexo-wordcount`，不过最新版的NexT主题已经内置该功能\n    - RSS插件 `hexo-generator-feed`\n    - 本地搜索服务 `hexo-generator-searchdb`\n    - SEO优化 `hexo-generator-sitemap`，`hexo-generator-baidu-sitemap`\n- 2017-07-18 {% fa plane fw %} 发现外网访问服务器速度实在过慢，老实投靠 Github，Coding 进行双线部署，并更新博客为二级域名，在解析上下了点功夫。加之 Coding 可以强制 https 访问，遂抛弃 Github 部署\n- 2017-12-03 {% fa magic fw %} 增加 [$Mathjax$][mathjax] 支持。参考: [搭建一个支持LaTEX的hexo博客][csdn-50123231]。然而这里出现了一些意外状况，比如公式的分式的中横线显示偏低，这是不能接受的，首先将主题配置文件中 `mathjax` 设置为：\n  {% codeblock lang:yaml %}\n  mathjax:\n    enable: true\n    per_page: true\n    cdn: //cdn.bootcss.com/mathjax/2.7.2/latest.js?config=TeX-MML-AM_CHTML\n  {% endcodeblock %}\n  这末尾的 `config=...` 极其重要，就是被这玩意儿折腾良久。关键在于公式的渲染方式，在这儿应选 `Common HTML` 而不是坑爹的 `HTML-CSS`。\n  再折腾下文件 `themes/next/layout/_third-party/mathjax.swig`：\n  {% codeblock lang:javascript mathjax.swig %}\n  MathJax.Hub.Config({\n    showProcessingMessages: false,\n    messageStyle: \"none\",\n    tex2jax: {\n      inlineMath: [ ['$','$'], [\"\\\\(\",\"\\\\)\"] ],\n      displayMath: [ ['$$', '$$'], [\"\\\\[\", \"\\\\]\"] ],\n      processEscapes: true,\n      skipTags: ['script', 'noscript', 'style', 'textarea', 'pre', 'code']\n    },\n    TeX: {\n      equationNumbers: {\n        autoNumber: 'AMS'\n      },\n      extensions: [\"AMSmath.js\", \"AMSsymbols.js\", \"autobold.js\"]\n    }\n  });\n  {% endcodeblock %}\n  最后，对于 IE 浏览器兼容方面出现问题的解决方案：\n  {% codeblock lang:html mathjax.swig %}\n  <script type=\"text/javascript\" src=\"https://cdn.bootcss.com/mathjax/2.7.2/MathJax.js?config=TeX-MML-AM_CHTML\"></script>\n  <!-- <script type=\"text/javascript\" src=\"{{ theme.mathjax.cdn }}\"></script> -->\n  {% endcodeblock %}\n- 2017-12-03 {% fa street-view fw %} 再再次更换阵地 -- 把博客迁移至 [码云][gitee] （感觉访问速度更快些）\n- 2017-12-03 {% fa smile-o fw %} 再再再次更换阵地 -- 又回到码市的怀抱，因为码云不支持自定义域名，做跳转又不清真，我只想好好写个博客 ToT\n- 2017-12-03 {% fa plane fw %} 实现多端博客同步。这里采用比较暴力但高效的办法：在远程新建两个仓库，  一个私有仓库用户存储源文件（原始 Markdown 文件，各类魔改过的文件等，  将整个本地的 Hexo 目录作为本地仓库），一个公有仓库（用于展示网页）。那么这两个命令就可以手动同步了：\n  {% codeblock lang:bash %}\n  alias hexopull='git fetch --all && git reset --hard origin/master && git pull'\n  alias hexopush='hexo clean && hexo g -d && git add -A && git commit -m \"update\" && git push origin master'\n  {% endcodeblock %}\n- 2017-12-31 {% fa plane fw %} 更换 markdown 渲染引擎。\n  {% codeblock lang:bash %}\n  npm uninstall hexo-renderer-marked --save\n  npm install hexo-renderer-pandoc --save\n  {% endcodeblock %}\n- 2018-07-17 {% fa plane fw %} 添加脚注插件 `hexo-footnotes`\n- 2018-11-20 {% fa plane fw %} 将博客回归至 Github，并以 [Netlify][netlify] 作为持续集成\n\n[hexo-deployer-git]: https://github.com/hexojs/hexo-deployer-git\n[hexo-deployment]: https://hexo.io/zh-cn/docs/deployment.html\n[nginx]: https://nginx.org\n[font-awesome]: http://fontawesome.io\n[fufuheqiu]: http://blog.fufuheqiu.com\n[monsterlin]: https://monsterlin.github.io\n[2wildkids-hexo-math]: http://2wildkids.com/2016/10/06/如何处理Hexo和MathJax的兼容问题\n[mathjax]: https://www.mathjax.org\n[csdn-50123231]: http://blog.csdn.net/Emptyset110/article/details/50123231\n[gitee]: https://gitee.com\n[netlify]: https://www.netlify.com\n","source":"_posts/hexo-deployment-on-server.md","raw":"---\ntitle: CentOS 服务器部署 Hexo 博客并利用 Webhook 自动更新\ndate: 2017-07-16 23:01:23\ntags:\n    - Hexo\n    - Nginx\n    - Server\n    - Webhook\ncategories: Development\nmathjax: true\n---\n\n{% cq %}\n<a href=\"https://hexo.io\">Hexo, A fast, simple & powerful blog framework.</a>\n{% endcq %}\n\n<!-- more -->\n\n## 本地部署 Hexo\n\n### 安装\n\n根据 Hexo 官网的介绍，首先要安装 `Git` 以及 `Nodejs`，CentOS 系统下直接 `yum` 安装即可：\n\n```bash\nyum install git\nyum install nodejs\n```\n\n两个工具都装好之后，必要时设置 `npm` 的源：\n\n```bash\nnpm config set proxy https://domain:port\nnpm config set registry http://registry.npm.taobao.org/\n```\n\n利用 `npm` 安装 `hexo`：\n\n```bash\nnpm install hexo-cli -g\n```\n\n注意 `npm` 安装的包在 `~/.npm` 目录下（所以是用户级别的）。\n\n### 配置\n\n初始化 Hexo:\n\n```bash\nmkdir ~/Hexo\ncd ~/Hexo\nhexo init\nnpm install\n```\n\n`Hexo` 文件夹下的 `_config.yml` 为站点配置文件，比如\n\n```yaml _config.yml\n# Site\ntitle:\nsubtitle:\ndescription:\nauthor:\nlanguage:\ntimezone:\n```\n\n### 服务器\n\n这里摘自 Hexo 官网的介绍。安装 `hexo-server` 包：\n\n```bash\nnpm install hexo-server --save\n```\n\n那么输入\n\n```bash\nhexo server\n```\n\n网站就会在 `http://localhost:4000` 下启动，并且 Hexo 会监视文件变动并更新，如需改变端口或遇到 `EADDRINUSE` 错误，加上 `-p` 参数并指定端口：\n\n```bash\nhexo server -p 5000\n```\n\n### 生成器\n\n利用 `hexo generate` 或者 `hexo g` 即可生成静态文件，生成的文件目录为 `~/Hexo/public`。\n\n## 同步到代码托管平台\n\n安装 [hexo-deployer-git][hexo-deployer-git]：\n\n```bash\nnpm install hexo-deployer-git --save\n```\n\n在前述 `_config.yml` 文件中，找到 `deploy` 项，配置为：\n\n```yaml _config.yml\ndeploy:\n  type: git\n  repo:\n    github: git@github.com:xxx/blog.git\n    coding: git@git.coding.net:xxx/blog.git\n  branch: master\n```\n\n {% fa warning fw %} 这里将 Github 上的仓库命名为 `blog`，与后文中本地仓库名相同。\n\n直接利用 `hexo deploy` 或 `hexo d` 直接 push 到 Github 上。生成静态文件与同步可以合为一步（两者作用相同）：\n\n```bash\nhexo g -d\nhexo d -g\n```\n\n详细配置过程见[官方文档][hexo-deployment]。\n\n## 配置 Nginx\n\n添加 [Nginx][nginx] 的 repo 并安装：\n\n```bash\nrpm -ivh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm\nyum info nginx\nyum install nginx\n```\n\n`Nginx` 二进制文件所在目录为 `/usr/sbin/nginx`，配置目录为 `/etc/nginx/`。由于 `/etc/nginx/nginx.conf` 文件中包含\n\n```\ninclude /etc/nginx/conf.d/*.conf;\n```\n\n所以仅需在 `/etc/nginx/conf.d/` 下新建 `hexo.conf` 文件，配置网站信息即可：\n\n```nginx hexo.conf\nserver {\n  listen 80;\n  server_name domain.com;\n  root /var/www/blog;\n  index  index.html index.htm;\n}\n```\n\n- 启动Nginx服务：`service nginx start`\n- 重载Nginx服务：`service nginx reload`\n\n这里的 `root` 即为网站所在目录，大量的教程中将 `/var/www/` 设成网站所在目录，估计是约定俗成吧。那么这里就有权限问题了，刚入坑的我还并不是很了解 Linux 的权限机制，所以干脆决定在普通用户下生成静态文件，并同步至 Github，再利用系统用户利用 Webhook 从 Github 更新网站目录。\n\n## 配置 Webhook\n\n以 `root` 用户登录，创建两个文件：\n- `sync.sh`：用于从 Github 上 pull 数据，即更新本地网站目录，注意加上执行权限\n  {% codeblock sync.sh lang:bash %}\n  #!/bin/bash\n  echo -e \"\\033[32m [AUTO SYNC] sync hexo start \\033[0m\"\n  cd /var/www/blog\n  echo -e \"\\033[32m [AUTO SYNC] git pull...  \\033[0m\"\n  git fetch --all\n  git reset --hard origin/master\n  git pull\n  echo -e \"\\033[32m [AUTO SYNC] sync hexo finish \\033[0m\"\n  {% endcodeblock %}\n- `hexo-server.js`：接受 Github 的 post 信息后执行 `sync.sh`\n  {% codeblock hexo-server.js lang:javascript %}\n  var http = require('http')\n  var exec = require('child_process').exec\n  var createHandler = require('github-webhook-handler')\n  var handler = createHandler({ path: '/webhook', secret: '******' })\n\n  http.createServer(function (req, res) {\n    handler(req, res, function (err) {\n      res.statusCode = 404\n      res.end('no such location')\n    })\n  }).listen(7777)\n\n  handler.on('error', function (err) {\n    console.error('Error:', err.message)\n  })\n\n  handler.on('push', function (event) {\n    console.log('Received a push event for %s to %s',\n      event.payload.repository.name,\n      event.payload.ref)\n    exec('/root/Scripts/sync.sh', function(err, stdout, stderr){\n      if(err) {\n        console.log('sync server err: ' + stderr)\n      } else {\n        console.log(stdout)\n      }\n    })\n  })\n\n  handler.on('issues', function (event) {\n    console.log('Received an issue event for %s action=%s: #%d %s',\n      event.payload.repository.name,\n      event.payload.action,\n      event.payload.issue.number,\n      event.payload.issue.title)\n  })\n  {% endcodeblock %}\n\n注意 `hexo-server.js` 中的 `sync.sh` 填写的是绝对路径。  \n安装 `github-webhook-handler` 以及 `forever`：\n\n```bash\nnpm install github-webhook-handler\nnpm install forever -g\n```\n\n在 Github 的仓库设置的 Webhooks 选项中，`Payload URL` 填写为：\n\n```\nhttp://domain.com:7777/webhook\n```\n\n这里的端口7777与上面 `hexo-server.js` 中设定的端口是一致的，`Content type` 选择 `application/json`，秘钥 `Secret` 自行设置，与上述 `js` 文件中 `******` 相同。触发事件选择仅 `push` 的时候即可。之前生成静态文件并更新至 Github 时发现 Webhooks 设置页面最下方的记录中，总出现\n\n```bash\nWe couldn’t deliver this payload: Service Timeout\n```\n\n的提示，当然外网访问的博客也没有更新，说明是 Github 与阿里云服务器的沟通出了问题。结合之前部署 RStudio 服务器的经历，想起阿里云服务器配备了安全组，所以在阿里云服务器安全组规则设置页面中开放 7777 端口，这样才能正常访问。这里不知道是否可用 Nginx 来做中转，以后再折腾。  \n利用之前安装的 `forever` 运行 `js` 脚本：{% codeblock hexo-server.js %}\nforever start hexo-server.js\n{% endcodeblock %}\n当然如果要停止这个脚本: `forever stop ***.js`.\n\n于是，写完博客，`hexo g -d` 同步到 Github 仓库，就万事大吉了：Github 接受到这样的一个 `push` 请求之后向服务器特定端口发送了一个 HTTP POST，服务器接受到这个POST后自动执行 `sync.sh`，也就是到定位本地仓库/网页目录，从 Github 上拉取最新的网页文件。\n\n## 更新历史\n\n- 2017-07-17 {% fa plane fw %} 修改了部分主题样式，添加部分插件，注意利用 `npm` 安装插件必须加上 `--save` 选项！\n    - [{% fa font-awesome fw %}font-awesome][font-awesome] 图标：`hexo-tag-fontawesome`\n    - 字数统计插件 `hexo-wordcount`，不过最新版的NexT主题已经内置该功能\n    - RSS插件 `hexo-generator-feed`\n    - 本地搜索服务 `hexo-generator-searchdb`\n    - SEO优化 `hexo-generator-sitemap`，`hexo-generator-baidu-sitemap`\n- 2017-07-18 {% fa plane fw %} 发现外网访问服务器速度实在过慢，老实投靠 Github，Coding 进行双线部署，并更新博客为二级域名，在解析上下了点功夫。加之 Coding 可以强制 https 访问，遂抛弃 Github 部署\n- 2017-12-03 {% fa magic fw %} 增加 [$Mathjax$][mathjax] 支持。参考: [搭建一个支持LaTEX的hexo博客][csdn-50123231]。然而这里出现了一些意外状况，比如公式的分式的中横线显示偏低，这是不能接受的，首先将主题配置文件中 `mathjax` 设置为：\n  {% codeblock lang:yaml %}\n  mathjax:\n    enable: true\n    per_page: true\n    cdn: //cdn.bootcss.com/mathjax/2.7.2/latest.js?config=TeX-MML-AM_CHTML\n  {% endcodeblock %}\n  这末尾的 `config=...` 极其重要，就是被这玩意儿折腾良久。关键在于公式的渲染方式，在这儿应选 `Common HTML` 而不是坑爹的 `HTML-CSS`。\n  再折腾下文件 `themes/next/layout/_third-party/mathjax.swig`：\n  {% codeblock lang:javascript mathjax.swig %}\n  MathJax.Hub.Config({\n    showProcessingMessages: false,\n    messageStyle: \"none\",\n    tex2jax: {\n      inlineMath: [ ['$','$'], [\"\\\\(\",\"\\\\)\"] ],\n      displayMath: [ ['$$', '$$'], [\"\\\\[\", \"\\\\]\"] ],\n      processEscapes: true,\n      skipTags: ['script', 'noscript', 'style', 'textarea', 'pre', 'code']\n    },\n    TeX: {\n      equationNumbers: {\n        autoNumber: 'AMS'\n      },\n      extensions: [\"AMSmath.js\", \"AMSsymbols.js\", \"autobold.js\"]\n    }\n  });\n  {% endcodeblock %}\n  最后，对于 IE 浏览器兼容方面出现问题的解决方案：\n  {% codeblock lang:html mathjax.swig %}\n  <script type=\"text/javascript\" src=\"https://cdn.bootcss.com/mathjax/2.7.2/MathJax.js?config=TeX-MML-AM_CHTML\"></script>\n  <!-- <script type=\"text/javascript\" src=\"{{ theme.mathjax.cdn }}\"></script> -->\n  {% endcodeblock %}\n- 2017-12-03 {% fa street-view fw %} 再再次更换阵地 -- 把博客迁移至 [码云][gitee] （感觉访问速度更快些）\n- 2017-12-03 {% fa smile-o fw %} 再再再次更换阵地 -- 又回到码市的怀抱，因为码云不支持自定义域名，做跳转又不清真，我只想好好写个博客 ToT\n- 2017-12-03 {% fa plane fw %} 实现多端博客同步。这里采用比较暴力但高效的办法：在远程新建两个仓库，  一个私有仓库用户存储源文件（原始 Markdown 文件，各类魔改过的文件等，  将整个本地的 Hexo 目录作为本地仓库），一个公有仓库（用于展示网页）。那么这两个命令就可以手动同步了：\n  {% codeblock lang:bash %}\n  alias hexopull='git fetch --all && git reset --hard origin/master && git pull'\n  alias hexopush='hexo clean && hexo g -d && git add -A && git commit -m \"update\" && git push origin master'\n  {% endcodeblock %}\n- 2017-12-31 {% fa plane fw %} 更换 markdown 渲染引擎。\n  {% codeblock lang:bash %}\n  npm uninstall hexo-renderer-marked --save\n  npm install hexo-renderer-pandoc --save\n  {% endcodeblock %}\n- 2018-07-17 {% fa plane fw %} 添加脚注插件 `hexo-footnotes`\n- 2018-11-20 {% fa plane fw %} 将博客回归至 Github，并以 [Netlify][netlify] 作为持续集成\n\n[hexo-deployer-git]: https://github.com/hexojs/hexo-deployer-git\n[hexo-deployment]: https://hexo.io/zh-cn/docs/deployment.html\n[nginx]: https://nginx.org\n[font-awesome]: http://fontawesome.io\n[fufuheqiu]: http://blog.fufuheqiu.com\n[monsterlin]: https://monsterlin.github.io\n[2wildkids-hexo-math]: http://2wildkids.com/2016/10/06/如何处理Hexo和MathJax的兼容问题\n[mathjax]: https://www.mathjax.org\n[csdn-50123231]: http://blog.csdn.net/Emptyset110/article/details/50123231\n[gitee]: https://gitee.com\n[netlify]: https://www.netlify.com\n","slug":"hexo-deployment-on-server","published":1,"updated":"2023-03-09T16:09:38.230Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u336a0012p4x06xflg7mi","content":"<blockquote class=\"blockquote-center\"><a href=\"https://hexo.io\" target=\"_blank\" rel=\"noopener\">Hexo, A fast, simple & powerful blog framework.</a></blockquote>\r\n<a id=\"more\"></a>\r\n<h2 id=\"本地部署-hexo\">本地部署 Hexo</h2>\r\n<h3 id=\"安装\">安装</h3>\r\n<p>根据 Hexo 官网的介绍，首先要安装 <code>Git</code> 以及 <code>Nodejs</code>，CentOS 系统下直接 <code>yum</code> 安装即可：</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install git</span><br><span class=\"line\">yum install nodejs</span><br></pre></td></tr></table></figure>\r\n<p>两个工具都装好之后，必要时设置 <code>npm</code> 的源：</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config <span class=\"built_in\">set</span> proxy https://domain:port</span><br><span class=\"line\">npm config <span class=\"built_in\">set</span> registry http://registry.npm.taobao.org/</span><br></pre></td></tr></table></figure>\r\n<p>利用 <code>npm</code> 安装 <code>hexo</code>：</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>\r\n<p>注意 <code>npm</code> 安装的包在 <code>~/.npm</code> 目录下（所以是用户级别的）。</p>\r\n<h3 id=\"配置\">配置</h3>\r\n<p>初始化 Hexo:</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir ~/Hexo</span><br><span class=\"line\"><span class=\"built_in\">cd</span> ~/Hexo</span><br><span class=\"line\">hexo init</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\r\n<p><code>Hexo</code> 文件夹下的 <code>_config.yml</code> 为站点配置文件，比如</p>\r\n<figure class=\"highlight yaml\"><figcaption><span>_config.yml</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Site</span></span><br><span class=\"line\"><span class=\"attr\">title:</span></span><br><span class=\"line\"><span class=\"attr\">subtitle:</span></span><br><span class=\"line\"><span class=\"attr\">description:</span></span><br><span class=\"line\"><span class=\"attr\">author:</span></span><br><span class=\"line\"><span class=\"attr\">language:</span></span><br><span class=\"line\"><span class=\"attr\">timezone:</span></span><br></pre></td></tr></table></figure>\r\n<h3 id=\"服务器\">服务器</h3>\r\n<p>这里摘自 Hexo 官网的介绍。安装 <code>hexo-server</code> 包：</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-server --save</span><br></pre></td></tr></table></figure>\r\n<p>那么输入</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\r\n<p>网站就会在 <code>http://localhost:4000</code> 下启动，并且 Hexo 会监视文件变动并更新，如需改变端口或遇到 <code>EADDRINUSE</code> 错误，加上 <code>-p</code> 参数并指定端口：</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo server -p 5000</span><br></pre></td></tr></table></figure>\r\n<h3 id=\"生成器\">生成器</h3>\r\n<p>利用 <code>hexo generate</code> 或者 <code>hexo g</code> 即可生成静态文件，生成的文件目录为 <code>~/Hexo/public</code>。</p>\r\n<h2 id=\"同步到代码托管平台\">同步到代码托管平台</h2>\r\n<p>安装 <a href=\"https://github.com/hexojs/hexo-deployer-git\" target=\"_blank\" rel=\"noopener\">hexo-deployer-git</a>：</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\r\n<p>在前述 <code>_config.yml</code> 文件中，找到 <code>deploy</code> 项，配置为：</p>\r\n<figure class=\"highlight yaml\"><figcaption><span>_config.yml</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">git</span></span><br><span class=\"line\"><span class=\"attr\">  repo:</span></span><br><span class=\"line\"><span class=\"attr\">    github:</span> <span class=\"string\">git@github.com:xxx/blog.git</span></span><br><span class=\"line\"><span class=\"attr\">    coding:</span> <span class=\"string\">git@git.coding.net:xxx/blog.git</span></span><br><span class=\"line\"><span class=\"attr\">  branch:</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\r\n<p><i class=\"fa fa-warning fa-fw\"></i> 这里将 Github 上的仓库命名为 <code>blog</code>，与后文中本地仓库名相同。</p>\r\n<p>直接利用 <code>hexo deploy</code> 或 <code>hexo d</code> 直接 push 到 Github 上。生成静态文件与同步可以合为一步（两者作用相同）：</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g -d</span><br><span class=\"line\">hexo d -g</span><br></pre></td></tr></table></figure>\r\n<p>详细配置过程见<a href=\"https://hexo.io/zh-cn/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">官方文档</a>。</p>\r\n<h2 id=\"配置-nginx\">配置 Nginx</h2>\r\n<p>添加 <a href=\"https://nginx.org\" target=\"_blank\" rel=\"noopener\">Nginx</a> 的 repo 并安装：</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -ivh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm</span><br><span class=\"line\">yum info nginx</span><br><span class=\"line\">yum install nginx</span><br></pre></td></tr></table></figure>\r\n<p><code>Nginx</code> 二进制文件所在目录为 <code>/usr/sbin/nginx</code>，配置目录为 <code>/etc/nginx/</code>。由于 <code>/etc/nginx/nginx.conf</code> 文件中包含</p>\r\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">include /etc/nginx/conf.d/*.conf;</span><br></pre></td></tr></table></figure>\r\n<p>所以仅需在 <code>/etc/nginx/conf.d/</code> 下新建 <code>hexo.conf</code> 文件，配置网站信息即可：</p>\r\n<figure class=\"highlight nginx\"><figcaption><span>hexo.conf</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">  <span class=\"attribute\">server_name</span> domain.com;</span><br><span class=\"line\">  <span class=\"attribute\">root</span> /var/www/blog;</span><br><span class=\"line\">  <span class=\"attribute\">index</span>  index.html index.htm;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<ul>\r\n<li>启动Nginx服务：<code>service nginx start</code></li>\r\n<li>重载Nginx服务：<code>service nginx reload</code></li>\r\n</ul>\r\n<p>这里的 <code>root</code> 即为网站所在目录，大量的教程中将 <code>/var/www/</code> 设成网站所在目录，估计是约定俗成吧。那么这里就有权限问题了，刚入坑的我还并不是很了解 Linux 的权限机制，所以干脆决定在普通用户下生成静态文件，并同步至 Github，再利用系统用户利用 Webhook 从 Github 更新网站目录。</p>\r\n<h2 id=\"配置-webhook\">配置 Webhook</h2>\r\n<p>以 <code>root</code> 用户登录，创建两个文件： - <code>sync.sh</code>：用于从 Github 上 pull 数据，即更新本地网站目录，注意加上执行权限 <figure class=\"highlight bash\"><figcaption><span>sync.sh</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"\\033[32m [AUTO SYNC] sync hexo start \\033[0m\"</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /var/www/blog</span><br><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"\\033[32m [AUTO SYNC] git pull...  \\033[0m\"</span></span><br><span class=\"line\">git fetch --all</span><br><span class=\"line\">git reset --hard origin/master</span><br><span class=\"line\">git pull</span><br><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"\\033[32m [AUTO SYNC] sync hexo finish \\033[0m\"</span></span><br></pre></td></tr></table></figure> - <code>hexo-server.js</code>：接受 Github 的 post 信息后执行 <code>sync.sh</code> <figure class=\"highlight javascript\"><figcaption><span>hexo-server.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> http = <span class=\"built_in\">require</span>(<span class=\"string\">'http'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> exec = <span class=\"built_in\">require</span>(<span class=\"string\">'child_process'</span>).exec</span><br><span class=\"line\"><span class=\"keyword\">var</span> createHandler = <span class=\"built_in\">require</span>(<span class=\"string\">'github-webhook-handler'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> handler = createHandler(&#123; <span class=\"attr\">path</span>: <span class=\"string\">'/webhook'</span>, <span class=\"attr\">secret</span>: <span class=\"string\">'******'</span> &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">http.createServer(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res</span>) </span>&#123;</span><br><span class=\"line\">  handler(req, res, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err</span>) </span>&#123;</span><br><span class=\"line\">    res.statusCode = <span class=\"number\">404</span></span><br><span class=\"line\">    res.end(<span class=\"string\">'no such location'</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;).listen(<span class=\"number\">7777</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">handler.on(<span class=\"string\">'error'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.error(<span class=\"string\">'Error:'</span>, err.message)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">handler.on(<span class=\"string\">'push'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">event</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'Received a push event for %s to %s'</span>,</span><br><span class=\"line\">    event.payload.repository.name,</span><br><span class=\"line\">    event.payload.ref)</span><br><span class=\"line\">  exec(<span class=\"string\">'/root/Scripts/sync.sh'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err, stdout, stderr</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(err) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'sync server err: '</span> + stderr)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(stdout)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">handler.on(<span class=\"string\">'issues'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">event</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'Received an issue event for %s action=%s: #%d %s'</span>,</span><br><span class=\"line\">    event.payload.repository.name,</span><br><span class=\"line\">    event.payload.action,</span><br><span class=\"line\">    event.payload.issue.number,</span><br><span class=\"line\">    event.payload.issue.title)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\r\n<p>注意 <code>hexo-server.js</code> 中的 <code>sync.sh</code> 填写的是绝对路径。<br>\r\n安装 <code>github-webhook-handler</code> 以及 <code>forever</code>：</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install github-webhook-handler</span><br><span class=\"line\">npm install forever -g</span><br></pre></td></tr></table></figure>\r\n<p>在 Github 的仓库设置的 Webhooks 选项中，<code>Payload URL</code> 填写为：</p>\r\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://domain.com:7777/webhook</span><br></pre></td></tr></table></figure>\r\n<p>这里的端口7777与上面 <code>hexo-server.js</code> 中设定的端口是一致的，<code>Content type</code> 选择 <code>application/json</code>，秘钥 <code>Secret</code> 自行设置，与上述 <code>js</code> 文件中 <code>******</code> 相同。触发事件选择仅 <code>push</code> 的时候即可。之前生成静态文件并更新至 Github 时发现 Webhooks 设置页面最下方的记录中，总出现</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">We couldn’t deliver this payload: Service Timeout</span><br></pre></td></tr></table></figure>\r\n<p>的提示，当然外网访问的博客也没有更新，说明是 Github 与阿里云服务器的沟通出了问题。结合之前部署 RStudio 服务器的经历，想起阿里云服务器配备了安全组，所以在阿里云服务器安全组规则设置页面中开放 7777 端口，这样才能正常访问。这里不知道是否可用 Nginx 来做中转，以后再折腾。<br>\r\n利用之前安装的 <code>forever</code> 运行 <code>js</code> 脚本：<figure class=\"highlight plain\"><figcaption><span>hexo-server.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">forever start hexo-server.js</span><br></pre></td></tr></table></figure> 当然如果要停止这个脚本: <code>forever stop ***.js</code>.</p>\r\n<p>于是，写完博客，<code>hexo g -d</code> 同步到 Github 仓库，就万事大吉了：Github 接受到这样的一个 <code>push</code> 请求之后向服务器特定端口发送了一个 HTTP POST，服务器接受到这个POST后自动执行 <code>sync.sh</code>，也就是到定位本地仓库/网页目录，从 Github 上拉取最新的网页文件。</p>\r\n<h2 id=\"更新历史\">更新历史</h2>\r\n<ul>\r\n<li>2017-07-17 <i class=\"fa fa-plane fa-fw\"></i> 修改了部分主题样式，添加部分插件，注意利用 <code>npm</code> 安装插件必须加上 <code>--save</code> 选项！\r\n<ul>\r\n<li><a href=\"http://fontawesome.io\" target=\"_blank\" rel=\"noopener\"><i class=\"fa fa-font-awesome fa-fw\"></i>font-awesome</a> 图标：<code>hexo-tag-fontawesome</code></li>\r\n<li>字数统计插件 <code>hexo-wordcount</code>，不过最新版的NexT主题已经内置该功能</li>\r\n<li>RSS插件 <code>hexo-generator-feed</code></li>\r\n<li>本地搜索服务 <code>hexo-generator-searchdb</code></li>\r\n<li>SEO优化 <code>hexo-generator-sitemap</code>，<code>hexo-generator-baidu-sitemap</code></li>\r\n</ul></li>\r\n<li>2017-07-18 <i class=\"fa fa-plane fa-fw\"></i> 发现外网访问服务器速度实在过慢，老实投靠 Github，Coding 进行双线部署，并更新博客为二级域名，在解析上下了点功夫。加之 Coding 可以强制 https 访问，遂抛弃 Github 部署</li>\r\n<li>2017-12-03 <i class=\"fa fa-magic fa-fw\"></i> 增加 <a href=\"https://www.mathjax.org\" target=\"_blank\" rel=\"noopener\"><span class=\"math inline\">\\(Mathjax\\)</span></a> 支持。参考: <a href=\"http://blog.csdn.net/Emptyset110/article/details/50123231\" target=\"_blank\" rel=\"noopener\">搭建一个支持LaTEX的hexo博客</a>。然而这里出现了一些意外状况，比如公式的分式的中横线显示偏低，这是不能接受的，首先将主题配置文件中 <code>mathjax</code> 设置为： <figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">mathjax:</span></span><br><span class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  per_page:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  cdn:</span> <span class=\"string\">//cdn.bootcss.com/mathjax/2.7.2/latest.js?config=TeX-MML-AM_CHTML</span></span><br></pre></td></tr></table></figure> 这末尾的 <code>config=...</code> 极其重要，就是被这玩意儿折腾良久。关键在于公式的渲染方式，在这儿应选 <code>Common HTML</code> 而不是坑爹的 <code>HTML-CSS</code>。 再折腾下文件 <code>themes/next/layout/_third-party/mathjax.swig</code>： <figure class=\"highlight javascript\"><figcaption><span>mathjax.swig</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MathJax.Hub.Config(&#123;</span><br><span class=\"line\">  showProcessingMessages: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  messageStyle: <span class=\"string\">\"none\"</span>,</span><br><span class=\"line\">  tex2jax: &#123;</span><br><span class=\"line\">    inlineMath: [ [<span class=\"string\">'$'</span>,<span class=\"string\">'$'</span>], [<span class=\"string\">\"\\\\(\"</span>,<span class=\"string\">\"\\\\)\"</span>] ],</span><br><span class=\"line\">    displayMath: [ [<span class=\"string\">'$$'</span>, <span class=\"string\">'$$'</span>], [<span class=\"string\">\"\\\\[\"</span>, <span class=\"string\">\"\\\\]\"</span>] ],</span><br><span class=\"line\">    processEscapes: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    skipTags: [<span class=\"string\">'script'</span>, <span class=\"string\">'noscript'</span>, <span class=\"string\">'style'</span>, <span class=\"string\">'textarea'</span>, <span class=\"string\">'pre'</span>, <span class=\"string\">'code'</span>]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  TeX: &#123;</span><br><span class=\"line\">    equationNumbers: &#123;</span><br><span class=\"line\">      autoNumber: <span class=\"string\">'AMS'</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    extensions: [<span class=\"string\">\"AMSmath.js\"</span>, <span class=\"string\">\"AMSsymbols.js\"</span>, <span class=\"string\">\"autobold.js\"</span>]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure> 最后，对于 IE 浏览器兼容方面出现问题的解决方案： <figure class=\"highlight html\"><figcaption><span>mathjax.swig</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://cdn.bootcss.com/mathjax/2.7.2/MathJax.js?config=TeX-MML-AM_CHTML\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- &lt;script type=\"text/javascript\" src=\"\"&gt;&lt;/script&gt; --&gt;</span></span><br></pre></td></tr></table></figure></li>\r\n<li>2017-12-03 <i class=\"fa fa-street-view fa-fw\"></i> 再再次更换阵地 – 把博客迁移至 <a href=\"https://gitee.com\" target=\"_blank\" rel=\"noopener\">码云</a> （感觉访问速度更快些）</li>\r\n<li>2017-12-03 <i class=\"fa fa-smile-o fa-fw\"></i> 再再再次更换阵地 – 又回到码市的怀抱，因为码云不支持自定义域名，做跳转又不清真，我只想好好写个博客 ToT</li>\r\n<li>2017-12-03 <i class=\"fa fa-plane fa-fw\"></i> 实现多端博客同步。这里采用比较暴力但高效的办法：在远程新建两个仓库， 一个私有仓库用户存储源文件（原始 Markdown 文件，各类魔改过的文件等， 将整个本地的 Hexo 目录作为本地仓库），一个公有仓库（用于展示网页）。那么这两个命令就可以手动同步了： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">alias</span> hexopull=<span class=\"string\">'git fetch --all &amp;&amp; git reset --hard origin/master &amp;&amp; git pull'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> hexopush=<span class=\"string\">'hexo clean &amp;&amp; hexo g -d &amp;&amp; git add -A &amp;&amp; git commit -m \"update\" &amp;&amp; git push origin master'</span></span><br></pre></td></tr></table></figure></li>\r\n<li>2017-12-31 <i class=\"fa fa-plane fa-fw\"></i> 更换 markdown 渲染引擎。 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm uninstall hexo-renderer-marked --save</span><br><span class=\"line\">npm install hexo-renderer-pandoc --save</span><br></pre></td></tr></table></figure></li>\r\n<li>2018-07-17 <i class=\"fa fa-plane fa-fw\"></i> 添加脚注插件 <code>hexo-footnotes</code></li>\r\n<li>2018-11-20 <i class=\"fa fa-plane fa-fw\"></i> 将博客回归至 Github，并以 <a href=\"https://www.netlify.com\" target=\"_blank\" rel=\"noopener\">Netlify</a> 作为持续集成</li>\r\n</ul>\r\n","site":{"data":{}},"excerpt":"<blockquote class=\"blockquote-center\"><a href=\"https://hexo.io\" target=\"_blank\" rel=\"noopener\">Hexo, A fast, simple & powerful blog framework.</a></blockquote>","more":"<h2 id=\"本地部署-hexo\">本地部署 Hexo</h2>\r\n<h3 id=\"安装\">安装</h3>\r\n<p>根据 Hexo 官网的介绍，首先要安装 <code>Git</code> 以及 <code>Nodejs</code>，CentOS 系统下直接 <code>yum</code> 安装即可：</p>\r\n<!--�45-->\r\n<p>两个工具都装好之后，必要时设置 <code>npm</code> 的源：</p>\r\n<!--�46-->\r\n<p>利用 <code>npm</code> 安装 <code>hexo</code>：</p>\r\n<!--�47-->\r\n<p>注意 <code>npm</code> 安装的包在 <code>~/.npm</code> 目录下（所以是用户级别的）。</p>\r\n<h3 id=\"配置\">配置</h3>\r\n<p>初始化 Hexo:</p>\r\n<!--�48-->\r\n<p><code>Hexo</code> 文件夹下的 <code>_config.yml</code> 为站点配置文件，比如</p>\r\n<!--�49-->\r\n<h3 id=\"服务器\">服务器</h3>\r\n<p>这里摘自 Hexo 官网的介绍。安装 <code>hexo-server</code> 包：</p>\r\n<!--�50-->\r\n<p>那么输入</p>\r\n<!--�51-->\r\n<p>网站就会在 <code>http://localhost:4000</code> 下启动，并且 Hexo 会监视文件变动并更新，如需改变端口或遇到 <code>EADDRINUSE</code> 错误，加上 <code>-p</code> 参数并指定端口：</p>\r\n<!--�52-->\r\n<h3 id=\"生成器\">生成器</h3>\r\n<p>利用 <code>hexo generate</code> 或者 <code>hexo g</code> 即可生成静态文件，生成的文件目录为 <code>~/Hexo/public</code>。</p>\r\n<h2 id=\"同步到代码托管平台\">同步到代码托管平台</h2>\r\n<p>安装 <a href=\"https://github.com/hexojs/hexo-deployer-git\" target=\"_blank\" rel=\"noopener\">hexo-deployer-git</a>：</p>\r\n<!--�53-->\r\n<p>在前述 <code>_config.yml</code> 文件中，找到 <code>deploy</code> 项，配置为：</p>\r\n<!--�54-->\r\n<p><i class=\"fa fa-warning fa-fw\"></i> 这里将 Github 上的仓库命名为 <code>blog</code>，与后文中本地仓库名相同。</p>\r\n<p>直接利用 <code>hexo deploy</code> 或 <code>hexo d</code> 直接 push 到 Github 上。生成静态文件与同步可以合为一步（两者作用相同）：</p>\r\n<!--�55-->\r\n<p>详细配置过程见<a href=\"https://hexo.io/zh-cn/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">官方文档</a>。</p>\r\n<h2 id=\"配置-nginx\">配置 Nginx</h2>\r\n<p>添加 <a href=\"https://nginx.org\" target=\"_blank\" rel=\"noopener\">Nginx</a> 的 repo 并安装：</p>\r\n<!--�56-->\r\n<p><code>Nginx</code> 二进制文件所在目录为 <code>/usr/sbin/nginx</code>，配置目录为 <code>/etc/nginx/</code>。由于 <code>/etc/nginx/nginx.conf</code> 文件中包含</p>\r\n<!--�57-->\r\n<p>所以仅需在 <code>/etc/nginx/conf.d/</code> 下新建 <code>hexo.conf</code> 文件，配置网站信息即可：</p>\r\n<!--�58-->\r\n<ul>\r\n<li>启动Nginx服务：<code>service nginx start</code></li>\r\n<li>重载Nginx服务：<code>service nginx reload</code></li>\r\n</ul>\r\n<p>这里的 <code>root</code> 即为网站所在目录，大量的教程中将 <code>/var/www/</code> 设成网站所在目录，估计是约定俗成吧。那么这里就有权限问题了，刚入坑的我还并不是很了解 Linux 的权限机制，所以干脆决定在普通用户下生成静态文件，并同步至 Github，再利用系统用户利用 Webhook 从 Github 更新网站目录。</p>\r\n<h2 id=\"配置-webhook\">配置 Webhook</h2>\r\n<p>以 <code>root</code> 用户登录，创建两个文件： - <code>sync.sh</code>：用于从 Github 上 pull 数据，即更新本地网站目录，注意加上执行权限 <figure class=\"highlight bash\"><figcaption><span>sync.sh</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"\\033[32m [AUTO SYNC] sync hexo start \\033[0m\"</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /var/www/blog</span><br><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"\\033[32m [AUTO SYNC] git pull...  \\033[0m\"</span></span><br><span class=\"line\">git fetch --all</span><br><span class=\"line\">git reset --hard origin/master</span><br><span class=\"line\">git pull</span><br><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"\\033[32m [AUTO SYNC] sync hexo finish \\033[0m\"</span></span><br></pre></td></tr></table></figure> - <code>hexo-server.js</code>：接受 Github 的 post 信息后执行 <code>sync.sh</code> <figure class=\"highlight javascript\"><figcaption><span>hexo-server.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> http = <span class=\"built_in\">require</span>(<span class=\"string\">'http'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> exec = <span class=\"built_in\">require</span>(<span class=\"string\">'child_process'</span>).exec</span><br><span class=\"line\"><span class=\"keyword\">var</span> createHandler = <span class=\"built_in\">require</span>(<span class=\"string\">'github-webhook-handler'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> handler = createHandler(&#123; <span class=\"attr\">path</span>: <span class=\"string\">'/webhook'</span>, <span class=\"attr\">secret</span>: <span class=\"string\">'******'</span> &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">http.createServer(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res</span>) </span>&#123;</span><br><span class=\"line\">  handler(req, res, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err</span>) </span>&#123;</span><br><span class=\"line\">    res.statusCode = <span class=\"number\">404</span></span><br><span class=\"line\">    res.end(<span class=\"string\">'no such location'</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;).listen(<span class=\"number\">7777</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">handler.on(<span class=\"string\">'error'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.error(<span class=\"string\">'Error:'</span>, err.message)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">handler.on(<span class=\"string\">'push'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">event</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'Received a push event for %s to %s'</span>,</span><br><span class=\"line\">    event.payload.repository.name,</span><br><span class=\"line\">    event.payload.ref)</span><br><span class=\"line\">  exec(<span class=\"string\">'/root/Scripts/sync.sh'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err, stdout, stderr</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(err) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'sync server err: '</span> + stderr)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(stdout)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">handler.on(<span class=\"string\">'issues'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">event</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'Received an issue event for %s action=%s: #%d %s'</span>,</span><br><span class=\"line\">    event.payload.repository.name,</span><br><span class=\"line\">    event.payload.action,</span><br><span class=\"line\">    event.payload.issue.number,</span><br><span class=\"line\">    event.payload.issue.title)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\r\n<p>注意 <code>hexo-server.js</code> 中的 <code>sync.sh</code> 填写的是绝对路径。<br>\r\n安装 <code>github-webhook-handler</code> 以及 <code>forever</code>：</p>\r\n<!--�59-->\r\n<p>在 Github 的仓库设置的 Webhooks 选项中，<code>Payload URL</code> 填写为：</p>\r\n<!--�60-->\r\n<p>这里的端口7777与上面 <code>hexo-server.js</code> 中设定的端口是一致的，<code>Content type</code> 选择 <code>application/json</code>，秘钥 <code>Secret</code> 自行设置，与上述 <code>js</code> 文件中 <code>******</code> 相同。触发事件选择仅 <code>push</code> 的时候即可。之前生成静态文件并更新至 Github 时发现 Webhooks 设置页面最下方的记录中，总出现</p>\r\n<!--�61-->\r\n<p>的提示，当然外网访问的博客也没有更新，说明是 Github 与阿里云服务器的沟通出了问题。结合之前部署 RStudio 服务器的经历，想起阿里云服务器配备了安全组，所以在阿里云服务器安全组规则设置页面中开放 7777 端口，这样才能正常访问。这里不知道是否可用 Nginx 来做中转，以后再折腾。<br>\r\n利用之前安装的 <code>forever</code> 运行 <code>js</code> 脚本：<figure class=\"highlight plain\"><figcaption><span>hexo-server.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">forever start hexo-server.js</span><br></pre></td></tr></table></figure> 当然如果要停止这个脚本: <code>forever stop ***.js</code>.</p>\r\n<p>于是，写完博客，<code>hexo g -d</code> 同步到 Github 仓库，就万事大吉了：Github 接受到这样的一个 <code>push</code> 请求之后向服务器特定端口发送了一个 HTTP POST，服务器接受到这个POST后自动执行 <code>sync.sh</code>，也就是到定位本地仓库/网页目录，从 Github 上拉取最新的网页文件。</p>\r\n<h2 id=\"更新历史\">更新历史</h2>\r\n<ul>\r\n<li>2017-07-17 <i class=\"fa fa-plane fa-fw\"></i> 修改了部分主题样式，添加部分插件，注意利用 <code>npm</code> 安装插件必须加上 <code>--save</code> 选项！\r\n<ul>\r\n<li><a href=\"http://fontawesome.io\" target=\"_blank\" rel=\"noopener\"><i class=\"fa fa-font-awesome fa-fw\"></i>font-awesome</a> 图标：<code>hexo-tag-fontawesome</code></li>\r\n<li>字数统计插件 <code>hexo-wordcount</code>，不过最新版的NexT主题已经内置该功能</li>\r\n<li>RSS插件 <code>hexo-generator-feed</code></li>\r\n<li>本地搜索服务 <code>hexo-generator-searchdb</code></li>\r\n<li>SEO优化 <code>hexo-generator-sitemap</code>，<code>hexo-generator-baidu-sitemap</code></li>\r\n</ul></li>\r\n<li>2017-07-18 <i class=\"fa fa-plane fa-fw\"></i> 发现外网访问服务器速度实在过慢，老实投靠 Github，Coding 进行双线部署，并更新博客为二级域名，在解析上下了点功夫。加之 Coding 可以强制 https 访问，遂抛弃 Github 部署</li>\r\n<li>2017-12-03 <i class=\"fa fa-magic fa-fw\"></i> 增加 <a href=\"https://www.mathjax.org\" target=\"_blank\" rel=\"noopener\"><span class=\"math inline\">\\(Mathjax\\)</span></a> 支持。参考: <a href=\"http://blog.csdn.net/Emptyset110/article/details/50123231\" target=\"_blank\" rel=\"noopener\">搭建一个支持LaTEX的hexo博客</a>。然而这里出现了一些意外状况，比如公式的分式的中横线显示偏低，这是不能接受的，首先将主题配置文件中 <code>mathjax</code> 设置为： <figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">mathjax:</span></span><br><span class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  per_page:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  cdn:</span> <span class=\"string\">//cdn.bootcss.com/mathjax/2.7.2/latest.js?config=TeX-MML-AM_CHTML</span></span><br></pre></td></tr></table></figure> 这末尾的 <code>config=...</code> 极其重要，就是被这玩意儿折腾良久。关键在于公式的渲染方式，在这儿应选 <code>Common HTML</code> 而不是坑爹的 <code>HTML-CSS</code>。 再折腾下文件 <code>themes/next/layout/_third-party/mathjax.swig</code>： <figure class=\"highlight javascript\"><figcaption><span>mathjax.swig</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MathJax.Hub.Config(&#123;</span><br><span class=\"line\">  showProcessingMessages: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  messageStyle: <span class=\"string\">\"none\"</span>,</span><br><span class=\"line\">  tex2jax: &#123;</span><br><span class=\"line\">    inlineMath: [ [<span class=\"string\">'$'</span>,<span class=\"string\">'$'</span>], [<span class=\"string\">\"\\\\(\"</span>,<span class=\"string\">\"\\\\)\"</span>] ],</span><br><span class=\"line\">    displayMath: [ [<span class=\"string\">'$$'</span>, <span class=\"string\">'$$'</span>], [<span class=\"string\">\"\\\\[\"</span>, <span class=\"string\">\"\\\\]\"</span>] ],</span><br><span class=\"line\">    processEscapes: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    skipTags: [<span class=\"string\">'script'</span>, <span class=\"string\">'noscript'</span>, <span class=\"string\">'style'</span>, <span class=\"string\">'textarea'</span>, <span class=\"string\">'pre'</span>, <span class=\"string\">'code'</span>]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  TeX: &#123;</span><br><span class=\"line\">    equationNumbers: &#123;</span><br><span class=\"line\">      autoNumber: <span class=\"string\">'AMS'</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    extensions: [<span class=\"string\">\"AMSmath.js\"</span>, <span class=\"string\">\"AMSsymbols.js\"</span>, <span class=\"string\">\"autobold.js\"</span>]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure> 最后，对于 IE 浏览器兼容方面出现问题的解决方案： <figure class=\"highlight html\"><figcaption><span>mathjax.swig</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://cdn.bootcss.com/mathjax/2.7.2/MathJax.js?config=TeX-MML-AM_CHTML\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- &lt;script type=\"text/javascript\" src=\"\"&gt;&lt;/script&gt; --&gt;</span></span><br></pre></td></tr></table></figure></li>\r\n<li>2017-12-03 <i class=\"fa fa-street-view fa-fw\"></i> 再再次更换阵地 – 把博客迁移至 <a href=\"https://gitee.com\" target=\"_blank\" rel=\"noopener\">码云</a> （感觉访问速度更快些）</li>\r\n<li>2017-12-03 <i class=\"fa fa-smile-o fa-fw\"></i> 再再再次更换阵地 – 又回到码市的怀抱，因为码云不支持自定义域名，做跳转又不清真，我只想好好写个博客 ToT</li>\r\n<li>2017-12-03 <i class=\"fa fa-plane fa-fw\"></i> 实现多端博客同步。这里采用比较暴力但高效的办法：在远程新建两个仓库， 一个私有仓库用户存储源文件（原始 Markdown 文件，各类魔改过的文件等， 将整个本地的 Hexo 目录作为本地仓库），一个公有仓库（用于展示网页）。那么这两个命令就可以手动同步了： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">alias</span> hexopull=<span class=\"string\">'git fetch --all &amp;&amp; git reset --hard origin/master &amp;&amp; git pull'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> hexopush=<span class=\"string\">'hexo clean &amp;&amp; hexo g -d &amp;&amp; git add -A &amp;&amp; git commit -m \"update\" &amp;&amp; git push origin master'</span></span><br></pre></td></tr></table></figure></li>\r\n<li>2017-12-31 <i class=\"fa fa-plane fa-fw\"></i> 更换 markdown 渲染引擎。 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm uninstall hexo-renderer-marked --save</span><br><span class=\"line\">npm install hexo-renderer-pandoc --save</span><br></pre></td></tr></table></figure></li>\r\n<li>2018-07-17 <i class=\"fa fa-plane fa-fw\"></i> 添加脚注插件 <code>hexo-footnotes</code></li>\r\n<li>2018-11-20 <i class=\"fa fa-plane fa-fw\"></i> 将博客回归至 Github，并以 <a href=\"https://www.netlify.com\" target=\"_blank\" rel=\"noopener\">Netlify</a> 作为持续集成</li>\r\n</ul>"},{"title":"MacOS 安装 Homebrew","date":"2020-09-01T13:50:29.000Z","catagories":"Research","_content":"\n{% centerquote %}\nThe Missing Package Manager for macOS (or Linux) — Homebrew\n{% endcenterquote %}\n\n作为一名业余的 Mac User，怎能不会熟练使用 Homebrew？但国内访问官方 Homebrew 速度过慢，需通过更改 Homebrew 安装源为国内源解决，以下操作主要借鉴[成功解决macos 安装homebrew速度慢][jianshu-c7c7aa34e579]。\n\n<!-- more -->\n\n## 下载 Homebrew 安装脚本\n\n目前官方已经不推荐利用 Ruby 脚本的方式去安装 Homebrew 了，首先通过科技手段直接下载 [install.sh][install.sh]。\n\n## 修改 Homebrew 源\n\n将脚本 `install.sh` 中的\n\n```bash\nBREW_REPO=\"https://github.com/Homebrew/brew\"\n```\n\n改为\n\n```bash\nBREW_REPO=\"https://mirrors.ustc.edu.cn/brew.git\"\n```\n\n## 执行安装脚本\n\n```bash\nchmod +x install.sh\n./install.sh\n```\n\n脚本会停在\n\n```\n==> Tapping homebrew/core\nCloning into ‘/usr/local/Homebrew/Library/Taps/homebrew/homebrew-core’\n```\n\n此时关闭当前进程，从国内源拉取 `homebrew-core`：\n\n```bash\ngit clone git://mirrors.ustc.edu.cn/homebrew-core.git/ /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core --depth=1\n```\n\n## 将 `brew` 切换到国内镜像源\n\n```bash\n# 步骤一\ncd \"$(brew --repo)\"\ngit remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git\ncd \"$(brew --repo)/Library/Taps/homebrew/homebrew-core\"\ngit remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git\nbrew update\n```\n\n<br>\n\n**ENJOY!**\n\n\n\n[jianshu-c7c7aa34e579]: https://www.jianshu.com/p/c7c7aa34e579\n[install.sh]: https://raw.githubusercontent.com/Homebrew/install/master/install.sh\n","source":"_posts/homebrew-installation-on-macos.md","raw":"---\ntitle: MacOS 安装 Homebrew\ndate: 2020-09-01 21:50:29\ntags:\n    - MacOS\n    - Homebrew\ncatagories: Research\n---\n\n{% centerquote %}\nThe Missing Package Manager for macOS (or Linux) — Homebrew\n{% endcenterquote %}\n\n作为一名业余的 Mac User，怎能不会熟练使用 Homebrew？但国内访问官方 Homebrew 速度过慢，需通过更改 Homebrew 安装源为国内源解决，以下操作主要借鉴[成功解决macos 安装homebrew速度慢][jianshu-c7c7aa34e579]。\n\n<!-- more -->\n\n## 下载 Homebrew 安装脚本\n\n目前官方已经不推荐利用 Ruby 脚本的方式去安装 Homebrew 了，首先通过科技手段直接下载 [install.sh][install.sh]。\n\n## 修改 Homebrew 源\n\n将脚本 `install.sh` 中的\n\n```bash\nBREW_REPO=\"https://github.com/Homebrew/brew\"\n```\n\n改为\n\n```bash\nBREW_REPO=\"https://mirrors.ustc.edu.cn/brew.git\"\n```\n\n## 执行安装脚本\n\n```bash\nchmod +x install.sh\n./install.sh\n```\n\n脚本会停在\n\n```\n==> Tapping homebrew/core\nCloning into ‘/usr/local/Homebrew/Library/Taps/homebrew/homebrew-core’\n```\n\n此时关闭当前进程，从国内源拉取 `homebrew-core`：\n\n```bash\ngit clone git://mirrors.ustc.edu.cn/homebrew-core.git/ /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core --depth=1\n```\n\n## 将 `brew` 切换到国内镜像源\n\n```bash\n# 步骤一\ncd \"$(brew --repo)\"\ngit remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git\ncd \"$(brew --repo)/Library/Taps/homebrew/homebrew-core\"\ngit remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git\nbrew update\n```\n\n<br>\n\n**ENJOY!**\n\n\n\n[jianshu-c7c7aa34e579]: https://www.jianshu.com/p/c7c7aa34e579\n[install.sh]: https://raw.githubusercontent.com/Homebrew/install/master/install.sh\n","slug":"homebrew-installation-on-macos","published":1,"updated":"2023-03-09T16:09:38.232Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u336c0016p4x071l4ab80","content":"<blockquote class=\"blockquote-center\">The Missing Package Manager for macOS (or Linux) — Homebrew</blockquote>\r\n<p>作为一名业余的 Mac User，怎能不会熟练使用 Homebrew？但国内访问官方 Homebrew 速度过慢，需通过更改 Homebrew 安装源为国内源解决，以下操作主要借鉴<a href=\"https://www.jianshu.com/p/c7c7aa34e579\" target=\"_blank\" rel=\"noopener\">成功解决macos 安装homebrew速度慢</a>。</p>\r\n<a id=\"more\"></a>\r\n<h2 id=\"下载-homebrew-安装脚本\">下载 Homebrew 安装脚本</h2>\r\n<p>目前官方已经不推荐利用 Ruby 脚本的方式去安装 Homebrew 了，首先通过科技手段直接下载 <a href=\"https://raw.githubusercontent.com/Homebrew/install/master/install.sh\" target=\"_blank\" rel=\"noopener\">install.sh</a>。</p>\r\n<h2 id=\"修改-homebrew-源\">修改 Homebrew 源</h2>\r\n<p>将脚本 <code>install.sh</code> 中的</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BREW_REPO=<span class=\"string\">\"https://github.com/Homebrew/brew\"</span></span><br></pre></td></tr></table></figure>\r\n<p>改为</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BREW_REPO=<span class=\"string\">\"https://mirrors.ustc.edu.cn/brew.git\"</span></span><br></pre></td></tr></table></figure>\r\n<h2 id=\"执行安装脚本\">执行安装脚本</h2>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod +x install.sh</span><br><span class=\"line\">./install.sh</span><br></pre></td></tr></table></figure>\r\n<p>脚本会停在</p>\r\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">==&gt; Tapping homebrew/core</span><br><span class=\"line\">Cloning into ‘/usr/local/Homebrew/Library/Taps/homebrew/homebrew-core’</span><br></pre></td></tr></table></figure>\r\n<p>此时关闭当前进程，从国内源拉取 <code>homebrew-core</code>：</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> git://mirrors.ustc.edu.cn/homebrew-core.git/ /usr/<span class=\"built_in\">local</span>/Homebrew/Library/Taps/homebrew/homebrew-core --depth=1</span><br></pre></td></tr></table></figure>\r\n<h2 id=\"将-brew-切换到国内镜像源\">将 <code>brew</code> 切换到国内镜像源</h2>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 步骤一</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> <span class=\"string\">\"<span class=\"variable\">$(brew --repo)</span>\"</span></span><br><span class=\"line\">git remote <span class=\"built_in\">set</span>-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> <span class=\"string\">\"<span class=\"variable\">$(brew --repo)</span>/Library/Taps/homebrew/homebrew-core\"</span></span><br><span class=\"line\">git remote <span class=\"built_in\">set</span>-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git</span><br><span class=\"line\">brew update</span><br></pre></td></tr></table></figure>\r\n<p><br></p>\r\n<p><strong>ENJOY!</strong></p>\r\n","site":{"data":{}},"excerpt":"<blockquote class=\"blockquote-center\">The Missing Package Manager for macOS (or Linux) — Homebrew</blockquote>\r\n<p>作为一名业余的 Mac User，怎能不会熟练使用 Homebrew？但国内访问官方 Homebrew 速度过慢，需通过更改 Homebrew 安装源为国内源解决，以下操作主要借鉴<a href=\"https://www.jianshu.com/p/c7c7aa34e579\" target=\"_blank\" rel=\"noopener\">成功解决macos 安装homebrew速度慢</a>。</p>","more":"<h2 id=\"下载-homebrew-安装脚本\">下载 Homebrew 安装脚本</h2>\r\n<p>目前官方已经不推荐利用 Ruby 脚本的方式去安装 Homebrew 了，首先通过科技手段直接下载 <a href=\"https://raw.githubusercontent.com/Homebrew/install/master/install.sh\" target=\"_blank\" rel=\"noopener\">install.sh</a>。</p>\r\n<h2 id=\"修改-homebrew-源\">修改 Homebrew 源</h2>\r\n<p>将脚本 <code>install.sh</code> 中的</p>\r\n<!--�62-->\r\n<p>改为</p>\r\n<!--�63-->\r\n<h2 id=\"执行安装脚本\">执行安装脚本</h2>\r\n<!--�64-->\r\n<p>脚本会停在</p>\r\n<!--�65-->\r\n<p>此时关闭当前进程，从国内源拉取 <code>homebrew-core</code>：</p>\r\n<!--�66-->\r\n<h2 id=\"将-brew-切换到国内镜像源\">将 <code>brew</code> 切换到国内镜像源</h2>\r\n<!--�67-->\r\n<p><br></p>\r\n<p><strong>ENJOY!</strong></p>"},{"title":"「转」高级程序员装逼指南","date":"2018-01-15T02:55:10.000Z","nocopyright":true,"_content":"\n> 作者: [rollenholt][author]  \n> 链接: [高级程序员装逼指南, 是高级哦！][link]  \n> 来源: [云栖社区][source]\n\n### 前言\n\n最近网上出了一个「程序员装逼指南」，觉得这个东西其实图样图森破，然后在下跟微博上的一些程序大牛讨论了一下如何装逼，深有感触。程序员嘛，外行人看起来已经是不可理解的奇怪生物了，自然也没必要跟他们...\n\n<!-- more -->\n\n### 编程语言\n\n千万千万千万千万不要说自己是 Java/C#/C++ 程序员，尽量学一些奇怪的语言，python 已经有烂大街的趋势了，写写还是可以，装逼是用不上了。Lisp 和 Erlang 都是装逼的好语言。当然你要是号称会 Haskell 就更牛逼了，实在不会也没关系，发发跟 Haskell 有关的状态别人也很装了。没事儿还可以在论坛里喷喷 Java/C++ 有哪些缺点，可是，如果对方先发制人说他出了一种奇怪的语言名字怎么办？你可以微笑地说，你可知道天下语言皆出自 Lisp 和 Smalltalk？保准对方愣住 3 秒钟。\n\n### 操作系统\n\n首先，妥妥儿的不能用 Win，麻瓜才用 Win 呢。Linux 嘛，ubuntu 也差了点儿，现在不少人已经用 Arch 了，懂行儿的人都知道，gentoo 和 LFS 才是真正的装逼利器啊。自己编译神马的，这逼还真不是人人都能装的。再深入的话，你要是用 Lisp Machine 工作，就近乎神了。\n\n### 编辑器\n\n作为一个 IDE 去死团成员，我承认很大程度上我只是在装逼，纯文本编辑器才是你最终的归宿。Vim是标配，但是只有 Emacs 才能称得上是神器，「伪装成操作系统的编辑器」并非浪得虚名。当然，想要装逼装得好的话，你还需要学习它的配置语言 Emacs Lisp。\n\n### 博客\n\n在 CSDN/ITeye/cnblogs 这种地方写技术博客确实比在人人上写技术博客好多了，但是你要知道，大牛们都是有自己的个人网站的，而且，一个共同点是，他们的网站都是自己写的 html（没有 css）并且界面十分难看。整个网站散发着一种「我这的文章都很牛所以界面什么的都不重要」的气质。例如这个: [http://xahlee.org/index.html](http://xahlee.org/index.html)。\n\n### 其它\n\n我习惯称不会写代码的人为「麻瓜」，你也可以有你自己的称呼。不要写 Linux/Unix，正确而专业的写法是 *nix。手边不要放技术书籍，即使要摆一两本书也要那种自己打印的全英文的手册，或者用铅笔在纸上写代码也是个不错的选择。还可以养成某种奇特的习惯，例如号称自己是 Lisper 然后各种（括号）。\n\n### 装逼进阶\n\n老是装逼也不成，所以我一直在寻找一种秒杀一切程序员的装逼之法。说实话，程序员的世界里有三种人。大部分是不会写代码的麻瓜，然后是程序员这个群体本身，他们认为唯一比程序员牛逼的，就是搞数学的人了。所以嘛，你要真想装个牛逼，就去学好傅立叶变换吧。另，发明 Lisp 和 Python 的人都是数学家，高得纳大神也是数学教授。\n\n---\n\n- 大家都出来各自上车了这叫切断电源\n- 你们这桌交错敬酒，敬我一杯，敬你一杯，叫全相连。\n- 你们这桌有人提议咱们男士敬女士们一杯，叫组相连。\n- BOSS 自己提了一瓶过来说兄弟们再把这个解决了这叫 alpha 测试。\n- BOSS 让服务生端了二瓶过来，隔着桌子喊，你们这桌再把这个解决了，这叫 beta 测试。\n- 经理过来要敬大家，你们都说不行了，经理指着酒量最大的人说 ××× 你代表大家把这杯干了，这叫白盒测试。\n- 经理过来要敬大家，你们都说不行了，经理说我不管，出个人把这杯干了，这叫黑盒测试。\n- 又有人醉醺醺地过来要敬大家，一看不认识不是你们公司的这叫地址错误。\n- 你拍拍这人肩膀说兄弟你是对面厅的吧这叫重定向。\n- 你一人自斟自饮喝闷酒这叫 PC\n- 你们这桌相互敬酒这叫 LAN\n- 你们和别桌流动敬酒这叫 WAN\n- 你们一哥们醉了上二楼别的公司的庆祝宴上去敬酒这叫 INTERNET\n- 你一人到领导那桌说张总我敬你一个王总我敬你一个。....这叫 PPP\n- 你们一群人到领导那桌说张总我们敬你一个王总我们敬你一个......这叫 ADSL\n- BOSS 举起一杯说我代表公司向你们项目组的成功表示祝贺这叫 B2B\n- 项目经理举起一杯说我代表项目组向张工的付出表示感谢这叫 B2C\n- 你也举杯说张哥我对你的景仰如指令流水滔滔不绝这叫 C2C\n- 你一哥们不行了喝点水也吐这叫插入异常\n- 你也觉得不行了上洗手间想解决一下可怎么也吐不出来这叫删除异常\n- 你们这桌子萧是头儿他一喝大家跟着喝这叫 Primary Key\n- 你们这桌坐了俩头儿，别桌的都过来敬酒这叫 Foreign Key\n- 叶子菊说不行我不喝酒的，经理说不行今天都得喝点这叫 NOT NULL\n- 经理从别桌转回来了问小李喝了吗喝了多少，这叫 Check\n- Boss 说在座的各位今儿个都得尽兴这叫 Assertion全局约束\n- 乔大饼是海量偏不多喝这叫资源闲置\n- 阿甘不行了还要喝这叫超频\n- 小牛过来跟你碰杯这叫过程\n- 小吴过来跟你碰杯完了还要谈感受这叫函数\n- 你们这桌喝没了，这叫缺页中断\n- 让小姐拿两瓶过来这叫请求分页\n- 让她把酒放下把空瓶收拾收拾这叫页面置换\n- 一群人来给你敬酒你说等一下慢慢来这叫 P 操作\n- 你喝得豪气冲天放下杯说下一个我喝谁的这叫 V 操作\n- 你正在喝着有人来跟你碰杯你说等一下这叫阻塞\n- 那人看你放下杯给你满上这叫就绪\n- 稍歇了一下那人说该咱俩喝了这叫运行\n- 你刚喝了半口手机响了这叫中断\n- 你说不好意思哥们等一下这叫挂起\n- 你接完电话挂机了那人说咱俩继续这叫激活\n- 你来这杯终于喝完了那人回他们桌子上去了这叫终止\n- 又一哥们过来说你喝我就喝这叫同步\n- 一激动他把自个儿杯子打了这成了互斥\n- 你把这杯推给他说你先喝他又推回来说你先喝这叫死锁\n- 你说那咱们都不喝了这叫撤销\n- 贝贝喝了 1.44ml 就醉了退出来了这叫软盘\n- 达兰木坐那儿不动光猛喝这叫硬盘\n- 曹无名光看不喝这叫光盘\n- anetople 上这桌喝又上那桌喝这叫 U 盘\n- 大家你一杯我一杯地喝这叫聊天室\n- 一个人猛喝其他人跟着喝这叫论坛\n- 你站起来猛灌别人都看你喝这叫博客\n- 曹无名暗恋何有名拉她上沙发那边喝这叫 QQ\n- 要敬你的人太多了他们一人一杯都放在你面前这叫 SPOOLING\n- 你实在不行了钻桌子底下去了这叫作业中止\n- 来不及上洗手间就吐了这叫 ERROR\n- 脸色煞白起不来了这叫 FATE ERROR\n- 经理紧张了说你没事吧这叫询问\n- 你说不出话了这叫丢失应答\n- 一哥们开始拨 120 了这叫紧急修复\n- Boss 也急了说你们先撤大家也都散了吧这叫解除\n- 120 来了这叫 GAME OVER\n- 120 先走了这叫关机\n\n---\n\n### 这个是原版\n\n#### 一. 准备工作\n\n> 工欲善其事必先利其器。\n\n1. 电脑不一定要配置高，但是双屏是必须的，越大越好，能一个横屏一个竖屏更好。   一个用来查资料，一个用来写代码。总之要显得信息量很大，效率很高。\n2. 椅子不一定要舒服，但是一定要可以半躺着。\n3. 大量的便签，各种的颜色的，用来记录每天要完成的事务，多多益善。   沿着电脑屏幕的边框，尽量贴满，显出有很多事情的样子。\n4. 工具书，orelly 的，机械工业，电子工业什么的都可以，能英文就英文，   不行影印版的也可以，反正越厚越好，而且千万不要放在书架上，一定要堆在桌上，半打开状。\n\n#### 二. 从进门开始\n\n1. 着装！着装！不管你是去实验室，或者去公司的大楼，在或者是小公司的民宅，或是自己创业的黑作坊；无论是春夏秋冬白天晚上刮风下雨电闪雷鸣台风龙卷风，一个装 B 的程序员都要十分在意自己着装！ 这里只提出参考建议。  \n   初级装：衬衣+牛仔裤+休闲鞋。  \n   中级装：T 恤+宽松短裤+拖鞋。  \n   高级装：背心+宽松大花裤衩+人字拖。\n2. 得体的举止。在走廊以及任何形式的过道里，一定要双手插兜，走得像个痞子，   至少要看起来有点反社会，如若不行，可走文弱天才型 geek 路线。\n3. 如果有女性在你背后指指点点，小声嘀咕说这一定是一个技术男的时候，应该先低头，   然后保持低头状态，缓缓回头，坏坏地蔑笑但是不要出声，然后快步前行。\n4. 进门后，一定不要跟任何人打招呼，笔直走向自己的位置，最多路过打一杯咖啡，千万不要有多余的动作，显示出自己的专注与心无旁骛。\n\n#### 三. 坐下就不要再动了\n\n1. 坐下以后。姿势需要略微后仰。能翘着二郎腿最好了。然后在后仰的情况下低着头。   以便看到屏幕。然后千万就不要再动了。\n2. 粗暴地把电脑前的大堆书推开一个口。然后摘下电脑上的一个便签。看一眼。不过3秒。可以开始 coding 了。\n3. 能不用 IDE 就不要用。实在装不了。无论 IDE 是什么。一定要调成 DOS 那种黑色背景的。\n4. 如果写前台界面。就不停地调试后台代码；如果写 java。就在里面混编 C；如果写 C。   就在里面混编汇编。不光要 coding。还要时不时的翻出一本什么英文的书翻一翻。看不懂就看看插图。然后扔到面前假装懂了继续 coding。\n5. 什么看起来高端就用什么。不要管实用不实用。例如对 C++：`switch` 统统重构成多态；如果有指针。统统改成智能的；C++ 一定要自己写 template；数字是全部要替换成宏的名字能起多长就起多长；struct就不要出现了。如果出现。也一定要用 `__attriburte__ `修饰一下；运算都是位操作的；操作符都是重载的；网络都是并发缓冲线程池的；`int` 只用 `int32_t` 声明的；继承不用普通的。什么多继承虚继承啊；helloworld 也要写捕获异常的；   后人一看代码。中间一堆关键字 `extern`，`asm`，`auto`，`XXXXX_cast`，`volatile`，`explicit`，`register`，`template`。让一般总在敲 `int`，`if`，`else`，`for` 的小程序员顿时心生崇拜。\n6. 注释？算了吧。只有两个路线可以选：\n   一. 变量名起得巨长无比。看代码就和读英文文章一样顺畅，根本不需要加注释。  \n   二. 代码无比晦涩，加不加注释根本无影响。\n7. 千万不要用 IM 工具交流。千万不要问同事问题。显得自己没有水平。都是自己上网或者查书。\n8. 无论是同事间开玩笑或者发生任何群体性时间。不要抬头。更不要东张西望。   即使地震火灾。也一定要先提交代码再行离开。\n\n#### 四. 潇洒地离开\n\n1. 人走，主机是千万千万不能关的，至少要跑个 `daily build`，实在不行正在 svn 提交也勉强算过关。\n2. 书应该已经又堆到屏幕前了，千万不要整理，明天再来推开。\n3. 不强求最后一个走，但一定要所有的非程序员，什么市场啊前台啊 `pm` 啊都走光了，才可以走。\n4. 走得时候一定要率性，千万不要收拾任何东西，站起来，出门，好的，就这样。\n5. 如果今天一定要说句话的话，找到那个最苦逼的程序员，跟他说，你进度太慢了啊，不要老让我等你。\n\n> 在那山的这边海的那边有一群程序员，他们老实又胹腆，他们聪明又没钱。他们一天到晚坐在那里熬夜写软件，饿了就咬一口方便面 ~~ 哦苦命的程序员，哦苦逼的程序员，只要一改需求他们就要重新搞一遍，但是期限只剩下两天。\n\n\n[author]: https://yq.aliyun.com/users/1161940728112158\n[link]: https://yq.aliyun.com/articles/38694\n[source]: https://yq.aliyun.com\n","source":"_posts/how-to-behave-like-master-for-advanced-coder.md","raw":"---\ntitle: 「转」高级程序员装逼指南\ndate: 2018-01-15 10:55:10\ntags:\n    - Programmer\ncategories: Memos\nnocopyright: true\n---\n\n> 作者: [rollenholt][author]  \n> 链接: [高级程序员装逼指南, 是高级哦！][link]  \n> 来源: [云栖社区][source]\n\n### 前言\n\n最近网上出了一个「程序员装逼指南」，觉得这个东西其实图样图森破，然后在下跟微博上的一些程序大牛讨论了一下如何装逼，深有感触。程序员嘛，外行人看起来已经是不可理解的奇怪生物了，自然也没必要跟他们...\n\n<!-- more -->\n\n### 编程语言\n\n千万千万千万千万不要说自己是 Java/C#/C++ 程序员，尽量学一些奇怪的语言，python 已经有烂大街的趋势了，写写还是可以，装逼是用不上了。Lisp 和 Erlang 都是装逼的好语言。当然你要是号称会 Haskell 就更牛逼了，实在不会也没关系，发发跟 Haskell 有关的状态别人也很装了。没事儿还可以在论坛里喷喷 Java/C++ 有哪些缺点，可是，如果对方先发制人说他出了一种奇怪的语言名字怎么办？你可以微笑地说，你可知道天下语言皆出自 Lisp 和 Smalltalk？保准对方愣住 3 秒钟。\n\n### 操作系统\n\n首先，妥妥儿的不能用 Win，麻瓜才用 Win 呢。Linux 嘛，ubuntu 也差了点儿，现在不少人已经用 Arch 了，懂行儿的人都知道，gentoo 和 LFS 才是真正的装逼利器啊。自己编译神马的，这逼还真不是人人都能装的。再深入的话，你要是用 Lisp Machine 工作，就近乎神了。\n\n### 编辑器\n\n作为一个 IDE 去死团成员，我承认很大程度上我只是在装逼，纯文本编辑器才是你最终的归宿。Vim是标配，但是只有 Emacs 才能称得上是神器，「伪装成操作系统的编辑器」并非浪得虚名。当然，想要装逼装得好的话，你还需要学习它的配置语言 Emacs Lisp。\n\n### 博客\n\n在 CSDN/ITeye/cnblogs 这种地方写技术博客确实比在人人上写技术博客好多了，但是你要知道，大牛们都是有自己的个人网站的，而且，一个共同点是，他们的网站都是自己写的 html（没有 css）并且界面十分难看。整个网站散发着一种「我这的文章都很牛所以界面什么的都不重要」的气质。例如这个: [http://xahlee.org/index.html](http://xahlee.org/index.html)。\n\n### 其它\n\n我习惯称不会写代码的人为「麻瓜」，你也可以有你自己的称呼。不要写 Linux/Unix，正确而专业的写法是 *nix。手边不要放技术书籍，即使要摆一两本书也要那种自己打印的全英文的手册，或者用铅笔在纸上写代码也是个不错的选择。还可以养成某种奇特的习惯，例如号称自己是 Lisper 然后各种（括号）。\n\n### 装逼进阶\n\n老是装逼也不成，所以我一直在寻找一种秒杀一切程序员的装逼之法。说实话，程序员的世界里有三种人。大部分是不会写代码的麻瓜，然后是程序员这个群体本身，他们认为唯一比程序员牛逼的，就是搞数学的人了。所以嘛，你要真想装个牛逼，就去学好傅立叶变换吧。另，发明 Lisp 和 Python 的人都是数学家，高得纳大神也是数学教授。\n\n---\n\n- 大家都出来各自上车了这叫切断电源\n- 你们这桌交错敬酒，敬我一杯，敬你一杯，叫全相连。\n- 你们这桌有人提议咱们男士敬女士们一杯，叫组相连。\n- BOSS 自己提了一瓶过来说兄弟们再把这个解决了这叫 alpha 测试。\n- BOSS 让服务生端了二瓶过来，隔着桌子喊，你们这桌再把这个解决了，这叫 beta 测试。\n- 经理过来要敬大家，你们都说不行了，经理指着酒量最大的人说 ××× 你代表大家把这杯干了，这叫白盒测试。\n- 经理过来要敬大家，你们都说不行了，经理说我不管，出个人把这杯干了，这叫黑盒测试。\n- 又有人醉醺醺地过来要敬大家，一看不认识不是你们公司的这叫地址错误。\n- 你拍拍这人肩膀说兄弟你是对面厅的吧这叫重定向。\n- 你一人自斟自饮喝闷酒这叫 PC\n- 你们这桌相互敬酒这叫 LAN\n- 你们和别桌流动敬酒这叫 WAN\n- 你们一哥们醉了上二楼别的公司的庆祝宴上去敬酒这叫 INTERNET\n- 你一人到领导那桌说张总我敬你一个王总我敬你一个。....这叫 PPP\n- 你们一群人到领导那桌说张总我们敬你一个王总我们敬你一个......这叫 ADSL\n- BOSS 举起一杯说我代表公司向你们项目组的成功表示祝贺这叫 B2B\n- 项目经理举起一杯说我代表项目组向张工的付出表示感谢这叫 B2C\n- 你也举杯说张哥我对你的景仰如指令流水滔滔不绝这叫 C2C\n- 你一哥们不行了喝点水也吐这叫插入异常\n- 你也觉得不行了上洗手间想解决一下可怎么也吐不出来这叫删除异常\n- 你们这桌子萧是头儿他一喝大家跟着喝这叫 Primary Key\n- 你们这桌坐了俩头儿，别桌的都过来敬酒这叫 Foreign Key\n- 叶子菊说不行我不喝酒的，经理说不行今天都得喝点这叫 NOT NULL\n- 经理从别桌转回来了问小李喝了吗喝了多少，这叫 Check\n- Boss 说在座的各位今儿个都得尽兴这叫 Assertion全局约束\n- 乔大饼是海量偏不多喝这叫资源闲置\n- 阿甘不行了还要喝这叫超频\n- 小牛过来跟你碰杯这叫过程\n- 小吴过来跟你碰杯完了还要谈感受这叫函数\n- 你们这桌喝没了，这叫缺页中断\n- 让小姐拿两瓶过来这叫请求分页\n- 让她把酒放下把空瓶收拾收拾这叫页面置换\n- 一群人来给你敬酒你说等一下慢慢来这叫 P 操作\n- 你喝得豪气冲天放下杯说下一个我喝谁的这叫 V 操作\n- 你正在喝着有人来跟你碰杯你说等一下这叫阻塞\n- 那人看你放下杯给你满上这叫就绪\n- 稍歇了一下那人说该咱俩喝了这叫运行\n- 你刚喝了半口手机响了这叫中断\n- 你说不好意思哥们等一下这叫挂起\n- 你接完电话挂机了那人说咱俩继续这叫激活\n- 你来这杯终于喝完了那人回他们桌子上去了这叫终止\n- 又一哥们过来说你喝我就喝这叫同步\n- 一激动他把自个儿杯子打了这成了互斥\n- 你把这杯推给他说你先喝他又推回来说你先喝这叫死锁\n- 你说那咱们都不喝了这叫撤销\n- 贝贝喝了 1.44ml 就醉了退出来了这叫软盘\n- 达兰木坐那儿不动光猛喝这叫硬盘\n- 曹无名光看不喝这叫光盘\n- anetople 上这桌喝又上那桌喝这叫 U 盘\n- 大家你一杯我一杯地喝这叫聊天室\n- 一个人猛喝其他人跟着喝这叫论坛\n- 你站起来猛灌别人都看你喝这叫博客\n- 曹无名暗恋何有名拉她上沙发那边喝这叫 QQ\n- 要敬你的人太多了他们一人一杯都放在你面前这叫 SPOOLING\n- 你实在不行了钻桌子底下去了这叫作业中止\n- 来不及上洗手间就吐了这叫 ERROR\n- 脸色煞白起不来了这叫 FATE ERROR\n- 经理紧张了说你没事吧这叫询问\n- 你说不出话了这叫丢失应答\n- 一哥们开始拨 120 了这叫紧急修复\n- Boss 也急了说你们先撤大家也都散了吧这叫解除\n- 120 来了这叫 GAME OVER\n- 120 先走了这叫关机\n\n---\n\n### 这个是原版\n\n#### 一. 准备工作\n\n> 工欲善其事必先利其器。\n\n1. 电脑不一定要配置高，但是双屏是必须的，越大越好，能一个横屏一个竖屏更好。   一个用来查资料，一个用来写代码。总之要显得信息量很大，效率很高。\n2. 椅子不一定要舒服，但是一定要可以半躺着。\n3. 大量的便签，各种的颜色的，用来记录每天要完成的事务，多多益善。   沿着电脑屏幕的边框，尽量贴满，显出有很多事情的样子。\n4. 工具书，orelly 的，机械工业，电子工业什么的都可以，能英文就英文，   不行影印版的也可以，反正越厚越好，而且千万不要放在书架上，一定要堆在桌上，半打开状。\n\n#### 二. 从进门开始\n\n1. 着装！着装！不管你是去实验室，或者去公司的大楼，在或者是小公司的民宅，或是自己创业的黑作坊；无论是春夏秋冬白天晚上刮风下雨电闪雷鸣台风龙卷风，一个装 B 的程序员都要十分在意自己着装！ 这里只提出参考建议。  \n   初级装：衬衣+牛仔裤+休闲鞋。  \n   中级装：T 恤+宽松短裤+拖鞋。  \n   高级装：背心+宽松大花裤衩+人字拖。\n2. 得体的举止。在走廊以及任何形式的过道里，一定要双手插兜，走得像个痞子，   至少要看起来有点反社会，如若不行，可走文弱天才型 geek 路线。\n3. 如果有女性在你背后指指点点，小声嘀咕说这一定是一个技术男的时候，应该先低头，   然后保持低头状态，缓缓回头，坏坏地蔑笑但是不要出声，然后快步前行。\n4. 进门后，一定不要跟任何人打招呼，笔直走向自己的位置，最多路过打一杯咖啡，千万不要有多余的动作，显示出自己的专注与心无旁骛。\n\n#### 三. 坐下就不要再动了\n\n1. 坐下以后。姿势需要略微后仰。能翘着二郎腿最好了。然后在后仰的情况下低着头。   以便看到屏幕。然后千万就不要再动了。\n2. 粗暴地把电脑前的大堆书推开一个口。然后摘下电脑上的一个便签。看一眼。不过3秒。可以开始 coding 了。\n3. 能不用 IDE 就不要用。实在装不了。无论 IDE 是什么。一定要调成 DOS 那种黑色背景的。\n4. 如果写前台界面。就不停地调试后台代码；如果写 java。就在里面混编 C；如果写 C。   就在里面混编汇编。不光要 coding。还要时不时的翻出一本什么英文的书翻一翻。看不懂就看看插图。然后扔到面前假装懂了继续 coding。\n5. 什么看起来高端就用什么。不要管实用不实用。例如对 C++：`switch` 统统重构成多态；如果有指针。统统改成智能的；C++ 一定要自己写 template；数字是全部要替换成宏的名字能起多长就起多长；struct就不要出现了。如果出现。也一定要用 `__attriburte__ `修饰一下；运算都是位操作的；操作符都是重载的；网络都是并发缓冲线程池的；`int` 只用 `int32_t` 声明的；继承不用普通的。什么多继承虚继承啊；helloworld 也要写捕获异常的；   后人一看代码。中间一堆关键字 `extern`，`asm`，`auto`，`XXXXX_cast`，`volatile`，`explicit`，`register`，`template`。让一般总在敲 `int`，`if`，`else`，`for` 的小程序员顿时心生崇拜。\n6. 注释？算了吧。只有两个路线可以选：\n   一. 变量名起得巨长无比。看代码就和读英文文章一样顺畅，根本不需要加注释。  \n   二. 代码无比晦涩，加不加注释根本无影响。\n7. 千万不要用 IM 工具交流。千万不要问同事问题。显得自己没有水平。都是自己上网或者查书。\n8. 无论是同事间开玩笑或者发生任何群体性时间。不要抬头。更不要东张西望。   即使地震火灾。也一定要先提交代码再行离开。\n\n#### 四. 潇洒地离开\n\n1. 人走，主机是千万千万不能关的，至少要跑个 `daily build`，实在不行正在 svn 提交也勉强算过关。\n2. 书应该已经又堆到屏幕前了，千万不要整理，明天再来推开。\n3. 不强求最后一个走，但一定要所有的非程序员，什么市场啊前台啊 `pm` 啊都走光了，才可以走。\n4. 走得时候一定要率性，千万不要收拾任何东西，站起来，出门，好的，就这样。\n5. 如果今天一定要说句话的话，找到那个最苦逼的程序员，跟他说，你进度太慢了啊，不要老让我等你。\n\n> 在那山的这边海的那边有一群程序员，他们老实又胹腆，他们聪明又没钱。他们一天到晚坐在那里熬夜写软件，饿了就咬一口方便面 ~~ 哦苦命的程序员，哦苦逼的程序员，只要一改需求他们就要重新搞一遍，但是期限只剩下两天。\n\n\n[author]: https://yq.aliyun.com/users/1161940728112158\n[link]: https://yq.aliyun.com/articles/38694\n[source]: https://yq.aliyun.com\n","slug":"how-to-behave-like-master-for-advanced-coder","published":1,"updated":"2023-03-09T16:09:38.234Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u336d001ap4x0my4moimu","content":"<blockquote>\r\n<p>作者: <a href=\"https://yq.aliyun.com/users/1161940728112158\" target=\"_blank\" rel=\"noopener\">rollenholt</a><br>\r\n链接: <a href=\"https://yq.aliyun.com/articles/38694\" target=\"_blank\" rel=\"noopener\">高级程序员装逼指南, 是高级哦！</a><br>\r\n来源: <a href=\"https://yq.aliyun.com\" target=\"_blank\" rel=\"noopener\">云栖社区</a></p>\r\n</blockquote>\r\n<h3 id=\"前言\">前言</h3>\r\n<p>最近网上出了一个「程序员装逼指南」，觉得这个东西其实图样图森破，然后在下跟微博上的一些程序大牛讨论了一下如何装逼，深有感触。程序员嘛，外行人看起来已经是不可理解的奇怪生物了，自然也没必要跟他们…</p>\r\n<a id=\"more\"></a>\r\n<h3 id=\"编程语言\">编程语言</h3>\r\n<p>千万千万千万千万不要说自己是 Java/C#/C++ 程序员，尽量学一些奇怪的语言，python 已经有烂大街的趋势了，写写还是可以，装逼是用不上了。Lisp 和 Erlang 都是装逼的好语言。当然你要是号称会 Haskell 就更牛逼了，实在不会也没关系，发发跟 Haskell 有关的状态别人也很装了。没事儿还可以在论坛里喷喷 Java/C++ 有哪些缺点，可是，如果对方先发制人说他出了一种奇怪的语言名字怎么办？你可以微笑地说，你可知道天下语言皆出自 Lisp 和 Smalltalk？保准对方愣住 3 秒钟。</p>\r\n<h3 id=\"操作系统\">操作系统</h3>\r\n<p>首先，妥妥儿的不能用 Win，麻瓜才用 Win 呢。Linux 嘛，ubuntu 也差了点儿，现在不少人已经用 Arch 了，懂行儿的人都知道，gentoo 和 LFS 才是真正的装逼利器啊。自己编译神马的，这逼还真不是人人都能装的。再深入的话，你要是用 Lisp Machine 工作，就近乎神了。</p>\r\n<h3 id=\"编辑器\">编辑器</h3>\r\n<p>作为一个 IDE 去死团成员，我承认很大程度上我只是在装逼，纯文本编辑器才是你最终的归宿。Vim是标配，但是只有 Emacs 才能称得上是神器，「伪装成操作系统的编辑器」并非浪得虚名。当然，想要装逼装得好的话，你还需要学习它的配置语言 Emacs Lisp。</p>\r\n<h3 id=\"博客\">博客</h3>\r\n<p>在 CSDN/ITeye/cnblogs 这种地方写技术博客确实比在人人上写技术博客好多了，但是你要知道，大牛们都是有自己的个人网站的，而且，一个共同点是，他们的网站都是自己写的 html（没有 css）并且界面十分难看。整个网站散发着一种「我这的文章都很牛所以界面什么的都不重要」的气质。例如这个: <a href=\"http://xahlee.org/index.html\" target=\"_blank\" rel=\"noopener\">http://xahlee.org/index.html</a>。</p>\r\n<h3 id=\"其它\">其它</h3>\r\n<p>我习惯称不会写代码的人为「麻瓜」，你也可以有你自己的称呼。不要写 Linux/Unix，正确而专业的写法是 *nix。手边不要放技术书籍，即使要摆一两本书也要那种自己打印的全英文的手册，或者用铅笔在纸上写代码也是个不错的选择。还可以养成某种奇特的习惯，例如号称自己是 Lisper 然后各种（括号）。</p>\r\n<h3 id=\"装逼进阶\">装逼进阶</h3>\r\n<p>老是装逼也不成，所以我一直在寻找一种秒杀一切程序员的装逼之法。说实话，程序员的世界里有三种人。大部分是不会写代码的麻瓜，然后是程序员这个群体本身，他们认为唯一比程序员牛逼的，就是搞数学的人了。所以嘛，你要真想装个牛逼，就去学好傅立叶变换吧。另，发明 Lisp 和 Python 的人都是数学家，高得纳大神也是数学教授。</p>\r\n<hr>\r\n<ul>\r\n<li>大家都出来各自上车了这叫切断电源</li>\r\n<li>你们这桌交错敬酒，敬我一杯，敬你一杯，叫全相连。</li>\r\n<li>你们这桌有人提议咱们男士敬女士们一杯，叫组相连。</li>\r\n<li>BOSS 自己提了一瓶过来说兄弟们再把这个解决了这叫 alpha 测试。</li>\r\n<li>BOSS 让服务生端了二瓶过来，隔着桌子喊，你们这桌再把这个解决了，这叫 beta 测试。</li>\r\n<li>经理过来要敬大家，你们都说不行了，经理指着酒量最大的人说 ××× 你代表大家把这杯干了，这叫白盒测试。</li>\r\n<li>经理过来要敬大家，你们都说不行了，经理说我不管，出个人把这杯干了，这叫黑盒测试。</li>\r\n<li>又有人醉醺醺地过来要敬大家，一看不认识不是你们公司的这叫地址错误。</li>\r\n<li>你拍拍这人肩膀说兄弟你是对面厅的吧这叫重定向。</li>\r\n<li>你一人自斟自饮喝闷酒这叫 PC</li>\r\n<li>你们这桌相互敬酒这叫 LAN</li>\r\n<li>你们和别桌流动敬酒这叫 WAN</li>\r\n<li>你们一哥们醉了上二楼别的公司的庆祝宴上去敬酒这叫 INTERNET</li>\r\n<li>你一人到领导那桌说张总我敬你一个王总我敬你一个。….这叫 PPP</li>\r\n<li>你们一群人到领导那桌说张总我们敬你一个王总我们敬你一个……这叫 ADSL</li>\r\n<li>BOSS 举起一杯说我代表公司向你们项目组的成功表示祝贺这叫 B2B</li>\r\n<li>项目经理举起一杯说我代表项目组向张工的付出表示感谢这叫 B2C</li>\r\n<li>你也举杯说张哥我对你的景仰如指令流水滔滔不绝这叫 C2C</li>\r\n<li>你一哥们不行了喝点水也吐这叫插入异常</li>\r\n<li>你也觉得不行了上洗手间想解决一下可怎么也吐不出来这叫删除异常</li>\r\n<li>你们这桌子萧是头儿他一喝大家跟着喝这叫 Primary Key</li>\r\n<li>你们这桌坐了俩头儿，别桌的都过来敬酒这叫 Foreign Key</li>\r\n<li>叶子菊说不行我不喝酒的，经理说不行今天都得喝点这叫 NOT NULL</li>\r\n<li>经理从别桌转回来了问小李喝了吗喝了多少，这叫 Check</li>\r\n<li>Boss 说在座的各位今儿个都得尽兴这叫 Assertion全局约束</li>\r\n<li>乔大饼是海量偏不多喝这叫资源闲置</li>\r\n<li>阿甘不行了还要喝这叫超频</li>\r\n<li>小牛过来跟你碰杯这叫过程</li>\r\n<li>小吴过来跟你碰杯完了还要谈感受这叫函数</li>\r\n<li>你们这桌喝没了，这叫缺页中断</li>\r\n<li>让小姐拿两瓶过来这叫请求分页</li>\r\n<li>让她把酒放下把空瓶收拾收拾这叫页面置换</li>\r\n<li>一群人来给你敬酒你说等一下慢慢来这叫 P 操作</li>\r\n<li>你喝得豪气冲天放下杯说下一个我喝谁的这叫 V 操作</li>\r\n<li>你正在喝着有人来跟你碰杯你说等一下这叫阻塞</li>\r\n<li>那人看你放下杯给你满上这叫就绪</li>\r\n<li>稍歇了一下那人说该咱俩喝了这叫运行</li>\r\n<li>你刚喝了半口手机响了这叫中断</li>\r\n<li>你说不好意思哥们等一下这叫挂起</li>\r\n<li>你接完电话挂机了那人说咱俩继续这叫激活</li>\r\n<li>你来这杯终于喝完了那人回他们桌子上去了这叫终止</li>\r\n<li>又一哥们过来说你喝我就喝这叫同步</li>\r\n<li>一激动他把自个儿杯子打了这成了互斥</li>\r\n<li>你把这杯推给他说你先喝他又推回来说你先喝这叫死锁</li>\r\n<li>你说那咱们都不喝了这叫撤销</li>\r\n<li>贝贝喝了 1.44ml 就醉了退出来了这叫软盘</li>\r\n<li>达兰木坐那儿不动光猛喝这叫硬盘</li>\r\n<li>曹无名光看不喝这叫光盘</li>\r\n<li>anetople 上这桌喝又上那桌喝这叫 U 盘</li>\r\n<li>大家你一杯我一杯地喝这叫聊天室</li>\r\n<li>一个人猛喝其他人跟着喝这叫论坛</li>\r\n<li>你站起来猛灌别人都看你喝这叫博客</li>\r\n<li>曹无名暗恋何有名拉她上沙发那边喝这叫 QQ</li>\r\n<li>要敬你的人太多了他们一人一杯都放在你面前这叫 SPOOLING</li>\r\n<li>你实在不行了钻桌子底下去了这叫作业中止</li>\r\n<li>来不及上洗手间就吐了这叫 ERROR</li>\r\n<li>脸色煞白起不来了这叫 FATE ERROR</li>\r\n<li>经理紧张了说你没事吧这叫询问</li>\r\n<li>你说不出话了这叫丢失应答</li>\r\n<li>一哥们开始拨 120 了这叫紧急修复</li>\r\n<li>Boss 也急了说你们先撤大家也都散了吧这叫解除</li>\r\n<li>120 来了这叫 GAME OVER</li>\r\n<li>120 先走了这叫关机</li>\r\n</ul>\r\n<hr>\r\n<h3 id=\"这个是原版\">这个是原版</h3>\r\n<h4 id=\"一.-准备工作\">一. 准备工作</h4>\r\n<blockquote>\r\n<p>工欲善其事必先利其器。</p>\r\n</blockquote>\r\n<ol type=\"1\">\r\n<li>电脑不一定要配置高，但是双屏是必须的，越大越好，能一个横屏一个竖屏更好。 一个用来查资料，一个用来写代码。总之要显得信息量很大，效率很高。</li>\r\n<li>椅子不一定要舒服，但是一定要可以半躺着。</li>\r\n<li>大量的便签，各种的颜色的，用来记录每天要完成的事务，多多益善。 沿着电脑屏幕的边框，尽量贴满，显出有很多事情的样子。</li>\r\n<li>工具书，orelly 的，机械工业，电子工业什么的都可以，能英文就英文， 不行影印版的也可以，反正越厚越好，而且千万不要放在书架上，一定要堆在桌上，半打开状。</li>\r\n</ol>\r\n<h4 id=\"二.-从进门开始\">二. 从进门开始</h4>\r\n<ol type=\"1\">\r\n<li>着装！着装！不管你是去实验室，或者去公司的大楼，在或者是小公司的民宅，或是自己创业的黑作坊；无论是春夏秋冬白天晚上刮风下雨电闪雷鸣台风龙卷风，一个装 B 的程序员都要十分在意自己着装！ 这里只提出参考建议。<br>\r\n初级装：衬衣+牛仔裤+休闲鞋。<br>\r\n中级装：T 恤+宽松短裤+拖鞋。<br>\r\n高级装：背心+宽松大花裤衩+人字拖。</li>\r\n<li>得体的举止。在走廊以及任何形式的过道里，一定要双手插兜，走得像个痞子， 至少要看起来有点反社会，如若不行，可走文弱天才型 geek 路线。</li>\r\n<li>如果有女性在你背后指指点点，小声嘀咕说这一定是一个技术男的时候，应该先低头， 然后保持低头状态，缓缓回头，坏坏地蔑笑但是不要出声，然后快步前行。</li>\r\n<li>进门后，一定不要跟任何人打招呼，笔直走向自己的位置，最多路过打一杯咖啡，千万不要有多余的动作，显示出自己的专注与心无旁骛。</li>\r\n</ol>\r\n<h4 id=\"三.-坐下就不要再动了\">三. 坐下就不要再动了</h4>\r\n<ol type=\"1\">\r\n<li>坐下以后。姿势需要略微后仰。能翘着二郎腿最好了。然后在后仰的情况下低着头。 以便看到屏幕。然后千万就不要再动了。</li>\r\n<li>粗暴地把电脑前的大堆书推开一个口。然后摘下电脑上的一个便签。看一眼。不过3秒。可以开始 coding 了。</li>\r\n<li>能不用 IDE 就不要用。实在装不了。无论 IDE 是什么。一定要调成 DOS 那种黑色背景的。</li>\r\n<li>如果写前台界面。就不停地调试后台代码；如果写 java。就在里面混编 C；如果写 C。 就在里面混编汇编。不光要 coding。还要时不时的翻出一本什么英文的书翻一翻。看不懂就看看插图。然后扔到面前假装懂了继续 coding。</li>\r\n<li>什么看起来高端就用什么。不要管实用不实用。例如对 C++：<code>switch</code> 统统重构成多态；如果有指针。统统改成智能的；C++ 一定要自己写 template；数字是全部要替换成宏的名字能起多长就起多长；struct就不要出现了。如果出现。也一定要用 <code>__attriburte__</code>修饰一下；运算都是位操作的；操作符都是重载的；网络都是并发缓冲线程池的；<code>int</code> 只用 <code>int32_t</code> 声明的；继承不用普通的。什么多继承虚继承啊；helloworld 也要写捕获异常的； 后人一看代码。中间一堆关键字 <code>extern</code>，<code>asm</code>，<code>auto</code>，<code>XXXXX_cast</code>，<code>volatile</code>，<code>explicit</code>，<code>register</code>，<code>template</code>。让一般总在敲 <code>int</code>，<code>if</code>，<code>else</code>，<code>for</code> 的小程序员顿时心生崇拜。</li>\r\n<li>注释？算了吧。只有两个路线可以选： 一. 变量名起得巨长无比。看代码就和读英文文章一样顺畅，根本不需要加注释。<br>\r\n二. 代码无比晦涩，加不加注释根本无影响。</li>\r\n<li>千万不要用 IM 工具交流。千万不要问同事问题。显得自己没有水平。都是自己上网或者查书。</li>\r\n<li>无论是同事间开玩笑或者发生任何群体性时间。不要抬头。更不要东张西望。 即使地震火灾。也一定要先提交代码再行离开。</li>\r\n</ol>\r\n<h4 id=\"四.-潇洒地离开\">四. 潇洒地离开</h4>\r\n<ol type=\"1\">\r\n<li>人走，主机是千万千万不能关的，至少要跑个 <code>daily build</code>，实在不行正在 svn 提交也勉强算过关。</li>\r\n<li>书应该已经又堆到屏幕前了，千万不要整理，明天再来推开。</li>\r\n<li>不强求最后一个走，但一定要所有的非程序员，什么市场啊前台啊 <code>pm</code> 啊都走光了，才可以走。</li>\r\n<li>走得时候一定要率性，千万不要收拾任何东西，站起来，出门，好的，就这样。</li>\r\n<li>如果今天一定要说句话的话，找到那个最苦逼的程序员，跟他说，你进度太慢了啊，不要老让我等你。</li>\r\n</ol>\r\n<blockquote>\r\n<p>在那山的这边海的那边有一群程序员，他们老实又胹腆，他们聪明又没钱。他们一天到晚坐在那里熬夜写软件，饿了就咬一口方便面 ~~ 哦苦命的程序员，哦苦逼的程序员，只要一改需求他们就要重新搞一遍，但是期限只剩下两天。</p>\r\n</blockquote>\r\n","site":{"data":{}},"excerpt":"<blockquote>\r\n<p>作者: <a href=\"https://yq.aliyun.com/users/1161940728112158\" target=\"_blank\" rel=\"noopener\">rollenholt</a><br>\r\n链接: <a href=\"https://yq.aliyun.com/articles/38694\" target=\"_blank\" rel=\"noopener\">高级程序员装逼指南, 是高级哦！</a><br>\r\n来源: <a href=\"https://yq.aliyun.com\" target=\"_blank\" rel=\"noopener\">云栖社区</a></p>\r\n</blockquote>\r\n<h3 id=\"前言\">前言</h3>\r\n<p>最近网上出了一个「程序员装逼指南」，觉得这个东西其实图样图森破，然后在下跟微博上的一些程序大牛讨论了一下如何装逼，深有感触。程序员嘛，外行人看起来已经是不可理解的奇怪生物了，自然也没必要跟他们…</p>","more":"<h3 id=\"编程语言\">编程语言</h3>\r\n<p>千万千万千万千万不要说自己是 Java/C#/C++ 程序员，尽量学一些奇怪的语言，python 已经有烂大街的趋势了，写写还是可以，装逼是用不上了。Lisp 和 Erlang 都是装逼的好语言。当然你要是号称会 Haskell 就更牛逼了，实在不会也没关系，发发跟 Haskell 有关的状态别人也很装了。没事儿还可以在论坛里喷喷 Java/C++ 有哪些缺点，可是，如果对方先发制人说他出了一种奇怪的语言名字怎么办？你可以微笑地说，你可知道天下语言皆出自 Lisp 和 Smalltalk？保准对方愣住 3 秒钟。</p>\r\n<h3 id=\"操作系统\">操作系统</h3>\r\n<p>首先，妥妥儿的不能用 Win，麻瓜才用 Win 呢。Linux 嘛，ubuntu 也差了点儿，现在不少人已经用 Arch 了，懂行儿的人都知道，gentoo 和 LFS 才是真正的装逼利器啊。自己编译神马的，这逼还真不是人人都能装的。再深入的话，你要是用 Lisp Machine 工作，就近乎神了。</p>\r\n<h3 id=\"编辑器\">编辑器</h3>\r\n<p>作为一个 IDE 去死团成员，我承认很大程度上我只是在装逼，纯文本编辑器才是你最终的归宿。Vim是标配，但是只有 Emacs 才能称得上是神器，「伪装成操作系统的编辑器」并非浪得虚名。当然，想要装逼装得好的话，你还需要学习它的配置语言 Emacs Lisp。</p>\r\n<h3 id=\"博客\">博客</h3>\r\n<p>在 CSDN/ITeye/cnblogs 这种地方写技术博客确实比在人人上写技术博客好多了，但是你要知道，大牛们都是有自己的个人网站的，而且，一个共同点是，他们的网站都是自己写的 html（没有 css）并且界面十分难看。整个网站散发着一种「我这的文章都很牛所以界面什么的都不重要」的气质。例如这个: <a href=\"http://xahlee.org/index.html\" target=\"_blank\" rel=\"noopener\">http://xahlee.org/index.html</a>。</p>\r\n<h3 id=\"其它\">其它</h3>\r\n<p>我习惯称不会写代码的人为「麻瓜」，你也可以有你自己的称呼。不要写 Linux/Unix，正确而专业的写法是 *nix。手边不要放技术书籍，即使要摆一两本书也要那种自己打印的全英文的手册，或者用铅笔在纸上写代码也是个不错的选择。还可以养成某种奇特的习惯，例如号称自己是 Lisper 然后各种（括号）。</p>\r\n<h3 id=\"装逼进阶\">装逼进阶</h3>\r\n<p>老是装逼也不成，所以我一直在寻找一种秒杀一切程序员的装逼之法。说实话，程序员的世界里有三种人。大部分是不会写代码的麻瓜，然后是程序员这个群体本身，他们认为唯一比程序员牛逼的，就是搞数学的人了。所以嘛，你要真想装个牛逼，就去学好傅立叶变换吧。另，发明 Lisp 和 Python 的人都是数学家，高得纳大神也是数学教授。</p>\r\n<hr>\r\n<ul>\r\n<li>大家都出来各自上车了这叫切断电源</li>\r\n<li>你们这桌交错敬酒，敬我一杯，敬你一杯，叫全相连。</li>\r\n<li>你们这桌有人提议咱们男士敬女士们一杯，叫组相连。</li>\r\n<li>BOSS 自己提了一瓶过来说兄弟们再把这个解决了这叫 alpha 测试。</li>\r\n<li>BOSS 让服务生端了二瓶过来，隔着桌子喊，你们这桌再把这个解决了，这叫 beta 测试。</li>\r\n<li>经理过来要敬大家，你们都说不行了，经理指着酒量最大的人说 ××× 你代表大家把这杯干了，这叫白盒测试。</li>\r\n<li>经理过来要敬大家，你们都说不行了，经理说我不管，出个人把这杯干了，这叫黑盒测试。</li>\r\n<li>又有人醉醺醺地过来要敬大家，一看不认识不是你们公司的这叫地址错误。</li>\r\n<li>你拍拍这人肩膀说兄弟你是对面厅的吧这叫重定向。</li>\r\n<li>你一人自斟自饮喝闷酒这叫 PC</li>\r\n<li>你们这桌相互敬酒这叫 LAN</li>\r\n<li>你们和别桌流动敬酒这叫 WAN</li>\r\n<li>你们一哥们醉了上二楼别的公司的庆祝宴上去敬酒这叫 INTERNET</li>\r\n<li>你一人到领导那桌说张总我敬你一个王总我敬你一个。….这叫 PPP</li>\r\n<li>你们一群人到领导那桌说张总我们敬你一个王总我们敬你一个……这叫 ADSL</li>\r\n<li>BOSS 举起一杯说我代表公司向你们项目组的成功表示祝贺这叫 B2B</li>\r\n<li>项目经理举起一杯说我代表项目组向张工的付出表示感谢这叫 B2C</li>\r\n<li>你也举杯说张哥我对你的景仰如指令流水滔滔不绝这叫 C2C</li>\r\n<li>你一哥们不行了喝点水也吐这叫插入异常</li>\r\n<li>你也觉得不行了上洗手间想解决一下可怎么也吐不出来这叫删除异常</li>\r\n<li>你们这桌子萧是头儿他一喝大家跟着喝这叫 Primary Key</li>\r\n<li>你们这桌坐了俩头儿，别桌的都过来敬酒这叫 Foreign Key</li>\r\n<li>叶子菊说不行我不喝酒的，经理说不行今天都得喝点这叫 NOT NULL</li>\r\n<li>经理从别桌转回来了问小李喝了吗喝了多少，这叫 Check</li>\r\n<li>Boss 说在座的各位今儿个都得尽兴这叫 Assertion全局约束</li>\r\n<li>乔大饼是海量偏不多喝这叫资源闲置</li>\r\n<li>阿甘不行了还要喝这叫超频</li>\r\n<li>小牛过来跟你碰杯这叫过程</li>\r\n<li>小吴过来跟你碰杯完了还要谈感受这叫函数</li>\r\n<li>你们这桌喝没了，这叫缺页中断</li>\r\n<li>让小姐拿两瓶过来这叫请求分页</li>\r\n<li>让她把酒放下把空瓶收拾收拾这叫页面置换</li>\r\n<li>一群人来给你敬酒你说等一下慢慢来这叫 P 操作</li>\r\n<li>你喝得豪气冲天放下杯说下一个我喝谁的这叫 V 操作</li>\r\n<li>你正在喝着有人来跟你碰杯你说等一下这叫阻塞</li>\r\n<li>那人看你放下杯给你满上这叫就绪</li>\r\n<li>稍歇了一下那人说该咱俩喝了这叫运行</li>\r\n<li>你刚喝了半口手机响了这叫中断</li>\r\n<li>你说不好意思哥们等一下这叫挂起</li>\r\n<li>你接完电话挂机了那人说咱俩继续这叫激活</li>\r\n<li>你来这杯终于喝完了那人回他们桌子上去了这叫终止</li>\r\n<li>又一哥们过来说你喝我就喝这叫同步</li>\r\n<li>一激动他把自个儿杯子打了这成了互斥</li>\r\n<li>你把这杯推给他说你先喝他又推回来说你先喝这叫死锁</li>\r\n<li>你说那咱们都不喝了这叫撤销</li>\r\n<li>贝贝喝了 1.44ml 就醉了退出来了这叫软盘</li>\r\n<li>达兰木坐那儿不动光猛喝这叫硬盘</li>\r\n<li>曹无名光看不喝这叫光盘</li>\r\n<li>anetople 上这桌喝又上那桌喝这叫 U 盘</li>\r\n<li>大家你一杯我一杯地喝这叫聊天室</li>\r\n<li>一个人猛喝其他人跟着喝这叫论坛</li>\r\n<li>你站起来猛灌别人都看你喝这叫博客</li>\r\n<li>曹无名暗恋何有名拉她上沙发那边喝这叫 QQ</li>\r\n<li>要敬你的人太多了他们一人一杯都放在你面前这叫 SPOOLING</li>\r\n<li>你实在不行了钻桌子底下去了这叫作业中止</li>\r\n<li>来不及上洗手间就吐了这叫 ERROR</li>\r\n<li>脸色煞白起不来了这叫 FATE ERROR</li>\r\n<li>经理紧张了说你没事吧这叫询问</li>\r\n<li>你说不出话了这叫丢失应答</li>\r\n<li>一哥们开始拨 120 了这叫紧急修复</li>\r\n<li>Boss 也急了说你们先撤大家也都散了吧这叫解除</li>\r\n<li>120 来了这叫 GAME OVER</li>\r\n<li>120 先走了这叫关机</li>\r\n</ul>\r\n<hr>\r\n<h3 id=\"这个是原版\">这个是原版</h3>\r\n<h4 id=\"一.-准备工作\">一. 准备工作</h4>\r\n<blockquote>\r\n<p>工欲善其事必先利其器。</p>\r\n</blockquote>\r\n<ol type=\"1\">\r\n<li>电脑不一定要配置高，但是双屏是必须的，越大越好，能一个横屏一个竖屏更好。 一个用来查资料，一个用来写代码。总之要显得信息量很大，效率很高。</li>\r\n<li>椅子不一定要舒服，但是一定要可以半躺着。</li>\r\n<li>大量的便签，各种的颜色的，用来记录每天要完成的事务，多多益善。 沿着电脑屏幕的边框，尽量贴满，显出有很多事情的样子。</li>\r\n<li>工具书，orelly 的，机械工业，电子工业什么的都可以，能英文就英文， 不行影印版的也可以，反正越厚越好，而且千万不要放在书架上，一定要堆在桌上，半打开状。</li>\r\n</ol>\r\n<h4 id=\"二.-从进门开始\">二. 从进门开始</h4>\r\n<ol type=\"1\">\r\n<li>着装！着装！不管你是去实验室，或者去公司的大楼，在或者是小公司的民宅，或是自己创业的黑作坊；无论是春夏秋冬白天晚上刮风下雨电闪雷鸣台风龙卷风，一个装 B 的程序员都要十分在意自己着装！ 这里只提出参考建议。<br>\r\n初级装：衬衣+牛仔裤+休闲鞋。<br>\r\n中级装：T 恤+宽松短裤+拖鞋。<br>\r\n高级装：背心+宽松大花裤衩+人字拖。</li>\r\n<li>得体的举止。在走廊以及任何形式的过道里，一定要双手插兜，走得像个痞子， 至少要看起来有点反社会，如若不行，可走文弱天才型 geek 路线。</li>\r\n<li>如果有女性在你背后指指点点，小声嘀咕说这一定是一个技术男的时候，应该先低头， 然后保持低头状态，缓缓回头，坏坏地蔑笑但是不要出声，然后快步前行。</li>\r\n<li>进门后，一定不要跟任何人打招呼，笔直走向自己的位置，最多路过打一杯咖啡，千万不要有多余的动作，显示出自己的专注与心无旁骛。</li>\r\n</ol>\r\n<h4 id=\"三.-坐下就不要再动了\">三. 坐下就不要再动了</h4>\r\n<ol type=\"1\">\r\n<li>坐下以后。姿势需要略微后仰。能翘着二郎腿最好了。然后在后仰的情况下低着头。 以便看到屏幕。然后千万就不要再动了。</li>\r\n<li>粗暴地把电脑前的大堆书推开一个口。然后摘下电脑上的一个便签。看一眼。不过3秒。可以开始 coding 了。</li>\r\n<li>能不用 IDE 就不要用。实在装不了。无论 IDE 是什么。一定要调成 DOS 那种黑色背景的。</li>\r\n<li>如果写前台界面。就不停地调试后台代码；如果写 java。就在里面混编 C；如果写 C。 就在里面混编汇编。不光要 coding。还要时不时的翻出一本什么英文的书翻一翻。看不懂就看看插图。然后扔到面前假装懂了继续 coding。</li>\r\n<li>什么看起来高端就用什么。不要管实用不实用。例如对 C++：<code>switch</code> 统统重构成多态；如果有指针。统统改成智能的；C++ 一定要自己写 template；数字是全部要替换成宏的名字能起多长就起多长；struct就不要出现了。如果出现。也一定要用 <code>__attriburte__</code>修饰一下；运算都是位操作的；操作符都是重载的；网络都是并发缓冲线程池的；<code>int</code> 只用 <code>int32_t</code> 声明的；继承不用普通的。什么多继承虚继承啊；helloworld 也要写捕获异常的； 后人一看代码。中间一堆关键字 <code>extern</code>，<code>asm</code>，<code>auto</code>，<code>XXXXX_cast</code>，<code>volatile</code>，<code>explicit</code>，<code>register</code>，<code>template</code>。让一般总在敲 <code>int</code>，<code>if</code>，<code>else</code>，<code>for</code> 的小程序员顿时心生崇拜。</li>\r\n<li>注释？算了吧。只有两个路线可以选： 一. 变量名起得巨长无比。看代码就和读英文文章一样顺畅，根本不需要加注释。<br>\r\n二. 代码无比晦涩，加不加注释根本无影响。</li>\r\n<li>千万不要用 IM 工具交流。千万不要问同事问题。显得自己没有水平。都是自己上网或者查书。</li>\r\n<li>无论是同事间开玩笑或者发生任何群体性时间。不要抬头。更不要东张西望。 即使地震火灾。也一定要先提交代码再行离开。</li>\r\n</ol>\r\n<h4 id=\"四.-潇洒地离开\">四. 潇洒地离开</h4>\r\n<ol type=\"1\">\r\n<li>人走，主机是千万千万不能关的，至少要跑个 <code>daily build</code>，实在不行正在 svn 提交也勉强算过关。</li>\r\n<li>书应该已经又堆到屏幕前了，千万不要整理，明天再来推开。</li>\r\n<li>不强求最后一个走，但一定要所有的非程序员，什么市场啊前台啊 <code>pm</code> 啊都走光了，才可以走。</li>\r\n<li>走得时候一定要率性，千万不要收拾任何东西，站起来，出门，好的，就这样。</li>\r\n<li>如果今天一定要说句话的话，找到那个最苦逼的程序员，跟他说，你进度太慢了啊，不要老让我等你。</li>\r\n</ol>\r\n<blockquote>\r\n<p>在那山的这边海的那边有一群程序员，他们老实又胹腆，他们聪明又没钱。他们一天到晚坐在那里熬夜写软件，饿了就咬一口方便面 ~~ 哦苦命的程序员，哦苦逼的程序员，只要一改需求他们就要重新搞一遍，但是期限只剩下两天。</p>\r\n</blockquote>"},{"title":"「转」CentOS 系统安装 GCC","date":"2017-10-05T02:52:44.000Z","nocopyright":true,"_content":"\n\n> 链接: [How To Install GCC on CentOS 6][link]  \n> 日期: Published on: Tue, Apr 28, 2015 at 1:02 am EST\n\nCentOS follows the development of Red Hat Enterprise Linux (RHEL).\nRHEL strives to be a stable server platform, which means that it does not rush\nto include the latest versions of every software package.\n\n<!-- more -->\n\nAs of the writing of this article, CentOS 6 officially distributes GCC v4.4.7.\nHowever, GCC v5.1 was recently released. Before that, v4.9.2 was available.\n\nThe official suggestion to needing a more recent version of GCC is that you\nshould consider a different UNIX distribution which is more focused on\nsupporting the latest versions of software packages.\n\nFortunately, you are able to install a more recent version of GCC on CentOS,\nleaving the older version still installed. This deviates from purely using\nthe officially distributed software, but sometimes you may feel like you have\nlittle choice. You can run into some complications; for example,\nif you are installing third party kernel modules, they must be compiled\nusing the same version of GCC used to build your kernel.\n\nThis article describes how to install the CentOS 6 officially supported\nversion of GCC, and how to install a newer version as well.\nThis article assumes that you have a freshly installed CentOS 6 VPS,\nalthough you can certainly follow the instructions on an existing VPS.\n\n### Install an officially supported (older) version of GCC\n\nEven if you want to install a newer version of GCC from source,\nGCC itself is written in C++.\nTherefore, you first have to install an older C++ compiler.\n\n1. Login to your VPS, either by clicking \"View Console\" in the Vultr control\n   panel, or by SSH, if you have set that up.\n   1. Login as root.\n   1. Create your own user account, and give it a password.\n      ```\n      adduser <username>\n      passwd <username>\n      ```\n   1. Allow your user account to execute commands with root privileges,\n      through the sudo command.\n      ```\n      visudo\n          After the line \"root   ALL=(ALL)   ALL\"\n          Add the line \"<username>   ALL=(ALL)   ALL\"\n          --- If you aren't familiar with vi, go to the line \"root   ALL=(ALL)   ALL\".\n          ---   Hit \"o\" to create a new line after that line and enter insert mode.\n          ---   Type \"<username>   ALL=(ALL)   ALL\".\n          ---   Hit ESC.\n          ---   Type \"ZZ\" to save.\n      ```\n   1. Log out as root, and login to your user account.\n1. Install the CentOS 6 GCC packages. This will ask you if you want to\n   install around 11 packages, due to dependencies.\n   ```\n   yum install gcc gcc-c++\n   ```\n1. Check the installed versions, and show their locations.\n   ```\n   gcc --version\n       May say: gcc (GCC) 4.4.7 20120313 (Red Hat 4.4.7-11)\n   g++ --version\n       May say: g++ (GCC) 4.4.7 20120313 (Red Hat 4.4.7-11)\n   which gcc\n       /usr/bin/gcc\n   which g++\n       /usr/bin/g++\n   ```\n\n### Install a newer version of GCC from source\n\nIf you only want the CentOS officially supported version of GCC,\nyou're all set. If you need a more recent version of GCC, continue on.\n\n1. **IMPORTANT!** First, complete the steps above to install an older binary version of GCC.\n1. Install additionally required packages. This will ask you if you want to install around 41 packages.\n   ```\n   yum install svn texinfo-tex flex zip libgcc.i686 glibc-devel.i686\n   ```\n1. Decide which version of GCC you want to install. This command will show you the \"tags\" for each of the versions available.\n   ```\n   svn ls svn://gcc.gnu.org/svn/gcc/tags | grep gcc | grep release\n       gcc-2_95-release/\n       ...\n       gcc-4_9_2_release/\n       gcc-5_1_0_release/\n   ```\n1. Get the source of the version of GCC you want. This will run for a few minutes.\n   The rest of this article is written for `gcc-5_1_0_release` and will\n   download the sources into `~/sourceInstallations/gcc_5_1_0_release/`.\n   ```\n   mkdir ~/sourceInstallations\n   cd ~/sourceInstallations\n   svn co svn://gcc.gnu.org/svn/gcc/tags/gcc_5_1_0_release/\n   ```\n1. Get the source of additional prerequisites.\n   Using v5.1.0, this downloads sources and adds them to the GCC build\n   for MPFR v2.4.2, GMP 4.3.2, and MPC 0.8.1.\n   ```\n   cd gcc_5_1_0_release/\n   ./contrib/download_prerequisites\n       --- Important, run this as shown, from the gcc_5_1_0_release directory.\n       ---   Do not cd to the contrib directory\n   ```\n1. If your VPS only has 768MB of memory,\n   you will run out of memory in the next step. If you have 1GB of memory,\n   you may be OK, but it can't hurt to do this step.\n   If you have 2GB of memory, or more, you can skip this step.\n   This step adds 500MB of virtual memory, using a swap file.\n   ```\n   SWAP=/tmp/swap\n   dd if=/dev/zero of=$SWAP bs=1M count=500\n   mkswap $SWAP\n   swapon $SWAP\n   ```\n1. Build GCC. This will run for hours. If this completes correctly,\n   the last line you will see will say \"success\".\n   It is normal to see some error-looking messages scrolling by quickly,\n   as long as the build completes and echos \"success\".\n   It's always a good idea to build things in a different directory than a\n   source directory. GCC documentation states that you should not use a\n   build directory that is a sub-directory of the source directory.\n   ```\n   cd ..\n   mkdir gcc_5_1_0_release_build/\n   cd gcc_5_1_0_release_build/\n   ../gcc_5_1_0_release/configure && make && make install && echo \"success\"\n   --- If your VPS has multiple cores, you can speed up the build by changing the middle part\n   ---   of this line from \"&& make &&\" to \"&& make -j <number of cores> &&\".\n   --- You can see the number of cores your VPS has by running \"nproc\"\n   ```\n1. If you set up a swap file in step 6, remove it.\n   Without doing more configuring, after a reboot,\n   it won't be used as a swap file,\n   and just take up hard drive space in your VPS.\n   ```\n   swapoff $SWAP\n   rm /tmp/swap\n   ```\n1. Check the installed versions, and see their locations.\n   ```\n   hash -r\n       (Makes your login \"forget\" about the previously seen locations of gcc and g++)\n   gcc --version\n       May say: gcc (GCC) 5.1.0\n   g++ --version\n       May say: g++ (GCC) 5.1.0\n   which gcc\n       /usr/local/bin/gcc\n   which g++\n       /usr/local/bin/g++\n   ```\n1. Add the new libraries to ld (the GNU linker).\n   ```\n   echo \"/usr/local/lib64\" > usrLocalLib64.conf\n   sudo mv usrLocalLib64.conf /etc/ld.so.conf.d/\n   sudo ldconfig\n       --- This may say a file or two \"is not an ELF file - it has the wrong magic bytes at the start.\"\n       --- You may ignore this message.  It is silent about the work it successfully completed.\n   ```\n1. Optionally make a hello world program.\n   ```\n   mkdir ~/code\n   cd ~/code\n   Create a file main.cpp that says:\n       #include <iostream>\n       using namespace std;\n       int main() {\n           cout << \"Hello world!\" << endl;\n           return 0;\n       }\n   --- One way to create this file is to run \"vi main.cpp\", hitting \"i\" to enter insert mode,\n   ---   typing the above file, hitting ESC, and hitting \"ZZ\" to save.\n   g++ main.cpp -o main\n   ./main\n       Hello World!\n   ```\n1. Optionally reclaim hard drive space. Your `~/sourceInstallations`\n   folder will be taking up around 8.0GB. It's probably wise to keep the folders,\n  as there are optional configuration options you may need to use at some\n  point in the future, and it would be faster to have a lot already done.\n  Also, the build process makes logs that you can later check and work\n  from if something goes wrong. But, after running `sudo make install` earlier,\n  your installed GCC isn't depending on anything in this directory,\n  and space can be at a premium, so you can do this step and reclaim\n  the 8.0GB or so.\n  ```\n  cd ~/\n  rm -rf sourceInstallations\n  --- Again, if you can spare the space, you may someday be happy to have left it there.\n  ```\n\nYou now have your CentOS officially supported `gcc` and `g++` still in\n`/usr/bin/`, your CentOS officially supported 32-bit libs in `/lib`,\nyour CentOS officially supported 64-bit libs in `/lib64`,\nand your CentOS officially supported include files in `/usr/include`.\n\nYour newer gcc and `g+`+ are in `/usr/local/bi`n,\nnewer 32-bit libs in `/usr/local/lib`,\nyour newer 64-bit libs in `/usr/local/lib64`,\nand your newer include files in `/usr/local/include`.\n\n\n[link]: https://www.vultr.com/docs/how-to-install-gcc-on-centos-6\n","source":"_posts/how-to-install-gcc-on-centos-6.md","raw":"---\ntitle: 「转」CentOS 系统安装 GCC\ndate: 2017-10-05 10:52:44\ntags:\n    - CentOS\n    - GCC\ncategories: Operation and Maintenance\nnocopyright: true\n---\n\n\n> 链接: [How To Install GCC on CentOS 6][link]  \n> 日期: Published on: Tue, Apr 28, 2015 at 1:02 am EST\n\nCentOS follows the development of Red Hat Enterprise Linux (RHEL).\nRHEL strives to be a stable server platform, which means that it does not rush\nto include the latest versions of every software package.\n\n<!-- more -->\n\nAs of the writing of this article, CentOS 6 officially distributes GCC v4.4.7.\nHowever, GCC v5.1 was recently released. Before that, v4.9.2 was available.\n\nThe official suggestion to needing a more recent version of GCC is that you\nshould consider a different UNIX distribution which is more focused on\nsupporting the latest versions of software packages.\n\nFortunately, you are able to install a more recent version of GCC on CentOS,\nleaving the older version still installed. This deviates from purely using\nthe officially distributed software, but sometimes you may feel like you have\nlittle choice. You can run into some complications; for example,\nif you are installing third party kernel modules, they must be compiled\nusing the same version of GCC used to build your kernel.\n\nThis article describes how to install the CentOS 6 officially supported\nversion of GCC, and how to install a newer version as well.\nThis article assumes that you have a freshly installed CentOS 6 VPS,\nalthough you can certainly follow the instructions on an existing VPS.\n\n### Install an officially supported (older) version of GCC\n\nEven if you want to install a newer version of GCC from source,\nGCC itself is written in C++.\nTherefore, you first have to install an older C++ compiler.\n\n1. Login to your VPS, either by clicking \"View Console\" in the Vultr control\n   panel, or by SSH, if you have set that up.\n   1. Login as root.\n   1. Create your own user account, and give it a password.\n      ```\n      adduser <username>\n      passwd <username>\n      ```\n   1. Allow your user account to execute commands with root privileges,\n      through the sudo command.\n      ```\n      visudo\n          After the line \"root   ALL=(ALL)   ALL\"\n          Add the line \"<username>   ALL=(ALL)   ALL\"\n          --- If you aren't familiar with vi, go to the line \"root   ALL=(ALL)   ALL\".\n          ---   Hit \"o\" to create a new line after that line and enter insert mode.\n          ---   Type \"<username>   ALL=(ALL)   ALL\".\n          ---   Hit ESC.\n          ---   Type \"ZZ\" to save.\n      ```\n   1. Log out as root, and login to your user account.\n1. Install the CentOS 6 GCC packages. This will ask you if you want to\n   install around 11 packages, due to dependencies.\n   ```\n   yum install gcc gcc-c++\n   ```\n1. Check the installed versions, and show their locations.\n   ```\n   gcc --version\n       May say: gcc (GCC) 4.4.7 20120313 (Red Hat 4.4.7-11)\n   g++ --version\n       May say: g++ (GCC) 4.4.7 20120313 (Red Hat 4.4.7-11)\n   which gcc\n       /usr/bin/gcc\n   which g++\n       /usr/bin/g++\n   ```\n\n### Install a newer version of GCC from source\n\nIf you only want the CentOS officially supported version of GCC,\nyou're all set. If you need a more recent version of GCC, continue on.\n\n1. **IMPORTANT!** First, complete the steps above to install an older binary version of GCC.\n1. Install additionally required packages. This will ask you if you want to install around 41 packages.\n   ```\n   yum install svn texinfo-tex flex zip libgcc.i686 glibc-devel.i686\n   ```\n1. Decide which version of GCC you want to install. This command will show you the \"tags\" for each of the versions available.\n   ```\n   svn ls svn://gcc.gnu.org/svn/gcc/tags | grep gcc | grep release\n       gcc-2_95-release/\n       ...\n       gcc-4_9_2_release/\n       gcc-5_1_0_release/\n   ```\n1. Get the source of the version of GCC you want. This will run for a few minutes.\n   The rest of this article is written for `gcc-5_1_0_release` and will\n   download the sources into `~/sourceInstallations/gcc_5_1_0_release/`.\n   ```\n   mkdir ~/sourceInstallations\n   cd ~/sourceInstallations\n   svn co svn://gcc.gnu.org/svn/gcc/tags/gcc_5_1_0_release/\n   ```\n1. Get the source of additional prerequisites.\n   Using v5.1.0, this downloads sources and adds them to the GCC build\n   for MPFR v2.4.2, GMP 4.3.2, and MPC 0.8.1.\n   ```\n   cd gcc_5_1_0_release/\n   ./contrib/download_prerequisites\n       --- Important, run this as shown, from the gcc_5_1_0_release directory.\n       ---   Do not cd to the contrib directory\n   ```\n1. If your VPS only has 768MB of memory,\n   you will run out of memory in the next step. If you have 1GB of memory,\n   you may be OK, but it can't hurt to do this step.\n   If you have 2GB of memory, or more, you can skip this step.\n   This step adds 500MB of virtual memory, using a swap file.\n   ```\n   SWAP=/tmp/swap\n   dd if=/dev/zero of=$SWAP bs=1M count=500\n   mkswap $SWAP\n   swapon $SWAP\n   ```\n1. Build GCC. This will run for hours. If this completes correctly,\n   the last line you will see will say \"success\".\n   It is normal to see some error-looking messages scrolling by quickly,\n   as long as the build completes and echos \"success\".\n   It's always a good idea to build things in a different directory than a\n   source directory. GCC documentation states that you should not use a\n   build directory that is a sub-directory of the source directory.\n   ```\n   cd ..\n   mkdir gcc_5_1_0_release_build/\n   cd gcc_5_1_0_release_build/\n   ../gcc_5_1_0_release/configure && make && make install && echo \"success\"\n   --- If your VPS has multiple cores, you can speed up the build by changing the middle part\n   ---   of this line from \"&& make &&\" to \"&& make -j <number of cores> &&\".\n   --- You can see the number of cores your VPS has by running \"nproc\"\n   ```\n1. If you set up a swap file in step 6, remove it.\n   Without doing more configuring, after a reboot,\n   it won't be used as a swap file,\n   and just take up hard drive space in your VPS.\n   ```\n   swapoff $SWAP\n   rm /tmp/swap\n   ```\n1. Check the installed versions, and see their locations.\n   ```\n   hash -r\n       (Makes your login \"forget\" about the previously seen locations of gcc and g++)\n   gcc --version\n       May say: gcc (GCC) 5.1.0\n   g++ --version\n       May say: g++ (GCC) 5.1.0\n   which gcc\n       /usr/local/bin/gcc\n   which g++\n       /usr/local/bin/g++\n   ```\n1. Add the new libraries to ld (the GNU linker).\n   ```\n   echo \"/usr/local/lib64\" > usrLocalLib64.conf\n   sudo mv usrLocalLib64.conf /etc/ld.so.conf.d/\n   sudo ldconfig\n       --- This may say a file or two \"is not an ELF file - it has the wrong magic bytes at the start.\"\n       --- You may ignore this message.  It is silent about the work it successfully completed.\n   ```\n1. Optionally make a hello world program.\n   ```\n   mkdir ~/code\n   cd ~/code\n   Create a file main.cpp that says:\n       #include <iostream>\n       using namespace std;\n       int main() {\n           cout << \"Hello world!\" << endl;\n           return 0;\n       }\n   --- One way to create this file is to run \"vi main.cpp\", hitting \"i\" to enter insert mode,\n   ---   typing the above file, hitting ESC, and hitting \"ZZ\" to save.\n   g++ main.cpp -o main\n   ./main\n       Hello World!\n   ```\n1. Optionally reclaim hard drive space. Your `~/sourceInstallations`\n   folder will be taking up around 8.0GB. It's probably wise to keep the folders,\n  as there are optional configuration options you may need to use at some\n  point in the future, and it would be faster to have a lot already done.\n  Also, the build process makes logs that you can later check and work\n  from if something goes wrong. But, after running `sudo make install` earlier,\n  your installed GCC isn't depending on anything in this directory,\n  and space can be at a premium, so you can do this step and reclaim\n  the 8.0GB or so.\n  ```\n  cd ~/\n  rm -rf sourceInstallations\n  --- Again, if you can spare the space, you may someday be happy to have left it there.\n  ```\n\nYou now have your CentOS officially supported `gcc` and `g++` still in\n`/usr/bin/`, your CentOS officially supported 32-bit libs in `/lib`,\nyour CentOS officially supported 64-bit libs in `/lib64`,\nand your CentOS officially supported include files in `/usr/include`.\n\nYour newer gcc and `g+`+ are in `/usr/local/bi`n,\nnewer 32-bit libs in `/usr/local/lib`,\nyour newer 64-bit libs in `/usr/local/lib64`,\nand your newer include files in `/usr/local/include`.\n\n\n[link]: https://www.vultr.com/docs/how-to-install-gcc-on-centos-6\n","slug":"how-to-install-gcc-on-centos-6","published":1,"updated":"2023-03-09T16:09:38.236Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u336f001dp4x0wa75qejb","content":"<blockquote>\r\n<p>链接: <a href=\"https://www.vultr.com/docs/how-to-install-gcc-on-centos-6\" target=\"_blank\" rel=\"noopener\">How To Install GCC on CentOS 6</a><br>\r\n日期: Published on: Tue, Apr 28, 2015 at 1:02 am EST</p>\r\n</blockquote>\r\n<p>CentOS follows the development of Red Hat Enterprise Linux (RHEL). RHEL strives to be a stable server platform, which means that it does not rush to include the latest versions of every software package.</p>\r\n<a id=\"more\"></a>\r\n<p>As of the writing of this article, CentOS 6 officially distributes GCC v4.4.7. However, GCC v5.1 was recently released. Before that, v4.9.2 was available.</p>\r\n<p>The official suggestion to needing a more recent version of GCC is that you should consider a different UNIX distribution which is more focused on supporting the latest versions of software packages.</p>\r\n<p>Fortunately, you are able to install a more recent version of GCC on CentOS, leaving the older version still installed. This deviates from purely using the officially distributed software, but sometimes you may feel like you have little choice. You can run into some complications; for example, if you are installing third party kernel modules, they must be compiled using the same version of GCC used to build your kernel.</p>\r\n<p>This article describes how to install the CentOS 6 officially supported version of GCC, and how to install a newer version as well. This article assumes that you have a freshly installed CentOS 6 VPS, although you can certainly follow the instructions on an existing VPS.</p>\r\n<h3 id=\"install-an-officially-supported-older-version-of-gcc\">Install an officially supported (older) version of GCC</h3>\r\n<p>Even if you want to install a newer version of GCC from source, GCC itself is written in C++. Therefore, you first have to install an older C++ compiler.</p>\r\n<ol type=\"1\">\r\n<li><p>Login to your VPS, either by clicking “View Console” in the Vultr control panel, or by SSH, if you have set that up.</p>\r\n<ol type=\"1\">\r\n<li><p>Login as root.</p></li>\r\n<li><p>Create your own user account, and give it a password. <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">adduser &lt;username&gt;</span><br><span class=\"line\">passwd &lt;username&gt;</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>Allow your user account to execute commands with root privileges, through the sudo command. <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">visudo</span><br><span class=\"line\">    After the line &quot;root   ALL=(ALL)   ALL&quot;</span><br><span class=\"line\">    Add the line &quot;&lt;username&gt;   ALL=(ALL)   ALL&quot;</span><br><span class=\"line\">    --- If you aren&apos;t familiar with vi, go to the line &quot;root   ALL=(ALL)   ALL&quot;.</span><br><span class=\"line\">    ---   Hit &quot;o&quot; to create a new line after that line and enter insert mode.</span><br><span class=\"line\">    ---   Type &quot;&lt;username&gt;   ALL=(ALL)   ALL&quot;.</span><br><span class=\"line\">    ---   Hit ESC.</span><br><span class=\"line\">    ---   Type &quot;ZZ&quot; to save.</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>Log out as root, and login to your user account.</p></li>\r\n</ol></li>\r\n<li><p>Install the CentOS 6 GCC packages. This will ask you if you want to install around 11 packages, due to dependencies. <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install gcc gcc-c++</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>Check the installed versions, and show their locations. <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gcc --version</span><br><span class=\"line\">    May say: gcc (GCC) 4.4.7 20120313 (Red Hat 4.4.7-11)</span><br><span class=\"line\">g++ --version</span><br><span class=\"line\">    May say: g++ (GCC) 4.4.7 20120313 (Red Hat 4.4.7-11)</span><br><span class=\"line\">which gcc</span><br><span class=\"line\">    /usr/bin/gcc</span><br><span class=\"line\">which g++</span><br><span class=\"line\">    /usr/bin/g++</span><br></pre></td></tr></table></figure></p></li>\r\n</ol>\r\n<h3 id=\"install-a-newer-version-of-gcc-from-source\">Install a newer version of GCC from source</h3>\r\n<p>If you only want the CentOS officially supported version of GCC, you’re all set. If you need a more recent version of GCC, continue on.</p>\r\n<ol type=\"1\">\r\n<li><p><strong>IMPORTANT!</strong> First, complete the steps above to install an older binary version of GCC.</p></li>\r\n<li><p>Install additionally required packages. This will ask you if you want to install around 41 packages. <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install svn texinfo-tex flex zip libgcc.i686 glibc-devel.i686</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>Decide which version of GCC you want to install. This command will show you the “tags” for each of the versions available. <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">svn ls svn://gcc.gnu.org/svn/gcc/tags | grep gcc | grep release</span><br><span class=\"line\">    gcc-2_95-release/</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    gcc-4_9_2_release/</span><br><span class=\"line\">    gcc-5_1_0_release/</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>Get the source of the version of GCC you want. This will run for a few minutes. The rest of this article is written for <code>gcc-5_1_0_release</code> and will download the sources into <code>~/sourceInstallations/gcc_5_1_0_release/</code>. <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir ~/sourceInstallations</span><br><span class=\"line\">cd ~/sourceInstallations</span><br><span class=\"line\">svn co svn://gcc.gnu.org/svn/gcc/tags/gcc_5_1_0_release/</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>Get the source of additional prerequisites. Using v5.1.0, this downloads sources and adds them to the GCC build for MPFR v2.4.2, GMP 4.3.2, and MPC 0.8.1. <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd gcc_5_1_0_release/</span><br><span class=\"line\">./contrib/download_prerequisites</span><br><span class=\"line\">    --- Important, run this as shown, from the gcc_5_1_0_release directory.</span><br><span class=\"line\">    ---   Do not cd to the contrib directory</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>If your VPS only has 768MB of memory, you will run out of memory in the next step. If you have 1GB of memory, you may be OK, but it can’t hurt to do this step. If you have 2GB of memory, or more, you can skip this step. This step adds 500MB of virtual memory, using a swap file. <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SWAP=/tmp/swap</span><br><span class=\"line\">dd if=/dev/zero of=$SWAP bs=1M count=500</span><br><span class=\"line\">mkswap $SWAP</span><br><span class=\"line\">swapon $SWAP</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>Build GCC. This will run for hours. If this completes correctly, the last line you will see will say “success”. It is normal to see some error-looking messages scrolling by quickly, as long as the build completes and echos “success”. It’s always a good idea to build things in a different directory than a source directory. GCC documentation states that you should not use a build directory that is a sub-directory of the source directory. <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ..</span><br><span class=\"line\">mkdir gcc_5_1_0_release_build/</span><br><span class=\"line\">cd gcc_5_1_0_release_build/</span><br><span class=\"line\">../gcc_5_1_0_release/configure &amp;&amp; make &amp;&amp; make install &amp;&amp; echo &quot;success&quot;</span><br><span class=\"line\">--- If your VPS has multiple cores, you can speed up the build by changing the middle part</span><br><span class=\"line\">---   of this line from &quot;&amp;&amp; make &amp;&amp;&quot; to &quot;&amp;&amp; make -j &lt;number of cores&gt; &amp;&amp;&quot;.</span><br><span class=\"line\">--- You can see the number of cores your VPS has by running &quot;nproc&quot;</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>If you set up a swap file in step 6, remove it. Without doing more configuring, after a reboot, it won’t be used as a swap file, and just take up hard drive space in your VPS. <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">swapoff $SWAP</span><br><span class=\"line\">rm /tmp/swap</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>Check the installed versions, and see their locations. <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hash -r</span><br><span class=\"line\">    (Makes your login &quot;forget&quot; about the previously seen locations of gcc and g++)</span><br><span class=\"line\">gcc --version</span><br><span class=\"line\">    May say: gcc (GCC) 5.1.0</span><br><span class=\"line\">g++ --version</span><br><span class=\"line\">    May say: g++ (GCC) 5.1.0</span><br><span class=\"line\">which gcc</span><br><span class=\"line\">    /usr/local/bin/gcc</span><br><span class=\"line\">which g++</span><br><span class=\"line\">    /usr/local/bin/g++</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>Add the new libraries to ld (the GNU linker). <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;/usr/local/lib64&quot; &gt; usrLocalLib64.conf</span><br><span class=\"line\">sudo mv usrLocalLib64.conf /etc/ld.so.conf.d/</span><br><span class=\"line\">sudo ldconfig</span><br><span class=\"line\">    --- This may say a file or two &quot;is not an ELF file - it has the wrong magic bytes at the start.&quot;</span><br><span class=\"line\">    --- You may ignore this message.  It is silent about the work it successfully completed.</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>Optionally make a hello world program. <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir ~/code</span><br><span class=\"line\">cd ~/code</span><br><span class=\"line\">Create a file main.cpp that says:</span><br><span class=\"line\">    #include &lt;iostream&gt;</span><br><span class=\"line\">    using namespace std;</span><br><span class=\"line\">    int main() &#123;</span><br><span class=\"line\">        cout &lt;&lt; &quot;Hello world!&quot; &lt;&lt; endl;</span><br><span class=\"line\">        return 0;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">--- One way to create this file is to run &quot;vi main.cpp&quot;, hitting &quot;i&quot; to enter insert mode,</span><br><span class=\"line\">---   typing the above file, hitting ESC, and hitting &quot;ZZ&quot; to save.</span><br><span class=\"line\">g++ main.cpp -o main</span><br><span class=\"line\">./main</span><br><span class=\"line\">    Hello World!</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>Optionally reclaim hard drive space. Your <code>~/sourceInstallations</code> folder will be taking up around 8.0GB. It’s probably wise to keep the folders, as there are optional configuration options you may need to use at some point in the future, and it would be faster to have a lot already done. Also, the build process makes logs that you can later check and work from if something goes wrong. But, after running <code>sudo make install</code> earlier, your installed GCC isn’t depending on anything in this directory, and space can be at a premium, so you can do this step and reclaim the 8.0GB or so. <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~/</span><br><span class=\"line\">rm -rf sourceInstallations</span><br><span class=\"line\">--- Again, if you can spare the space, you may someday be happy to have left it there.</span><br></pre></td></tr></table></figure></p></li>\r\n</ol>\r\n<p>You now have your CentOS officially supported <code>gcc</code> and <code>g++</code> still in <code>/usr/bin/</code>, your CentOS officially supported 32-bit libs in <code>/lib</code>, your CentOS officially supported 64-bit libs in <code>/lib64</code>, and your CentOS officially supported include files in <code>/usr/include</code>.</p>\r\n<p>Your newer gcc and <code>g+</code>+ are in <code>/usr/local/bi</code>n, newer 32-bit libs in <code>/usr/local/lib</code>, your newer 64-bit libs in <code>/usr/local/lib64</code>, and your newer include files in <code>/usr/local/include</code>.</p>\r\n","site":{"data":{}},"excerpt":"<blockquote>\r\n<p>链接: <a href=\"https://www.vultr.com/docs/how-to-install-gcc-on-centos-6\" target=\"_blank\" rel=\"noopener\">How To Install GCC on CentOS 6</a><br>\r\n日期: Published on: Tue, Apr 28, 2015 at 1:02 am EST</p>\r\n</blockquote>\r\n<p>CentOS follows the development of Red Hat Enterprise Linux (RHEL). RHEL strives to be a stable server platform, which means that it does not rush to include the latest versions of every software package.</p>","more":"<p>As of the writing of this article, CentOS 6 officially distributes GCC v4.4.7. However, GCC v5.1 was recently released. Before that, v4.9.2 was available.</p>\r\n<p>The official suggestion to needing a more recent version of GCC is that you should consider a different UNIX distribution which is more focused on supporting the latest versions of software packages.</p>\r\n<p>Fortunately, you are able to install a more recent version of GCC on CentOS, leaving the older version still installed. This deviates from purely using the officially distributed software, but sometimes you may feel like you have little choice. You can run into some complications; for example, if you are installing third party kernel modules, they must be compiled using the same version of GCC used to build your kernel.</p>\r\n<p>This article describes how to install the CentOS 6 officially supported version of GCC, and how to install a newer version as well. This article assumes that you have a freshly installed CentOS 6 VPS, although you can certainly follow the instructions on an existing VPS.</p>\r\n<h3 id=\"install-an-officially-supported-older-version-of-gcc\">Install an officially supported (older) version of GCC</h3>\r\n<p>Even if you want to install a newer version of GCC from source, GCC itself is written in C++. Therefore, you first have to install an older C++ compiler.</p>\r\n<ol type=\"1\">\r\n<li><p>Login to your VPS, either by clicking “View Console” in the Vultr control panel, or by SSH, if you have set that up.</p>\r\n<ol type=\"1\">\r\n<li><p>Login as root.</p></li>\r\n<li><p>Create your own user account, and give it a password. <!--�68--></p></li>\r\n<li><p>Allow your user account to execute commands with root privileges, through the sudo command. <!--�69--></p></li>\r\n<li><p>Log out as root, and login to your user account.</p></li>\r\n</ol></li>\r\n<li><p>Install the CentOS 6 GCC packages. This will ask you if you want to install around 11 packages, due to dependencies. <!--�70--></p></li>\r\n<li><p>Check the installed versions, and show their locations. <!--�71--></p></li>\r\n</ol>\r\n<h3 id=\"install-a-newer-version-of-gcc-from-source\">Install a newer version of GCC from source</h3>\r\n<p>If you only want the CentOS officially supported version of GCC, you’re all set. If you need a more recent version of GCC, continue on.</p>\r\n<ol type=\"1\">\r\n<li><p><strong>IMPORTANT!</strong> First, complete the steps above to install an older binary version of GCC.</p></li>\r\n<li><p>Install additionally required packages. This will ask you if you want to install around 41 packages. <!--�72--></p></li>\r\n<li><p>Decide which version of GCC you want to install. This command will show you the “tags” for each of the versions available. <!--�73--></p></li>\r\n<li><p>Get the source of the version of GCC you want. This will run for a few minutes. The rest of this article is written for <code>gcc-5_1_0_release</code> and will download the sources into <code>~/sourceInstallations/gcc_5_1_0_release/</code>. <!--�74--></p></li>\r\n<li><p>Get the source of additional prerequisites. Using v5.1.0, this downloads sources and adds them to the GCC build for MPFR v2.4.2, GMP 4.3.2, and MPC 0.8.1. <!--�75--></p></li>\r\n<li><p>If your VPS only has 768MB of memory, you will run out of memory in the next step. If you have 1GB of memory, you may be OK, but it can’t hurt to do this step. If you have 2GB of memory, or more, you can skip this step. This step adds 500MB of virtual memory, using a swap file. <!--�76--></p></li>\r\n<li><p>Build GCC. This will run for hours. If this completes correctly, the last line you will see will say “success”. It is normal to see some error-looking messages scrolling by quickly, as long as the build completes and echos “success”. It’s always a good idea to build things in a different directory than a source directory. GCC documentation states that you should not use a build directory that is a sub-directory of the source directory. <!--�77--></p></li>\r\n<li><p>If you set up a swap file in step 6, remove it. Without doing more configuring, after a reboot, it won’t be used as a swap file, and just take up hard drive space in your VPS. <!--�78--></p></li>\r\n<li><p>Check the installed versions, and see their locations. <!--�79--></p></li>\r\n<li><p>Add the new libraries to ld (the GNU linker). <!--�80--></p></li>\r\n<li><p>Optionally make a hello world program. <!--�81--></p></li>\r\n<li><p>Optionally reclaim hard drive space. Your <code>~/sourceInstallations</code> folder will be taking up around 8.0GB. It’s probably wise to keep the folders, as there are optional configuration options you may need to use at some point in the future, and it would be faster to have a lot already done. Also, the build process makes logs that you can later check and work from if something goes wrong. But, after running <code>sudo make install</code> earlier, your installed GCC isn’t depending on anything in this directory, and space can be at a premium, so you can do this step and reclaim the 8.0GB or so. <!--�82--></p></li>\r\n</ol>\r\n<p>You now have your CentOS officially supported <code>gcc</code> and <code>g++</code> still in <code>/usr/bin/</code>, your CentOS officially supported 32-bit libs in <code>/lib</code>, your CentOS officially supported 64-bit libs in <code>/lib64</code>, and your CentOS officially supported include files in <code>/usr/include</code>.</p>\r\n<p>Your newer gcc and <code>g+</code>+ are in <code>/usr/local/bi</code>n, newer 32-bit libs in <code>/usr/local/lib</code>, your newer 64-bit libs in <code>/usr/local/lib64</code>, and your newer include files in <code>/usr/local/include</code>.</p>"},{"title":"「转」CentOS 系统安装 LLVM 以及 Clang","date":"2017-09-10T02:51:03.000Z","nocopyright":true,"_content":"\n\n> 链接: [How To Install LLVM and Clang on CentOS 6][link]  \n> 日期: Wed, May 13, 2015 at 3:22 am EST\n\nLLVM is an open-source compiler infrastructure. LLVM was started in 2000,\nand has been extensively used and modified by Apple since 2005. Clang is a C,\nC++, Objective-C, and Objective-C++ compiler that works with the LLVM system.\nClang was started in 2007 by Apple, and since then Google and Intel have\nbecome involved in its continued development.\n\n<!-- more -->\n\nClang's developers claim that compared to GCC, it compiles faster,\nuses less memory, gives more user friendly diagnostics during compilation,\nand is compatible with GCC.\n\nCentOS follows the development of Red Hat Enterprise Linux (RHEL).\nRHEL strives to be a stable server platform, which means it does not rush to\ninclude the latest versions of everything.\n\nAs of the writing of this article, CentOS 6 officially distributes\nLLVM & Clang v3.4.2. However, Clang v3.6 has been released.\n\nThe official suggestion is if you need a more recent version of LLVM & Clang,\nyou should consider a different UNIX distribution which is more focused on\nsupporting the latest versions of software packages.\n\nFortunately, you are able to install a more recent version LLVM & Clang GCC\non CentOS. This deviates from purely using the officially distributed software,\nbut sometimes you may feel like you have little choice.\n\nThis article describes how to install the CentOS 6 officially supported\nversion of LLVM & Clang, and how to install a newer version.\nThis article assumes you have a freshly installed CentOS 6 VPS,\nhowever you can certainly follow the instructions on a VPS you have already\nbeen using.\n\nClang is largely independent from GCC, but as of the writing of this article,\nClang still uses several shared libraries installed by GCC (namely,\n`crtbegin.o`, `gcc`, and `gcc_s`). If you install LLVM & Clang on CentOS 6,\nyou won't be able to compile anything if you don't also have GCC on your\nsystem for these shared libraries. Ideally, yum would have a package\ndependency for clang of gcc and gcc-c++, but as of the writing of this article,\nyum is unaware of the dependency.\n\nAdditionally, building a newer version of LLVM & Clang from source requires\nG++ v4.7+, which you can only get on CentOS 6 by installing it by source.\n\nIf you run all of the steps below, you'll wind up with 2 versions of GCC and 2\nversions of LLVM & Clang. This includes an officially supported binary older\nversion and a newer version from source for each program. However,\nthere's no need to run all the steps below. You can decide whether you want\nthe officially supported binary older version of LLVM & Clang,\nor the newer version from source, and run whichever section of instructions\nfits your decision.\n\n### Install an officially supported (older) version of LLVM & Clang\n\n1. **IMPORTANT!** First, install an officially supported (older) version of GCC,\n   by performing the steps in the article [How to Install GCC on CentOS 6](how-to-install-gcc-on-centos-6.md)\n   -- you do NOT need to perform the steps under that article's heading\n   \"Install a newer version of GCC from source\".\n1. Install LLVM & Clang\n   ```\n   yum install clang\n    --- This will bring in llvm as a dependency\n   ```\n1. Check the installed versions, and see their locations.\n   ```\n   clang --version\n       May say: clang version 3.4.2 (tags/RELEASE_34/dot2-final)\n   which clang\n       /usr/bin/clang\n   gcc --version\n       May say: gcc (GCC) 4.4.7 20120313 (Red Hat 4.4.7-11)\n   g++ --version\n       May say: g++ (GCC) 4.4.7 20120313 (Red Hat 4.4.7-11)\n   which gcc\n       /usr/bin/gcc\n   which g++\n       /usr/bin/g++\n   ```\n\n### Install a newer version of LLVM & Clang from source\n\nTo build LLVM & Clang by source on CentOS, you have to have GCC v4.7 or above.\nCentOS 6 does not have this high of a version in yum,\nso you first have to install a more recent GCC from source.\n\n1. **IMPORTANT!** First, install a newer version of GCC from source,\n   by performing the steps in the article [How to Install GCC on CentOS 6](how-to-install-gcc-on-centos-6.md)\n   -- you DO need to perform all steps in that article,\n   including under the heading \"Install a newer version of GCC from source\".\n1. Install additionally required packages.\n   ```bash\n   yum install cmake\n   ```\n1. Install a newer version of Python. LLVM & Clang v3.6.0 requires Python v2.7+,\n   but CentOS 6 yum repository only has Python v2.6.6.\n   ```\n   mkdir ~/sourceInstallations\n   cd ~/sourceInstallations\n   wget https://www.python.org/ftp/python/2.7.9/Python-2.7.9.tgz\n   tar -xvf Python-2.7.9.tgz\n   cd Python-2.7.9\n   ./configure && make && make install\n   ```\n1. Decide which version of LLVM & Clang you want.\n   This command will show you the \"tags\" for the versions available.\n   ```\n   svn ls http://llvm.org/svn/llvm-project/llvm/tags | grep RELEASE\n       RELEASE_1/\n       ...\n       RELEASE_352/\n       RELEASE_360/\n       RELEASE_361/\n   svn ls http://llvm.org/svn/llvm-project/llvm/tags/RELEASE_361\n       rc1/\n       --- At this time, there is no final, just a release candidate.  You could certainly use a release candidate, but this article will show how to use a final release.\n   svn ls http://llvm.org/svn/llvm-project/llvm/tags/RELEASE_360\n       final/\n       rc1/\n       rc2/\n       rc3/\n       rc4/\n   ```\n1. Get the source of the version of LLVM & Clang that you want.\n   This will run for a few minutes. The rest of this article is written for\n   `RELEASE_360/` and will download the sources into `~/sourceInstallations/llvm_RELEASE_360/`\n   -- You will have to substitute the proper tag to fit future versions.\n   The directories below of `compiler-rt`, `libcxx`, and `libcxxabi`\n   are not absolutely necessary, but contain some of the features that\n   LLVM & Clang have that GCC doesn't, so are included in this article.\n   There are other LLVM \"sub-projects\" you could choose to use,\n   such as dragonegg, LLDB, OpenMB, vmkit, polly, libclc, klee, SAFECode,\n   and lld. You can read about those on the [LLVM website][LLVM].\n   ```\n   cd ~/sourceInstallations\n   svn co http://llvm.org/svn/llvm-project/llvm/tags/RELEASE_360/final llvm_RELEASE_360\n   cd llvm_RELEASE_360/tools\n   svn co http://llvm.org/svn/llvm-project/cfe/tags/RELEASE_360/final clang\n   cd ../projects\n   svn co http://llvm.org/svn/llvm-project/compiler-rt/tags/RELEASE_360/final compiler-rt\n   svn co http://llvm.org/svn/llvm-project/libcxx/tags/RELEASE_360/final libcxx\n   svn co http://llvm.org/svn/llvm-project/libcxxabi/tags/RELEASE_360/final libcxxabi\n   cd ..\n   svn update\n       At revision X.\n       --- Hopefully this outputs one line saying \"At revision X\", but numbers instead of \"X\".  If it downloads more source files, a new revision was released while you were downloading the source code.  This is highly unlikely unless you're using trunk (the most up to date, maybe unstable code.)  But, if this happens, perform a svn update in the tools/clang, projects/compiler-rt, projects/libcxx, projects/libcxxabi, and again ~/sourceInstallations/llvm_RELEASE_360, until you are fully up to date.\n   ```\n1. Build LLVM & Clang. This will run for a while. If this completes correctly,\n   the last line you will see will say \"success\".\n   It is normal to see some error-looking messages scrolling by quickly.\n   It's always a good idea to build things in a different directory than a\n   source directory.\n   ```\n   mkdir ../llvm_RELEASE_360_build\n   cd ../llvm_RELEASE_360_build\n   cmake -G \"Unix Makefiles\" -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=/usr/local/bin/gcc -DCMAKE_CXX_COMPILER=/usr/local/bin/g++ ../llvm_RELEASE_360 && make && make install && echo success\n       --- If your VPS has multiple cores, you can speed up the build by changing the middle part\n       ---   of this line from \"&& make &&\" to \"&& make -j <number of cores> &&\".\n       --- You can see the number of cores your VPS has by running \"nproc\"\n       --- If you omit -DCMAKE_BUILD_TYPE=Release, the build defaults to debug.  This is great if you need to debug LLVM & Clang itself, but slows down compilation of your end programs considerably.\n       --- If you omit the references to gcc and g++, it will default to using the older binary versions in /usr/bin/, and will not compile.\n   ```\n1. Check the installed versions, and see their locations.\n   ```\n   clang --version\n       May say: clang version 3.6.0 (tags/RELEASE_360/final 237229)\n   clang++ --version\n       May say: clang version 3.6.0 (tags/RELEASE_360/final 237229)\n   which clang\n       /usr/local/bin/clang\n   which clang++\n       /usr/local/bin/clang++\n   ```\n1. Add the new libraries to ld (the GNU linker).\n   ```\n   echo \"/usr/local/lib\" > usrLocalLib.conf\n   mv usrLocalLib.conf /etc/ld.so.conf.d/\n   ldconfig\n       --- This may say a file or two \"is not an ELF file - it has the wrong magic bytes at the start.\"\n       --- You may ignore this message.  It is silent about the work it successfully completed.\n   ```\n1. Optionally make a \"hello world\" program.\n   ```\n   mkdir ~/code\n   cd ~/code\n   Create a file main.cpp that says:\n       #include <iostream>\n       using namespace std;\n       int main() {\n           cout << \"Hello world!\" << endl;\n           return 0;\n       }\n   --- One way to create this file is to run \"vi main.cpp\", hitting \"i\" to enter insert mode,\n   ---   typing the above file, hitting ESC, and hitting \"ZZ\" to save.\n   clang++ main.cpp -o main\n   ./main\n       Hello World!\n   clang++ -stdlib=libc++ -lc++abi main.cpp -o main\n       --- This uses Clang's libc++ and libc++abi, instead of the GNU stdlibc++ and stdlibc++abi\n   ./main\n       Hello world!\n   ```\n1. Use LLVM & Clang when you want to.\n   ```\n   You could set LLVM & Clang to be your system's default C and C++ compiler by running:\n       echo \"export CC=/usr/local/bin/gcc\" >> ~/.bashrc\n       echo \"export CXX=/usr/local/bin/g++\" >> ~/.bashrc\n       source ~/.bashrc\n   Once and a while there is a difference between Clang and GCC, but it's becoming more and more rare.  To be more conservative, you could specify in your code's buildsystem to use LLVM & Clang, but otherwise leave your system's default to the source build of GCC.\n   ```\n1. Optionally reclaim hard drive space. Your `~/sourceInstallations` folder\n   will be taking up around 11GB of disk space. It's probably wise to keep the\n   folders, as there are optional configuration options you may need to use\n   at some point in the future, and it would be faster to have\n   a lot already done. And, as mentioned above, there are additional\n   \"sub-projects\" you can add to LLVM & Clang. Also, the build\n   process makes logs that you can later check and work from if something\n   goes wrong. But, after running \"make install\" earlier,\n   your installed LLVM & Clang isn't depending on anything in this directory,\n   and space can be at a premium, so you can do this step and reclaim the 11GB.\n   ```\n   cd ~/\n   rm -rf sourceInstallations\n   --- Again, if you can spare the space, you may someday be happy to have left it there.\n   ```\n\nYou now have your newer LLVM & Clang in `/usr/local/bin`,\nyour newer 64-bit LLVM & Clang libs in `/usr/local/lib`,\nand your newer LLVM & Clang include files in `/usr/local/include`.\n\n\n[link]: https://www.vultr.com/docs/how-to-install-llvm-and-clang-on-centos-6\n[LLVM]: http://llvm.org\n","source":"_posts/how-to-install-llvm-and-clang-on-centos-6.md","raw":"---\ntitle: 「转」CentOS 系统安装 LLVM 以及 Clang\ndate: 2017-09-10 10:51:03\ntags:\n    - CentOS\n    - LLVM\n    - Clang\ncategories: Operation and Maintenance\nnocopyright: true\n---\n\n\n> 链接: [How To Install LLVM and Clang on CentOS 6][link]  \n> 日期: Wed, May 13, 2015 at 3:22 am EST\n\nLLVM is an open-source compiler infrastructure. LLVM was started in 2000,\nand has been extensively used and modified by Apple since 2005. Clang is a C,\nC++, Objective-C, and Objective-C++ compiler that works with the LLVM system.\nClang was started in 2007 by Apple, and since then Google and Intel have\nbecome involved in its continued development.\n\n<!-- more -->\n\nClang's developers claim that compared to GCC, it compiles faster,\nuses less memory, gives more user friendly diagnostics during compilation,\nand is compatible with GCC.\n\nCentOS follows the development of Red Hat Enterprise Linux (RHEL).\nRHEL strives to be a stable server platform, which means it does not rush to\ninclude the latest versions of everything.\n\nAs of the writing of this article, CentOS 6 officially distributes\nLLVM & Clang v3.4.2. However, Clang v3.6 has been released.\n\nThe official suggestion is if you need a more recent version of LLVM & Clang,\nyou should consider a different UNIX distribution which is more focused on\nsupporting the latest versions of software packages.\n\nFortunately, you are able to install a more recent version LLVM & Clang GCC\non CentOS. This deviates from purely using the officially distributed software,\nbut sometimes you may feel like you have little choice.\n\nThis article describes how to install the CentOS 6 officially supported\nversion of LLVM & Clang, and how to install a newer version.\nThis article assumes you have a freshly installed CentOS 6 VPS,\nhowever you can certainly follow the instructions on a VPS you have already\nbeen using.\n\nClang is largely independent from GCC, but as of the writing of this article,\nClang still uses several shared libraries installed by GCC (namely,\n`crtbegin.o`, `gcc`, and `gcc_s`). If you install LLVM & Clang on CentOS 6,\nyou won't be able to compile anything if you don't also have GCC on your\nsystem for these shared libraries. Ideally, yum would have a package\ndependency for clang of gcc and gcc-c++, but as of the writing of this article,\nyum is unaware of the dependency.\n\nAdditionally, building a newer version of LLVM & Clang from source requires\nG++ v4.7+, which you can only get on CentOS 6 by installing it by source.\n\nIf you run all of the steps below, you'll wind up with 2 versions of GCC and 2\nversions of LLVM & Clang. This includes an officially supported binary older\nversion and a newer version from source for each program. However,\nthere's no need to run all the steps below. You can decide whether you want\nthe officially supported binary older version of LLVM & Clang,\nor the newer version from source, and run whichever section of instructions\nfits your decision.\n\n### Install an officially supported (older) version of LLVM & Clang\n\n1. **IMPORTANT!** First, install an officially supported (older) version of GCC,\n   by performing the steps in the article [How to Install GCC on CentOS 6](how-to-install-gcc-on-centos-6.md)\n   -- you do NOT need to perform the steps under that article's heading\n   \"Install a newer version of GCC from source\".\n1. Install LLVM & Clang\n   ```\n   yum install clang\n    --- This will bring in llvm as a dependency\n   ```\n1. Check the installed versions, and see their locations.\n   ```\n   clang --version\n       May say: clang version 3.4.2 (tags/RELEASE_34/dot2-final)\n   which clang\n       /usr/bin/clang\n   gcc --version\n       May say: gcc (GCC) 4.4.7 20120313 (Red Hat 4.4.7-11)\n   g++ --version\n       May say: g++ (GCC) 4.4.7 20120313 (Red Hat 4.4.7-11)\n   which gcc\n       /usr/bin/gcc\n   which g++\n       /usr/bin/g++\n   ```\n\n### Install a newer version of LLVM & Clang from source\n\nTo build LLVM & Clang by source on CentOS, you have to have GCC v4.7 or above.\nCentOS 6 does not have this high of a version in yum,\nso you first have to install a more recent GCC from source.\n\n1. **IMPORTANT!** First, install a newer version of GCC from source,\n   by performing the steps in the article [How to Install GCC on CentOS 6](how-to-install-gcc-on-centos-6.md)\n   -- you DO need to perform all steps in that article,\n   including under the heading \"Install a newer version of GCC from source\".\n1. Install additionally required packages.\n   ```bash\n   yum install cmake\n   ```\n1. Install a newer version of Python. LLVM & Clang v3.6.0 requires Python v2.7+,\n   but CentOS 6 yum repository only has Python v2.6.6.\n   ```\n   mkdir ~/sourceInstallations\n   cd ~/sourceInstallations\n   wget https://www.python.org/ftp/python/2.7.9/Python-2.7.9.tgz\n   tar -xvf Python-2.7.9.tgz\n   cd Python-2.7.9\n   ./configure && make && make install\n   ```\n1. Decide which version of LLVM & Clang you want.\n   This command will show you the \"tags\" for the versions available.\n   ```\n   svn ls http://llvm.org/svn/llvm-project/llvm/tags | grep RELEASE\n       RELEASE_1/\n       ...\n       RELEASE_352/\n       RELEASE_360/\n       RELEASE_361/\n   svn ls http://llvm.org/svn/llvm-project/llvm/tags/RELEASE_361\n       rc1/\n       --- At this time, there is no final, just a release candidate.  You could certainly use a release candidate, but this article will show how to use a final release.\n   svn ls http://llvm.org/svn/llvm-project/llvm/tags/RELEASE_360\n       final/\n       rc1/\n       rc2/\n       rc3/\n       rc4/\n   ```\n1. Get the source of the version of LLVM & Clang that you want.\n   This will run for a few minutes. The rest of this article is written for\n   `RELEASE_360/` and will download the sources into `~/sourceInstallations/llvm_RELEASE_360/`\n   -- You will have to substitute the proper tag to fit future versions.\n   The directories below of `compiler-rt`, `libcxx`, and `libcxxabi`\n   are not absolutely necessary, but contain some of the features that\n   LLVM & Clang have that GCC doesn't, so are included in this article.\n   There are other LLVM \"sub-projects\" you could choose to use,\n   such as dragonegg, LLDB, OpenMB, vmkit, polly, libclc, klee, SAFECode,\n   and lld. You can read about those on the [LLVM website][LLVM].\n   ```\n   cd ~/sourceInstallations\n   svn co http://llvm.org/svn/llvm-project/llvm/tags/RELEASE_360/final llvm_RELEASE_360\n   cd llvm_RELEASE_360/tools\n   svn co http://llvm.org/svn/llvm-project/cfe/tags/RELEASE_360/final clang\n   cd ../projects\n   svn co http://llvm.org/svn/llvm-project/compiler-rt/tags/RELEASE_360/final compiler-rt\n   svn co http://llvm.org/svn/llvm-project/libcxx/tags/RELEASE_360/final libcxx\n   svn co http://llvm.org/svn/llvm-project/libcxxabi/tags/RELEASE_360/final libcxxabi\n   cd ..\n   svn update\n       At revision X.\n       --- Hopefully this outputs one line saying \"At revision X\", but numbers instead of \"X\".  If it downloads more source files, a new revision was released while you were downloading the source code.  This is highly unlikely unless you're using trunk (the most up to date, maybe unstable code.)  But, if this happens, perform a svn update in the tools/clang, projects/compiler-rt, projects/libcxx, projects/libcxxabi, and again ~/sourceInstallations/llvm_RELEASE_360, until you are fully up to date.\n   ```\n1. Build LLVM & Clang. This will run for a while. If this completes correctly,\n   the last line you will see will say \"success\".\n   It is normal to see some error-looking messages scrolling by quickly.\n   It's always a good idea to build things in a different directory than a\n   source directory.\n   ```\n   mkdir ../llvm_RELEASE_360_build\n   cd ../llvm_RELEASE_360_build\n   cmake -G \"Unix Makefiles\" -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=/usr/local/bin/gcc -DCMAKE_CXX_COMPILER=/usr/local/bin/g++ ../llvm_RELEASE_360 && make && make install && echo success\n       --- If your VPS has multiple cores, you can speed up the build by changing the middle part\n       ---   of this line from \"&& make &&\" to \"&& make -j <number of cores> &&\".\n       --- You can see the number of cores your VPS has by running \"nproc\"\n       --- If you omit -DCMAKE_BUILD_TYPE=Release, the build defaults to debug.  This is great if you need to debug LLVM & Clang itself, but slows down compilation of your end programs considerably.\n       --- If you omit the references to gcc and g++, it will default to using the older binary versions in /usr/bin/, and will not compile.\n   ```\n1. Check the installed versions, and see their locations.\n   ```\n   clang --version\n       May say: clang version 3.6.0 (tags/RELEASE_360/final 237229)\n   clang++ --version\n       May say: clang version 3.6.0 (tags/RELEASE_360/final 237229)\n   which clang\n       /usr/local/bin/clang\n   which clang++\n       /usr/local/bin/clang++\n   ```\n1. Add the new libraries to ld (the GNU linker).\n   ```\n   echo \"/usr/local/lib\" > usrLocalLib.conf\n   mv usrLocalLib.conf /etc/ld.so.conf.d/\n   ldconfig\n       --- This may say a file or two \"is not an ELF file - it has the wrong magic bytes at the start.\"\n       --- You may ignore this message.  It is silent about the work it successfully completed.\n   ```\n1. Optionally make a \"hello world\" program.\n   ```\n   mkdir ~/code\n   cd ~/code\n   Create a file main.cpp that says:\n       #include <iostream>\n       using namespace std;\n       int main() {\n           cout << \"Hello world!\" << endl;\n           return 0;\n       }\n   --- One way to create this file is to run \"vi main.cpp\", hitting \"i\" to enter insert mode,\n   ---   typing the above file, hitting ESC, and hitting \"ZZ\" to save.\n   clang++ main.cpp -o main\n   ./main\n       Hello World!\n   clang++ -stdlib=libc++ -lc++abi main.cpp -o main\n       --- This uses Clang's libc++ and libc++abi, instead of the GNU stdlibc++ and stdlibc++abi\n   ./main\n       Hello world!\n   ```\n1. Use LLVM & Clang when you want to.\n   ```\n   You could set LLVM & Clang to be your system's default C and C++ compiler by running:\n       echo \"export CC=/usr/local/bin/gcc\" >> ~/.bashrc\n       echo \"export CXX=/usr/local/bin/g++\" >> ~/.bashrc\n       source ~/.bashrc\n   Once and a while there is a difference between Clang and GCC, but it's becoming more and more rare.  To be more conservative, you could specify in your code's buildsystem to use LLVM & Clang, but otherwise leave your system's default to the source build of GCC.\n   ```\n1. Optionally reclaim hard drive space. Your `~/sourceInstallations` folder\n   will be taking up around 11GB of disk space. It's probably wise to keep the\n   folders, as there are optional configuration options you may need to use\n   at some point in the future, and it would be faster to have\n   a lot already done. And, as mentioned above, there are additional\n   \"sub-projects\" you can add to LLVM & Clang. Also, the build\n   process makes logs that you can later check and work from if something\n   goes wrong. But, after running \"make install\" earlier,\n   your installed LLVM & Clang isn't depending on anything in this directory,\n   and space can be at a premium, so you can do this step and reclaim the 11GB.\n   ```\n   cd ~/\n   rm -rf sourceInstallations\n   --- Again, if you can spare the space, you may someday be happy to have left it there.\n   ```\n\nYou now have your newer LLVM & Clang in `/usr/local/bin`,\nyour newer 64-bit LLVM & Clang libs in `/usr/local/lib`,\nand your newer LLVM & Clang include files in `/usr/local/include`.\n\n\n[link]: https://www.vultr.com/docs/how-to-install-llvm-and-clang-on-centos-6\n[LLVM]: http://llvm.org\n","slug":"how-to-install-llvm-and-clang-on-centos-6","published":1,"updated":"2023-03-09T16:09:38.239Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u336g001gp4x0xjl365uu","content":"<blockquote>\r\n<p>链接: <a href=\"https://www.vultr.com/docs/how-to-install-llvm-and-clang-on-centos-6\" target=\"_blank\" rel=\"noopener\">How To Install LLVM and Clang on CentOS 6</a><br>\r\n日期: Wed, May 13, 2015 at 3:22 am EST</p>\r\n</blockquote>\r\n<p>LLVM is an open-source compiler infrastructure. LLVM was started in 2000, and has been extensively used and modified by Apple since 2005. Clang is a C, C++, Objective-C, and Objective-C++ compiler that works with the LLVM system. Clang was started in 2007 by Apple, and since then Google and Intel have become involved in its continued development.</p>\r\n<a id=\"more\"></a>\r\n<p>Clang’s developers claim that compared to GCC, it compiles faster, uses less memory, gives more user friendly diagnostics during compilation, and is compatible with GCC.</p>\r\n<p>CentOS follows the development of Red Hat Enterprise Linux (RHEL). RHEL strives to be a stable server platform, which means it does not rush to include the latest versions of everything.</p>\r\n<p>As of the writing of this article, CentOS 6 officially distributes LLVM &amp; Clang v3.4.2. However, Clang v3.6 has been released.</p>\r\n<p>The official suggestion is if you need a more recent version of LLVM &amp; Clang, you should consider a different UNIX distribution which is more focused on supporting the latest versions of software packages.</p>\r\n<p>Fortunately, you are able to install a more recent version LLVM &amp; Clang GCC on CentOS. This deviates from purely using the officially distributed software, but sometimes you may feel like you have little choice.</p>\r\n<p>This article describes how to install the CentOS 6 officially supported version of LLVM &amp; Clang, and how to install a newer version. This article assumes you have a freshly installed CentOS 6 VPS, however you can certainly follow the instructions on a VPS you have already been using.</p>\r\n<p>Clang is largely independent from GCC, but as of the writing of this article, Clang still uses several shared libraries installed by GCC (namely, <code>crtbegin.o</code>, <code>gcc</code>, and <code>gcc_s</code>). If you install LLVM &amp; Clang on CentOS 6, you won’t be able to compile anything if you don’t also have GCC on your system for these shared libraries. Ideally, yum would have a package dependency for clang of gcc and gcc-c++, but as of the writing of this article, yum is unaware of the dependency.</p>\r\n<p>Additionally, building a newer version of LLVM &amp; Clang from source requires G++ v4.7+, which you can only get on CentOS 6 by installing it by source.</p>\r\n<p>If you run all of the steps below, you’ll wind up with 2 versions of GCC and 2 versions of LLVM &amp; Clang. This includes an officially supported binary older version and a newer version from source for each program. However, there’s no need to run all the steps below. You can decide whether you want the officially supported binary older version of LLVM &amp; Clang, or the newer version from source, and run whichever section of instructions fits your decision.</p>\r\n<h3 id=\"install-an-officially-supported-older-version-of-llvm-clang\">Install an officially supported (older) version of LLVM &amp; Clang</h3>\r\n<ol type=\"1\">\r\n<li><p><strong>IMPORTANT!</strong> First, install an officially supported (older) version of GCC, by performing the steps in the article <a href=\"how-to-install-gcc-on-centos-6.md\">How to Install GCC on CentOS 6</a> – you do NOT need to perform the steps under that article’s heading “Install a newer version of GCC from source”.</p></li>\r\n<li><p>Install LLVM &amp; Clang <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install clang</span><br><span class=\"line\"> --- This will bring in llvm as a dependency</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>Check the installed versions, and see their locations. <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clang --version</span><br><span class=\"line\">    May say: clang version 3.4.2 (tags/RELEASE_34/dot2-final)</span><br><span class=\"line\">which clang</span><br><span class=\"line\">    /usr/bin/clang</span><br><span class=\"line\">gcc --version</span><br><span class=\"line\">    May say: gcc (GCC) 4.4.7 20120313 (Red Hat 4.4.7-11)</span><br><span class=\"line\">g++ --version</span><br><span class=\"line\">    May say: g++ (GCC) 4.4.7 20120313 (Red Hat 4.4.7-11)</span><br><span class=\"line\">which gcc</span><br><span class=\"line\">    /usr/bin/gcc</span><br><span class=\"line\">which g++</span><br><span class=\"line\">    /usr/bin/g++</span><br></pre></td></tr></table></figure></p></li>\r\n</ol>\r\n<h3 id=\"install-a-newer-version-of-llvm-clang-from-source\">Install a newer version of LLVM &amp; Clang from source</h3>\r\n<p>To build LLVM &amp; Clang by source on CentOS, you have to have GCC v4.7 or above. CentOS 6 does not have this high of a version in yum, so you first have to install a more recent GCC from source.</p>\r\n<ol type=\"1\">\r\n<li><p><strong>IMPORTANT!</strong> First, install a newer version of GCC from source, by performing the steps in the article <a href=\"how-to-install-gcc-on-centos-6.md\">How to Install GCC on CentOS 6</a> – you DO need to perform all steps in that article, including under the heading “Install a newer version of GCC from source”.</p></li>\r\n<li><p>Install additionally required packages. <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install cmake</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>Install a newer version of Python. LLVM &amp; Clang v3.6.0 requires Python v2.7+, but CentOS 6 yum repository only has Python v2.6.6. <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir ~/sourceInstallations</span><br><span class=\"line\">cd ~/sourceInstallations</span><br><span class=\"line\">wget https://www.python.org/ftp/python/2.7.9/Python-2.7.9.tgz</span><br><span class=\"line\">tar -xvf Python-2.7.9.tgz</span><br><span class=\"line\">cd Python-2.7.9</span><br><span class=\"line\">./configure &amp;&amp; make &amp;&amp; make install</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>Decide which version of LLVM &amp; Clang you want. This command will show you the “tags” for the versions available. <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">svn ls http://llvm.org/svn/llvm-project/llvm/tags | grep RELEASE</span><br><span class=\"line\">    RELEASE_1/</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    RELEASE_352/</span><br><span class=\"line\">    RELEASE_360/</span><br><span class=\"line\">    RELEASE_361/</span><br><span class=\"line\">svn ls http://llvm.org/svn/llvm-project/llvm/tags/RELEASE_361</span><br><span class=\"line\">    rc1/</span><br><span class=\"line\">    --- At this time, there is no final, just a release candidate.  You could certainly use a release candidate, but this article will show how to use a final release.</span><br><span class=\"line\">svn ls http://llvm.org/svn/llvm-project/llvm/tags/RELEASE_360</span><br><span class=\"line\">    final/</span><br><span class=\"line\">    rc1/</span><br><span class=\"line\">    rc2/</span><br><span class=\"line\">    rc3/</span><br><span class=\"line\">    rc4/</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>Get the source of the version of LLVM &amp; Clang that you want. This will run for a few minutes. The rest of this article is written for <code>RELEASE_360/</code> and will download the sources into <code>~/sourceInstallations/llvm_RELEASE_360/</code> – You will have to substitute the proper tag to fit future versions. The directories below of <code>compiler-rt</code>, <code>libcxx</code>, and <code>libcxxabi</code> are not absolutely necessary, but contain some of the features that LLVM &amp; Clang have that GCC doesn’t, so are included in this article. There are other LLVM “sub-projects” you could choose to use, such as dragonegg, LLDB, OpenMB, vmkit, polly, libclc, klee, SAFECode, and lld. You can read about those on the <a href=\"http://llvm.org\" target=\"_blank\" rel=\"noopener\">LLVM website</a>. <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~/sourceInstallations</span><br><span class=\"line\">svn co http://llvm.org/svn/llvm-project/llvm/tags/RELEASE_360/final llvm_RELEASE_360</span><br><span class=\"line\">cd llvm_RELEASE_360/tools</span><br><span class=\"line\">svn co http://llvm.org/svn/llvm-project/cfe/tags/RELEASE_360/final clang</span><br><span class=\"line\">cd ../projects</span><br><span class=\"line\">svn co http://llvm.org/svn/llvm-project/compiler-rt/tags/RELEASE_360/final compiler-rt</span><br><span class=\"line\">svn co http://llvm.org/svn/llvm-project/libcxx/tags/RELEASE_360/final libcxx</span><br><span class=\"line\">svn co http://llvm.org/svn/llvm-project/libcxxabi/tags/RELEASE_360/final libcxxabi</span><br><span class=\"line\">cd ..</span><br><span class=\"line\">svn update</span><br><span class=\"line\">    At revision X.</span><br><span class=\"line\">    --- Hopefully this outputs one line saying &quot;At revision X&quot;, but numbers instead of &quot;X&quot;.  If it downloads more source files, a new revision was released while you were downloading the source code.  This is highly unlikely unless you&apos;re using trunk (the most up to date, maybe unstable code.)  But, if this happens, perform a svn update in the tools/clang, projects/compiler-rt, projects/libcxx, projects/libcxxabi, and again ~/sourceInstallations/llvm_RELEASE_360, until you are fully up to date.</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>Build LLVM &amp; Clang. This will run for a while. If this completes correctly, the last line you will see will say “success”. It is normal to see some error-looking messages scrolling by quickly. It’s always a good idea to build things in a different directory than a source directory. <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir ../llvm_RELEASE_360_build</span><br><span class=\"line\">cd ../llvm_RELEASE_360_build</span><br><span class=\"line\">cmake -G &quot;Unix Makefiles&quot; -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=/usr/local/bin/gcc -DCMAKE_CXX_COMPILER=/usr/local/bin/g++ ../llvm_RELEASE_360 &amp;&amp; make &amp;&amp; make install &amp;&amp; echo success</span><br><span class=\"line\">    --- If your VPS has multiple cores, you can speed up the build by changing the middle part</span><br><span class=\"line\">    ---   of this line from &quot;&amp;&amp; make &amp;&amp;&quot; to &quot;&amp;&amp; make -j &lt;number of cores&gt; &amp;&amp;&quot;.</span><br><span class=\"line\">    --- You can see the number of cores your VPS has by running &quot;nproc&quot;</span><br><span class=\"line\">    --- If you omit -DCMAKE_BUILD_TYPE=Release, the build defaults to debug.  This is great if you need to debug LLVM &amp; Clang itself, but slows down compilation of your end programs considerably.</span><br><span class=\"line\">    --- If you omit the references to gcc and g++, it will default to using the older binary versions in /usr/bin/, and will not compile.</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>Check the installed versions, and see their locations. <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clang --version</span><br><span class=\"line\">    May say: clang version 3.6.0 (tags/RELEASE_360/final 237229)</span><br><span class=\"line\">clang++ --version</span><br><span class=\"line\">    May say: clang version 3.6.0 (tags/RELEASE_360/final 237229)</span><br><span class=\"line\">which clang</span><br><span class=\"line\">    /usr/local/bin/clang</span><br><span class=\"line\">which clang++</span><br><span class=\"line\">    /usr/local/bin/clang++</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>Add the new libraries to ld (the GNU linker). <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;/usr/local/lib&quot; &gt; usrLocalLib.conf</span><br><span class=\"line\">mv usrLocalLib.conf /etc/ld.so.conf.d/</span><br><span class=\"line\">ldconfig</span><br><span class=\"line\">    --- This may say a file or two &quot;is not an ELF file - it has the wrong magic bytes at the start.&quot;</span><br><span class=\"line\">    --- You may ignore this message.  It is silent about the work it successfully completed.</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>Optionally make a “hello world” program. <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir ~/code</span><br><span class=\"line\">cd ~/code</span><br><span class=\"line\">Create a file main.cpp that says:</span><br><span class=\"line\">    #include &lt;iostream&gt;</span><br><span class=\"line\">    using namespace std;</span><br><span class=\"line\">    int main() &#123;</span><br><span class=\"line\">        cout &lt;&lt; &quot;Hello world!&quot; &lt;&lt; endl;</span><br><span class=\"line\">        return 0;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">--- One way to create this file is to run &quot;vi main.cpp&quot;, hitting &quot;i&quot; to enter insert mode,</span><br><span class=\"line\">---   typing the above file, hitting ESC, and hitting &quot;ZZ&quot; to save.</span><br><span class=\"line\">clang++ main.cpp -o main</span><br><span class=\"line\">./main</span><br><span class=\"line\">    Hello World!</span><br><span class=\"line\">clang++ -stdlib=libc++ -lc++abi main.cpp -o main</span><br><span class=\"line\">    --- This uses Clang&apos;s libc++ and libc++abi, instead of the GNU stdlibc++ and stdlibc++abi</span><br><span class=\"line\">./main</span><br><span class=\"line\">    Hello world!</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>Use LLVM &amp; Clang when you want to. <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">You could set LLVM &amp; Clang to be your system&apos;s default C and C++ compiler by running:</span><br><span class=\"line\">    echo &quot;export CC=/usr/local/bin/gcc&quot; &gt;&gt; ~/.bashrc</span><br><span class=\"line\">    echo &quot;export CXX=/usr/local/bin/g++&quot; &gt;&gt; ~/.bashrc</span><br><span class=\"line\">    source ~/.bashrc</span><br><span class=\"line\">Once and a while there is a difference between Clang and GCC, but it&apos;s becoming more and more rare.  To be more conservative, you could specify in your code&apos;s buildsystem to use LLVM &amp; Clang, but otherwise leave your system&apos;s default to the source build of GCC.</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>Optionally reclaim hard drive space. Your <code>~/sourceInstallations</code> folder will be taking up around 11GB of disk space. It’s probably wise to keep the folders, as there are optional configuration options you may need to use at some point in the future, and it would be faster to have a lot already done. And, as mentioned above, there are additional “sub-projects” you can add to LLVM &amp; Clang. Also, the build process makes logs that you can later check and work from if something goes wrong. But, after running “make install” earlier, your installed LLVM &amp; Clang isn’t depending on anything in this directory, and space can be at a premium, so you can do this step and reclaim the 11GB. <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~/</span><br><span class=\"line\">rm -rf sourceInstallations</span><br><span class=\"line\">--- Again, if you can spare the space, you may someday be happy to have left it there.</span><br></pre></td></tr></table></figure></p></li>\r\n</ol>\r\n<p>You now have your newer LLVM &amp; Clang in <code>/usr/local/bin</code>, your newer 64-bit LLVM &amp; Clang libs in <code>/usr/local/lib</code>, and your newer LLVM &amp; Clang include files in <code>/usr/local/include</code>.</p>\r\n","site":{"data":{}},"excerpt":"<blockquote>\r\n<p>链接: <a href=\"https://www.vultr.com/docs/how-to-install-llvm-and-clang-on-centos-6\" target=\"_blank\" rel=\"noopener\">How To Install LLVM and Clang on CentOS 6</a><br>\r\n日期: Wed, May 13, 2015 at 3:22 am EST</p>\r\n</blockquote>\r\n<p>LLVM is an open-source compiler infrastructure. LLVM was started in 2000, and has been extensively used and modified by Apple since 2005. Clang is a C, C++, Objective-C, and Objective-C++ compiler that works with the LLVM system. Clang was started in 2007 by Apple, and since then Google and Intel have become involved in its continued development.</p>","more":"<p>Clang’s developers claim that compared to GCC, it compiles faster, uses less memory, gives more user friendly diagnostics during compilation, and is compatible with GCC.</p>\r\n<p>CentOS follows the development of Red Hat Enterprise Linux (RHEL). RHEL strives to be a stable server platform, which means it does not rush to include the latest versions of everything.</p>\r\n<p>As of the writing of this article, CentOS 6 officially distributes LLVM &amp; Clang v3.4.2. However, Clang v3.6 has been released.</p>\r\n<p>The official suggestion is if you need a more recent version of LLVM &amp; Clang, you should consider a different UNIX distribution which is more focused on supporting the latest versions of software packages.</p>\r\n<p>Fortunately, you are able to install a more recent version LLVM &amp; Clang GCC on CentOS. This deviates from purely using the officially distributed software, but sometimes you may feel like you have little choice.</p>\r\n<p>This article describes how to install the CentOS 6 officially supported version of LLVM &amp; Clang, and how to install a newer version. This article assumes you have a freshly installed CentOS 6 VPS, however you can certainly follow the instructions on a VPS you have already been using.</p>\r\n<p>Clang is largely independent from GCC, but as of the writing of this article, Clang still uses several shared libraries installed by GCC (namely, <code>crtbegin.o</code>, <code>gcc</code>, and <code>gcc_s</code>). If you install LLVM &amp; Clang on CentOS 6, you won’t be able to compile anything if you don’t also have GCC on your system for these shared libraries. Ideally, yum would have a package dependency for clang of gcc and gcc-c++, but as of the writing of this article, yum is unaware of the dependency.</p>\r\n<p>Additionally, building a newer version of LLVM &amp; Clang from source requires G++ v4.7+, which you can only get on CentOS 6 by installing it by source.</p>\r\n<p>If you run all of the steps below, you’ll wind up with 2 versions of GCC and 2 versions of LLVM &amp; Clang. This includes an officially supported binary older version and a newer version from source for each program. However, there’s no need to run all the steps below. You can decide whether you want the officially supported binary older version of LLVM &amp; Clang, or the newer version from source, and run whichever section of instructions fits your decision.</p>\r\n<h3 id=\"install-an-officially-supported-older-version-of-llvm-clang\">Install an officially supported (older) version of LLVM &amp; Clang</h3>\r\n<ol type=\"1\">\r\n<li><p><strong>IMPORTANT!</strong> First, install an officially supported (older) version of GCC, by performing the steps in the article <a href=\"how-to-install-gcc-on-centos-6.md\">How to Install GCC on CentOS 6</a> – you do NOT need to perform the steps under that article’s heading “Install a newer version of GCC from source”.</p></li>\r\n<li><p>Install LLVM &amp; Clang <!--�83--></p></li>\r\n<li><p>Check the installed versions, and see their locations. <!--�84--></p></li>\r\n</ol>\r\n<h3 id=\"install-a-newer-version-of-llvm-clang-from-source\">Install a newer version of LLVM &amp; Clang from source</h3>\r\n<p>To build LLVM &amp; Clang by source on CentOS, you have to have GCC v4.7 or above. CentOS 6 does not have this high of a version in yum, so you first have to install a more recent GCC from source.</p>\r\n<ol type=\"1\">\r\n<li><p><strong>IMPORTANT!</strong> First, install a newer version of GCC from source, by performing the steps in the article <a href=\"how-to-install-gcc-on-centos-6.md\">How to Install GCC on CentOS 6</a> – you DO need to perform all steps in that article, including under the heading “Install a newer version of GCC from source”.</p></li>\r\n<li><p>Install additionally required packages. <!--�85--></p></li>\r\n<li><p>Install a newer version of Python. LLVM &amp; Clang v3.6.0 requires Python v2.7+, but CentOS 6 yum repository only has Python v2.6.6. <!--�86--></p></li>\r\n<li><p>Decide which version of LLVM &amp; Clang you want. This command will show you the “tags” for the versions available. <!--�87--></p></li>\r\n<li><p>Get the source of the version of LLVM &amp; Clang that you want. This will run for a few minutes. The rest of this article is written for <code>RELEASE_360/</code> and will download the sources into <code>~/sourceInstallations/llvm_RELEASE_360/</code> – You will have to substitute the proper tag to fit future versions. The directories below of <code>compiler-rt</code>, <code>libcxx</code>, and <code>libcxxabi</code> are not absolutely necessary, but contain some of the features that LLVM &amp; Clang have that GCC doesn’t, so are included in this article. There are other LLVM “sub-projects” you could choose to use, such as dragonegg, LLDB, OpenMB, vmkit, polly, libclc, klee, SAFECode, and lld. You can read about those on the <a href=\"http://llvm.org\" target=\"_blank\" rel=\"noopener\">LLVM website</a>. <!--�88--></p></li>\r\n<li><p>Build LLVM &amp; Clang. This will run for a while. If this completes correctly, the last line you will see will say “success”. It is normal to see some error-looking messages scrolling by quickly. It’s always a good idea to build things in a different directory than a source directory. <!--�89--></p></li>\r\n<li><p>Check the installed versions, and see their locations. <!--�90--></p></li>\r\n<li><p>Add the new libraries to ld (the GNU linker). <!--�91--></p></li>\r\n<li><p>Optionally make a “hello world” program. <!--�92--></p></li>\r\n<li><p>Use LLVM &amp; Clang when you want to. <!--�93--></p></li>\r\n<li><p>Optionally reclaim hard drive space. Your <code>~/sourceInstallations</code> folder will be taking up around 11GB of disk space. It’s probably wise to keep the folders, as there are optional configuration options you may need to use at some point in the future, and it would be faster to have a lot already done. And, as mentioned above, there are additional “sub-projects” you can add to LLVM &amp; Clang. Also, the build process makes logs that you can later check and work from if something goes wrong. But, after running “make install” earlier, your installed LLVM &amp; Clang isn’t depending on anything in this directory, and space can be at a premium, so you can do this step and reclaim the 11GB. <!--�94--></p></li>\r\n</ol>\r\n<p>You now have your newer LLVM &amp; Clang in <code>/usr/local/bin</code>, your newer 64-bit LLVM &amp; Clang libs in <code>/usr/local/lib</code>, and your newer LLVM &amp; Clang include files in <code>/usr/local/include</code>.</p>"},{"title":"Windows 以及 CentOS 下的 MySQL 安装","date":"2018-01-21T03:22:03.000Z","_content":"\n在不同系统下安装配置 MySQL 的过程中遇到不少问题，特此记录。\n\n<!-- more -->\n\n## Windows 下配置免安装版 MySQL 5.7\n\n1. 于 [MySQL Community Server][mysql-community-server] 下载页面下载 zip 版本并解压，比如解压到 `D:\\\\MySQL` 目录下\n1. 于 `MySQL` 根目录添加配置文件 `my.ini`：\n   {% codeblock my.ini lang:ini %}\n   [mysqld]\n   port = 3677\n   basedir = \"D:\\\\MySQL\"\n   datadir = \"D:\\\\MySQL\\\\data\"\n   sql_mode = NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES\n\n   max_connections = 200\n   character-set-server = utf8\n   default-storage-engine = INNODB\n   explicit_defaults_for_timestamp = true\n\n   # innodb_buffer_pool_size = 128M\n   # join_buffer_size = 128M\n   # sort_buffer_size = 2M\n   # read_rnd_buffer_size = 2M\n\n   [mysqladmin]\n   user = \"root\"\n   port = 3677\n   {% endcodeblock %}\n1. 初始化 MySQL 数据库：\n   {% codeblock lang:dos %}\n   \"D:\\MySQL\\bin\\mysqld.exe\" --defaults-file=\"D:\\\\MySQL\\\\my.ini\" --initialize-insecure --console\n   {% endcodeblock %}\n1. 此时已有无密码账户 `root`，更改密码：\n   {% codeblock lang:dos %}\n   \"D:\\MySQL\\bin\\mysqld.exe\" --defaults-file=\"D:\\\\MySQL\\\\my.ini\" --console\n   {% endcodeblock %}\n1. 另开终端，输入 `mysql -uroot -P 3677 -p` 直接回车，\n   并键入（`<password>` 为密码）：\n   {% codeblock lang:sql %}\n   update mysql.user set authentication_string=password('<password>') where user='root';\n   flush privileges;\n   quit;\n   {% endcodeblock %}\n   在 MySQL 8 版本中更加便捷：\n   {% codeblock lang:sql %}\n   ALTER USER 'root'@'localhost' IDENTIFIED BY 'MyNewPass';\n   {% endcodeblock %}\n1. 安装 MySQL 服务。在 **`D:\\MySQL\\bin`** 目录下以管理员身份键入 `mysqld --install`\n\n### 参考\n\n- [如何修改MySQL5.7.18的密码][csdn-72356334]\n- [解决Windows安装解压版MySQL出现服务正在启动-服务无法启动的问题][csdn-49951577]\n- [Running/Starting MySQL without installation on Windows][stackoverflow-42045494]\n- [5.7 Upgrade and Resolving ERROR 1130 Host ‘localhost’ is Not Allowed to Connect][chriscalender-1130]\n\n---------------------------\n\n## CentOS 系统部署 MySQL 5.7\n\n1. 添加 MySQL 的 Yum 仓库：[Download MySQL Yum Repository][mysql-yum-repo]。\n   {% codeblock lang:bash %}\n   wget https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\n   rpm -ivh mysql57-community-release-el7-11.noarch.rpm\n   yum install mysql-server\n   {% endcodeblock %}\n1. 启动 MySQL 服务：\n   {% codeblock lang:bash %}\n   systemctl start mysqld\n   systemctl status mysqld\n   {% endcodeblock %}\n1. 更改 root 用户密码：\n   {% codeblock lang:bash %}\n   mysqladmin -uroot password -p\n   <password>\n   {% endcodeblock %}\n1. 允许远程访问：\n   {% codeblock lang:sql %}\n   % mysql -uroot -p\n   grant all privileges on *.* to 'root'@'%' identified by '<password>';\n   flush privileges;\n   {% endcodeblock %}\n\n### 配置文件\n\n```ini /etc/my.cnf\n[mysqld]\nport = 3677\n\nmax_connections = 200\ncharacter-set-server = UTF8MB4\ndefault-storage-engine = INNODB\nexplicit_defaults_for_timestamp = true\n\n[mysqladmin]\nuser = \"root\"\nport = 3677\n```\n\n### 问题\n\n#### rpm 无法添加仓库\n\n如果不是全新安装，需要手动删除之前用 rpm 安装的 mysql 相关的包\n\n#### 服务无法启动\n\n重设 MySQL 数据目录的权限：\n\n```sh\nchmod -R 777 /var/lib/mysql\n```\n\n### 参考\n\n- [centos7 mysql数据库安装和配置][cnblogs-4680083]\n- [CentOS 7 下开启Mysql-5.7.19远程访问][csdn-76381632]\n- [CentOS7 64位下MySQL5.7安装与配置（YUM）][linuxidc-135288]\n- [RPM命令详解（安装、升级、卸载）][csdn-rpm]\n- [Configuring A Fresh Install Of MySQL On CentOS: Start Service, Set Password, Set Runlevels][linuxacademy-config-fresh-install-mysql]\n\n\n[mysql-community-server]: https://dev.mysql.com/downloads/mysql\n[csdn-49951577]: http://blog.csdn.net/u013067166/article/details/49951577\n[csdn-72356334]: http://blog.csdn.net/xy_cy/article/details/72356334\n[stackoverflow-42045494]: https://stackoverflow.com/questions/42045494/running-starting-mysql-without-installation-on-windows\n[chriscalender-1130]: https://www.chriscalender.com/tag/error-1130-hy000-host-localhost-is-not-allowed-to-connect-to-this-mysql-server\n[linuxidc-135288]: http://www.linuxidc.com/Linux/2016-09/135288.htm\n[cnblogs-4680083]: https://www.cnblogs.com/starof/p/4680083.html\n[csdn-rpm]: http://blog.csdn.net/samxx8/article/details/46739005\n[mysql-yum-repo]: https://dev.mysql.com/downloads/repo/yum\n[csdn-76381632]: http://blog.csdn.net/u010758410/article/details/76381632\n[linuxacademy-config-fresh-install-mysql]: https://linuxacademy.com/blog/linux/configuring-a-fresh-install-of-mysql-on-centos-start-service-set-password-set-runlevels\n","source":"_posts/install-mysql-on-windows-and-centos.md","raw":"---\ntitle: Windows 以及 CentOS 下的 MySQL 安装\ndate: 2018-01-21 11:22:03\ntags:\n    - SQL\n    - MySQL\ncategories: Development\n---\n\n在不同系统下安装配置 MySQL 的过程中遇到不少问题，特此记录。\n\n<!-- more -->\n\n## Windows 下配置免安装版 MySQL 5.7\n\n1. 于 [MySQL Community Server][mysql-community-server] 下载页面下载 zip 版本并解压，比如解压到 `D:\\\\MySQL` 目录下\n1. 于 `MySQL` 根目录添加配置文件 `my.ini`：\n   {% codeblock my.ini lang:ini %}\n   [mysqld]\n   port = 3677\n   basedir = \"D:\\\\MySQL\"\n   datadir = \"D:\\\\MySQL\\\\data\"\n   sql_mode = NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES\n\n   max_connections = 200\n   character-set-server = utf8\n   default-storage-engine = INNODB\n   explicit_defaults_for_timestamp = true\n\n   # innodb_buffer_pool_size = 128M\n   # join_buffer_size = 128M\n   # sort_buffer_size = 2M\n   # read_rnd_buffer_size = 2M\n\n   [mysqladmin]\n   user = \"root\"\n   port = 3677\n   {% endcodeblock %}\n1. 初始化 MySQL 数据库：\n   {% codeblock lang:dos %}\n   \"D:\\MySQL\\bin\\mysqld.exe\" --defaults-file=\"D:\\\\MySQL\\\\my.ini\" --initialize-insecure --console\n   {% endcodeblock %}\n1. 此时已有无密码账户 `root`，更改密码：\n   {% codeblock lang:dos %}\n   \"D:\\MySQL\\bin\\mysqld.exe\" --defaults-file=\"D:\\\\MySQL\\\\my.ini\" --console\n   {% endcodeblock %}\n1. 另开终端，输入 `mysql -uroot -P 3677 -p` 直接回车，\n   并键入（`<password>` 为密码）：\n   {% codeblock lang:sql %}\n   update mysql.user set authentication_string=password('<password>') where user='root';\n   flush privileges;\n   quit;\n   {% endcodeblock %}\n   在 MySQL 8 版本中更加便捷：\n   {% codeblock lang:sql %}\n   ALTER USER 'root'@'localhost' IDENTIFIED BY 'MyNewPass';\n   {% endcodeblock %}\n1. 安装 MySQL 服务。在 **`D:\\MySQL\\bin`** 目录下以管理员身份键入 `mysqld --install`\n\n### 参考\n\n- [如何修改MySQL5.7.18的密码][csdn-72356334]\n- [解决Windows安装解压版MySQL出现服务正在启动-服务无法启动的问题][csdn-49951577]\n- [Running/Starting MySQL without installation on Windows][stackoverflow-42045494]\n- [5.7 Upgrade and Resolving ERROR 1130 Host ‘localhost’ is Not Allowed to Connect][chriscalender-1130]\n\n---------------------------\n\n## CentOS 系统部署 MySQL 5.7\n\n1. 添加 MySQL 的 Yum 仓库：[Download MySQL Yum Repository][mysql-yum-repo]。\n   {% codeblock lang:bash %}\n   wget https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\n   rpm -ivh mysql57-community-release-el7-11.noarch.rpm\n   yum install mysql-server\n   {% endcodeblock %}\n1. 启动 MySQL 服务：\n   {% codeblock lang:bash %}\n   systemctl start mysqld\n   systemctl status mysqld\n   {% endcodeblock %}\n1. 更改 root 用户密码：\n   {% codeblock lang:bash %}\n   mysqladmin -uroot password -p\n   <password>\n   {% endcodeblock %}\n1. 允许远程访问：\n   {% codeblock lang:sql %}\n   % mysql -uroot -p\n   grant all privileges on *.* to 'root'@'%' identified by '<password>';\n   flush privileges;\n   {% endcodeblock %}\n\n### 配置文件\n\n```ini /etc/my.cnf\n[mysqld]\nport = 3677\n\nmax_connections = 200\ncharacter-set-server = UTF8MB4\ndefault-storage-engine = INNODB\nexplicit_defaults_for_timestamp = true\n\n[mysqladmin]\nuser = \"root\"\nport = 3677\n```\n\n### 问题\n\n#### rpm 无法添加仓库\n\n如果不是全新安装，需要手动删除之前用 rpm 安装的 mysql 相关的包\n\n#### 服务无法启动\n\n重设 MySQL 数据目录的权限：\n\n```sh\nchmod -R 777 /var/lib/mysql\n```\n\n### 参考\n\n- [centos7 mysql数据库安装和配置][cnblogs-4680083]\n- [CentOS 7 下开启Mysql-5.7.19远程访问][csdn-76381632]\n- [CentOS7 64位下MySQL5.7安装与配置（YUM）][linuxidc-135288]\n- [RPM命令详解（安装、升级、卸载）][csdn-rpm]\n- [Configuring A Fresh Install Of MySQL On CentOS: Start Service, Set Password, Set Runlevels][linuxacademy-config-fresh-install-mysql]\n\n\n[mysql-community-server]: https://dev.mysql.com/downloads/mysql\n[csdn-49951577]: http://blog.csdn.net/u013067166/article/details/49951577\n[csdn-72356334]: http://blog.csdn.net/xy_cy/article/details/72356334\n[stackoverflow-42045494]: https://stackoverflow.com/questions/42045494/running-starting-mysql-without-installation-on-windows\n[chriscalender-1130]: https://www.chriscalender.com/tag/error-1130-hy000-host-localhost-is-not-allowed-to-connect-to-this-mysql-server\n[linuxidc-135288]: http://www.linuxidc.com/Linux/2016-09/135288.htm\n[cnblogs-4680083]: https://www.cnblogs.com/starof/p/4680083.html\n[csdn-rpm]: http://blog.csdn.net/samxx8/article/details/46739005\n[mysql-yum-repo]: https://dev.mysql.com/downloads/repo/yum\n[csdn-76381632]: http://blog.csdn.net/u010758410/article/details/76381632\n[linuxacademy-config-fresh-install-mysql]: https://linuxacademy.com/blog/linux/configuring-a-fresh-install-of-mysql-on-centos-start-service-set-password-set-runlevels\n","slug":"install-mysql-on-windows-and-centos","published":1,"updated":"2023-03-09T16:09:38.245Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u336h001jp4x0xx1kagg4","content":"<p>在不同系统下安装配置 MySQL 的过程中遇到不少问题，特此记录。</p>\r\n<a id=\"more\"></a>\r\n<h2 id=\"windows-下配置免安装版-mysql-5.7\">Windows 下配置免安装版 MySQL 5.7</h2>\r\n<ol type=\"1\">\r\n<li>于 <a href=\"https://dev.mysql.com/downloads/mysql\" target=\"_blank\" rel=\"noopener\">MySQL Community Server</a> 下载页面下载 zip 版本并解压，比如解压到 <code>D:\\\\MySQL</code> 目录下</li>\r\n<li>于 <code>MySQL</code> 根目录添加配置文件 <code>my.ini</code>： <figure class=\"highlight ini\"><figcaption><span>my.ini</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[mysqld]</span></span><br><span class=\"line\"><span class=\"attr\">port</span> = <span class=\"number\">3677</span></span><br><span class=\"line\"><span class=\"attr\">basedir</span> = <span class=\"string\">\"D:\\\\MySQL\"</span></span><br><span class=\"line\"><span class=\"attr\">datadir</span> = <span class=\"string\">\"D:\\\\MySQL\\\\data\"</span></span><br><span class=\"line\"><span class=\"attr\">sql_mode</span> = NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">max_connections</span> = <span class=\"number\">200</span></span><br><span class=\"line\"><span class=\"attr\">character-set-server</span> = utf8</span><br><span class=\"line\"><span class=\"attr\">default-storage-engine</span> = INNODB</span><br><span class=\"line\"><span class=\"attr\">explicit_defaults_for_timestamp</span> = <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># innodb_buffer_pool_size = 128M</span></span><br><span class=\"line\"><span class=\"comment\"># join_buffer_size = 128M</span></span><br><span class=\"line\"><span class=\"comment\"># sort_buffer_size = 2M</span></span><br><span class=\"line\"><span class=\"comment\"># read_rnd_buffer_size = 2M</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[mysqladmin]</span></span><br><span class=\"line\"><span class=\"attr\">user</span> = <span class=\"string\">\"root\"</span></span><br><span class=\"line\"><span class=\"attr\">port</span> = <span class=\"number\">3677</span></span><br></pre></td></tr></table></figure></li>\r\n<li>初始化 MySQL 数据库： <figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"D:\\MySQL\\bin\\mysqld.exe\" --defaults-file=\"D:\\\\MySQL\\\\my.ini\" --initialize-insecure --console</span><br></pre></td></tr></table></figure></li>\r\n<li>此时已有无密码账户 <code>root</code>，更改密码： <figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"D:\\MySQL\\bin\\mysqld.exe\" --defaults-file=\"D:\\\\MySQL\\\\my.ini\" --console</span><br></pre></td></tr></table></figure></li>\r\n<li>另开终端，输入 <code>mysql -uroot -P 3677 -p</code> 直接回车， 并键入（<code>&lt;password&gt;</code> 为密码）： <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">update</span> mysql.user <span class=\"keyword\">set</span> authentication_string=<span class=\"keyword\">password</span>(<span class=\"string\">'&lt;password&gt;'</span>) <span class=\"keyword\">where</span> <span class=\"keyword\">user</span>=<span class=\"string\">'root'</span>;</span><br><span class=\"line\"><span class=\"keyword\">flush</span> <span class=\"keyword\">privileges</span>;</span><br><span class=\"line\">quit;</span><br></pre></td></tr></table></figure> 在 MySQL 8 版本中更加便捷： <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">USER</span> <span class=\"string\">'root'</span>@<span class=\"string\">'localhost'</span> <span class=\"keyword\">IDENTIFIED</span> <span class=\"keyword\">BY</span> <span class=\"string\">'MyNewPass'</span>;</span><br></pre></td></tr></table></figure></li>\r\n<li>安装 MySQL 服务。在 <strong><code>D:\\MySQL\\bin</code></strong> 目录下以管理员身份键入 <code>mysqld --install</code></li>\r\n</ol>\r\n<h3 id=\"参考\">参考</h3>\r\n<ul>\r\n<li><a href=\"http://blog.csdn.net/xy_cy/article/details/72356334\" target=\"_blank\" rel=\"noopener\">如何修改MySQL5.7.18的密码</a></li>\r\n<li><a href=\"http://blog.csdn.net/u013067166/article/details/49951577\" target=\"_blank\" rel=\"noopener\">解决Windows安装解压版MySQL出现服务正在启动-服务无法启动的问题</a></li>\r\n<li><a href=\"https://stackoverflow.com/questions/42045494/running-starting-mysql-without-installation-on-windows\" target=\"_blank\" rel=\"noopener\">Running/Starting MySQL without installation on Windows</a></li>\r\n<li><a href=\"https://www.chriscalender.com/tag/error-1130-hy000-host-localhost-is-not-allowed-to-connect-to-this-mysql-server\" target=\"_blank\" rel=\"noopener\">5.7 Upgrade and Resolving ERROR 1130 Host ‘localhost’ is Not Allowed to Connect</a></li>\r\n</ul>\r\n<hr>\r\n<h2 id=\"centos-系统部署-mysql-5.7\">CentOS 系统部署 MySQL 5.7</h2>\r\n<ol type=\"1\">\r\n<li>添加 MySQL 的 Yum 仓库：<a href=\"https://dev.mysql.com/downloads/repo/yum\" target=\"_blank\" rel=\"noopener\">Download MySQL Yum Repository</a>。 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm</span><br><span class=\"line\">rpm -ivh mysql57-community-release-el7-11.noarch.rpm</span><br><span class=\"line\">yum install mysql-server</span><br></pre></td></tr></table></figure></li>\r\n<li>启动 MySQL 服务： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl start mysqld</span><br><span class=\"line\">systemctl status mysqld</span><br></pre></td></tr></table></figure></li>\r\n<li>更改 root 用户密码： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysqladmin -uroot password -p</span><br><span class=\"line\">&lt;password&gt;</span><br></pre></td></tr></table></figure></li>\r\n<li>允许远程访问： <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">% mysql -uroot -p</span><br><span class=\"line\"><span class=\"keyword\">grant</span> all <span class=\"keyword\">privileges</span> <span class=\"keyword\">on</span> *.* <span class=\"keyword\">to</span> <span class=\"string\">'root'</span>@<span class=\"string\">'%'</span> <span class=\"keyword\">identified</span> <span class=\"keyword\">by</span> <span class=\"string\">'&lt;password&gt;'</span>;</span><br><span class=\"line\"><span class=\"keyword\">flush</span> <span class=\"keyword\">privileges</span>;</span><br></pre></td></tr></table></figure></li>\r\n</ol>\r\n<h3 id=\"配置文件\">配置文件</h3>\r\n<figure class=\"highlight ini\"><figcaption><span>/etc/my.cnf</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[mysqld]</span></span><br><span class=\"line\"><span class=\"attr\">port</span> = <span class=\"number\">3677</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">max_connections</span> = <span class=\"number\">200</span></span><br><span class=\"line\"><span class=\"attr\">character-set-server</span> = UTF8MB4</span><br><span class=\"line\"><span class=\"attr\">default-storage-engine</span> = INNODB</span><br><span class=\"line\"><span class=\"attr\">explicit_defaults_for_timestamp</span> = <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[mysqladmin]</span></span><br><span class=\"line\"><span class=\"attr\">user</span> = <span class=\"string\">\"root\"</span></span><br><span class=\"line\"><span class=\"attr\">port</span> = <span class=\"number\">3677</span></span><br></pre></td></tr></table></figure>\r\n<h3 id=\"问题\">问题</h3>\r\n<h4 id=\"rpm-无法添加仓库\">rpm 无法添加仓库</h4>\r\n<p>如果不是全新安装，需要手动删除之前用 rpm 安装的 mysql 相关的包</p>\r\n<h4 id=\"服务无法启动\">服务无法启动</h4>\r\n<p>重设 MySQL 数据目录的权限：</p>\r\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod -R 777 /var/lib/mysql</span><br></pre></td></tr></table></figure>\r\n<h3 id=\"参考-1\">参考</h3>\r\n<ul>\r\n<li><a href=\"https://www.cnblogs.com/starof/p/4680083.html\" target=\"_blank\" rel=\"noopener\">centos7 mysql数据库安装和配置</a></li>\r\n<li><a href=\"http://blog.csdn.net/u010758410/article/details/76381632\" target=\"_blank\" rel=\"noopener\">CentOS 7 下开启Mysql-5.7.19远程访问</a></li>\r\n<li><a href=\"http://www.linuxidc.com/Linux/2016-09/135288.htm\" target=\"_blank\" rel=\"noopener\">CentOS7 64位下MySQL5.7安装与配置（YUM）</a></li>\r\n<li><a href=\"http://blog.csdn.net/samxx8/article/details/46739005\" target=\"_blank\" rel=\"noopener\">RPM命令详解（安装、升级、卸载）</a></li>\r\n<li><a href=\"https://linuxacademy.com/blog/linux/configuring-a-fresh-install-of-mysql-on-centos-start-service-set-password-set-runlevels\" target=\"_blank\" rel=\"noopener\">Configuring A Fresh Install Of MySQL On CentOS: Start Service, Set Password, Set Runlevels</a></li>\r\n</ul>\r\n","site":{"data":{}},"excerpt":"<p>在不同系统下安装配置 MySQL 的过程中遇到不少问题，特此记录。</p>","more":"<h2 id=\"windows-下配置免安装版-mysql-5.7\">Windows 下配置免安装版 MySQL 5.7</h2>\r\n<ol type=\"1\">\r\n<li>于 <a href=\"https://dev.mysql.com/downloads/mysql\" target=\"_blank\" rel=\"noopener\">MySQL Community Server</a> 下载页面下载 zip 版本并解压，比如解压到 <code>D:\\\\MySQL</code> 目录下</li>\r\n<li>于 <code>MySQL</code> 根目录添加配置文件 <code>my.ini</code>： <figure class=\"highlight ini\"><figcaption><span>my.ini</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[mysqld]</span></span><br><span class=\"line\"><span class=\"attr\">port</span> = <span class=\"number\">3677</span></span><br><span class=\"line\"><span class=\"attr\">basedir</span> = <span class=\"string\">\"D:\\\\MySQL\"</span></span><br><span class=\"line\"><span class=\"attr\">datadir</span> = <span class=\"string\">\"D:\\\\MySQL\\\\data\"</span></span><br><span class=\"line\"><span class=\"attr\">sql_mode</span> = NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">max_connections</span> = <span class=\"number\">200</span></span><br><span class=\"line\"><span class=\"attr\">character-set-server</span> = utf8</span><br><span class=\"line\"><span class=\"attr\">default-storage-engine</span> = INNODB</span><br><span class=\"line\"><span class=\"attr\">explicit_defaults_for_timestamp</span> = <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># innodb_buffer_pool_size = 128M</span></span><br><span class=\"line\"><span class=\"comment\"># join_buffer_size = 128M</span></span><br><span class=\"line\"><span class=\"comment\"># sort_buffer_size = 2M</span></span><br><span class=\"line\"><span class=\"comment\"># read_rnd_buffer_size = 2M</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[mysqladmin]</span></span><br><span class=\"line\"><span class=\"attr\">user</span> = <span class=\"string\">\"root\"</span></span><br><span class=\"line\"><span class=\"attr\">port</span> = <span class=\"number\">3677</span></span><br></pre></td></tr></table></figure></li>\r\n<li>初始化 MySQL 数据库： <figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"D:\\MySQL\\bin\\mysqld.exe\" --defaults-file=\"D:\\\\MySQL\\\\my.ini\" --initialize-insecure --console</span><br></pre></td></tr></table></figure></li>\r\n<li>此时已有无密码账户 <code>root</code>，更改密码： <figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"D:\\MySQL\\bin\\mysqld.exe\" --defaults-file=\"D:\\\\MySQL\\\\my.ini\" --console</span><br></pre></td></tr></table></figure></li>\r\n<li>另开终端，输入 <code>mysql -uroot -P 3677 -p</code> 直接回车， 并键入（<code>&lt;password&gt;</code> 为密码）： <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">update</span> mysql.user <span class=\"keyword\">set</span> authentication_string=<span class=\"keyword\">password</span>(<span class=\"string\">'&lt;password&gt;'</span>) <span class=\"keyword\">where</span> <span class=\"keyword\">user</span>=<span class=\"string\">'root'</span>;</span><br><span class=\"line\"><span class=\"keyword\">flush</span> <span class=\"keyword\">privileges</span>;</span><br><span class=\"line\">quit;</span><br></pre></td></tr></table></figure> 在 MySQL 8 版本中更加便捷： <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">USER</span> <span class=\"string\">'root'</span>@<span class=\"string\">'localhost'</span> <span class=\"keyword\">IDENTIFIED</span> <span class=\"keyword\">BY</span> <span class=\"string\">'MyNewPass'</span>;</span><br></pre></td></tr></table></figure></li>\r\n<li>安装 MySQL 服务。在 <strong><code>D:\\MySQL\\bin</code></strong> 目录下以管理员身份键入 <code>mysqld --install</code></li>\r\n</ol>\r\n<h3 id=\"参考\">参考</h3>\r\n<ul>\r\n<li><a href=\"http://blog.csdn.net/xy_cy/article/details/72356334\" target=\"_blank\" rel=\"noopener\">如何修改MySQL5.7.18的密码</a></li>\r\n<li><a href=\"http://blog.csdn.net/u013067166/article/details/49951577\" target=\"_blank\" rel=\"noopener\">解决Windows安装解压版MySQL出现服务正在启动-服务无法启动的问题</a></li>\r\n<li><a href=\"https://stackoverflow.com/questions/42045494/running-starting-mysql-without-installation-on-windows\" target=\"_blank\" rel=\"noopener\">Running/Starting MySQL without installation on Windows</a></li>\r\n<li><a href=\"https://www.chriscalender.com/tag/error-1130-hy000-host-localhost-is-not-allowed-to-connect-to-this-mysql-server\" target=\"_blank\" rel=\"noopener\">5.7 Upgrade and Resolving ERROR 1130 Host ‘localhost’ is Not Allowed to Connect</a></li>\r\n</ul>\r\n<hr>\r\n<h2 id=\"centos-系统部署-mysql-5.7\">CentOS 系统部署 MySQL 5.7</h2>\r\n<ol type=\"1\">\r\n<li>添加 MySQL 的 Yum 仓库：<a href=\"https://dev.mysql.com/downloads/repo/yum\" target=\"_blank\" rel=\"noopener\">Download MySQL Yum Repository</a>。 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm</span><br><span class=\"line\">rpm -ivh mysql57-community-release-el7-11.noarch.rpm</span><br><span class=\"line\">yum install mysql-server</span><br></pre></td></tr></table></figure></li>\r\n<li>启动 MySQL 服务： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl start mysqld</span><br><span class=\"line\">systemctl status mysqld</span><br></pre></td></tr></table></figure></li>\r\n<li>更改 root 用户密码： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysqladmin -uroot password -p</span><br><span class=\"line\">&lt;password&gt;</span><br></pre></td></tr></table></figure></li>\r\n<li>允许远程访问： <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">% mysql -uroot -p</span><br><span class=\"line\"><span class=\"keyword\">grant</span> all <span class=\"keyword\">privileges</span> <span class=\"keyword\">on</span> *.* <span class=\"keyword\">to</span> <span class=\"string\">'root'</span>@<span class=\"string\">'%'</span> <span class=\"keyword\">identified</span> <span class=\"keyword\">by</span> <span class=\"string\">'&lt;password&gt;'</span>;</span><br><span class=\"line\"><span class=\"keyword\">flush</span> <span class=\"keyword\">privileges</span>;</span><br></pre></td></tr></table></figure></li>\r\n</ol>\r\n<h3 id=\"配置文件\">配置文件</h3>\r\n<!--�95-->\r\n<h3 id=\"问题\">问题</h3>\r\n<h4 id=\"rpm-无法添加仓库\">rpm 无法添加仓库</h4>\r\n<p>如果不是全新安装，需要手动删除之前用 rpm 安装的 mysql 相关的包</p>\r\n<h4 id=\"服务无法启动\">服务无法启动</h4>\r\n<p>重设 MySQL 数据目录的权限：</p>\r\n<!--�96-->\r\n<h3 id=\"参考-1\">参考</h3>\r\n<ul>\r\n<li><a href=\"https://www.cnblogs.com/starof/p/4680083.html\" target=\"_blank\" rel=\"noopener\">centos7 mysql数据库安装和配置</a></li>\r\n<li><a href=\"http://blog.csdn.net/u010758410/article/details/76381632\" target=\"_blank\" rel=\"noopener\">CentOS 7 下开启Mysql-5.7.19远程访问</a></li>\r\n<li><a href=\"http://www.linuxidc.com/Linux/2016-09/135288.htm\" target=\"_blank\" rel=\"noopener\">CentOS7 64位下MySQL5.7安装与配置（YUM）</a></li>\r\n<li><a href=\"http://blog.csdn.net/samxx8/article/details/46739005\" target=\"_blank\" rel=\"noopener\">RPM命令详解（安装、升级、卸载）</a></li>\r\n<li><a href=\"https://linuxacademy.com/blog/linux/configuring-a-fresh-install-of-mysql-on-centos-start-service-set-password-set-runlevels\" target=\"_blank\" rel=\"noopener\">Configuring A Fresh Install Of MySQL On CentOS: Start Service, Set Password, Set Runlevels</a></li>\r\n</ul>"},{"title":"Ubuntu 中安装最新版本 Clang","date":"2018-03-11T02:29:09.000Z","_content":"\nUbuntu 16.04 中利用 `sudo apt-get install clang` 安装 Clang 的版本为 3.8，这个版本对现在来说确实已经很久远了，有必要升级成比较新的版本。这里几乎照搬此篇文章：[How to install latest clang (5.0) on Ubuntu 16.04 (xenial) / WSL][kowalczyk-ubuntu-clang]。\n\n<!-- more -->\n\n首先添加仓库：\n\n{% codeblock lang:bash %}\nwget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -\nsudo apt-add-repository \"deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-5.0 main\"\n{% endcodeblock %}\n\n具体地址参考 [LLVM Debian/Ubuntu nightly packages][apt-llvm]。\n\n直接通过 `apt-get` 安装即可：\n\n{% codeblock lang:bash %}\nsudo apt-get update\nsudo apt-get install -y clang-5.0\n{% endcodeblock %}\n\n**多版本共存问题**\n\n{% codeblock lang:bash %}\nupdate-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-3.8 100\nupdate-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-5.0 1000\nupdate-alternatives --install /usr/bin/clang++ clang /usr/bin/clang-3.8 100\nupdate-alternatives --install /usr/bin/clang clang /usr/bin/clang-3.8 100\nupdate-alternatives --install /usr/bin/clang clang /usr/bin/clang-5.0 1000\nupdate-alternatives --config clang\nupdate-alternatives --config clang++\n{% endcodeblock %}\n\n代码格式化工具 `clang-format` 同理。\n\n**Vim C / C++ 代码格式化插件**\n\n{% note info %}\n<a href=\"https://github.com/rhysd/vim-clang-format\">vim-clang-format</a><br>\nVim plugin for clang-format, a formatter for C, C++, Obj-C, Java, JavaScript, TypeScript and ProtoBuf.\n{% endnote %}\n\n该插件可以直接在 `.vimrc` 中设置代码风格，示例如下：\n\n{% codeblock lang:vim .vimrc %}\nPlugin 'rhysd/vim-clang-format'\nautocmd FileType c,cpp,java nnoremap <silent> == :ClangFormat<CR>\nlet g:clang_format#detect_style_file = 1\n{% endcodeblock %}\n\n\n[kowalczyk-ubuntu-clang]: https://blog.kowalczyk.info/article/k/how-to-install-latest-clang-5.0-on-ubuntu-16.04-xenial-wsl.html\n[apt-llvm]: https://apt.llvm.org\n","source":"_posts/installing-latest-clang-on-ubuntu.md","raw":"---\ntitle: Ubuntu 中安装最新版本 Clang\ndate: 2018-03-11 10:29:09\ntags:\n    - Linux\n    - Ubuntu\n    - Clang\ncategories: Operation and Maintenance\n---\n\nUbuntu 16.04 中利用 `sudo apt-get install clang` 安装 Clang 的版本为 3.8，这个版本对现在来说确实已经很久远了，有必要升级成比较新的版本。这里几乎照搬此篇文章：[How to install latest clang (5.0) on Ubuntu 16.04 (xenial) / WSL][kowalczyk-ubuntu-clang]。\n\n<!-- more -->\n\n首先添加仓库：\n\n{% codeblock lang:bash %}\nwget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -\nsudo apt-add-repository \"deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-5.0 main\"\n{% endcodeblock %}\n\n具体地址参考 [LLVM Debian/Ubuntu nightly packages][apt-llvm]。\n\n直接通过 `apt-get` 安装即可：\n\n{% codeblock lang:bash %}\nsudo apt-get update\nsudo apt-get install -y clang-5.0\n{% endcodeblock %}\n\n**多版本共存问题**\n\n{% codeblock lang:bash %}\nupdate-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-3.8 100\nupdate-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-5.0 1000\nupdate-alternatives --install /usr/bin/clang++ clang /usr/bin/clang-3.8 100\nupdate-alternatives --install /usr/bin/clang clang /usr/bin/clang-3.8 100\nupdate-alternatives --install /usr/bin/clang clang /usr/bin/clang-5.0 1000\nupdate-alternatives --config clang\nupdate-alternatives --config clang++\n{% endcodeblock %}\n\n代码格式化工具 `clang-format` 同理。\n\n**Vim C / C++ 代码格式化插件**\n\n{% note info %}\n<a href=\"https://github.com/rhysd/vim-clang-format\">vim-clang-format</a><br>\nVim plugin for clang-format, a formatter for C, C++, Obj-C, Java, JavaScript, TypeScript and ProtoBuf.\n{% endnote %}\n\n该插件可以直接在 `.vimrc` 中设置代码风格，示例如下：\n\n{% codeblock lang:vim .vimrc %}\nPlugin 'rhysd/vim-clang-format'\nautocmd FileType c,cpp,java nnoremap <silent> == :ClangFormat<CR>\nlet g:clang_format#detect_style_file = 1\n{% endcodeblock %}\n\n\n[kowalczyk-ubuntu-clang]: https://blog.kowalczyk.info/article/k/how-to-install-latest-clang-5.0-on-ubuntu-16.04-xenial-wsl.html\n[apt-llvm]: https://apt.llvm.org\n","slug":"installing-latest-clang-on-ubuntu","published":1,"updated":"2023-03-09T16:09:38.243Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u336i001mp4x0hpatbshk","content":"<p>Ubuntu 16.04 中利用 <code>sudo apt-get install clang</code> 安装 Clang 的版本为 3.8，这个版本对现在来说确实已经很久远了，有必要升级成比较新的版本。这里几乎照搬此篇文章：<a href=\"https://blog.kowalczyk.info/article/k/how-to-install-latest-clang-5.0-on-ubuntu-16.04-xenial-wsl.html\" target=\"_blank\" rel=\"noopener\">How to install latest clang (5.0) on Ubuntu 16.04 (xenial) / WSL</a>。</p>\r\n<a id=\"more\"></a>\r\n<p>首先添加仓库：</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -</span><br><span class=\"line\">sudo apt-add-repository <span class=\"string\">\"deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-5.0 main\"</span></span><br></pre></td></tr></table></figure>\r\n<p>具体地址参考 <a href=\"https://apt.llvm.org\" target=\"_blank\" rel=\"noopener\">LLVM Debian/Ubuntu nightly packages</a>。</p>\r\n<p>直接通过 <code>apt-get</code> 安装即可：</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get install -y clang-5.0</span><br></pre></td></tr></table></figure>\r\n<p><strong>多版本共存问题</strong></p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-3.8 100</span><br><span class=\"line\">update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-5.0 1000</span><br><span class=\"line\">update-alternatives --install /usr/bin/clang++ clang /usr/bin/clang-3.8 100</span><br><span class=\"line\">update-alternatives --install /usr/bin/clang clang /usr/bin/clang-3.8 100</span><br><span class=\"line\">update-alternatives --install /usr/bin/clang clang /usr/bin/clang-5.0 1000</span><br><span class=\"line\">update-alternatives --config clang</span><br><span class=\"line\">update-alternatives --config clang++</span><br></pre></td></tr></table></figure>\r\n<p>代码格式化工具 <code>clang-format</code> 同理。</p>\r\n<p><strong>Vim C / C++ 代码格式化插件</strong></p>\r\n<div class=\"note info\"><a href=\"https://github.com/rhysd/vim-clang-format\" target=\"_blank\" rel=\"noopener\">vim-clang-format</a><br>\nVim plugin for clang-format, a formatter for C, C++, Obj-C, Java, JavaScript, TypeScript and ProtoBuf.</div>\r\n<p>该插件可以直接在 <code>.vimrc</code> 中设置代码风格，示例如下：</p>\r\n<figure class=\"highlight vim\"><figcaption><span>.vimrc</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Plugin <span class=\"string\">'rhysd/vim-clang-format'</span></span><br><span class=\"line\"><span class=\"keyword\">autocmd</span> FileType <span class=\"keyword\">c</span>,cpp,java <span class=\"keyword\">nnoremap</span> <span class=\"symbol\">&lt;silent&gt;</span> == :ClangFormat<span class=\"symbol\">&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:clang_format</span>#detect_style_file = <span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\r\n","site":{"data":{}},"excerpt":"<p>Ubuntu 16.04 中利用 <code>sudo apt-get install clang</code> 安装 Clang 的版本为 3.8，这个版本对现在来说确实已经很久远了，有必要升级成比较新的版本。这里几乎照搬此篇文章：<a href=\"https://blog.kowalczyk.info/article/k/how-to-install-latest-clang-5.0-on-ubuntu-16.04-xenial-wsl.html\" target=\"_blank\" rel=\"noopener\">How to install latest clang (5.0) on Ubuntu 16.04 (xenial) / WSL</a>。</p>","more":"<p>首先添加仓库：</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -</span><br><span class=\"line\">sudo apt-add-repository <span class=\"string\">\"deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-5.0 main\"</span></span><br></pre></td></tr></table></figure>\r\n<p>具体地址参考 <a href=\"https://apt.llvm.org\" target=\"_blank\" rel=\"noopener\">LLVM Debian/Ubuntu nightly packages</a>。</p>\r\n<p>直接通过 <code>apt-get</code> 安装即可：</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get install -y clang-5.0</span><br></pre></td></tr></table></figure>\r\n<p><strong>多版本共存问题</strong></p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-3.8 100</span><br><span class=\"line\">update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-5.0 1000</span><br><span class=\"line\">update-alternatives --install /usr/bin/clang++ clang /usr/bin/clang-3.8 100</span><br><span class=\"line\">update-alternatives --install /usr/bin/clang clang /usr/bin/clang-3.8 100</span><br><span class=\"line\">update-alternatives --install /usr/bin/clang clang /usr/bin/clang-5.0 1000</span><br><span class=\"line\">update-alternatives --config clang</span><br><span class=\"line\">update-alternatives --config clang++</span><br></pre></td></tr></table></figure>\r\n<p>代码格式化工具 <code>clang-format</code> 同理。</p>\r\n<p><strong>Vim C / C++ 代码格式化插件</strong></p>\r\n<div class=\"note info\"><a href=\"https://github.com/rhysd/vim-clang-format\" target=\"_blank\" rel=\"noopener\">vim-clang-format</a><br>\nVim plugin for clang-format, a formatter for C, C++, Obj-C, Java, JavaScript, TypeScript and ProtoBuf.</div>\r\n<p>该插件可以直接在 <code>.vimrc</code> 中设置代码风格，示例如下：</p>\r\n<figure class=\"highlight vim\"><figcaption><span>.vimrc</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Plugin <span class=\"string\">'rhysd/vim-clang-format'</span></span><br><span class=\"line\"><span class=\"keyword\">autocmd</span> FileType <span class=\"keyword\">c</span>,cpp,java <span class=\"keyword\">nnoremap</span> <span class=\"symbol\">&lt;silent&gt;</span> == :ClangFormat<span class=\"symbol\">&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">g:clang_format</span>#detect_style_file = <span class=\"number\">1</span></span><br></pre></td></tr></table></figure>"},{"title":"交互 Shells 和登录 Shells","date":"2017-10-29T03:09:12.000Z","_content":"\n### 提出疑问\n\n摘自 [Interactive and Login Shells][gist-1]:\n\n{% note info %}\n<ul>\n    <li>It doesn't seem like it's possible for there to be a login shell but not interactive.</li>\n    <li>Cron shell scripts are always non-login and non-interactive.</li>\n    <li>SSH shells are always login and interactive.</li>\n    <li>Subshells are always interactive but not login.</li>\n    <li>Shell scripts are always non-login and non-interactive.</li>\n    <li>Initial TTY shell should be login and interactive.</li>\n</ul>\n{% endnote %}\n\n\n<!-- more -->\n\nSwtching users inside Linux involves creating subshells, can you elect to switch\nwithout logging in, or switch while simulate the logging in process. Note that\nlogging in doesn't necessarily mean you need to enter passwords, nor that any\npassword to be entered is possessed by the user you're logging into.\n\nSince `.bashrc` is read on interactive but not login, and `.bash_profile` is read\non all login shells. People source the `.bashrc` in the `.bash_profile`, allowing\nyou to set general configuration (that applies to all interactive shells) inside\n`.bashrc` but login specific configuration in `.bash_profile`.\n\n### 略加思索\n\n下面为具体的解释, 以及不同情况下启动脚本的加载顺序.\n(来自 [login/non-login and interactive/non-interactive shells][se-170493])\n\n* **login** shell: A login shell logs you into the system as a spiecified user,\n  necessary for this is a username and password.\n  When you hit <kbd>ctrl</kbd>+<kbd>alt</kbd>+<kbd>F1</kbd> to login into a\n  virtual terminal you get after successful login: a login shell\n  (that is interactive). Sourced files:\n  * `/etc/profile` and `~/.profile` for Bourne compatible shells (and `/etc/profile.d/*`)\n  * `~/.bash_profile` for bash\n  * `/etc/zprofile` and `~/.zprofile` for zsh\n  * `/etc/csh.login` and `~/.login` for csh\n\n* **non-login** shell: A shell that is executed without logging in,\n  necessary for this is a current logged in user.\n  When you open a graphic terminal in gnome it is a non-login (interactive) shell.\n  Sourced files:\n  * `/etc/bashrc` and `~/.bashrc` for bash\n\n* **interactive** shell: A shell (login or non-login) where you can\n  interactively type or interrupt commands. For example a gnome terminal\n  (non-login) or a virtual terminal (login). In an interactive shell the\n  prompt variable must be set (`$PS1`). Sourced files:\n  * `/etc/profile` and `~/.profile`\n  * `/etc/bashrc` or `/etc/bash.bashrc` for bash\n\n* **non-interactive** shell: A (sub)shell that is probably run from an\n  automated process you will see neither input nor outputm when the calling\n  process don't handle it. That shell is normally a non-login shell,\n  because the calling user has logged in already.\n  A shell running a script is always a non-interactive shell,\n  but the script can emulate an interactive shell by prompting\n  the user to input values. Sourced files:\n  * `/etc/bashrc` or `/etc/bash.bashrc` for bash (but,\n    mostly you see this at the beginning of the script:\n    `[ -z \"$PS1\" ] && return`. That means don't do anything if it's a non-interactive shell)\n  * depending on shell; some of them read the file in the `$ENV` variable\n\n### 识破\n\n> 那么如何判断当前 shell 为 `interactive` 或 `login` shell 呢?\n\n- `bash` (参考 [How to check if a shell is login/interactive/batch][se-26676])\n  {% codeblock lang:bash %}\n  [[ $- == *i* ]] && echo 'interactive' || echo 'NOT interactive'\n  shopt -q login_shell && echo 'login shell' || echo 'NOT login shell'\n  {% endcodeblock %}\n- `zsh` (参考 [Interactive and Login Shells][gist-1])\n  {% codeblock lang:bash %}\n  [[ -o interactive ]] && echo \"interactive\" || echo \"NOT interactive\"\n  [[ -o login ]] && echo \"login shell\" || echo \"NOT login shell\"\n  {% endcodeblock %}\n\n[gist-1]: https://gist.github.com/CMCDragonkai/33735c7fa6a2706462f2\n[se-170493]: https://unix.stackexchange.com/a/170499\n[se-26676]: https://unix.stackexchange.com/a/26782\n","source":"_posts/interactive-and-login-shells.md","raw":"---\ntitle: 交互 Shells 和登录 Shells\ndate: 2017-10-29 11:09:12\ntags:\n    - Shell\ncategories: Operation and Maintenance\n---\n\n### 提出疑问\n\n摘自 [Interactive and Login Shells][gist-1]:\n\n{% note info %}\n<ul>\n    <li>It doesn't seem like it's possible for there to be a login shell but not interactive.</li>\n    <li>Cron shell scripts are always non-login and non-interactive.</li>\n    <li>SSH shells are always login and interactive.</li>\n    <li>Subshells are always interactive but not login.</li>\n    <li>Shell scripts are always non-login and non-interactive.</li>\n    <li>Initial TTY shell should be login and interactive.</li>\n</ul>\n{% endnote %}\n\n\n<!-- more -->\n\nSwtching users inside Linux involves creating subshells, can you elect to switch\nwithout logging in, or switch while simulate the logging in process. Note that\nlogging in doesn't necessarily mean you need to enter passwords, nor that any\npassword to be entered is possessed by the user you're logging into.\n\nSince `.bashrc` is read on interactive but not login, and `.bash_profile` is read\non all login shells. People source the `.bashrc` in the `.bash_profile`, allowing\nyou to set general configuration (that applies to all interactive shells) inside\n`.bashrc` but login specific configuration in `.bash_profile`.\n\n### 略加思索\n\n下面为具体的解释, 以及不同情况下启动脚本的加载顺序.\n(来自 [login/non-login and interactive/non-interactive shells][se-170493])\n\n* **login** shell: A login shell logs you into the system as a spiecified user,\n  necessary for this is a username and password.\n  When you hit <kbd>ctrl</kbd>+<kbd>alt</kbd>+<kbd>F1</kbd> to login into a\n  virtual terminal you get after successful login: a login shell\n  (that is interactive). Sourced files:\n  * `/etc/profile` and `~/.profile` for Bourne compatible shells (and `/etc/profile.d/*`)\n  * `~/.bash_profile` for bash\n  * `/etc/zprofile` and `~/.zprofile` for zsh\n  * `/etc/csh.login` and `~/.login` for csh\n\n* **non-login** shell: A shell that is executed without logging in,\n  necessary for this is a current logged in user.\n  When you open a graphic terminal in gnome it is a non-login (interactive) shell.\n  Sourced files:\n  * `/etc/bashrc` and `~/.bashrc` for bash\n\n* **interactive** shell: A shell (login or non-login) where you can\n  interactively type or interrupt commands. For example a gnome terminal\n  (non-login) or a virtual terminal (login). In an interactive shell the\n  prompt variable must be set (`$PS1`). Sourced files:\n  * `/etc/profile` and `~/.profile`\n  * `/etc/bashrc` or `/etc/bash.bashrc` for bash\n\n* **non-interactive** shell: A (sub)shell that is probably run from an\n  automated process you will see neither input nor outputm when the calling\n  process don't handle it. That shell is normally a non-login shell,\n  because the calling user has logged in already.\n  A shell running a script is always a non-interactive shell,\n  but the script can emulate an interactive shell by prompting\n  the user to input values. Sourced files:\n  * `/etc/bashrc` or `/etc/bash.bashrc` for bash (but,\n    mostly you see this at the beginning of the script:\n    `[ -z \"$PS1\" ] && return`. That means don't do anything if it's a non-interactive shell)\n  * depending on shell; some of them read the file in the `$ENV` variable\n\n### 识破\n\n> 那么如何判断当前 shell 为 `interactive` 或 `login` shell 呢?\n\n- `bash` (参考 [How to check if a shell is login/interactive/batch][se-26676])\n  {% codeblock lang:bash %}\n  [[ $- == *i* ]] && echo 'interactive' || echo 'NOT interactive'\n  shopt -q login_shell && echo 'login shell' || echo 'NOT login shell'\n  {% endcodeblock %}\n- `zsh` (参考 [Interactive and Login Shells][gist-1])\n  {% codeblock lang:bash %}\n  [[ -o interactive ]] && echo \"interactive\" || echo \"NOT interactive\"\n  [[ -o login ]] && echo \"login shell\" || echo \"NOT login shell\"\n  {% endcodeblock %}\n\n[gist-1]: https://gist.github.com/CMCDragonkai/33735c7fa6a2706462f2\n[se-170493]: https://unix.stackexchange.com/a/170499\n[se-26676]: https://unix.stackexchange.com/a/26782\n","slug":"interactive-and-login-shells","published":1,"updated":"2023-03-09T16:09:38.247Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u336k001qp4x0s0be1asu","content":"<h3 id=\"提出疑问\">提出疑问</h3>\r\n<p>摘自 <a href=\"https://gist.github.com/CMCDragonkai/33735c7fa6a2706462f2\" target=\"_blank\" rel=\"noopener\">Interactive and Login Shells</a>:</p>\r\n<div class=\"note info\"><ul>\n    <li>It doesn't seem like it's possible for there to be a login shell but not interactive.</li>\n    <li>Cron shell scripts are always non-login and non-interactive.</li>\n    <li>SSH shells are always login and interactive.</li>\n    <li>Subshells are always interactive but not login.</li>\n    <li>Shell scripts are always non-login and non-interactive.</li>\n    <li>Initial TTY shell should be login and interactive.</li>\n</ul></div>\r\n<a id=\"more\"></a>\r\n<p>Swtching users inside Linux involves creating subshells, can you elect to switch without logging in, or switch while simulate the logging in process. Note that logging in doesn’t necessarily mean you need to enter passwords, nor that any password to be entered is possessed by the user you’re logging into.</p>\r\n<p>Since <code>.bashrc</code> is read on interactive but not login, and <code>.bash_profile</code> is read on all login shells. People source the <code>.bashrc</code> in the <code>.bash_profile</code>, allowing you to set general configuration (that applies to all interactive shells) inside <code>.bashrc</code> but login specific configuration in <code>.bash_profile</code>.</p>\r\n<h3 id=\"略加思索\">略加思索</h3>\r\n<p>下面为具体的解释, 以及不同情况下启动脚本的加载顺序. (来自 <a href=\"https://unix.stackexchange.com/a/170499\" target=\"_blank\" rel=\"noopener\">login/non-login and interactive/non-interactive shells</a>)</p>\r\n<ul>\r\n<li><strong>login</strong> shell: A login shell logs you into the system as a spiecified user, necessary for this is a username and password. When you hit <kbd>ctrl</kbd>+<kbd>alt</kbd>+<kbd>F1</kbd> to login into a virtual terminal you get after successful login: a login shell (that is interactive). Sourced files:\r\n<ul>\r\n<li><code>/etc/profile</code> and <code>~/.profile</code> for Bourne compatible shells (and <code>/etc/profile.d/*</code>)</li>\r\n<li><code>~/.bash_profile</code> for bash</li>\r\n<li><code>/etc/zprofile</code> and <code>~/.zprofile</code> for zsh</li>\r\n<li><code>/etc/csh.login</code> and <code>~/.login</code> for csh</li>\r\n</ul></li>\r\n<li><strong>non-login</strong> shell: A shell that is executed without logging in, necessary for this is a current logged in user. When you open a graphic terminal in gnome it is a non-login (interactive) shell. Sourced files:\r\n<ul>\r\n<li><code>/etc/bashrc</code> and <code>~/.bashrc</code> for bash</li>\r\n</ul></li>\r\n<li><strong>interactive</strong> shell: A shell (login or non-login) where you can interactively type or interrupt commands. For example a gnome terminal (non-login) or a virtual terminal (login). In an interactive shell the prompt variable must be set (<code>$PS1</code>). Sourced files:\r\n<ul>\r\n<li><code>/etc/profile</code> and <code>~/.profile</code></li>\r\n<li><code>/etc/bashrc</code> or <code>/etc/bash.bashrc</code> for bash</li>\r\n</ul></li>\r\n<li><strong>non-interactive</strong> shell: A (sub)shell that is probably run from an automated process you will see neither input nor outputm when the calling process don’t handle it. That shell is normally a non-login shell, because the calling user has logged in already. A shell running a script is always a non-interactive shell, but the script can emulate an interactive shell by prompting the user to input values. Sourced files:\r\n<ul>\r\n<li><code>/etc/bashrc</code> or <code>/etc/bash.bashrc</code> for bash (but, mostly you see this at the beginning of the script: <code>[ -z \"$PS1\" ] &amp;&amp; return</code>. That means don’t do anything if it’s a non-interactive shell)</li>\r\n<li>depending on shell; some of them read the file in the <code>$ENV</code> variable</li>\r\n</ul></li>\r\n</ul>\r\n<h3 id=\"识破\">识破</h3>\r\n<blockquote>\r\n<p>那么如何判断当前 shell 为 <code>interactive</code> 或 <code>login</code> shell 呢?</p>\r\n</blockquote>\r\n<ul>\r\n<li><code>bash</code> (参考 <a href=\"https://unix.stackexchange.com/a/26782\" target=\"_blank\" rel=\"noopener\">How to check if a shell is login/interactive/batch</a>) <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[[ $- == *i* ]] &amp;&amp; <span class=\"built_in\">echo</span> <span class=\"string\">'interactive'</span> || <span class=\"built_in\">echo</span> <span class=\"string\">'NOT interactive'</span></span><br><span class=\"line\"><span class=\"built_in\">shopt</span> -q login_shell &amp;&amp; <span class=\"built_in\">echo</span> <span class=\"string\">'login shell'</span> || <span class=\"built_in\">echo</span> <span class=\"string\">'NOT login shell'</span></span><br></pre></td></tr></table></figure></li>\r\n<li><code>zsh</code> (参考 <a href=\"https://gist.github.com/CMCDragonkai/33735c7fa6a2706462f2\" target=\"_blank\" rel=\"noopener\">Interactive and Login Shells</a>) <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[[ -o interactive ]] &amp;&amp; <span class=\"built_in\">echo</span> <span class=\"string\">\"interactive\"</span> || <span class=\"built_in\">echo</span> <span class=\"string\">\"NOT interactive\"</span></span><br><span class=\"line\">[[ -o login ]] &amp;&amp; <span class=\"built_in\">echo</span> <span class=\"string\">\"login shell\"</span> || <span class=\"built_in\">echo</span> <span class=\"string\">\"NOT login shell\"</span></span><br></pre></td></tr></table></figure></li>\r\n</ul>\r\n","site":{"data":{}},"excerpt":"<h3 id=\"提出疑问\">提出疑问</h3>\r\n<p>摘自 <a href=\"https://gist.github.com/CMCDragonkai/33735c7fa6a2706462f2\" target=\"_blank\" rel=\"noopener\">Interactive and Login Shells</a>:</p>\r\n<div class=\"note info\"><ul>\n    <li>It doesn't seem like it's possible for there to be a login shell but not interactive.</li>\n    <li>Cron shell scripts are always non-login and non-interactive.</li>\n    <li>SSH shells are always login and interactive.</li>\n    <li>Subshells are always interactive but not login.</li>\n    <li>Shell scripts are always non-login and non-interactive.</li>\n    <li>Initial TTY shell should be login and interactive.</li>\n</ul></div>","more":"<p>Swtching users inside Linux involves creating subshells, can you elect to switch without logging in, or switch while simulate the logging in process. Note that logging in doesn’t necessarily mean you need to enter passwords, nor that any password to be entered is possessed by the user you’re logging into.</p>\r\n<p>Since <code>.bashrc</code> is read on interactive but not login, and <code>.bash_profile</code> is read on all login shells. People source the <code>.bashrc</code> in the <code>.bash_profile</code>, allowing you to set general configuration (that applies to all interactive shells) inside <code>.bashrc</code> but login specific configuration in <code>.bash_profile</code>.</p>\r\n<h3 id=\"略加思索\">略加思索</h3>\r\n<p>下面为具体的解释, 以及不同情况下启动脚本的加载顺序. (来自 <a href=\"https://unix.stackexchange.com/a/170499\" target=\"_blank\" rel=\"noopener\">login/non-login and interactive/non-interactive shells</a>)</p>\r\n<ul>\r\n<li><strong>login</strong> shell: A login shell logs you into the system as a spiecified user, necessary for this is a username and password. When you hit <kbd>ctrl</kbd>+<kbd>alt</kbd>+<kbd>F1</kbd> to login into a virtual terminal you get after successful login: a login shell (that is interactive). Sourced files:\r\n<ul>\r\n<li><code>/etc/profile</code> and <code>~/.profile</code> for Bourne compatible shells (and <code>/etc/profile.d/*</code>)</li>\r\n<li><code>~/.bash_profile</code> for bash</li>\r\n<li><code>/etc/zprofile</code> and <code>~/.zprofile</code> for zsh</li>\r\n<li><code>/etc/csh.login</code> and <code>~/.login</code> for csh</li>\r\n</ul></li>\r\n<li><strong>non-login</strong> shell: A shell that is executed without logging in, necessary for this is a current logged in user. When you open a graphic terminal in gnome it is a non-login (interactive) shell. Sourced files:\r\n<ul>\r\n<li><code>/etc/bashrc</code> and <code>~/.bashrc</code> for bash</li>\r\n</ul></li>\r\n<li><strong>interactive</strong> shell: A shell (login or non-login) where you can interactively type or interrupt commands. For example a gnome terminal (non-login) or a virtual terminal (login). In an interactive shell the prompt variable must be set (<code>$PS1</code>). Sourced files:\r\n<ul>\r\n<li><code>/etc/profile</code> and <code>~/.profile</code></li>\r\n<li><code>/etc/bashrc</code> or <code>/etc/bash.bashrc</code> for bash</li>\r\n</ul></li>\r\n<li><strong>non-interactive</strong> shell: A (sub)shell that is probably run from an automated process you will see neither input nor outputm when the calling process don’t handle it. That shell is normally a non-login shell, because the calling user has logged in already. A shell running a script is always a non-interactive shell, but the script can emulate an interactive shell by prompting the user to input values. Sourced files:\r\n<ul>\r\n<li><code>/etc/bashrc</code> or <code>/etc/bash.bashrc</code> for bash (but, mostly you see this at the beginning of the script: <code>[ -z \"$PS1\" ] &amp;&amp; return</code>. That means don’t do anything if it’s a non-interactive shell)</li>\r\n<li>depending on shell; some of them read the file in the <code>$ENV</code> variable</li>\r\n</ul></li>\r\n</ul>\r\n<h3 id=\"识破\">识破</h3>\r\n<blockquote>\r\n<p>那么如何判断当前 shell 为 <code>interactive</code> 或 <code>login</code> shell 呢?</p>\r\n</blockquote>\r\n<ul>\r\n<li><code>bash</code> (参考 <a href=\"https://unix.stackexchange.com/a/26782\" target=\"_blank\" rel=\"noopener\">How to check if a shell is login/interactive/batch</a>) <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[[ $- == *i* ]] &amp;&amp; <span class=\"built_in\">echo</span> <span class=\"string\">'interactive'</span> || <span class=\"built_in\">echo</span> <span class=\"string\">'NOT interactive'</span></span><br><span class=\"line\"><span class=\"built_in\">shopt</span> -q login_shell &amp;&amp; <span class=\"built_in\">echo</span> <span class=\"string\">'login shell'</span> || <span class=\"built_in\">echo</span> <span class=\"string\">'NOT login shell'</span></span><br></pre></td></tr></table></figure></li>\r\n<li><code>zsh</code> (参考 <a href=\"https://gist.github.com/CMCDragonkai/33735c7fa6a2706462f2\" target=\"_blank\" rel=\"noopener\">Interactive and Login Shells</a>) <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[[ -o interactive ]] &amp;&amp; <span class=\"built_in\">echo</span> <span class=\"string\">\"interactive\"</span> || <span class=\"built_in\">echo</span> <span class=\"string\">\"NOT interactive\"</span></span><br><span class=\"line\">[[ -o login ]] &amp;&amp; <span class=\"built_in\">echo</span> <span class=\"string\">\"login shell\"</span> || <span class=\"built_in\">echo</span> <span class=\"string\">\"NOT login shell\"</span></span><br></pre></td></tr></table></figure></li>\r\n</ul>"},{"title":"Linux 中日期 date 命令格式控制符","date":"2018-01-08T03:14:46.000Z","_content":"\nLinux 中的 `date` 命令格式控制符实在令人眼花缭乱，整理如下。\n\n<!-- more -->\n\n| 格式控制符 | 说明                                        | 举例                              |\n| :---:      | :---                                        | :---                              |\n| `%%`       | 百分号                                      | `%`                               |\n| `%a`       | 短星期（区域相关）                          | `Sat`                             |\n| `%A`       | 长星期（区域相关）                          | `Saturday`                        |\n| `%b`       | 短月份                                      | `Dec`                             |\n| `%B`       | 长月份                                      | `December`                        |\n| `%c`       | 日期时间                                    | `Sat 09 Dec 2017 08:45:40 PM CST` |\n| `%C`       | 年份前两位                                  | `20`                              |\n| `%d`       | 天数（前置补零）                            | `09`                              |\n| `%D`       | 日期，格式为：`%m/%d/%y`                    | `12/09/17`                        |\n| `%e`       | 天数（前置空格）                            | `9`                               |\n| `%F`       | 日期，格式为：`%Y-%m-%d`                    | `2017-12-09`                      |\n| `%g`       |                                             | `17`                              |\n| `%G`       |                                             | `2017`                            |\n| `%h`       | 同 `%b`                                     | `Dec`                             |\n| `%H`       | `24` 小时制小时（前置补零）                 | `20`                              |\n| `%I`       | `12` 小时制小时（前置补零）                 | `08`                              |\n| `%j`       | 一年中第几天（前置补零）                    | `343`                             |\n| `%k`       | `24` 小时制小时（前置空格）                 | `20`                              |\n| `%l`       | `12` 小时制小时（前置空格）                 | `8`                               |\n| `%m`       | 数字月份（前置补零）                        | `12`                              |\n| `%M`       | 分钟（前置补零）                            | `45`                              |\n| `%n`       | 换行                                        |                                   |\n| `%N`       | 纳秒                                        | `893369643`                       |\n| `%p`       | `PM` 或 `AM`                                | `PM`                              |\n| `%P`       | 小写的 `pm` 或 `am`                         | `pm`                              |\n| `%r`       |                                             | `08:45:40 PM`                     |\n| `%R`       | 24 小时制小时分钟: `%H:%M`                  | `20:45`                           |\n| `%s`       | 从 `1970-01-01 00:00:00 UTC` 开始计算的秒数 | `1512823540`                      |\n| `%S`       | 秒数（`00..60`，前置补零）                  | `40`                              |\n| `%t`       | 制表符号                                    |                                   |\n| `%T`       | 时间：`%H:%M:%S`                            | `20:45:40`                        |\n| `%u`       | 数字星期（`1-7`，`1` 表示周一）             | `6`                               |\n| `%U`       | 周数（周日为星期第一天，前置补零）          | `49`                              |\n| `%V`       |                                             | `49`                              |\n| `%w`       | 数字星期（`0-6`，`0` 表示周日）             | `6`                               |\n| `%W`       | 周数（周一为星期第一天，前置补零）          | `49`                              |\n| `%x`       | 区域日期                                    | `12/09/2017`                      |\n| `%X`       | 区域时间                                    | `08:45:40 PM`                     |\n| `%y`       | 年份后两位（短年份）                        | `17`                              |\n| `%Y`       | 长年份                                      | `2017`                            |\n| `%z`       |                                             | `+0800`                           |\n| `%:z`      |                                             | `+08:00`                          |\n| `%::`      |                                             | `+08:00:00`                       |\n| `%::`      |                                             | `+08`                             |\n| `%Z`       | 字母时区简写                                | `CST`                             |\n","source":"_posts/linux-date-format.md","raw":"---\ntitle: Linux 中日期 date 命令格式控制符\ndate: 2018-01-08 11:14:46\ntags:\n    - Date\n    - Linux\ncategories: Operation and Maintenance\n---\n\nLinux 中的 `date` 命令格式控制符实在令人眼花缭乱，整理如下。\n\n<!-- more -->\n\n| 格式控制符 | 说明                                        | 举例                              |\n| :---:      | :---                                        | :---                              |\n| `%%`       | 百分号                                      | `%`                               |\n| `%a`       | 短星期（区域相关）                          | `Sat`                             |\n| `%A`       | 长星期（区域相关）                          | `Saturday`                        |\n| `%b`       | 短月份                                      | `Dec`                             |\n| `%B`       | 长月份                                      | `December`                        |\n| `%c`       | 日期时间                                    | `Sat 09 Dec 2017 08:45:40 PM CST` |\n| `%C`       | 年份前两位                                  | `20`                              |\n| `%d`       | 天数（前置补零）                            | `09`                              |\n| `%D`       | 日期，格式为：`%m/%d/%y`                    | `12/09/17`                        |\n| `%e`       | 天数（前置空格）                            | `9`                               |\n| `%F`       | 日期，格式为：`%Y-%m-%d`                    | `2017-12-09`                      |\n| `%g`       |                                             | `17`                              |\n| `%G`       |                                             | `2017`                            |\n| `%h`       | 同 `%b`                                     | `Dec`                             |\n| `%H`       | `24` 小时制小时（前置补零）                 | `20`                              |\n| `%I`       | `12` 小时制小时（前置补零）                 | `08`                              |\n| `%j`       | 一年中第几天（前置补零）                    | `343`                             |\n| `%k`       | `24` 小时制小时（前置空格）                 | `20`                              |\n| `%l`       | `12` 小时制小时（前置空格）                 | `8`                               |\n| `%m`       | 数字月份（前置补零）                        | `12`                              |\n| `%M`       | 分钟（前置补零）                            | `45`                              |\n| `%n`       | 换行                                        |                                   |\n| `%N`       | 纳秒                                        | `893369643`                       |\n| `%p`       | `PM` 或 `AM`                                | `PM`                              |\n| `%P`       | 小写的 `pm` 或 `am`                         | `pm`                              |\n| `%r`       |                                             | `08:45:40 PM`                     |\n| `%R`       | 24 小时制小时分钟: `%H:%M`                  | `20:45`                           |\n| `%s`       | 从 `1970-01-01 00:00:00 UTC` 开始计算的秒数 | `1512823540`                      |\n| `%S`       | 秒数（`00..60`，前置补零）                  | `40`                              |\n| `%t`       | 制表符号                                    |                                   |\n| `%T`       | 时间：`%H:%M:%S`                            | `20:45:40`                        |\n| `%u`       | 数字星期（`1-7`，`1` 表示周一）             | `6`                               |\n| `%U`       | 周数（周日为星期第一天，前置补零）          | `49`                              |\n| `%V`       |                                             | `49`                              |\n| `%w`       | 数字星期（`0-6`，`0` 表示周日）             | `6`                               |\n| `%W`       | 周数（周一为星期第一天，前置补零）          | `49`                              |\n| `%x`       | 区域日期                                    | `12/09/2017`                      |\n| `%X`       | 区域时间                                    | `08:45:40 PM`                     |\n| `%y`       | 年份后两位（短年份）                        | `17`                              |\n| `%Y`       | 长年份                                      | `2017`                            |\n| `%z`       |                                             | `+0800`                           |\n| `%:z`      |                                             | `+08:00`                          |\n| `%::`      |                                             | `+08:00:00`                       |\n| `%::`      |                                             | `+08`                             |\n| `%Z`       | 字母时区简写                                | `CST`                             |\n","slug":"linux-date-format","published":1,"updated":"2023-03-09T16:09:38.253Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u336l001up4x02y0cpwqo","content":"<p>Linux 中的 <code>date</code> 命令格式控制符实在令人眼花缭乱，整理如下。</p>\r\n<a id=\"more\"></a>\r\n<table>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: center;\">格式控制符</th>\r\n<th style=\"text-align: left;\">说明</th>\r\n<th style=\"text-align: left;\">举例</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>%%</code></td>\r\n<td style=\"text-align: left;\">百分号</td>\r\n<td style=\"text-align: left;\"><code>%</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>%a</code></td>\r\n<td style=\"text-align: left;\">短星期（区域相关）</td>\r\n<td style=\"text-align: left;\"><code>Sat</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>%A</code></td>\r\n<td style=\"text-align: left;\">长星期（区域相关）</td>\r\n<td style=\"text-align: left;\"><code>Saturday</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>%b</code></td>\r\n<td style=\"text-align: left;\">短月份</td>\r\n<td style=\"text-align: left;\"><code>Dec</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>%B</code></td>\r\n<td style=\"text-align: left;\">长月份</td>\r\n<td style=\"text-align: left;\"><code>December</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>%c</code></td>\r\n<td style=\"text-align: left;\">日期时间</td>\r\n<td style=\"text-align: left;\"><code>Sat 09 Dec 2017 08:45:40 PM CST</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>%C</code></td>\r\n<td style=\"text-align: left;\">年份前两位</td>\r\n<td style=\"text-align: left;\"><code>20</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>%d</code></td>\r\n<td style=\"text-align: left;\">天数（前置补零）</td>\r\n<td style=\"text-align: left;\"><code>09</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>%D</code></td>\r\n<td style=\"text-align: left;\">日期，格式为：<code>%m/%d/%y</code></td>\r\n<td style=\"text-align: left;\"><code>12/09/17</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>%e</code></td>\r\n<td style=\"text-align: left;\">天数（前置空格）</td>\r\n<td style=\"text-align: left;\"><code>9</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>%F</code></td>\r\n<td style=\"text-align: left;\">日期，格式为：<code>%Y-%m-%d</code></td>\r\n<td style=\"text-align: left;\"><code>2017-12-09</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>%g</code></td>\r\n<td style=\"text-align: left;\"></td>\r\n<td style=\"text-align: left;\"><code>17</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>%G</code></td>\r\n<td style=\"text-align: left;\"></td>\r\n<td style=\"text-align: left;\"><code>2017</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>%h</code></td>\r\n<td style=\"text-align: left;\">同 <code>%b</code></td>\r\n<td style=\"text-align: left;\"><code>Dec</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>%H</code></td>\r\n<td style=\"text-align: left;\"><code>24</code> 小时制小时（前置补零）</td>\r\n<td style=\"text-align: left;\"><code>20</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>%I</code></td>\r\n<td style=\"text-align: left;\"><code>12</code> 小时制小时（前置补零）</td>\r\n<td style=\"text-align: left;\"><code>08</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>%j</code></td>\r\n<td style=\"text-align: left;\">一年中第几天（前置补零）</td>\r\n<td style=\"text-align: left;\"><code>343</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>%k</code></td>\r\n<td style=\"text-align: left;\"><code>24</code> 小时制小时（前置空格）</td>\r\n<td style=\"text-align: left;\"><code>20</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>%l</code></td>\r\n<td style=\"text-align: left;\"><code>12</code> 小时制小时（前置空格）</td>\r\n<td style=\"text-align: left;\"><code>8</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>%m</code></td>\r\n<td style=\"text-align: left;\">数字月份（前置补零）</td>\r\n<td style=\"text-align: left;\"><code>12</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>%M</code></td>\r\n<td style=\"text-align: left;\">分钟（前置补零）</td>\r\n<td style=\"text-align: left;\"><code>45</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>%n</code></td>\r\n<td style=\"text-align: left;\">换行</td>\r\n<td style=\"text-align: left;\"></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>%N</code></td>\r\n<td style=\"text-align: left;\">纳秒</td>\r\n<td style=\"text-align: left;\"><code>893369643</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>%p</code></td>\r\n<td style=\"text-align: left;\"><code>PM</code> 或 <code>AM</code></td>\r\n<td style=\"text-align: left;\"><code>PM</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>%P</code></td>\r\n<td style=\"text-align: left;\">小写的 <code>pm</code> 或 <code>am</code></td>\r\n<td style=\"text-align: left;\"><code>pm</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>%r</code></td>\r\n<td style=\"text-align: left;\"></td>\r\n<td style=\"text-align: left;\"><code>08:45:40 PM</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>%R</code></td>\r\n<td style=\"text-align: left;\">24 小时制小时分钟: <code>%H:%M</code></td>\r\n<td style=\"text-align: left;\"><code>20:45</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>%s</code></td>\r\n<td style=\"text-align: left;\">从 <code>1970-01-01 00:00:00 UTC</code> 开始计算的秒数</td>\r\n<td style=\"text-align: left;\"><code>1512823540</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>%S</code></td>\r\n<td style=\"text-align: left;\">秒数（<code>00..60</code>，前置补零）</td>\r\n<td style=\"text-align: left;\"><code>40</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>%t</code></td>\r\n<td style=\"text-align: left;\">制表符号</td>\r\n<td style=\"text-align: left;\"></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>%T</code></td>\r\n<td style=\"text-align: left;\">时间：<code>%H:%M:%S</code></td>\r\n<td style=\"text-align: left;\"><code>20:45:40</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>%u</code></td>\r\n<td style=\"text-align: left;\">数字星期（<code>1-7</code>，<code>1</code> 表示周一）</td>\r\n<td style=\"text-align: left;\"><code>6</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>%U</code></td>\r\n<td style=\"text-align: left;\">周数（周日为星期第一天，前置补零）</td>\r\n<td style=\"text-align: left;\"><code>49</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>%V</code></td>\r\n<td style=\"text-align: left;\"></td>\r\n<td style=\"text-align: left;\"><code>49</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>%w</code></td>\r\n<td style=\"text-align: left;\">数字星期（<code>0-6</code>，<code>0</code> 表示周日）</td>\r\n<td style=\"text-align: left;\"><code>6</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>%W</code></td>\r\n<td style=\"text-align: left;\">周数（周一为星期第一天，前置补零）</td>\r\n<td style=\"text-align: left;\"><code>49</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>%x</code></td>\r\n<td style=\"text-align: left;\">区域日期</td>\r\n<td style=\"text-align: left;\"><code>12/09/2017</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>%X</code></td>\r\n<td style=\"text-align: left;\">区域时间</td>\r\n<td style=\"text-align: left;\"><code>08:45:40 PM</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>%y</code></td>\r\n<td style=\"text-align: left;\">年份后两位（短年份）</td>\r\n<td style=\"text-align: left;\"><code>17</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>%Y</code></td>\r\n<td style=\"text-align: left;\">长年份</td>\r\n<td style=\"text-align: left;\"><code>2017</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>%z</code></td>\r\n<td style=\"text-align: left;\"></td>\r\n<td style=\"text-align: left;\"><code>+0800</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>%:z</code></td>\r\n<td style=\"text-align: left;\"></td>\r\n<td style=\"text-align: left;\"><code>+08:00</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>%::</code></td>\r\n<td style=\"text-align: left;\"></td>\r\n<td style=\"text-align: left;\"><code>+08:00:00</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>%::</code></td>\r\n<td style=\"text-align: left;\"></td>\r\n<td style=\"text-align: left;\"><code>+08</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>%Z</code></td>\r\n<td style=\"text-align: left;\">字母时区简写</td>\r\n<td style=\"text-align: left;\"><code>CST</code></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n","site":{"data":{}},"excerpt":"<p>Linux 中的 <code>date</code> 命令格式控制符实在令人眼花缭乱，整理如下。</p>","more":"<table>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: center;\">格式控制符</th>\r\n<th style=\"text-align: left;\">说明</th>\r\n<th style=\"text-align: left;\">举例</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>%%</code></td>\r\n<td style=\"text-align: left;\">百分号</td>\r\n<td style=\"text-align: left;\"><code>%</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>%a</code></td>\r\n<td style=\"text-align: left;\">短星期（区域相关）</td>\r\n<td style=\"text-align: left;\"><code>Sat</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>%A</code></td>\r\n<td style=\"text-align: left;\">长星期（区域相关）</td>\r\n<td style=\"text-align: left;\"><code>Saturday</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>%b</code></td>\r\n<td style=\"text-align: left;\">短月份</td>\r\n<td style=\"text-align: left;\"><code>Dec</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>%B</code></td>\r\n<td style=\"text-align: left;\">长月份</td>\r\n<td style=\"text-align: left;\"><code>December</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>%c</code></td>\r\n<td style=\"text-align: left;\">日期时间</td>\r\n<td style=\"text-align: left;\"><code>Sat 09 Dec 2017 08:45:40 PM CST</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>%C</code></td>\r\n<td style=\"text-align: left;\">年份前两位</td>\r\n<td style=\"text-align: left;\"><code>20</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>%d</code></td>\r\n<td style=\"text-align: left;\">天数（前置补零）</td>\r\n<td style=\"text-align: left;\"><code>09</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>%D</code></td>\r\n<td style=\"text-align: left;\">日期，格式为：<code>%m/%d/%y</code></td>\r\n<td style=\"text-align: left;\"><code>12/09/17</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>%e</code></td>\r\n<td style=\"text-align: left;\">天数（前置空格）</td>\r\n<td style=\"text-align: left;\"><code>9</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>%F</code></td>\r\n<td style=\"text-align: left;\">日期，格式为：<code>%Y-%m-%d</code></td>\r\n<td style=\"text-align: left;\"><code>2017-12-09</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>%g</code></td>\r\n<td style=\"text-align: left;\"></td>\r\n<td style=\"text-align: left;\"><code>17</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>%G</code></td>\r\n<td style=\"text-align: left;\"></td>\r\n<td style=\"text-align: left;\"><code>2017</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>%h</code></td>\r\n<td style=\"text-align: left;\">同 <code>%b</code></td>\r\n<td style=\"text-align: left;\"><code>Dec</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>%H</code></td>\r\n<td style=\"text-align: left;\"><code>24</code> 小时制小时（前置补零）</td>\r\n<td style=\"text-align: left;\"><code>20</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>%I</code></td>\r\n<td style=\"text-align: left;\"><code>12</code> 小时制小时（前置补零）</td>\r\n<td style=\"text-align: left;\"><code>08</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>%j</code></td>\r\n<td style=\"text-align: left;\">一年中第几天（前置补零）</td>\r\n<td style=\"text-align: left;\"><code>343</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>%k</code></td>\r\n<td style=\"text-align: left;\"><code>24</code> 小时制小时（前置空格）</td>\r\n<td style=\"text-align: left;\"><code>20</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>%l</code></td>\r\n<td style=\"text-align: left;\"><code>12</code> 小时制小时（前置空格）</td>\r\n<td style=\"text-align: left;\"><code>8</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>%m</code></td>\r\n<td style=\"text-align: left;\">数字月份（前置补零）</td>\r\n<td style=\"text-align: left;\"><code>12</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>%M</code></td>\r\n<td style=\"text-align: left;\">分钟（前置补零）</td>\r\n<td style=\"text-align: left;\"><code>45</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>%n</code></td>\r\n<td style=\"text-align: left;\">换行</td>\r\n<td style=\"text-align: left;\"></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>%N</code></td>\r\n<td style=\"text-align: left;\">纳秒</td>\r\n<td style=\"text-align: left;\"><code>893369643</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>%p</code></td>\r\n<td style=\"text-align: left;\"><code>PM</code> 或 <code>AM</code></td>\r\n<td style=\"text-align: left;\"><code>PM</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>%P</code></td>\r\n<td style=\"text-align: left;\">小写的 <code>pm</code> 或 <code>am</code></td>\r\n<td style=\"text-align: left;\"><code>pm</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>%r</code></td>\r\n<td style=\"text-align: left;\"></td>\r\n<td style=\"text-align: left;\"><code>08:45:40 PM</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>%R</code></td>\r\n<td style=\"text-align: left;\">24 小时制小时分钟: <code>%H:%M</code></td>\r\n<td style=\"text-align: left;\"><code>20:45</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>%s</code></td>\r\n<td style=\"text-align: left;\">从 <code>1970-01-01 00:00:00 UTC</code> 开始计算的秒数</td>\r\n<td style=\"text-align: left;\"><code>1512823540</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>%S</code></td>\r\n<td style=\"text-align: left;\">秒数（<code>00..60</code>，前置补零）</td>\r\n<td style=\"text-align: left;\"><code>40</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>%t</code></td>\r\n<td style=\"text-align: left;\">制表符号</td>\r\n<td style=\"text-align: left;\"></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>%T</code></td>\r\n<td style=\"text-align: left;\">时间：<code>%H:%M:%S</code></td>\r\n<td style=\"text-align: left;\"><code>20:45:40</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>%u</code></td>\r\n<td style=\"text-align: left;\">数字星期（<code>1-7</code>，<code>1</code> 表示周一）</td>\r\n<td style=\"text-align: left;\"><code>6</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>%U</code></td>\r\n<td style=\"text-align: left;\">周数（周日为星期第一天，前置补零）</td>\r\n<td style=\"text-align: left;\"><code>49</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>%V</code></td>\r\n<td style=\"text-align: left;\"></td>\r\n<td style=\"text-align: left;\"><code>49</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>%w</code></td>\r\n<td style=\"text-align: left;\">数字星期（<code>0-6</code>，<code>0</code> 表示周日）</td>\r\n<td style=\"text-align: left;\"><code>6</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>%W</code></td>\r\n<td style=\"text-align: left;\">周数（周一为星期第一天，前置补零）</td>\r\n<td style=\"text-align: left;\"><code>49</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>%x</code></td>\r\n<td style=\"text-align: left;\">区域日期</td>\r\n<td style=\"text-align: left;\"><code>12/09/2017</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>%X</code></td>\r\n<td style=\"text-align: left;\">区域时间</td>\r\n<td style=\"text-align: left;\"><code>08:45:40 PM</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>%y</code></td>\r\n<td style=\"text-align: left;\">年份后两位（短年份）</td>\r\n<td style=\"text-align: left;\"><code>17</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>%Y</code></td>\r\n<td style=\"text-align: left;\">长年份</td>\r\n<td style=\"text-align: left;\"><code>2017</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>%z</code></td>\r\n<td style=\"text-align: left;\"></td>\r\n<td style=\"text-align: left;\"><code>+0800</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>%:z</code></td>\r\n<td style=\"text-align: left;\"></td>\r\n<td style=\"text-align: left;\"><code>+08:00</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>%::</code></td>\r\n<td style=\"text-align: left;\"></td>\r\n<td style=\"text-align: left;\"><code>+08:00:00</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>%::</code></td>\r\n<td style=\"text-align: left;\"></td>\r\n<td style=\"text-align: left;\"><code>+08</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>%Z</code></td>\r\n<td style=\"text-align: left;\">字母时区简写</td>\r\n<td style=\"text-align: left;\"><code>CST</code></td>\r\n</tr>\r\n</tbody>\r\n</table>"},{"title":"Windows 挂载 Linux 文件系统","date":"2018-02-02T05:35:06.000Z","_content":"\n推荐在 Windows 下利用 SSH 挂载远程 Linux 文件系统及目录的工具：[WinSshFS][win-sshfs-repo]。\n\n虽然可以利用各类 SFTP 软件与服务器间互传文件，但操作感始终没有直接双击打开「我的电脑」里面的盘符来的方便。那么基于 [Dokany][dokany-repo] 开发的 WinSshFS 就能完美满足这个需求。配置比较简单：\n\n1. 安装 Dokany 库\n1. 下载 / 安装 WinSshFS\n\n<!-- more -->\n\n配置完后远程目录的操作基本与本地磁盘相同了，下为 MSYS2 中 `df` 显示的结果：\n\n```\n$ df -h\nFilesystem      Size  Used Avail Use% Mounted on\nD:/MSYS2        391G   48G  344G  13% /\nC:              100G   25G   75G  25% /c\nE:              441G  198G  244G  45% /e\nM:               40G   23G   19G  55% /m\nN:              976G  815G  212G  80% /n\nO:              3.6T  413G  3.4T  11% /o\n```\n\n------------------------------------------------------------------------\n\n仅需注意的是这二者并不是同一作者开发，后者的更新相比于前者有一定迟滞性，所以 Dokany 库不宜下载最新版，具体推荐版本见 WinSshFS 的[发行界面][win-sshfs-release]。当前稳定运行的版本为：\n\n- Dokany: 1.0.5.1000\n- WinSshFS: 1.6.0.14\n\n[win-sshfs-repo]: https://github.com/Foreveryone-cz/win-sshfs\n[dokany-repo]: https://github.com/dokan-dev/dokany\n[win-sshfs-release]: https://github.com/Foreveryone-cz/win-sshfs/releases\n","source":"_posts/mouting-linux-file-systems-on-windows.md","raw":"---\ntitle: Windows 挂载 Linux 文件系统\ndate: 2018-02-02 13:35:06\ntags:\n    - SSH\n    - Windows\n    - Linux\n    - FileSystem\ncategories: Handy Utilities\n---\n\n推荐在 Windows 下利用 SSH 挂载远程 Linux 文件系统及目录的工具：[WinSshFS][win-sshfs-repo]。\n\n虽然可以利用各类 SFTP 软件与服务器间互传文件，但操作感始终没有直接双击打开「我的电脑」里面的盘符来的方便。那么基于 [Dokany][dokany-repo] 开发的 WinSshFS 就能完美满足这个需求。配置比较简单：\n\n1. 安装 Dokany 库\n1. 下载 / 安装 WinSshFS\n\n<!-- more -->\n\n配置完后远程目录的操作基本与本地磁盘相同了，下为 MSYS2 中 `df` 显示的结果：\n\n```\n$ df -h\nFilesystem      Size  Used Avail Use% Mounted on\nD:/MSYS2        391G   48G  344G  13% /\nC:              100G   25G   75G  25% /c\nE:              441G  198G  244G  45% /e\nM:               40G   23G   19G  55% /m\nN:              976G  815G  212G  80% /n\nO:              3.6T  413G  3.4T  11% /o\n```\n\n------------------------------------------------------------------------\n\n仅需注意的是这二者并不是同一作者开发，后者的更新相比于前者有一定迟滞性，所以 Dokany 库不宜下载最新版，具体推荐版本见 WinSshFS 的[发行界面][win-sshfs-release]。当前稳定运行的版本为：\n\n- Dokany: 1.0.5.1000\n- WinSshFS: 1.6.0.14\n\n[win-sshfs-repo]: https://github.com/Foreveryone-cz/win-sshfs\n[dokany-repo]: https://github.com/dokan-dev/dokany\n[win-sshfs-release]: https://github.com/Foreveryone-cz/win-sshfs/releases\n","slug":"mouting-linux-file-systems-on-windows","published":1,"updated":"2023-03-09T16:09:38.255Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u336l001wp4x0uch9lwz5","content":"<p>推荐在 Windows 下利用 SSH 挂载远程 Linux 文件系统及目录的工具：<a href=\"https://github.com/Foreveryone-cz/win-sshfs\" target=\"_blank\" rel=\"noopener\">WinSshFS</a>。</p>\r\n<p>虽然可以利用各类 SFTP 软件与服务器间互传文件，但操作感始终没有直接双击打开「我的电脑」里面的盘符来的方便。那么基于 <a href=\"https://github.com/dokan-dev/dokany\" target=\"_blank\" rel=\"noopener\">Dokany</a> 开发的 WinSshFS 就能完美满足这个需求。配置比较简单：</p>\r\n<ol type=\"1\">\r\n<li>安装 Dokany 库</li>\r\n<li>下载 / 安装 WinSshFS</li>\r\n</ol>\r\n<a id=\"more\"></a>\r\n<p>配置完后远程目录的操作基本与本地磁盘相同了，下为 MSYS2 中 <code>df</code> 显示的结果：</p>\r\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ df -h</span><br><span class=\"line\">Filesystem      Size  Used Avail Use% Mounted on</span><br><span class=\"line\">D:/MSYS2        391G   48G  344G  13% /</span><br><span class=\"line\">C:              100G   25G   75G  25% /c</span><br><span class=\"line\">E:              441G  198G  244G  45% /e</span><br><span class=\"line\">M:               40G   23G   19G  55% /m</span><br><span class=\"line\">N:              976G  815G  212G  80% /n</span><br><span class=\"line\">O:              3.6T  413G  3.4T  11% /o</span><br></pre></td></tr></table></figure>\r\n<hr>\r\n<p>仅需注意的是这二者并不是同一作者开发，后者的更新相比于前者有一定迟滞性，所以 Dokany 库不宜下载最新版，具体推荐版本见 WinSshFS 的<a href=\"https://github.com/Foreveryone-cz/win-sshfs/releases\" target=\"_blank\" rel=\"noopener\">发行界面</a>。当前稳定运行的版本为：</p>\r\n<ul>\r\n<li>Dokany: 1.0.5.1000</li>\r\n<li>WinSshFS: 1.6.0.14</li>\r\n</ul>\r\n","site":{"data":{}},"excerpt":"<p>推荐在 Windows 下利用 SSH 挂载远程 Linux 文件系统及目录的工具：<a href=\"https://github.com/Foreveryone-cz/win-sshfs\" target=\"_blank\" rel=\"noopener\">WinSshFS</a>。</p>\r\n<p>虽然可以利用各类 SFTP 软件与服务器间互传文件，但操作感始终没有直接双击打开「我的电脑」里面的盘符来的方便。那么基于 <a href=\"https://github.com/dokan-dev/dokany\" target=\"_blank\" rel=\"noopener\">Dokany</a> 开发的 WinSshFS 就能完美满足这个需求。配置比较简单：</p>\r\n<ol type=\"1\">\r\n<li>安装 Dokany 库</li>\r\n<li>下载 / 安装 WinSshFS</li>\r\n</ol>","more":"<p>配置完后远程目录的操作基本与本地磁盘相同了，下为 MSYS2 中 <code>df</code> 显示的结果：</p>\r\n<!--�97-->\r\n<hr>\r\n<p>仅需注意的是这二者并不是同一作者开发，后者的更新相比于前者有一定迟滞性，所以 Dokany 库不宜下载最新版，具体推荐版本见 WinSshFS 的<a href=\"https://github.com/Foreveryone-cz/win-sshfs/releases\" target=\"_blank\" rel=\"noopener\">发行界面</a>。当前稳定运行的版本为：</p>\r\n<ul>\r\n<li>Dokany: 1.0.5.1000</li>\r\n<li>WinSshFS: 1.6.0.14</li>\r\n</ul>"},{"title":"Conda 使用小结","date":"2017-12-24T02:59:19.000Z","_content":"\n> Conda 既可以管理包，还是个「环境」管理器。包管理器可以帮助查找以及安装包，但是如果需要使用不同版本的 Python，那就需要有不同的环境。\n<!-- more -->\n\n### 设置国内镜像\n\n没的说，这步十分重要。\n\n```bash\nconda config --add channels https://mirrors.ustc.edu.cn/anaconda/pkgs/free/\nconda config --set show_channel_urls yes\n```\n\n或者直接编辑 `~/.condarc`：\n\n```plain .condarc\nchannels:\n  - https://mirrors.ustc.edu.cn/anaconda/pkgs/main/\n  - https://mirrors.ustc.edu.cn/anaconda/pkgs/free/\n  - https://mirrors.ustc.edu.cn/anaconda/cloud/conda-forge/\n  - defaults\nproxy_servers:\n  http: http://localhost:1888\n  https: https://localhost:1888\nshow_channel_urls: true\nssl_verify: true\n```\n\n### 更新\n\nConda 可以更新自身：`conda update conda`；可以更新 Anaconda：`conda update anacond`；可以更新 `Python`，这里会更新到当前环境下 `Python` 对应的最新版本。\n\n### 环境管理\n\n- 创建环境 snowflakes（目录为 `anaconda/envs/snowflakes` ），并安装包 `Biopython`。（ `--name` 可简写为 `-n`，`--envs` 可简写为 `-e` ）\n  ```bash\n  conda create --name snowflakes biopython\n  ```\n- 创建一个名为 bunnies 的环境，使用 `python3.5` 作为 Python 环境，并安装包 `Astroid`，`Babel`\n  ```bash\n  conda create --name bunnies python=3.5 astroid babel\n  ```\n- 激活某个环境 / 取消激活 (返回默认的 `root` 环境)，Windows 下无需 `source`\n  ```bash\n  source activate snowflakes\n  source deactivate\n  ```\n- 列出所有环境，其中 `*` 表示当前激活环境\n  ```bash\n  conda info --envs\n  ```\n- 克隆环境。基于 snowflakes 克隆出新的 flowers 环境\n  ```bash\n  conda create --name flowers --clone snowflakes\n  ```\n- 删除环境\n  ```bash\n  conda remove --name flowers --all\n  ```\n\n### Python 管理\n\n- 检查可用 Python 版本，其中 `--full-name` 为全字匹配，去掉即为包含查询\n  ```bash\n  conda search --full-name python\n  ```\n\n### 包管理\n\n- 将 Beautiful Soup 安装至环境 bunnies\n  ```bash\n  conda install --name bunnies beautifulsoup4\n  ```\n- 删除包\n  ```bash\n  conda remove --name bunnies iopro\n  ```\n\n### 补充\n\n- 从 **Anaconda 4.1.0** 开始，一个特别的包 `nb_conda_kernels` 能够自动检测 Conda 的所有环境并注册这些核到 Jupyter Notebook 里面\n- Windows 中的 Anaconda 新建的新环境安装完 `anaconda` 包之后才会在开始程序中出现快捷方式\n- `conda list` 可能出现两个 `pip` 解决方案：\n  {% codeblock lang:bash %}\n  pip uninstall pip\n  conda install pip -f\n  conda update pip\n  {% endcodeblock %}\n","source":"_posts/notes-on-conda.md","raw":"---\ntitle: Conda 使用小结\ndate: 2017-12-24 10:59:19\ntags:\n    - Conda\n    - Anaconda\n    - Python\ncategories: Development\n---\n\n> Conda 既可以管理包，还是个「环境」管理器。包管理器可以帮助查找以及安装包，但是如果需要使用不同版本的 Python，那就需要有不同的环境。\n<!-- more -->\n\n### 设置国内镜像\n\n没的说，这步十分重要。\n\n```bash\nconda config --add channels https://mirrors.ustc.edu.cn/anaconda/pkgs/free/\nconda config --set show_channel_urls yes\n```\n\n或者直接编辑 `~/.condarc`：\n\n```plain .condarc\nchannels:\n  - https://mirrors.ustc.edu.cn/anaconda/pkgs/main/\n  - https://mirrors.ustc.edu.cn/anaconda/pkgs/free/\n  - https://mirrors.ustc.edu.cn/anaconda/cloud/conda-forge/\n  - defaults\nproxy_servers:\n  http: http://localhost:1888\n  https: https://localhost:1888\nshow_channel_urls: true\nssl_verify: true\n```\n\n### 更新\n\nConda 可以更新自身：`conda update conda`；可以更新 Anaconda：`conda update anacond`；可以更新 `Python`，这里会更新到当前环境下 `Python` 对应的最新版本。\n\n### 环境管理\n\n- 创建环境 snowflakes（目录为 `anaconda/envs/snowflakes` ），并安装包 `Biopython`。（ `--name` 可简写为 `-n`，`--envs` 可简写为 `-e` ）\n  ```bash\n  conda create --name snowflakes biopython\n  ```\n- 创建一个名为 bunnies 的环境，使用 `python3.5` 作为 Python 环境，并安装包 `Astroid`，`Babel`\n  ```bash\n  conda create --name bunnies python=3.5 astroid babel\n  ```\n- 激活某个环境 / 取消激活 (返回默认的 `root` 环境)，Windows 下无需 `source`\n  ```bash\n  source activate snowflakes\n  source deactivate\n  ```\n- 列出所有环境，其中 `*` 表示当前激活环境\n  ```bash\n  conda info --envs\n  ```\n- 克隆环境。基于 snowflakes 克隆出新的 flowers 环境\n  ```bash\n  conda create --name flowers --clone snowflakes\n  ```\n- 删除环境\n  ```bash\n  conda remove --name flowers --all\n  ```\n\n### Python 管理\n\n- 检查可用 Python 版本，其中 `--full-name` 为全字匹配，去掉即为包含查询\n  ```bash\n  conda search --full-name python\n  ```\n\n### 包管理\n\n- 将 Beautiful Soup 安装至环境 bunnies\n  ```bash\n  conda install --name bunnies beautifulsoup4\n  ```\n- 删除包\n  ```bash\n  conda remove --name bunnies iopro\n  ```\n\n### 补充\n\n- 从 **Anaconda 4.1.0** 开始，一个特别的包 `nb_conda_kernels` 能够自动检测 Conda 的所有环境并注册这些核到 Jupyter Notebook 里面\n- Windows 中的 Anaconda 新建的新环境安装完 `anaconda` 包之后才会在开始程序中出现快捷方式\n- `conda list` 可能出现两个 `pip` 解决方案：\n  {% codeblock lang:bash %}\n  pip uninstall pip\n  conda install pip -f\n  conda update pip\n  {% endcodeblock %}\n","slug":"notes-on-conda","published":1,"updated":"2023-03-09T16:09:38.257Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u336m001zp4x0zlntywl7","content":"<blockquote>\r\n<p>Conda 既可以管理包，还是个「环境」管理器。包管理器可以帮助查找以及安装包，但是如果需要使用不同版本的 Python，那就需要有不同的环境。 <a id=\"more\"></a></p>\r\n</blockquote>\r\n<h3 id=\"设置国内镜像\">设置国内镜像</h3>\r\n<p>没的说，这步十分重要。</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda config --add channels https://mirrors.ustc.edu.cn/anaconda/pkgs/free/</span><br><span class=\"line\">conda config --<span class=\"built_in\">set</span> show_channel_urls yes</span><br></pre></td></tr></table></figure>\r\n<p>或者直接编辑 <code>~/.condarc</code>：</p>\r\n<figure class=\"highlight plain\"><figcaption><span>.condarc</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">channels:</span><br><span class=\"line\">  - https://mirrors.ustc.edu.cn/anaconda/pkgs/main/</span><br><span class=\"line\">  - https://mirrors.ustc.edu.cn/anaconda/pkgs/free/</span><br><span class=\"line\">  - https://mirrors.ustc.edu.cn/anaconda/cloud/conda-forge/</span><br><span class=\"line\">  - defaults</span><br><span class=\"line\">proxy_servers:</span><br><span class=\"line\">  http: http://localhost:1888</span><br><span class=\"line\">  https: https://localhost:1888</span><br><span class=\"line\">show_channel_urls: true</span><br><span class=\"line\">ssl_verify: true</span><br></pre></td></tr></table></figure>\r\n<h3 id=\"更新\">更新</h3>\r\n<p>Conda 可以更新自身：<code>conda update conda</code>；可以更新 Anaconda：<code>conda update anacond</code>；可以更新 <code>Python</code>，这里会更新到当前环境下 <code>Python</code> 对应的最新版本。</p>\r\n<h3 id=\"环境管理\">环境管理</h3>\r\n<ul>\r\n<li><p>创建环境 snowflakes（目录为 <code>anaconda/envs/snowflakes</code> ），并安装包 <code>Biopython</code>。（ <code>--name</code> 可简写为 <code>-n</code>，<code>--envs</code> 可简写为 <code>-e</code> ） <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda create --name snowflakes biopython</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>创建一个名为 bunnies 的环境，使用 <code>python3.5</code> 作为 Python 环境，并安装包 <code>Astroid</code>，<code>Babel</code> <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda create --name bunnies python=3.5 astroid babel</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>激活某个环境 / 取消激活 (返回默认的 <code>root</code> 环境)，Windows 下无需 <code>source</code> <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> activate snowflakes</span><br><span class=\"line\"><span class=\"built_in\">source</span> deactivate</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>列出所有环境，其中 <code>*</code> 表示当前激活环境 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda info --envs</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>克隆环境。基于 snowflakes 克隆出新的 flowers 环境 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda create --name flowers --<span class=\"built_in\">clone</span> snowflakes</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>删除环境 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda remove --name flowers --all</span><br></pre></td></tr></table></figure></p></li>\r\n</ul>\r\n<h3 id=\"python-管理\">Python 管理</h3>\r\n<ul>\r\n<li>检查可用 Python 版本，其中 <code>--full-name</code> 为全字匹配，去掉即为包含查询 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda search --full-name python</span><br></pre></td></tr></table></figure></li>\r\n</ul>\r\n<h3 id=\"包管理\">包管理</h3>\r\n<ul>\r\n<li><p>将 Beautiful Soup 安装至环境 bunnies <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda install --name bunnies beautifulsoup4</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>删除包 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda remove --name bunnies iopro</span><br></pre></td></tr></table></figure></p></li>\r\n</ul>\r\n<h3 id=\"补充\">补充</h3>\r\n<ul>\r\n<li>从 <strong>Anaconda 4.1.0</strong> 开始，一个特别的包 <code>nb_conda_kernels</code> 能够自动检测 Conda 的所有环境并注册这些核到 Jupyter Notebook 里面</li>\r\n<li>Windows 中的 Anaconda 新建的新环境安装完 <code>anaconda</code> 包之后才会在开始程序中出现快捷方式</li>\r\n<li><code>conda list</code> 可能出现两个 <code>pip</code> 解决方案： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip uninstall pip</span><br><span class=\"line\">conda install pip -f</span><br><span class=\"line\">conda update pip</span><br></pre></td></tr></table></figure></li>\r\n</ul>\r\n","site":{"data":{}},"excerpt":"<blockquote>\r\n<p>Conda 既可以管理包，还是个「环境」管理器。包管理器可以帮助查找以及安装包，但是如果需要使用不同版本的 Python，那就需要有不同的环境。","more":"</p>\r\n</blockquote>\r\n<h3 id=\"设置国内镜像\">设置国内镜像</h3>\r\n<p>没的说，这步十分重要。</p>\r\n<!--�98-->\r\n<p>或者直接编辑 <code>~/.condarc</code>：</p>\r\n<!--�99-->\r\n<h3 id=\"更新\">更新</h3>\r\n<p>Conda 可以更新自身：<code>conda update conda</code>；可以更新 Anaconda：<code>conda update anacond</code>；可以更新 <code>Python</code>，这里会更新到当前环境下 <code>Python</code> 对应的最新版本。</p>\r\n<h3 id=\"环境管理\">环境管理</h3>\r\n<ul>\r\n<li><p>创建环境 snowflakes（目录为 <code>anaconda/envs/snowflakes</code> ），并安装包 <code>Biopython</code>。（ <code>--name</code> 可简写为 <code>-n</code>，<code>--envs</code> 可简写为 <code>-e</code> ） <!--�100--></p></li>\r\n<li><p>创建一个名为 bunnies 的环境，使用 <code>python3.5</code> 作为 Python 环境，并安装包 <code>Astroid</code>，<code>Babel</code> <!--�101--></p></li>\r\n<li><p>激活某个环境 / 取消激活 (返回默认的 <code>root</code> 环境)，Windows 下无需 <code>source</code> <!--�102--></p></li>\r\n<li><p>列出所有环境，其中 <code>*</code> 表示当前激活环境 <!--�103--></p></li>\r\n<li><p>克隆环境。基于 snowflakes 克隆出新的 flowers 环境 <!--�104--></p></li>\r\n<li><p>删除环境 <!--�105--></p></li>\r\n</ul>\r\n<h3 id=\"python-管理\">Python 管理</h3>\r\n<ul>\r\n<li>检查可用 Python 版本，其中 <code>--full-name</code> 为全字匹配，去掉即为包含查询 <!--�106--></li>\r\n</ul>\r\n<h3 id=\"包管理\">包管理</h3>\r\n<ul>\r\n<li><p>将 Beautiful Soup 安装至环境 bunnies <!--�107--></p></li>\r\n<li><p>删除包 <!--�108--></p></li>\r\n</ul>\r\n<h3 id=\"补充\">补充</h3>\r\n<ul>\r\n<li>从 <strong>Anaconda 4.1.0</strong> 开始，一个特别的包 <code>nb_conda_kernels</code> 能够自动检测 Conda 的所有环境并注册这些核到 Jupyter Notebook 里面</li>\r\n<li>Windows 中的 Anaconda 新建的新环境安装完 <code>anaconda</code> 包之后才会在开始程序中出现快捷方式</li>\r\n<li><code>conda list</code> 可能出现两个 <code>pip</code> 解决方案： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip uninstall pip</span><br><span class=\"line\">conda install pip -f</span><br><span class=\"line\">conda update pip</span><br></pre></td></tr></table></figure></li>\r\n</ul>"},{"title":"数学建模笔记 —— 对变化进行建模","date":"2018-07-03T13:09:16.000Z","mathjax":true,"_content":"\n## 离散流行病模型\n\n考虑这样一个社区，有三类人群：易感者、已感者和移出者。我们对流行病模型作出如下假设：\n\n- 没有人进出该社区，且社区不和外界接触，即社区内的总人数保持不变\n- 每个人都是易感者 $S$、已感者 $I$、移出者 $R$。也就是说每个人都能感染这种流感，当前已经染上这种流感的人能够传播流感，已经得过这种流感的人不会再得此病\n- 一开始，每人要么是已感者，要么是易感者\n- 这种流感的平均持续时间为 $1/c$ 周，在此期间此人被认为是已感者且能传播流感\n- 模型时间周期按周计\n\n<!-- more -->\n\n用差分方程描述这个动力系统模型，首先假设定义如下：\n\n- $S(n)$：$n$ 个周期后易感者人数\n- $I(n)$：$n$ 个周期后已感者人数\n- $R(n)$：$n$ 个周期后移出者人数\n\n从模型假设出发，既然流感平均持续 $1/c$ 周，也就是说每 $1/c$ 周的时间就有 $1$ 人成为移出者，从该系统移出。因计量周期为周，所以也可理解成每周移出 $c \\times 100 \\%$ 的已感者。所以建立关于移出者的方程\n\n$$\n    R(n+1) = R(n) + c I(n)\n    \\tag{R}\n    \\label{R}\n$$\n\n对于已感者人数 $I(n)$ 的变化，显然来自两个方面：其一来自新的一批被传染的易感者，其二由前所述，每周都会从系统移出已感者。细化这个过程，易感者由于接触已感者而患病，若引入**传播系数** $a$，则新的一批被感染得病的人数为 $a S(n) I(n)$，二者乘积的形式表明了其之间的相互作用。得到已感者差分方程\n\n$$\n    I(n+1) = I(n) - c I(n) + a S(n) I(n)\n    \\tag{I}\n    \\label{I}\n$$\n\n最后关于易感者的关系就很容易了，由于系统人数保持不变，已感者被移出后不会再患病，即不会转化为易感者；移出者的变化仅来源于已感者，故和易感者无直接联系。所以仅建立易感者与已感者之间的关系即可。\n\n$$\n    S(n+1) = S(n) - a S(n) I(n)\n    \\tag{S}\n    \\label{S}\n$$\n\n给定初始条件，假设社区共有 $1000$ 人，移出率 $c=0.60$，一开始（第 $0$ 周）便有 $5$ 人患病，第 $1$ 周有 $9$ 人患病，即 $I(0) = 5$，$S(0) = 995$，$R(0) = 0$，$I(1) = 9$，由式 $\\eqref{I}$ 即可解得 $a \\approx 0.001407$。\n故由以上方程组及初值构成的动力系统（SIR 模型）可进行迭代求解，并通过图形观察趋势。Matlab 代码如下：\n\n```matlab epidemic_model.m\nN = 1000;\nI0 = 5;\nI1 = 9;\nshiftout = 0.6;\niters = 25;\nres = epidemic(N, I0, I1, shiftout, iters);\n\ntbl = cell2table(num2cell(res), 'VariableNames', {'Rn', 'In', 'Sn'});\nwritetable(tbl, 'epidemic.csv');\n\np = plot(0:iters-1, res, 'LineWidth', 1.1, 'MarkerSize', 4.5);\np(1).Marker = '*';\np(2).Marker = 'x';\np(3).Marker = '^';\n\nset(gca, ...\n    'FontName', 'Euclid', ...\n    'FontWeight', 'Bold', ...\n    'FontSize', 9, ...\n    'box', 'off', ...\n    'color', 'none');\ntitle('\\bf Dynamic System of SIR Model', ...\n      'FontSize', 11, ...\n      'Interpreter', 'latex');\nlegend(gca, ...\n       {'$R(n)$', '$I(n)$', '$S(n)$'}, ...\n       'FontSize', 8, ...\n       'Interpreter', 'latex', 'Location', 'best');\nset(gcf, ...\n    'units', 'points', ...\n    'position', [350, 200, 320, 180]);\nsaveas(gcf, 'epidemic.svg');\n\nfunction res = epidemic(N, I0, I1, shiftout, iters)\n    % 返回由 R(n), I(n), S(n) 构成的数组\n\n    res = zeros(iters, 3);\n    a = (I1 - (1-shiftout) * I0) / (I0 * (N - I0));\n    res(1, :) = [0 I0 N-I0];\n    for k = 2:iters\n        res(k, 1) = res(k-1, 1) + shiftout * res(k-1, 2);\n        res(k, 2) = (1-shiftout) * res(k-1, 2) + a * res(k-1, 2) * res(k-1, 3);\n        res(k, 3) = res(k-1, 3) - a * res(k-1, 2) * res(k-1, 3);\n    end\nend\n```\n\n生成的 $R(n), I(n), S(n)$ 表格如下：\n\n\\begin{array}{cccc|cccc}\n    \\hline\n    \\text{week} & R(n)       & I(n)       & S(n)       & \\text{week} & R(n)       & I(n)      & S(n)  \\\\\n    \\hline\n    {0}  & {0}        & {5}        & {995}      & {12} & {812.3671} & {78.9598} & {108.6731}  \\\\\n    {1}  & {3}        & {9}        & {988}      & {13} & {859.7430} & {43.6574} & {96.5996} \\\\\n    {2}  & {8.4000}   & {16.1114}  & {975.4886} & {14} & {885.9374} & {23.3968} & {90.6657} \\\\\n    {3}  & {18.0668}  & {28.5581}  & {953.3751} & {15} & {899.9755} & {12.3435} & {87.6810} \\\\\n    {4}  & {35.2017}  & {49.7321}  & {915.0662} & {16} & {907.3816} & {6.4602}  & {86.1582} \\\\\n    {5}  & {65.0409}  & {83.9244}  & {851.0347} & {17} & {911.2577} & {3.3672}  & {85.3750} \\\\\n    {6}  & {115.3955} & {134.0638} & {750.5407} & {18} & {913.2781} & {1.7514}  & {84.9705} \\\\\n    {7}  & {195.8338} & {195.2018} & {608.9644} & {19} & {914.3289} & {0.9099}  & {84.7612} \\\\\n    {8}  & {312.9549} & {245.3364} & {441.7087} & {20} & {914.8749} & {0.4725}  & {84.6526} \\\\\n    {9}  & {460.1567} & {250.6110} & {289.2323} & {21} & {915.1584} & {0.2453}  & {84.5964} \\\\\n    {10} & {610.5233} & {202.2331} & {187.2436} & {22} & {915.3055} & {0.1273}  & {84.5672} \\\\\n    {11} & {731.8632} & {134.1732} & {133.9636} & {23} & {915.3819} & {0.0661}  & {84.5520} \\\\\n    \\hline\n\\end{array}\n\nSIR 模型动力系统曲线如下：\n\n<img src=\"/img/epidemic.svg\" width=\"50%\">\n\n> 注：尽管设置了 `set(gca, 'color', 'none')`，但 Matlab (R2016b) 导出的 SVG 格式图形仍然会有背景色，且图形标题位置不易调整。故干脆用 [Inkscape][ink] 对图形进行细加工。\n\n从图形可以看出，给定移出率（$60\\%$）以及模型初值下，这种流感流行的高峰处于第 $9$ 周左右，已感人数为 $250.6$，在第 $17$ 周后略小于 $85$ 人未染上这种流感。\n\n### 敏感性分析\n\n下面考察模型对于参数及初始条件的敏感性。分别基于以下初值条件进行实验：\n\n\\begin{array}{c|cccc}\n      & N    & c   & I(0) & I(1)  \\\\\n    \\hline\n    \\text{I}   & 1000 & 3/5 & 5 & 15   \\\\\n    \\text{II}  & 1000 & 1   & 5 & 15  \\\\\n    \\text{III} & 1000 & 1/4 & 5 & 15  \\\\\n    \\text{IV}  & 4000 & 1/4 & 5 & 35\n\\end{array}\n\n实验过程中发现会某些时间周期会出现人数为负或者超过总社区人数的情况，故在函数 `epidemic` 中对其加以限定，使其在正常范围内变化。注意这里不能简单地处理为 $\\max\\{\\min\\{x, N\\}, 0\\}$，否则可能导致三者加和不为 $N$ 的情况出现。\n\n```matlab\nres(k, 1) = min(res(k-1, 1) + shiftout * res(k-1, 2), N);\nres(k, 3) = max(min(res(k-1, 3) - a * res(k-1, 2) * res(k-1, 3), N), 0);\nres(k, 2) = max(min((1-shiftout) * res(k-1, 2) + ...\n                    a * res(k-1, 2) * res(k-1, 3), ...\n                    N - res(k, 1) - res(k, 2)), 0);\n```\n\n对比结果如下：\n\n<img src=\"/img/epidemic-2x2.svg\" width=\"80%\">\n\n四种情形最终的收敛情况相同，即易感者逐渐降至为 $0$，即全军覆没无一幸免；已感者呈现先增后降的趋势；移出者逐渐累积，直至流行病完全治愈。具体来看，移出率越高，说明该流行病越容易被治愈，所以感染人数峰值越低，流行病退潮时间越早；$I(1) - I(0)$ 越大，即传播系数越高，流感传播速度更快，短时期内感染人数上升速率更大，退潮时间也越长。\n\n考察社区总人数是否对模型敏感性有影响，针对 $c=1$, $I(0)=5$, $I(1)=10$, $N=500$, $1000$, $5000$, $10000$ 四种情况作出变化曲线：\n\n<img src=\"/img/epidemic-2x2-by-n.svg\" width=\"80%\">\n\n显然，在其他因素相同的情况下，随社区总人数增加，SIR 模型曲线整体“向右移动”，也就是说感染人数到达峰值所需时间增长，且相应的退潮时间也越长。由于当 $I(1) - I(0)$ 不变的情况下，随总人数增加，可以看成传播系数 $a$ 降低，所以整个模型的变化会放缓。\n\n\n[ink]: https://inkscape.org\n","source":"_posts/notes-on-learning-mathematical-modeling-based-on-variation.md","raw":"---\ntitle: 数学建模笔记 —— 对变化进行建模\ndate: 2018-07-03 21:09:16\ntags:\n    - Difference\n    - Matlab\ncategories: Mathematical Modeling\nmathjax: true\n---\n\n## 离散流行病模型\n\n考虑这样一个社区，有三类人群：易感者、已感者和移出者。我们对流行病模型作出如下假设：\n\n- 没有人进出该社区，且社区不和外界接触，即社区内的总人数保持不变\n- 每个人都是易感者 $S$、已感者 $I$、移出者 $R$。也就是说每个人都能感染这种流感，当前已经染上这种流感的人能够传播流感，已经得过这种流感的人不会再得此病\n- 一开始，每人要么是已感者，要么是易感者\n- 这种流感的平均持续时间为 $1/c$ 周，在此期间此人被认为是已感者且能传播流感\n- 模型时间周期按周计\n\n<!-- more -->\n\n用差分方程描述这个动力系统模型，首先假设定义如下：\n\n- $S(n)$：$n$ 个周期后易感者人数\n- $I(n)$：$n$ 个周期后已感者人数\n- $R(n)$：$n$ 个周期后移出者人数\n\n从模型假设出发，既然流感平均持续 $1/c$ 周，也就是说每 $1/c$ 周的时间就有 $1$ 人成为移出者，从该系统移出。因计量周期为周，所以也可理解成每周移出 $c \\times 100 \\%$ 的已感者。所以建立关于移出者的方程\n\n$$\n    R(n+1) = R(n) + c I(n)\n    \\tag{R}\n    \\label{R}\n$$\n\n对于已感者人数 $I(n)$ 的变化，显然来自两个方面：其一来自新的一批被传染的易感者，其二由前所述，每周都会从系统移出已感者。细化这个过程，易感者由于接触已感者而患病，若引入**传播系数** $a$，则新的一批被感染得病的人数为 $a S(n) I(n)$，二者乘积的形式表明了其之间的相互作用。得到已感者差分方程\n\n$$\n    I(n+1) = I(n) - c I(n) + a S(n) I(n)\n    \\tag{I}\n    \\label{I}\n$$\n\n最后关于易感者的关系就很容易了，由于系统人数保持不变，已感者被移出后不会再患病，即不会转化为易感者；移出者的变化仅来源于已感者，故和易感者无直接联系。所以仅建立易感者与已感者之间的关系即可。\n\n$$\n    S(n+1) = S(n) - a S(n) I(n)\n    \\tag{S}\n    \\label{S}\n$$\n\n给定初始条件，假设社区共有 $1000$ 人，移出率 $c=0.60$，一开始（第 $0$ 周）便有 $5$ 人患病，第 $1$ 周有 $9$ 人患病，即 $I(0) = 5$，$S(0) = 995$，$R(0) = 0$，$I(1) = 9$，由式 $\\eqref{I}$ 即可解得 $a \\approx 0.001407$。\n故由以上方程组及初值构成的动力系统（SIR 模型）可进行迭代求解，并通过图形观察趋势。Matlab 代码如下：\n\n```matlab epidemic_model.m\nN = 1000;\nI0 = 5;\nI1 = 9;\nshiftout = 0.6;\niters = 25;\nres = epidemic(N, I0, I1, shiftout, iters);\n\ntbl = cell2table(num2cell(res), 'VariableNames', {'Rn', 'In', 'Sn'});\nwritetable(tbl, 'epidemic.csv');\n\np = plot(0:iters-1, res, 'LineWidth', 1.1, 'MarkerSize', 4.5);\np(1).Marker = '*';\np(2).Marker = 'x';\np(3).Marker = '^';\n\nset(gca, ...\n    'FontName', 'Euclid', ...\n    'FontWeight', 'Bold', ...\n    'FontSize', 9, ...\n    'box', 'off', ...\n    'color', 'none');\ntitle('\\bf Dynamic System of SIR Model', ...\n      'FontSize', 11, ...\n      'Interpreter', 'latex');\nlegend(gca, ...\n       {'$R(n)$', '$I(n)$', '$S(n)$'}, ...\n       'FontSize', 8, ...\n       'Interpreter', 'latex', 'Location', 'best');\nset(gcf, ...\n    'units', 'points', ...\n    'position', [350, 200, 320, 180]);\nsaveas(gcf, 'epidemic.svg');\n\nfunction res = epidemic(N, I0, I1, shiftout, iters)\n    % 返回由 R(n), I(n), S(n) 构成的数组\n\n    res = zeros(iters, 3);\n    a = (I1 - (1-shiftout) * I0) / (I0 * (N - I0));\n    res(1, :) = [0 I0 N-I0];\n    for k = 2:iters\n        res(k, 1) = res(k-1, 1) + shiftout * res(k-1, 2);\n        res(k, 2) = (1-shiftout) * res(k-1, 2) + a * res(k-1, 2) * res(k-1, 3);\n        res(k, 3) = res(k-1, 3) - a * res(k-1, 2) * res(k-1, 3);\n    end\nend\n```\n\n生成的 $R(n), I(n), S(n)$ 表格如下：\n\n\\begin{array}{cccc|cccc}\n    \\hline\n    \\text{week} & R(n)       & I(n)       & S(n)       & \\text{week} & R(n)       & I(n)      & S(n)  \\\\\n    \\hline\n    {0}  & {0}        & {5}        & {995}      & {12} & {812.3671} & {78.9598} & {108.6731}  \\\\\n    {1}  & {3}        & {9}        & {988}      & {13} & {859.7430} & {43.6574} & {96.5996} \\\\\n    {2}  & {8.4000}   & {16.1114}  & {975.4886} & {14} & {885.9374} & {23.3968} & {90.6657} \\\\\n    {3}  & {18.0668}  & {28.5581}  & {953.3751} & {15} & {899.9755} & {12.3435} & {87.6810} \\\\\n    {4}  & {35.2017}  & {49.7321}  & {915.0662} & {16} & {907.3816} & {6.4602}  & {86.1582} \\\\\n    {5}  & {65.0409}  & {83.9244}  & {851.0347} & {17} & {911.2577} & {3.3672}  & {85.3750} \\\\\n    {6}  & {115.3955} & {134.0638} & {750.5407} & {18} & {913.2781} & {1.7514}  & {84.9705} \\\\\n    {7}  & {195.8338} & {195.2018} & {608.9644} & {19} & {914.3289} & {0.9099}  & {84.7612} \\\\\n    {8}  & {312.9549} & {245.3364} & {441.7087} & {20} & {914.8749} & {0.4725}  & {84.6526} \\\\\n    {9}  & {460.1567} & {250.6110} & {289.2323} & {21} & {915.1584} & {0.2453}  & {84.5964} \\\\\n    {10} & {610.5233} & {202.2331} & {187.2436} & {22} & {915.3055} & {0.1273}  & {84.5672} \\\\\n    {11} & {731.8632} & {134.1732} & {133.9636} & {23} & {915.3819} & {0.0661}  & {84.5520} \\\\\n    \\hline\n\\end{array}\n\nSIR 模型动力系统曲线如下：\n\n<img src=\"/img/epidemic.svg\" width=\"50%\">\n\n> 注：尽管设置了 `set(gca, 'color', 'none')`，但 Matlab (R2016b) 导出的 SVG 格式图形仍然会有背景色，且图形标题位置不易调整。故干脆用 [Inkscape][ink] 对图形进行细加工。\n\n从图形可以看出，给定移出率（$60\\%$）以及模型初值下，这种流感流行的高峰处于第 $9$ 周左右，已感人数为 $250.6$，在第 $17$ 周后略小于 $85$ 人未染上这种流感。\n\n### 敏感性分析\n\n下面考察模型对于参数及初始条件的敏感性。分别基于以下初值条件进行实验：\n\n\\begin{array}{c|cccc}\n      & N    & c   & I(0) & I(1)  \\\\\n    \\hline\n    \\text{I}   & 1000 & 3/5 & 5 & 15   \\\\\n    \\text{II}  & 1000 & 1   & 5 & 15  \\\\\n    \\text{III} & 1000 & 1/4 & 5 & 15  \\\\\n    \\text{IV}  & 4000 & 1/4 & 5 & 35\n\\end{array}\n\n实验过程中发现会某些时间周期会出现人数为负或者超过总社区人数的情况，故在函数 `epidemic` 中对其加以限定，使其在正常范围内变化。注意这里不能简单地处理为 $\\max\\{\\min\\{x, N\\}, 0\\}$，否则可能导致三者加和不为 $N$ 的情况出现。\n\n```matlab\nres(k, 1) = min(res(k-1, 1) + shiftout * res(k-1, 2), N);\nres(k, 3) = max(min(res(k-1, 3) - a * res(k-1, 2) * res(k-1, 3), N), 0);\nres(k, 2) = max(min((1-shiftout) * res(k-1, 2) + ...\n                    a * res(k-1, 2) * res(k-1, 3), ...\n                    N - res(k, 1) - res(k, 2)), 0);\n```\n\n对比结果如下：\n\n<img src=\"/img/epidemic-2x2.svg\" width=\"80%\">\n\n四种情形最终的收敛情况相同，即易感者逐渐降至为 $0$，即全军覆没无一幸免；已感者呈现先增后降的趋势；移出者逐渐累积，直至流行病完全治愈。具体来看，移出率越高，说明该流行病越容易被治愈，所以感染人数峰值越低，流行病退潮时间越早；$I(1) - I(0)$ 越大，即传播系数越高，流感传播速度更快，短时期内感染人数上升速率更大，退潮时间也越长。\n\n考察社区总人数是否对模型敏感性有影响，针对 $c=1$, $I(0)=5$, $I(1)=10$, $N=500$, $1000$, $5000$, $10000$ 四种情况作出变化曲线：\n\n<img src=\"/img/epidemic-2x2-by-n.svg\" width=\"80%\">\n\n显然，在其他因素相同的情况下，随社区总人数增加，SIR 模型曲线整体“向右移动”，也就是说感染人数到达峰值所需时间增长，且相应的退潮时间也越长。由于当 $I(1) - I(0)$ 不变的情况下，随总人数增加，可以看成传播系数 $a$ 降低，所以整个模型的变化会放缓。\n\n\n[ink]: https://inkscape.org\n","slug":"notes-on-learning-mathematical-modeling-based-on-variation","published":1,"updated":"2023-03-09T16:09:38.259Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u336n0022p4x0jrt3qs18","content":"<h2 id=\"离散流行病模型\">离散流行病模型</h2>\r\n<p>考虑这样一个社区，有三类人群：易感者、已感者和移出者。我们对流行病模型作出如下假设：</p>\r\n<ul>\r\n<li>没有人进出该社区，且社区不和外界接触，即社区内的总人数保持不变</li>\r\n<li>每个人都是易感者 <span class=\"math inline\">\\(S\\)</span>、已感者 <span class=\"math inline\">\\(I\\)</span>、移出者 <span class=\"math inline\">\\(R\\)</span>。也就是说每个人都能感染这种流感，当前已经染上这种流感的人能够传播流感，已经得过这种流感的人不会再得此病</li>\r\n<li>一开始，每人要么是已感者，要么是易感者</li>\r\n<li>这种流感的平均持续时间为 <span class=\"math inline\">\\(1/c\\)</span> 周，在此期间此人被认为是已感者且能传播流感</li>\r\n<li>模型时间周期按周计</li>\r\n</ul>\r\n<a id=\"more\"></a>\r\n<p>用差分方程描述这个动力系统模型，首先假设定义如下：</p>\r\n<ul>\r\n<li><span class=\"math inline\">\\(S(n)\\)</span>：<span class=\"math inline\">\\(n\\)</span> 个周期后易感者人数</li>\r\n<li><span class=\"math inline\">\\(I(n)\\)</span>：<span class=\"math inline\">\\(n\\)</span> 个周期后已感者人数</li>\r\n<li><span class=\"math inline\">\\(R(n)\\)</span>：<span class=\"math inline\">\\(n\\)</span> 个周期后移出者人数</li>\r\n</ul>\r\n<p>从模型假设出发，既然流感平均持续 <span class=\"math inline\">\\(1/c\\)</span> 周，也就是说每 <span class=\"math inline\">\\(1/c\\)</span> 周的时间就有 <span class=\"math inline\">\\(1\\)</span> 人成为移出者，从该系统移出。因计量周期为周，所以也可理解成每周移出 <span class=\"math inline\">\\(c \\times 100 \\%\\)</span> 的已感者。所以建立关于移出者的方程</p>\r\n<p><span class=\"math display\">\\[\r\n    R(n+1) = R(n) + c I(n)\r\n    \\tag{R}\r\n    \\label{R}\r\n\\]</span></p>\r\n<p>对于已感者人数 <span class=\"math inline\">\\(I(n)\\)</span> 的变化，显然来自两个方面：其一来自新的一批被传染的易感者，其二由前所述，每周都会从系统移出已感者。细化这个过程，易感者由于接触已感者而患病，若引入<strong>传播系数</strong> <span class=\"math inline\">\\(a\\)</span>，则新的一批被感染得病的人数为 <span class=\"math inline\">\\(a S(n) I(n)\\)</span>，二者乘积的形式表明了其之间的相互作用。得到已感者差分方程</p>\r\n<p><span class=\"math display\">\\[\r\n    I(n+1) = I(n) - c I(n) + a S(n) I(n)\r\n    \\tag{I}\r\n    \\label{I}\r\n\\]</span></p>\r\n<p>最后关于易感者的关系就很容易了，由于系统人数保持不变，已感者被移出后不会再患病，即不会转化为易感者；移出者的变化仅来源于已感者，故和易感者无直接联系。所以仅建立易感者与已感者之间的关系即可。</p>\r\n<p><span class=\"math display\">\\[\r\n    S(n+1) = S(n) - a S(n) I(n)\r\n    \\tag{S}\r\n    \\label{S}\r\n\\]</span></p>\r\n<p>给定初始条件，假设社区共有 <span class=\"math inline\">\\(1000\\)</span> 人，移出率 <span class=\"math inline\">\\(c=0.60\\)</span>，一开始（第 <span class=\"math inline\">\\(0\\)</span> 周）便有 <span class=\"math inline\">\\(5\\)</span> 人患病，第 <span class=\"math inline\">\\(1\\)</span> 周有 <span class=\"math inline\">\\(9\\)</span> 人患病，即 <span class=\"math inline\">\\(I(0) = 5\\)</span>，<span class=\"math inline\">\\(S(0) = 995\\)</span>，<span class=\"math inline\">\\(R(0) = 0\\)</span>，<span class=\"math inline\">\\(I(1) = 9\\)</span>，由式 <span class=\"math inline\">\\(\\eqref{I}\\)</span> 即可解得 <span class=\"math inline\">\\(a \\approx 0.001407\\)</span>。 故由以上方程组及初值构成的动力系统（SIR 模型）可进行迭代求解，并通过图形观察趋势。Matlab 代码如下：</p>\r\n<figure class=\"highlight matlab\"><figcaption><span>epidemic_model.m</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">N = <span class=\"number\">1000</span>;</span><br><span class=\"line\">I0 = <span class=\"number\">5</span>;</span><br><span class=\"line\">I1 = <span class=\"number\">9</span>;</span><br><span class=\"line\">shiftout = <span class=\"number\">0.6</span>;</span><br><span class=\"line\">iters = <span class=\"number\">25</span>;</span><br><span class=\"line\">res = epidemic(N, I0, I1, shiftout, iters);</span><br><span class=\"line\"></span><br><span class=\"line\">tbl = cell2table(num2cell(res), <span class=\"string\">'VariableNames'</span>, &#123;<span class=\"string\">'Rn'</span>, <span class=\"string\">'In'</span>, <span class=\"string\">'Sn'</span>&#125;);</span><br><span class=\"line\">writetable(tbl, <span class=\"string\">'epidemic.csv'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">p = plot(<span class=\"number\">0</span>:iters<span class=\"number\">-1</span>, res, <span class=\"string\">'LineWidth'</span>, <span class=\"number\">1.1</span>, <span class=\"string\">'MarkerSize'</span>, <span class=\"number\">4.5</span>);</span><br><span class=\"line\">p(<span class=\"number\">1</span>).Marker = <span class=\"string\">'*'</span>;</span><br><span class=\"line\">p(<span class=\"number\">2</span>).Marker = <span class=\"string\">'x'</span>;</span><br><span class=\"line\">p(<span class=\"number\">3</span>).Marker = <span class=\"string\">'^'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">set(gca, ...</span><br><span class=\"line\">    <span class=\"string\">'FontName'</span>, <span class=\"string\">'Euclid'</span>, ...</span><br><span class=\"line\">    <span class=\"string\">'FontWeight'</span>, <span class=\"string\">'Bold'</span>, ...</span><br><span class=\"line\">    <span class=\"string\">'FontSize'</span>, <span class=\"number\">9</span>, ...</span><br><span class=\"line\">    <span class=\"string\">'box'</span>, <span class=\"string\">'off'</span>, ...</span><br><span class=\"line\">    <span class=\"string\">'color'</span>, <span class=\"string\">'none'</span>);</span><br><span class=\"line\">title(<span class=\"string\">'\\bf Dynamic System of SIR Model'</span>, ...</span><br><span class=\"line\">      <span class=\"string\">'FontSize'</span>, <span class=\"number\">11</span>, ...</span><br><span class=\"line\">      <span class=\"string\">'Interpreter'</span>, <span class=\"string\">'latex'</span>);</span><br><span class=\"line\">legend(gca, ...</span><br><span class=\"line\">       &#123;<span class=\"string\">'$R(n)$'</span>, <span class=\"string\">'$I(n)$'</span>, <span class=\"string\">'$S(n)$'</span>&#125;, ...</span><br><span class=\"line\">       <span class=\"string\">'FontSize'</span>, <span class=\"number\">8</span>, ...</span><br><span class=\"line\">       <span class=\"string\">'Interpreter'</span>, <span class=\"string\">'latex'</span>, <span class=\"string\">'Location'</span>, <span class=\"string\">'best'</span>);</span><br><span class=\"line\">set(gcf, ...</span><br><span class=\"line\">    <span class=\"string\">'units'</span>, <span class=\"string\">'points'</span>, ...</span><br><span class=\"line\">    <span class=\"string\">'position'</span>, [<span class=\"number\">350</span>, <span class=\"number\">200</span>, <span class=\"number\">320</span>, <span class=\"number\">180</span>]);</span><br><span class=\"line\">saveas(gcf, <span class=\"string\">'epidemic.svg'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">res</span> = <span class=\"title\">epidemic</span><span class=\"params\">(N, I0, I1, shiftout, iters)</span></span></span><br><span class=\"line\">    <span class=\"comment\">% 返回由 R(n), I(n), S(n) 构成的数组</span></span><br><span class=\"line\"></span><br><span class=\"line\">    res = <span class=\"built_in\">zeros</span>(iters, <span class=\"number\">3</span>);</span><br><span class=\"line\">    a = (I1 - (<span class=\"number\">1</span>-shiftout) * I0) / (I0 * (N - I0));</span><br><span class=\"line\">    res(<span class=\"number\">1</span>, :) = [<span class=\"number\">0</span> I0 N-I0];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> k = <span class=\"number\">2</span>:iters</span><br><span class=\"line\">        res(k, <span class=\"number\">1</span>) = res(k<span class=\"number\">-1</span>, <span class=\"number\">1</span>) + shiftout * res(k<span class=\"number\">-1</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\">        res(k, <span class=\"number\">2</span>) = (<span class=\"number\">1</span>-shiftout) * res(k<span class=\"number\">-1</span>, <span class=\"number\">2</span>) + a * res(k<span class=\"number\">-1</span>, <span class=\"number\">2</span>) * res(k<span class=\"number\">-1</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\">        res(k, <span class=\"number\">3</span>) = res(k<span class=\"number\">-1</span>, <span class=\"number\">3</span>) - a * res(k<span class=\"number\">-1</span>, <span class=\"number\">2</span>) * res(k<span class=\"number\">-1</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\r\n<p>生成的 <span class=\"math inline\">\\(R(n), I(n), S(n)\\)</span> 表格如下：</p>\r\n<span class=\"math display\">\\[\\begin{array}{cccc|cccc}\r\n    \\hline\r\n    \\text{week} &amp; R(n)       &amp; I(n)       &amp; S(n)       &amp; \\text{week} &amp; R(n)       &amp; I(n)      &amp; S(n)  \\\\\r\n    \\hline\r\n    {0}  &amp; {0}        &amp; {5}        &amp; {995}      &amp; {12} &amp; {812.3671} &amp; {78.9598} &amp; {108.6731}  \\\\\r\n    {1}  &amp; {3}        &amp; {9}        &amp; {988}      &amp; {13} &amp; {859.7430} &amp; {43.6574} &amp; {96.5996} \\\\\r\n    {2}  &amp; {8.4000}   &amp; {16.1114}  &amp; {975.4886} &amp; {14} &amp; {885.9374} &amp; {23.3968} &amp; {90.6657} \\\\\r\n    {3}  &amp; {18.0668}  &amp; {28.5581}  &amp; {953.3751} &amp; {15} &amp; {899.9755} &amp; {12.3435} &amp; {87.6810} \\\\\r\n    {4}  &amp; {35.2017}  &amp; {49.7321}  &amp; {915.0662} &amp; {16} &amp; {907.3816} &amp; {6.4602}  &amp; {86.1582} \\\\\r\n    {5}  &amp; {65.0409}  &amp; {83.9244}  &amp; {851.0347} &amp; {17} &amp; {911.2577} &amp; {3.3672}  &amp; {85.3750} \\\\\r\n    {6}  &amp; {115.3955} &amp; {134.0638} &amp; {750.5407} &amp; {18} &amp; {913.2781} &amp; {1.7514}  &amp; {84.9705} \\\\\r\n    {7}  &amp; {195.8338} &amp; {195.2018} &amp; {608.9644} &amp; {19} &amp; {914.3289} &amp; {0.9099}  &amp; {84.7612} \\\\\r\n    {8}  &amp; {312.9549} &amp; {245.3364} &amp; {441.7087} &amp; {20} &amp; {914.8749} &amp; {0.4725}  &amp; {84.6526} \\\\\r\n    {9}  &amp; {460.1567} &amp; {250.6110} &amp; {289.2323} &amp; {21} &amp; {915.1584} &amp; {0.2453}  &amp; {84.5964} \\\\\r\n    {10} &amp; {610.5233} &amp; {202.2331} &amp; {187.2436} &amp; {22} &amp; {915.3055} &amp; {0.1273}  &amp; {84.5672} \\\\\r\n    {11} &amp; {731.8632} &amp; {134.1732} &amp; {133.9636} &amp; {23} &amp; {915.3819} &amp; {0.0661}  &amp; {84.5520} \\\\\r\n    \\hline\r\n\\end{array}\\]</span>\r\n<p>SIR 模型动力系统曲线如下：</p>\r\n<p><img src=\"/img/epidemic.svg\" width=\"50%\"></p>\r\n<blockquote>\r\n<p>注：尽管设置了 <code>set(gca, 'color', 'none')</code>，但 Matlab (R2016b) 导出的 SVG 格式图形仍然会有背景色，且图形标题位置不易调整。故干脆用 <a href=\"https://inkscape.org\" target=\"_blank\" rel=\"noopener\">Inkscape</a> 对图形进行细加工。</p>\r\n</blockquote>\r\n<p>从图形可以看出，给定移出率（<span class=\"math inline\">\\(60\\%\\)</span>）以及模型初值下，这种流感流行的高峰处于第 <span class=\"math inline\">\\(9\\)</span> 周左右，已感人数为 <span class=\"math inline\">\\(250.6\\)</span>，在第 <span class=\"math inline\">\\(17\\)</span> 周后略小于 <span class=\"math inline\">\\(85\\)</span> 人未染上这种流感。</p>\r\n<h3 id=\"敏感性分析\">敏感性分析</h3>\r\n<p>下面考察模型对于参数及初始条件的敏感性。分别基于以下初值条件进行实验：</p>\r\n<span class=\"math display\">\\[\\begin{array}{c|cccc}\r\n      &amp; N    &amp; c   &amp; I(0) &amp; I(1)  \\\\\r\n    \\hline\r\n    \\text{I}   &amp; 1000 &amp; 3/5 &amp; 5 &amp; 15   \\\\\r\n    \\text{II}  &amp; 1000 &amp; 1   &amp; 5 &amp; 15  \\\\\r\n    \\text{III} &amp; 1000 &amp; 1/4 &amp; 5 &amp; 15  \\\\\r\n    \\text{IV}  &amp; 4000 &amp; 1/4 &amp; 5 &amp; 35\r\n\\end{array}\\]</span>\r\n<p>实验过程中发现会某些时间周期会出现人数为负或者超过总社区人数的情况，故在函数 <code>epidemic</code> 中对其加以限定，使其在正常范围内变化。注意这里不能简单地处理为 <span class=\"math inline\">\\(\\max\\{\\min\\{x, N\\}, 0\\}\\)</span>，否则可能导致三者加和不为 <span class=\"math inline\">\\(N\\)</span> 的情况出现。</p>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res(k, <span class=\"number\">1</span>) = min(res(k<span class=\"number\">-1</span>, <span class=\"number\">1</span>) + shiftout * res(k<span class=\"number\">-1</span>, <span class=\"number\">2</span>), N);</span><br><span class=\"line\">res(k, <span class=\"number\">3</span>) = max(min(res(k<span class=\"number\">-1</span>, <span class=\"number\">3</span>) - a * res(k<span class=\"number\">-1</span>, <span class=\"number\">2</span>) * res(k<span class=\"number\">-1</span>, <span class=\"number\">3</span>), N), <span class=\"number\">0</span>);</span><br><span class=\"line\">res(k, <span class=\"number\">2</span>) = max(min((<span class=\"number\">1</span>-shiftout) * res(k<span class=\"number\">-1</span>, <span class=\"number\">2</span>) + ...</span><br><span class=\"line\">                    a * res(k<span class=\"number\">-1</span>, <span class=\"number\">2</span>) * res(k<span class=\"number\">-1</span>, <span class=\"number\">3</span>), ...</span><br><span class=\"line\">                    N - res(k, <span class=\"number\">1</span>) - res(k, <span class=\"number\">2</span>)), <span class=\"number\">0</span>);</span><br></pre></td></tr></table></figure>\r\n<p>对比结果如下：</p>\r\n<p><img src=\"/img/epidemic-2x2.svg\" width=\"80%\"></p>\r\n<p>四种情形最终的收敛情况相同，即易感者逐渐降至为 <span class=\"math inline\">\\(0\\)</span>，即全军覆没无一幸免；已感者呈现先增后降的趋势；移出者逐渐累积，直至流行病完全治愈。具体来看，移出率越高，说明该流行病越容易被治愈，所以感染人数峰值越低，流行病退潮时间越早；<span class=\"math inline\">\\(I(1) - I(0)\\)</span> 越大，即传播系数越高，流感传播速度更快，短时期内感染人数上升速率更大，退潮时间也越长。</p>\r\n<p>考察社区总人数是否对模型敏感性有影响，针对 <span class=\"math inline\">\\(c=1\\)</span>, <span class=\"math inline\">\\(I(0)=5\\)</span>, <span class=\"math inline\">\\(I(1)=10\\)</span>, <span class=\"math inline\">\\(N=500\\)</span>, <span class=\"math inline\">\\(1000\\)</span>, <span class=\"math inline\">\\(5000\\)</span>, <span class=\"math inline\">\\(10000\\)</span> 四种情况作出变化曲线：</p>\r\n<p><img src=\"/img/epidemic-2x2-by-n.svg\" width=\"80%\"></p>\r\n<p>显然，在其他因素相同的情况下，随社区总人数增加，SIR 模型曲线整体“向右移动”，也就是说感染人数到达峰值所需时间增长，且相应的退潮时间也越长。由于当 <span class=\"math inline\">\\(I(1) - I(0)\\)</span> 不变的情况下，随总人数增加，可以看成传播系数 <span class=\"math inline\">\\(a\\)</span> 降低，所以整个模型的变化会放缓。</p>\r\n","site":{"data":{}},"excerpt":"<h2 id=\"离散流行病模型\">离散流行病模型</h2>\r\n<p>考虑这样一个社区，有三类人群：易感者、已感者和移出者。我们对流行病模型作出如下假设：</p>\r\n<ul>\r\n<li>没有人进出该社区，且社区不和外界接触，即社区内的总人数保持不变</li>\r\n<li>每个人都是易感者 <span class=\"math inline\">\\(S\\)</span>、已感者 <span class=\"math inline\">\\(I\\)</span>、移出者 <span class=\"math inline\">\\(R\\)</span>。也就是说每个人都能感染这种流感，当前已经染上这种流感的人能够传播流感，已经得过这种流感的人不会再得此病</li>\r\n<li>一开始，每人要么是已感者，要么是易感者</li>\r\n<li>这种流感的平均持续时间为 <span class=\"math inline\">\\(1/c\\)</span> 周，在此期间此人被认为是已感者且能传播流感</li>\r\n<li>模型时间周期按周计</li>\r\n</ul>","more":"<p>用差分方程描述这个动力系统模型，首先假设定义如下：</p>\r\n<ul>\r\n<li><span class=\"math inline\">\\(S(n)\\)</span>：<span class=\"math inline\">\\(n\\)</span> 个周期后易感者人数</li>\r\n<li><span class=\"math inline\">\\(I(n)\\)</span>：<span class=\"math inline\">\\(n\\)</span> 个周期后已感者人数</li>\r\n<li><span class=\"math inline\">\\(R(n)\\)</span>：<span class=\"math inline\">\\(n\\)</span> 个周期后移出者人数</li>\r\n</ul>\r\n<p>从模型假设出发，既然流感平均持续 <span class=\"math inline\">\\(1/c\\)</span> 周，也就是说每 <span class=\"math inline\">\\(1/c\\)</span> 周的时间就有 <span class=\"math inline\">\\(1\\)</span> 人成为移出者，从该系统移出。因计量周期为周，所以也可理解成每周移出 <span class=\"math inline\">\\(c \\times 100 \\%\\)</span> 的已感者。所以建立关于移出者的方程</p>\r\n<p><span class=\"math display\">\\[\r\n    R(n+1) = R(n) + c I(n)\r\n    \\tag{R}\r\n    \\label{R}\r\n\\]</span></p>\r\n<p>对于已感者人数 <span class=\"math inline\">\\(I(n)\\)</span> 的变化，显然来自两个方面：其一来自新的一批被传染的易感者，其二由前所述，每周都会从系统移出已感者。细化这个过程，易感者由于接触已感者而患病，若引入<strong>传播系数</strong> <span class=\"math inline\">\\(a\\)</span>，则新的一批被感染得病的人数为 <span class=\"math inline\">\\(a S(n) I(n)\\)</span>，二者乘积的形式表明了其之间的相互作用。得到已感者差分方程</p>\r\n<p><span class=\"math display\">\\[\r\n    I(n+1) = I(n) - c I(n) + a S(n) I(n)\r\n    \\tag{I}\r\n    \\label{I}\r\n\\]</span></p>\r\n<p>最后关于易感者的关系就很容易了，由于系统人数保持不变，已感者被移出后不会再患病，即不会转化为易感者；移出者的变化仅来源于已感者，故和易感者无直接联系。所以仅建立易感者与已感者之间的关系即可。</p>\r\n<p><span class=\"math display\">\\[\r\n    S(n+1) = S(n) - a S(n) I(n)\r\n    \\tag{S}\r\n    \\label{S}\r\n\\]</span></p>\r\n<p>给定初始条件，假设社区共有 <span class=\"math inline\">\\(1000\\)</span> 人，移出率 <span class=\"math inline\">\\(c=0.60\\)</span>，一开始（第 <span class=\"math inline\">\\(0\\)</span> 周）便有 <span class=\"math inline\">\\(5\\)</span> 人患病，第 <span class=\"math inline\">\\(1\\)</span> 周有 <span class=\"math inline\">\\(9\\)</span> 人患病，即 <span class=\"math inline\">\\(I(0) = 5\\)</span>，<span class=\"math inline\">\\(S(0) = 995\\)</span>，<span class=\"math inline\">\\(R(0) = 0\\)</span>，<span class=\"math inline\">\\(I(1) = 9\\)</span>，由式 <span class=\"math inline\">\\(\\eqref{I}\\)</span> 即可解得 <span class=\"math inline\">\\(a \\approx 0.001407\\)</span>。 故由以上方程组及初值构成的动力系统（SIR 模型）可进行迭代求解，并通过图形观察趋势。Matlab 代码如下：</p>\r\n<!--�109-->\r\n<p>生成的 <span class=\"math inline\">\\(R(n), I(n), S(n)\\)</span> 表格如下：</p>\r\n<span class=\"math display\">\\[\\begin{array}{cccc|cccc}\r\n    \\hline\r\n    \\text{week} &amp; R(n)       &amp; I(n)       &amp; S(n)       &amp; \\text{week} &amp; R(n)       &amp; I(n)      &amp; S(n)  \\\\\r\n    \\hline\r\n    {0}  &amp; {0}        &amp; {5}        &amp; {995}      &amp; {12} &amp; {812.3671} &amp; {78.9598} &amp; {108.6731}  \\\\\r\n    {1}  &amp; {3}        &amp; {9}        &amp; {988}      &amp; {13} &amp; {859.7430} &amp; {43.6574} &amp; {96.5996} \\\\\r\n    {2}  &amp; {8.4000}   &amp; {16.1114}  &amp; {975.4886} &amp; {14} &amp; {885.9374} &amp; {23.3968} &amp; {90.6657} \\\\\r\n    {3}  &amp; {18.0668}  &amp; {28.5581}  &amp; {953.3751} &amp; {15} &amp; {899.9755} &amp; {12.3435} &amp; {87.6810} \\\\\r\n    {4}  &amp; {35.2017}  &amp; {49.7321}  &amp; {915.0662} &amp; {16} &amp; {907.3816} &amp; {6.4602}  &amp; {86.1582} \\\\\r\n    {5}  &amp; {65.0409}  &amp; {83.9244}  &amp; {851.0347} &amp; {17} &amp; {911.2577} &amp; {3.3672}  &amp; {85.3750} \\\\\r\n    {6}  &amp; {115.3955} &amp; {134.0638} &amp; {750.5407} &amp; {18} &amp; {913.2781} &amp; {1.7514}  &amp; {84.9705} \\\\\r\n    {7}  &amp; {195.8338} &amp; {195.2018} &amp; {608.9644} &amp; {19} &amp; {914.3289} &amp; {0.9099}  &amp; {84.7612} \\\\\r\n    {8}  &amp; {312.9549} &amp; {245.3364} &amp; {441.7087} &amp; {20} &amp; {914.8749} &amp; {0.4725}  &amp; {84.6526} \\\\\r\n    {9}  &amp; {460.1567} &amp; {250.6110} &amp; {289.2323} &amp; {21} &amp; {915.1584} &amp; {0.2453}  &amp; {84.5964} \\\\\r\n    {10} &amp; {610.5233} &amp; {202.2331} &amp; {187.2436} &amp; {22} &amp; {915.3055} &amp; {0.1273}  &amp; {84.5672} \\\\\r\n    {11} &amp; {731.8632} &amp; {134.1732} &amp; {133.9636} &amp; {23} &amp; {915.3819} &amp; {0.0661}  &amp; {84.5520} \\\\\r\n    \\hline\r\n\\end{array}\\]</span>\r\n<p>SIR 模型动力系统曲线如下：</p>\r\n<p><img src=\"/img/epidemic.svg\" width=\"50%\"></p>\r\n<blockquote>\r\n<p>注：尽管设置了 <code>set(gca, 'color', 'none')</code>，但 Matlab (R2016b) 导出的 SVG 格式图形仍然会有背景色，且图形标题位置不易调整。故干脆用 <a href=\"https://inkscape.org\" target=\"_blank\" rel=\"noopener\">Inkscape</a> 对图形进行细加工。</p>\r\n</blockquote>\r\n<p>从图形可以看出，给定移出率（<span class=\"math inline\">\\(60\\%\\)</span>）以及模型初值下，这种流感流行的高峰处于第 <span class=\"math inline\">\\(9\\)</span> 周左右，已感人数为 <span class=\"math inline\">\\(250.6\\)</span>，在第 <span class=\"math inline\">\\(17\\)</span> 周后略小于 <span class=\"math inline\">\\(85\\)</span> 人未染上这种流感。</p>\r\n<h3 id=\"敏感性分析\">敏感性分析</h3>\r\n<p>下面考察模型对于参数及初始条件的敏感性。分别基于以下初值条件进行实验：</p>\r\n<span class=\"math display\">\\[\\begin{array}{c|cccc}\r\n      &amp; N    &amp; c   &amp; I(0) &amp; I(1)  \\\\\r\n    \\hline\r\n    \\text{I}   &amp; 1000 &amp; 3/5 &amp; 5 &amp; 15   \\\\\r\n    \\text{II}  &amp; 1000 &amp; 1   &amp; 5 &amp; 15  \\\\\r\n    \\text{III} &amp; 1000 &amp; 1/4 &amp; 5 &amp; 15  \\\\\r\n    \\text{IV}  &amp; 4000 &amp; 1/4 &amp; 5 &amp; 35\r\n\\end{array}\\]</span>\r\n<p>实验过程中发现会某些时间周期会出现人数为负或者超过总社区人数的情况，故在函数 <code>epidemic</code> 中对其加以限定，使其在正常范围内变化。注意这里不能简单地处理为 <span class=\"math inline\">\\(\\max\\{\\min\\{x, N\\}, 0\\}\\)</span>，否则可能导致三者加和不为 <span class=\"math inline\">\\(N\\)</span> 的情况出现。</p>\r\n<!--�110-->\r\n<p>对比结果如下：</p>\r\n<p><img src=\"/img/epidemic-2x2.svg\" width=\"80%\"></p>\r\n<p>四种情形最终的收敛情况相同，即易感者逐渐降至为 <span class=\"math inline\">\\(0\\)</span>，即全军覆没无一幸免；已感者呈现先增后降的趋势；移出者逐渐累积，直至流行病完全治愈。具体来看，移出率越高，说明该流行病越容易被治愈，所以感染人数峰值越低，流行病退潮时间越早；<span class=\"math inline\">\\(I(1) - I(0)\\)</span> 越大，即传播系数越高，流感传播速度更快，短时期内感染人数上升速率更大，退潮时间也越长。</p>\r\n<p>考察社区总人数是否对模型敏感性有影响，针对 <span class=\"math inline\">\\(c=1\\)</span>, <span class=\"math inline\">\\(I(0)=5\\)</span>, <span class=\"math inline\">\\(I(1)=10\\)</span>, <span class=\"math inline\">\\(N=500\\)</span>, <span class=\"math inline\">\\(1000\\)</span>, <span class=\"math inline\">\\(5000\\)</span>, <span class=\"math inline\">\\(10000\\)</span> 四种情况作出变化曲线：</p>\r\n<p><img src=\"/img/epidemic-2x2-by-n.svg\" width=\"80%\"></p>\r\n<p>显然，在其他因素相同的情况下，随社区总人数增加，SIR 模型曲线整体“向右移动”，也就是说感染人数到达峰值所需时间增长，且相应的退潮时间也越长。由于当 <span class=\"math inline\">\\(I(1) - I(0)\\)</span> 不变的情况下，随总人数增加，可以看成传播系数 <span class=\"math inline\">\\(a\\)</span> 降低，所以整个模型的变化会放缓。</p>"},{"title":"Perl 5 拾零","date":"2018-01-10T03:25:35.000Z","mathjax":true,"_content":"\nPerl 5 笔记.\n\n<!-- more -->\n\n1. `use 5.016` 表示程序只能在 Perl 5.16 以上的版本运行，另外版本号一定要写成三位数，包括前导零\n1. 整数直接量可以用 `_` 分隔以提高阅读体验，比如 `0x50_65_72_7c`\n1. 字符串用点号 `.` 拼接\n1. 字符串重复操作符 `x` 可以让左边的操作数重复右边的操作数进行连接\n1. 语句末尾的 `;` 除了在块中末尾行，都是必须的\n1. 单引号内能转义的字符仅有 `'` 及 `\\`\n1. 双引号内字符串的转义字符有(特殊):\n   - `\\e` -- Esc (ASCII 编码的转义字符)\n   - `\\007` -- 八进制\n   - `\\x7f` -- 十六进制\n   - `\\x{2744}` -- 十六进制的 Unicode 代码点\n   - `\\cC` -- Control 键的代码\n   - `\\l` / `\\L` -- 将下个/后面所有字母转为小写\n   - `\\u` / `\\U` -- 将下个/后面所有字母转为大写\n   - `\\Q` -- 把它到 `\\E` 之间的非单词字符加上反斜线转义\n   - `\\E` -- 结束 `\\L`，`\\U`，`\\Q` 开始的作用范围\n1. 获取用户输入并去除末尾的换行符(标量 / 数组)：\n   {% codeblock lang:perl %}\n   chomp(my $text = <STDIN>);\n   chomp(my @texts = <STDIN>);\n   {% endcodeblock %}\n1. 判断是否为 `undef`：`defined` 函数\n1. `$#foo` 返回 `@foo` 的最大索引值\n1. 数组内插到双引号串中时自动添加分隔用的空格，空格这个分隔符的变量为 `$\"`\n1. `each` 操作符与 Python 中的 `enumerate` 相似，会返回数组中的元素索引以及值\n1. 强制指定标量上下文，比如\n   {% codeblock lang:bash %}\n   my @rocks = qw ! talc quartz jade obsidian !;\n   print \"How many rocks do you have?\\n\";\n   print \"I have \", @rocks, \" rocks!\\n\";\n   print \"I have \", scalar @rocks, \" rocks!\\n\";\n   {% endcodeblock %}\n1. 避免子程序名称与内置函数重名，应使用 `&`，或者打开警告开关 `use warnings`\n1. 不能在 `qw` 函数中运用字符串插值\n1. 如果 `print` 或者其它函数名后面接着一个左括号，务必保证这个括号是成对的\n1. 赋值语句返回实际的变量作为左值\n1. 在同一个正则表达式中，反向引用为 `\\1`，否则使用 `$1`\n1. Perl 提供两种类型的名字空间，符号表 (symbol table) 和词法作用域\n   (lexical scope)\n1. `$str =~ tr/x//` 仅统计 `$str` 中 `x` 的数量，而 `tr/x//d` 删除所有的 `x`\n1. Windows 用 StrawBerry Perl 安装 CPAN 包时，注意将包含 StrawBerry 的 GCC\n   工具链优先级提前或者删除其它可能影响编译的路径，部分包需要强制安装：`cpan -fi Tk`\n1. Windows 下 `cpan` 安装包遇到网络环境差如何设置代理：\n   {% codeblock %}\n   % set http_proxy=http://127.0.0.1:1234\n   % cpan -fi xx::xx\n   {% endcodeblock %}\n1. Windows 下 `Strawberry Perl` 的 `portable` 版本中， `\\Strawberry\\perl\\vendor\\lib\\Portable` 会覆盖掉模块 `File::Homedir`，导致结果可能与预期不同，应改用 `File::HomeDir::Windows`\n1. **更新** 上述的问题可能与 `File::HomeDir` 的版本过低有关，重新通过 `cpan` 安装貌似可以解决\n1. 在标量上下文中，`each` 仅返回 `hash` 的键，或者列表的索引\n1. 从源码编译 Perl：[http://www.cpan.org/src](http://www.cpan.org/src)。文章：[How to build perl from source on Linux](https://perlmaven.com/how-to-build-perl-from-source-code).\n   示例：\n   {% codeblock lang:bash%}\n   wget http://www.cpan.org/src/5.0/perl-5.26.1.tar.gz\n   tar -xzf perl-5.26.1.tar.gz\n   cd perl-5.26.1\n   ./Configure -des -Dprefix=$HOME/localperl -Dusethreads -Duselargefiles \\\n               -Duse64bitint -Duselongdouble -Dusemorebits -Duseshrplib\n   make -j4\n   TEST_JOBS=4 make test_harness\n   make install\n   {% endcodeblock %}\n1. 关于 Perl 命令行参数 `-0`：\n   - `-0`：相当于 `$/ = \"\\0\"`\n   - `-00`：相当于 `$/ = \"\"`，段落模式\n   - `-0777`：相当于 `$/ = undef`，啜食模式\n1. 由 [按时间排序字符串](https://stackoverflow.com/questions/17600885/sort-strings-in-perl-according-to-date)\n   而来的 [施瓦茨变换(Schwartzian transform)](https://www.wikiwand.com/en/Schwartzian_transform)\n1. 安装 `cpanm`：`cpan App::cpanminus`。设置下载镜像：\n   {% codeblock lang:bash %}\n   alias cpanm='cpanm --mirror http://mirrors.ustc.edu.cn/CPAN --mirror http://www.cpan.org'\n   {% endcodeblock %}\n1. $\\LaTeX$ 中展示目录树。\n   [参考：[(Semi-)automatic directory-tree in LaTeX](https://texblog.org/2012/08/07/semi-automatic-directory-tree-in-latex)]\n   {% codeblock lang:latex tree.pl%}\n   \\usepackage{dirtree}\n   ...\n   \\dirtree{\n   ...\n   }\n   {% endcodeblock %}\n   `\\dirtree` 中的部分可由 [tree.pl](/src/tree.pl) 来生成\n1. 如果子程序的定义在其被调用之前，调用时可略去括号；如果定义在被调用之后，则不能省略括号。（后者也为 Perl Maven 的这篇 [文章](https://perlmaven.com/subroutines-and-functions-in-perl) 所推荐）\n","source":"_posts/notes-on-perl-5.md","raw":"---\ntitle: Perl 5 拾零\ndate: 2018-01-10 11:25:35\ntags:\n    - Perl\ncategories: Memos\nmathjax: true\n---\n\nPerl 5 笔记.\n\n<!-- more -->\n\n1. `use 5.016` 表示程序只能在 Perl 5.16 以上的版本运行，另外版本号一定要写成三位数，包括前导零\n1. 整数直接量可以用 `_` 分隔以提高阅读体验，比如 `0x50_65_72_7c`\n1. 字符串用点号 `.` 拼接\n1. 字符串重复操作符 `x` 可以让左边的操作数重复右边的操作数进行连接\n1. 语句末尾的 `;` 除了在块中末尾行，都是必须的\n1. 单引号内能转义的字符仅有 `'` 及 `\\`\n1. 双引号内字符串的转义字符有(特殊):\n   - `\\e` -- Esc (ASCII 编码的转义字符)\n   - `\\007` -- 八进制\n   - `\\x7f` -- 十六进制\n   - `\\x{2744}` -- 十六进制的 Unicode 代码点\n   - `\\cC` -- Control 键的代码\n   - `\\l` / `\\L` -- 将下个/后面所有字母转为小写\n   - `\\u` / `\\U` -- 将下个/后面所有字母转为大写\n   - `\\Q` -- 把它到 `\\E` 之间的非单词字符加上反斜线转义\n   - `\\E` -- 结束 `\\L`，`\\U`，`\\Q` 开始的作用范围\n1. 获取用户输入并去除末尾的换行符(标量 / 数组)：\n   {% codeblock lang:perl %}\n   chomp(my $text = <STDIN>);\n   chomp(my @texts = <STDIN>);\n   {% endcodeblock %}\n1. 判断是否为 `undef`：`defined` 函数\n1. `$#foo` 返回 `@foo` 的最大索引值\n1. 数组内插到双引号串中时自动添加分隔用的空格，空格这个分隔符的变量为 `$\"`\n1. `each` 操作符与 Python 中的 `enumerate` 相似，会返回数组中的元素索引以及值\n1. 强制指定标量上下文，比如\n   {% codeblock lang:bash %}\n   my @rocks = qw ! talc quartz jade obsidian !;\n   print \"How many rocks do you have?\\n\";\n   print \"I have \", @rocks, \" rocks!\\n\";\n   print \"I have \", scalar @rocks, \" rocks!\\n\";\n   {% endcodeblock %}\n1. 避免子程序名称与内置函数重名，应使用 `&`，或者打开警告开关 `use warnings`\n1. 不能在 `qw` 函数中运用字符串插值\n1. 如果 `print` 或者其它函数名后面接着一个左括号，务必保证这个括号是成对的\n1. 赋值语句返回实际的变量作为左值\n1. 在同一个正则表达式中，反向引用为 `\\1`，否则使用 `$1`\n1. Perl 提供两种类型的名字空间，符号表 (symbol table) 和词法作用域\n   (lexical scope)\n1. `$str =~ tr/x//` 仅统计 `$str` 中 `x` 的数量，而 `tr/x//d` 删除所有的 `x`\n1. Windows 用 StrawBerry Perl 安装 CPAN 包时，注意将包含 StrawBerry 的 GCC\n   工具链优先级提前或者删除其它可能影响编译的路径，部分包需要强制安装：`cpan -fi Tk`\n1. Windows 下 `cpan` 安装包遇到网络环境差如何设置代理：\n   {% codeblock %}\n   % set http_proxy=http://127.0.0.1:1234\n   % cpan -fi xx::xx\n   {% endcodeblock %}\n1. Windows 下 `Strawberry Perl` 的 `portable` 版本中， `\\Strawberry\\perl\\vendor\\lib\\Portable` 会覆盖掉模块 `File::Homedir`，导致结果可能与预期不同，应改用 `File::HomeDir::Windows`\n1. **更新** 上述的问题可能与 `File::HomeDir` 的版本过低有关，重新通过 `cpan` 安装貌似可以解决\n1. 在标量上下文中，`each` 仅返回 `hash` 的键，或者列表的索引\n1. 从源码编译 Perl：[http://www.cpan.org/src](http://www.cpan.org/src)。文章：[How to build perl from source on Linux](https://perlmaven.com/how-to-build-perl-from-source-code).\n   示例：\n   {% codeblock lang:bash%}\n   wget http://www.cpan.org/src/5.0/perl-5.26.1.tar.gz\n   tar -xzf perl-5.26.1.tar.gz\n   cd perl-5.26.1\n   ./Configure -des -Dprefix=$HOME/localperl -Dusethreads -Duselargefiles \\\n               -Duse64bitint -Duselongdouble -Dusemorebits -Duseshrplib\n   make -j4\n   TEST_JOBS=4 make test_harness\n   make install\n   {% endcodeblock %}\n1. 关于 Perl 命令行参数 `-0`：\n   - `-0`：相当于 `$/ = \"\\0\"`\n   - `-00`：相当于 `$/ = \"\"`，段落模式\n   - `-0777`：相当于 `$/ = undef`，啜食模式\n1. 由 [按时间排序字符串](https://stackoverflow.com/questions/17600885/sort-strings-in-perl-according-to-date)\n   而来的 [施瓦茨变换(Schwartzian transform)](https://www.wikiwand.com/en/Schwartzian_transform)\n1. 安装 `cpanm`：`cpan App::cpanminus`。设置下载镜像：\n   {% codeblock lang:bash %}\n   alias cpanm='cpanm --mirror http://mirrors.ustc.edu.cn/CPAN --mirror http://www.cpan.org'\n   {% endcodeblock %}\n1. $\\LaTeX$ 中展示目录树。\n   [参考：[(Semi-)automatic directory-tree in LaTeX](https://texblog.org/2012/08/07/semi-automatic-directory-tree-in-latex)]\n   {% codeblock lang:latex tree.pl%}\n   \\usepackage{dirtree}\n   ...\n   \\dirtree{\n   ...\n   }\n   {% endcodeblock %}\n   `\\dirtree` 中的部分可由 [tree.pl](/src/tree.pl) 来生成\n1. 如果子程序的定义在其被调用之前，调用时可略去括号；如果定义在被调用之后，则不能省略括号。（后者也为 Perl Maven 的这篇 [文章](https://perlmaven.com/subroutines-and-functions-in-perl) 所推荐）\n","slug":"notes-on-perl-5","published":1,"updated":"2023-03-09T16:09:38.261Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u336o0024p4x0zgceq126","content":"<p>Perl 5 笔记.</p>\r\n<a id=\"more\"></a>\r\n<ol type=\"1\">\r\n<li><code>use 5.016</code> 表示程序只能在 Perl 5.16 以上的版本运行，另外版本号一定要写成三位数，包括前导零</li>\r\n<li>整数直接量可以用 <code>_</code> 分隔以提高阅读体验，比如 <code>0x50_65_72_7c</code></li>\r\n<li>字符串用点号 <code>.</code> 拼接</li>\r\n<li>字符串重复操作符 <code>x</code> 可以让左边的操作数重复右边的操作数进行连接</li>\r\n<li>语句末尾的 <code>;</code> 除了在块中末尾行，都是必须的</li>\r\n<li>单引号内能转义的字符仅有 <code>'</code> 及 <code>\\</code></li>\r\n<li>双引号内字符串的转义字符有(特殊):\r\n<ul>\r\n<li><code>\\e</code> – Esc (ASCII 编码的转义字符)</li>\r\n<li><code>\\007</code> – 八进制</li>\r\n<li><code>\\x7f</code> – 十六进制</li>\r\n<li><code>\\x{2744}</code> – 十六进制的 Unicode 代码点</li>\r\n<li><code>\\cC</code> – Control 键的代码</li>\r\n<li><code>\\l</code> / <code>\\L</code> – 将下个/后面所有字母转为小写</li>\r\n<li><code>\\u</code> / <code>\\U</code> – 将下个/后面所有字母转为大写</li>\r\n<li><code>\\Q</code> – 把它到 <code>\\E</code> 之间的非单词字符加上反斜线转义</li>\r\n<li><code>\\E</code> – 结束 <code>\\L</code>，<code>\\U</code>，<code>\\Q</code> 开始的作用范围</li>\r\n</ul></li>\r\n<li>获取用户输入并去除末尾的换行符(标量 / 数组)： <figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">chomp</span>(<span class=\"keyword\">my</span> $text = &lt;STDIN&gt;);</span><br><span class=\"line\"><span class=\"keyword\">chomp</span>(<span class=\"keyword\">my</span> @texts = &lt;STDIN&gt;);</span><br></pre></td></tr></table></figure></li>\r\n<li>判断是否为 <code>undef</code>：<code>defined</code> 函数</li>\r\n<li><code>$#foo</code> 返回 <code>@foo</code> 的最大索引值</li>\r\n<li>数组内插到双引号串中时自动添加分隔用的空格，空格这个分隔符的变量为 <code>$\"</code></li>\r\n<li><code>each</code> 操作符与 Python 中的 <code>enumerate</code> 相似，会返回数组中的元素索引以及值</li>\r\n<li>强制指定标量上下文，比如 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">my @rocks = qw ! talc quartz jade obsidian !;</span><br><span class=\"line\"><span class=\"built_in\">print</span> <span class=\"string\">\"How many rocks do you have?\\n\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">print</span> <span class=\"string\">\"I have \"</span>, @rocks, <span class=\"string\">\" rocks!\\n\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">print</span> <span class=\"string\">\"I have \"</span>, scalar @rocks, <span class=\"string\">\" rocks!\\n\"</span>;</span><br></pre></td></tr></table></figure></li>\r\n<li>避免子程序名称与内置函数重名，应使用 <code>&amp;</code>，或者打开警告开关 <code>use warnings</code></li>\r\n<li>不能在 <code>qw</code> 函数中运用字符串插值</li>\r\n<li>如果 <code>print</code> 或者其它函数名后面接着一个左括号，务必保证这个括号是成对的</li>\r\n<li>赋值语句返回实际的变量作为左值</li>\r\n<li>在同一个正则表达式中，反向引用为 <code>\\1</code>，否则使用 <code>$1</code></li>\r\n<li>Perl 提供两种类型的名字空间，符号表 (symbol table) 和词法作用域 (lexical scope)</li>\r\n<li><code>$str =~ tr/x//</code> 仅统计 <code>$str</code> 中 <code>x</code> 的数量，而 <code>tr/x//d</code> 删除所有的 <code>x</code></li>\r\n<li>Windows 用 StrawBerry Perl 安装 CPAN 包时，注意将包含 StrawBerry 的 GCC 工具链优先级提前或者删除其它可能影响编译的路径，部分包需要强制安装：<code>cpan -fi Tk</code></li>\r\n<li>Windows 下 <code>cpan</code> 安装包遇到网络环境差如何设置代理： <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">% set http_proxy=http://127.0.0.1:1234</span><br><span class=\"line\">% cpan -fi xx::xx</span><br></pre></td></tr></table></figure></li>\r\n<li>Windows 下 <code>Strawberry Perl</code> 的 <code>portable</code> 版本中， <code>\\Strawberry\\perl\\vendor\\lib\\Portable</code> 会覆盖掉模块 <code>File::Homedir</code>，导致结果可能与预期不同，应改用 <code>File::HomeDir::Windows</code></li>\r\n<li><strong>更新</strong> 上述的问题可能与 <code>File::HomeDir</code> 的版本过低有关，重新通过 <code>cpan</code> 安装貌似可以解决</li>\r\n<li>在标量上下文中，<code>each</code> 仅返回 <code>hash</code> 的键，或者列表的索引</li>\r\n<li>从源码编译 Perl：<a href=\"http://www.cpan.org/src\" target=\"_blank\" rel=\"noopener\">http://www.cpan.org/src</a>。文章：<a href=\"https://perlmaven.com/how-to-build-perl-from-source-code\" target=\"_blank\" rel=\"noopener\">How to build perl from source on Linux</a>. 示例： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://www.cpan.org/src/5.0/perl-5.26.1.tar.gz</span><br><span class=\"line\">tar -xzf perl-5.26.1.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> perl-5.26.1</span><br><span class=\"line\">./Configure -des -Dprefix=<span class=\"variable\">$HOME</span>/localperl -Dusethreads -Duselargefiles \\</span><br><span class=\"line\">            -Duse64bitint -Duselongdouble -Dusemorebits -Duseshrplib</span><br><span class=\"line\">make -j4</span><br><span class=\"line\">TEST_JOBS=4 make test_harness</span><br><span class=\"line\">make install</span><br></pre></td></tr></table></figure></li>\r\n<li>关于 Perl 命令行参数 <code>-0</code>：\r\n<ul>\r\n<li><code>-0</code>：相当于 <code>$/ = \"\\0\"</code></li>\r\n<li><code>-00</code>：相当于 <code>$/ = \"\"</code>，段落模式</li>\r\n<li><code>-0777</code>：相当于 <code>$/ = undef</code>，啜食模式</li>\r\n</ul></li>\r\n<li>由 <a href=\"https://stackoverflow.com/questions/17600885/sort-strings-in-perl-according-to-date\" target=\"_blank\" rel=\"noopener\">按时间排序字符串</a> 而来的 <a href=\"https://www.wikiwand.com/en/Schwartzian_transform\" target=\"_blank\" rel=\"noopener\">施瓦茨变换(Schwartzian transform)</a></li>\r\n<li>安装 <code>cpanm</code>：<code>cpan App::cpanminus</code>。设置下载镜像： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">alias</span> cpanm=<span class=\"string\">'cpanm --mirror http://mirrors.ustc.edu.cn/CPAN --mirror http://www.cpan.org'</span></span><br></pre></td></tr></table></figure></li>\r\n<li><span class=\"math inline\">\\(\\LaTeX\\)</span> 中展示目录树。 [参考：<a href=\"https://texblog.org/2012/08/07/semi-automatic-directory-tree-in-latex\" target=\"_blank\" rel=\"noopener\">(Semi-)automatic directory-tree in LaTeX</a>] <figure class=\"highlight plain\"><figcaption><span>tree.pl</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\usepackage&#123;dirtree&#125;</span><br><span class=\"line\">...</span><br><span class=\"line\">\\dirtree&#123;</span><br><span class=\"line\">...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure> <code>\\dirtree</code> 中的部分可由 <a href=\"/src/tree.pl\">tree.pl</a> 来生成</li>\r\n<li>如果子程序的定义在其被调用之前，调用时可略去括号；如果定义在被调用之后，则不能省略括号。（后者也为 Perl Maven 的这篇 <a href=\"https://perlmaven.com/subroutines-and-functions-in-perl\" target=\"_blank\" rel=\"noopener\">文章</a> 所推荐）</li>\r\n</ol>\r\n","site":{"data":{}},"excerpt":"<p>Perl 5 笔记.</p>","more":"<ol type=\"1\">\r\n<li><code>use 5.016</code> 表示程序只能在 Perl 5.16 以上的版本运行，另外版本号一定要写成三位数，包括前导零</li>\r\n<li>整数直接量可以用 <code>_</code> 分隔以提高阅读体验，比如 <code>0x50_65_72_7c</code></li>\r\n<li>字符串用点号 <code>.</code> 拼接</li>\r\n<li>字符串重复操作符 <code>x</code> 可以让左边的操作数重复右边的操作数进行连接</li>\r\n<li>语句末尾的 <code>;</code> 除了在块中末尾行，都是必须的</li>\r\n<li>单引号内能转义的字符仅有 <code>'</code> 及 <code>\\</code></li>\r\n<li>双引号内字符串的转义字符有(特殊):\r\n<ul>\r\n<li><code>\\e</code> – Esc (ASCII 编码的转义字符)</li>\r\n<li><code>\\007</code> – 八进制</li>\r\n<li><code>\\x7f</code> – 十六进制</li>\r\n<li><code>\\x{2744}</code> – 十六进制的 Unicode 代码点</li>\r\n<li><code>\\cC</code> – Control 键的代码</li>\r\n<li><code>\\l</code> / <code>\\L</code> – 将下个/后面所有字母转为小写</li>\r\n<li><code>\\u</code> / <code>\\U</code> – 将下个/后面所有字母转为大写</li>\r\n<li><code>\\Q</code> – 把它到 <code>\\E</code> 之间的非单词字符加上反斜线转义</li>\r\n<li><code>\\E</code> – 结束 <code>\\L</code>，<code>\\U</code>，<code>\\Q</code> 开始的作用范围</li>\r\n</ul></li>\r\n<li>获取用户输入并去除末尾的换行符(标量 / 数组)： <figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">chomp</span>(<span class=\"keyword\">my</span> $text = &lt;STDIN&gt;);</span><br><span class=\"line\"><span class=\"keyword\">chomp</span>(<span class=\"keyword\">my</span> @texts = &lt;STDIN&gt;);</span><br></pre></td></tr></table></figure></li>\r\n<li>判断是否为 <code>undef</code>：<code>defined</code> 函数</li>\r\n<li><code>$#foo</code> 返回 <code>@foo</code> 的最大索引值</li>\r\n<li>数组内插到双引号串中时自动添加分隔用的空格，空格这个分隔符的变量为 <code>$\"</code></li>\r\n<li><code>each</code> 操作符与 Python 中的 <code>enumerate</code> 相似，会返回数组中的元素索引以及值</li>\r\n<li>强制指定标量上下文，比如 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">my @rocks = qw ! talc quartz jade obsidian !;</span><br><span class=\"line\"><span class=\"built_in\">print</span> <span class=\"string\">\"How many rocks do you have?\\n\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">print</span> <span class=\"string\">\"I have \"</span>, @rocks, <span class=\"string\">\" rocks!\\n\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">print</span> <span class=\"string\">\"I have \"</span>, scalar @rocks, <span class=\"string\">\" rocks!\\n\"</span>;</span><br></pre></td></tr></table></figure></li>\r\n<li>避免子程序名称与内置函数重名，应使用 <code>&amp;</code>，或者打开警告开关 <code>use warnings</code></li>\r\n<li>不能在 <code>qw</code> 函数中运用字符串插值</li>\r\n<li>如果 <code>print</code> 或者其它函数名后面接着一个左括号，务必保证这个括号是成对的</li>\r\n<li>赋值语句返回实际的变量作为左值</li>\r\n<li>在同一个正则表达式中，反向引用为 <code>\\1</code>，否则使用 <code>$1</code></li>\r\n<li>Perl 提供两种类型的名字空间，符号表 (symbol table) 和词法作用域 (lexical scope)</li>\r\n<li><code>$str =~ tr/x//</code> 仅统计 <code>$str</code> 中 <code>x</code> 的数量，而 <code>tr/x//d</code> 删除所有的 <code>x</code></li>\r\n<li>Windows 用 StrawBerry Perl 安装 CPAN 包时，注意将包含 StrawBerry 的 GCC 工具链优先级提前或者删除其它可能影响编译的路径，部分包需要强制安装：<code>cpan -fi Tk</code></li>\r\n<li>Windows 下 <code>cpan</code> 安装包遇到网络环境差如何设置代理： <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">% set http_proxy=http://127.0.0.1:1234</span><br><span class=\"line\">% cpan -fi xx::xx</span><br></pre></td></tr></table></figure></li>\r\n<li>Windows 下 <code>Strawberry Perl</code> 的 <code>portable</code> 版本中， <code>\\Strawberry\\perl\\vendor\\lib\\Portable</code> 会覆盖掉模块 <code>File::Homedir</code>，导致结果可能与预期不同，应改用 <code>File::HomeDir::Windows</code></li>\r\n<li><strong>更新</strong> 上述的问题可能与 <code>File::HomeDir</code> 的版本过低有关，重新通过 <code>cpan</code> 安装貌似可以解决</li>\r\n<li>在标量上下文中，<code>each</code> 仅返回 <code>hash</code> 的键，或者列表的索引</li>\r\n<li>从源码编译 Perl：<a href=\"http://www.cpan.org/src\" target=\"_blank\" rel=\"noopener\">http://www.cpan.org/src</a>。文章：<a href=\"https://perlmaven.com/how-to-build-perl-from-source-code\" target=\"_blank\" rel=\"noopener\">How to build perl from source on Linux</a>. 示例： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://www.cpan.org/src/5.0/perl-5.26.1.tar.gz</span><br><span class=\"line\">tar -xzf perl-5.26.1.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> perl-5.26.1</span><br><span class=\"line\">./Configure -des -Dprefix=<span class=\"variable\">$HOME</span>/localperl -Dusethreads -Duselargefiles \\</span><br><span class=\"line\">            -Duse64bitint -Duselongdouble -Dusemorebits -Duseshrplib</span><br><span class=\"line\">make -j4</span><br><span class=\"line\">TEST_JOBS=4 make test_harness</span><br><span class=\"line\">make install</span><br></pre></td></tr></table></figure></li>\r\n<li>关于 Perl 命令行参数 <code>-0</code>：\r\n<ul>\r\n<li><code>-0</code>：相当于 <code>$/ = \"\\0\"</code></li>\r\n<li><code>-00</code>：相当于 <code>$/ = \"\"</code>，段落模式</li>\r\n<li><code>-0777</code>：相当于 <code>$/ = undef</code>，啜食模式</li>\r\n</ul></li>\r\n<li>由 <a href=\"https://stackoverflow.com/questions/17600885/sort-strings-in-perl-according-to-date\" target=\"_blank\" rel=\"noopener\">按时间排序字符串</a> 而来的 <a href=\"https://www.wikiwand.com/en/Schwartzian_transform\" target=\"_blank\" rel=\"noopener\">施瓦茨变换(Schwartzian transform)</a></li>\r\n<li>安装 <code>cpanm</code>：<code>cpan App::cpanminus</code>。设置下载镜像： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">alias</span> cpanm=<span class=\"string\">'cpanm --mirror http://mirrors.ustc.edu.cn/CPAN --mirror http://www.cpan.org'</span></span><br></pre></td></tr></table></figure></li>\r\n<li><span class=\"math inline\">\\(\\LaTeX\\)</span> 中展示目录树。 [参考：<a href=\"https://texblog.org/2012/08/07/semi-automatic-directory-tree-in-latex\" target=\"_blank\" rel=\"noopener\">(Semi-)automatic directory-tree in LaTeX</a>] <figure class=\"highlight plain\"><figcaption><span>tree.pl</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\usepackage&#123;dirtree&#125;</span><br><span class=\"line\">...</span><br><span class=\"line\">\\dirtree&#123;</span><br><span class=\"line\">...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure> <code>\\dirtree</code> 中的部分可由 <a href=\"/src/tree.pl\">tree.pl</a> 来生成</li>\r\n<li>如果子程序的定义在其被调用之前，调用时可略去括号；如果定义在被调用之后，则不能省略括号。（后者也为 Perl Maven 的这篇 <a href=\"https://perlmaven.com/subroutines-and-functions-in-perl\" target=\"_blank\" rel=\"noopener\">文章</a> 所推荐）</li>\r\n</ol>"},{"title":"Python 3 拾零","date":"2018-01-23T03:29:14.000Z","_content":"\nPython 3.x 笔记。\n\n<!-- more -->\n\n1. 编码声明。`python` 文件前两行的注释若能被正则匹配到 `coding[=:]\\s*([-\\w.]+)`，则括号中的内容即被认为是文档编码声明。一般花哨的形式有（GNU Emacs）：\n   {% codeblock lang:python %}\n   # -*- coding: <encoding-name> -*-\n   {% endcodeblock %}\n   或 (Bram Moolenaar’s VIM):\n   {% codeblock lang:python %}\n   # vim:fileencoding=<encoding-name>\n   {% endcodeblock %}\n   文档搜索关键字：`Encoding declarations`\n1. 正则模块函数 `re.match` 仅从字符串开头开始匹配\n1. Jupyter Notebook 分享代码 [http://nbviewer.ipython.org](http://nbviewer.ipython.org)\n1. 上述网站可渲染 Github 仓库 / Gist 的 .ipynb 文件，但如果文件改动，需在网址后加\n   `?flush_cache=true` 强制刷新\n1. 推荐 Python 安装包国内镜像网站: [http://mirrors.sohu.com/python](http://mirrors.sohu.com/python)\n1. Jupyter Notebook 更改 MathJax 字体方法：\n   [https://stackoverflow.com/a/44290246/4154610](https://stackoverflow.com/a/44290246/4154610)\n1. [计算 `datatime` 加上特定月数后的日期](https://stackoverflow.com/a/15155212/4154610)：\n   {% codeblock lang:python %}\n   from datetime import datetime\n   from dateutil.relativedelta import relativedelta\n\n   date_after_month = datetime.today()+ relativedelta(months=1)\n   print('Today: ',datetime.today().strftime('%d/%m/%Y'))\n   print('After Month:', date_after_month.strftime('%d/%m/%Y'))\n   {% endcodeblock %}\n1. 代码语法高亮显示工具 [Pygments](http://pygments.org)： `pip install pygments`，命令为 `pygmentize`\n1. Pycharm 自带的代码格式工具风格不同于 `autopep8`，`yapf` 等，在遇到单行长代码（如公式）时，在运算符前面回行，可保证一定的美观度（`#` 表示第 79 列）：\n   {% codeblock lang:python %}\n   # Before:\n   eq1 = (n0 * (1 / alpha + ln(beta)) - summation(ln(t[i]), (i, 0, n0 - 1)) + beta ** alpha * (summation(t[i] ** (-alpha) * ln(t[i]), (i, 0, n0 - 1)) - ln(alpha) * summation(t[i] ** (-alpha), (i, 0, n0 - 1)))).replace(t, ts)\n   eq2 = (n0 - beta ** alpha * summation(t[i] ** (-alpha), (i, 0, n0 - 1))).replace(t, ts)\n\n   # After:\n   eq1 = (n0 * (1 / alpha + ln(beta))                                         #\n          - summation(ln(t[i]), (i, 0, n0 - 1)) + beta ** alpha               #\n          * (summation(t[i] ** (-alpha) * ln(t[i]), (i, 0, n0 - 1))           #\n             - ln(alpha) * summation(t[i] ** (-alpha),                        #\n                                     (i, 0, n0 - 1)))).replace(t, ts)         #\n   eq2 = (n0 - beta ** alpha                                                  #\n          * summation(t[i] ** (-alpha), (i, 0, n0 - 1))).replace(t, ts)       #\n   {% endcodeblock %}\n1. Python 时光机 --- [Python-Future](http://python-future.org/compatible_idioms.html)\n1. 利用 `json` 库将 Python 对象转为 Json 对象时，所有键都会被转化为字符串，所以如果对字典对象进行转换，可能出现 `x != loads(dump(x))` 的情形\n1. 如利用 `Conda` 作为包管理器，当包越来越多时可能出现同时用 Pip 和 Conda 装过的同名包，而这种情况处理起来也比较棘手（如果随意删除安装其中的包可能导致各种依赖关系问题）。所以建议用 Conda 新建环境时候先用 Conda 安装大部分包，再用 Pip 安装没有被 Conda 仓库收录的包。如科学计算方面，可先利用 Conda 安装 `nb-conda-kernels`，此操作会自动安装 Jupyter、IPython 等科学计算环境，再利用 Pip 安装其它包即可\n1. Python 二进制包合集（`Windows`，`Wheel`） [Unofficial Windows Binaries for Python Extension Packages](https://www.lfd.uci.edu/~gohlke/pythonlibs)\n1. Visual Studio Code（VSCode）中新建 Jupyter 文档显示 No Kernel 时，如果 Python 环境为 Anaconda / Miniconda，通常由于 Sqlite3 问题，可以在 [SQLite Download Page](https://www.sqlite.org/download.html) 下载 `sqlite3.dll` 复制到 Python 环境中的 `DLLs` 目录下，如 `D:\\Miniconda\\envs\\py37\\DLLs`\n1. 利用 `xlrd` 库的 `open_workbook` 函数打开 Excel 文件后，如需关闭此文件，需显式调用 `<opened_workbook>.release_resources()` 进行释放\n","source":"_posts/notes-on-python-3.md","raw":"---\ntitle: Python 3 拾零\ndate: 2018-01-23 11:29:14\ntags:\n    - Python\ncategories: Memos\n---\n\nPython 3.x 笔记。\n\n<!-- more -->\n\n1. 编码声明。`python` 文件前两行的注释若能被正则匹配到 `coding[=:]\\s*([-\\w.]+)`，则括号中的内容即被认为是文档编码声明。一般花哨的形式有（GNU Emacs）：\n   {% codeblock lang:python %}\n   # -*- coding: <encoding-name> -*-\n   {% endcodeblock %}\n   或 (Bram Moolenaar’s VIM):\n   {% codeblock lang:python %}\n   # vim:fileencoding=<encoding-name>\n   {% endcodeblock %}\n   文档搜索关键字：`Encoding declarations`\n1. 正则模块函数 `re.match` 仅从字符串开头开始匹配\n1. Jupyter Notebook 分享代码 [http://nbviewer.ipython.org](http://nbviewer.ipython.org)\n1. 上述网站可渲染 Github 仓库 / Gist 的 .ipynb 文件，但如果文件改动，需在网址后加\n   `?flush_cache=true` 强制刷新\n1. 推荐 Python 安装包国内镜像网站: [http://mirrors.sohu.com/python](http://mirrors.sohu.com/python)\n1. Jupyter Notebook 更改 MathJax 字体方法：\n   [https://stackoverflow.com/a/44290246/4154610](https://stackoverflow.com/a/44290246/4154610)\n1. [计算 `datatime` 加上特定月数后的日期](https://stackoverflow.com/a/15155212/4154610)：\n   {% codeblock lang:python %}\n   from datetime import datetime\n   from dateutil.relativedelta import relativedelta\n\n   date_after_month = datetime.today()+ relativedelta(months=1)\n   print('Today: ',datetime.today().strftime('%d/%m/%Y'))\n   print('After Month:', date_after_month.strftime('%d/%m/%Y'))\n   {% endcodeblock %}\n1. 代码语法高亮显示工具 [Pygments](http://pygments.org)： `pip install pygments`，命令为 `pygmentize`\n1. Pycharm 自带的代码格式工具风格不同于 `autopep8`，`yapf` 等，在遇到单行长代码（如公式）时，在运算符前面回行，可保证一定的美观度（`#` 表示第 79 列）：\n   {% codeblock lang:python %}\n   # Before:\n   eq1 = (n0 * (1 / alpha + ln(beta)) - summation(ln(t[i]), (i, 0, n0 - 1)) + beta ** alpha * (summation(t[i] ** (-alpha) * ln(t[i]), (i, 0, n0 - 1)) - ln(alpha) * summation(t[i] ** (-alpha), (i, 0, n0 - 1)))).replace(t, ts)\n   eq2 = (n0 - beta ** alpha * summation(t[i] ** (-alpha), (i, 0, n0 - 1))).replace(t, ts)\n\n   # After:\n   eq1 = (n0 * (1 / alpha + ln(beta))                                         #\n          - summation(ln(t[i]), (i, 0, n0 - 1)) + beta ** alpha               #\n          * (summation(t[i] ** (-alpha) * ln(t[i]), (i, 0, n0 - 1))           #\n             - ln(alpha) * summation(t[i] ** (-alpha),                        #\n                                     (i, 0, n0 - 1)))).replace(t, ts)         #\n   eq2 = (n0 - beta ** alpha                                                  #\n          * summation(t[i] ** (-alpha), (i, 0, n0 - 1))).replace(t, ts)       #\n   {% endcodeblock %}\n1. Python 时光机 --- [Python-Future](http://python-future.org/compatible_idioms.html)\n1. 利用 `json` 库将 Python 对象转为 Json 对象时，所有键都会被转化为字符串，所以如果对字典对象进行转换，可能出现 `x != loads(dump(x))` 的情形\n1. 如利用 `Conda` 作为包管理器，当包越来越多时可能出现同时用 Pip 和 Conda 装过的同名包，而这种情况处理起来也比较棘手（如果随意删除安装其中的包可能导致各种依赖关系问题）。所以建议用 Conda 新建环境时候先用 Conda 安装大部分包，再用 Pip 安装没有被 Conda 仓库收录的包。如科学计算方面，可先利用 Conda 安装 `nb-conda-kernels`，此操作会自动安装 Jupyter、IPython 等科学计算环境，再利用 Pip 安装其它包即可\n1. Python 二进制包合集（`Windows`，`Wheel`） [Unofficial Windows Binaries for Python Extension Packages](https://www.lfd.uci.edu/~gohlke/pythonlibs)\n1. Visual Studio Code（VSCode）中新建 Jupyter 文档显示 No Kernel 时，如果 Python 环境为 Anaconda / Miniconda，通常由于 Sqlite3 问题，可以在 [SQLite Download Page](https://www.sqlite.org/download.html) 下载 `sqlite3.dll` 复制到 Python 环境中的 `DLLs` 目录下，如 `D:\\Miniconda\\envs\\py37\\DLLs`\n1. 利用 `xlrd` 库的 `open_workbook` 函数打开 Excel 文件后，如需关闭此文件，需显式调用 `<opened_workbook>.release_resources()` 进行释放\n","slug":"notes-on-python-3","published":1,"updated":"2023-03-09T16:09:38.263Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u336p0028p4x0xegw4l39","content":"<p>Python 3.x 笔记。</p>\r\n<a id=\"more\"></a>\r\n<ol type=\"1\">\r\n<li>编码声明。<code>python</code> 文件前两行的注释若能被正则匹配到 <code>coding[=:]\\s*([-\\w.]+)</code>，则括号中的内容即被认为是文档编码声明。一般花哨的形式有（GNU Emacs）： <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: &lt;encoding-name&gt; -*-</span></span><br></pre></td></tr></table></figure> 或 (Bram Moolenaar’s VIM): <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># vim:fileencoding=&lt;encoding-name&gt;</span></span><br></pre></td></tr></table></figure> 文档搜索关键字：<code>Encoding declarations</code></li>\r\n<li>正则模块函数 <code>re.match</code> 仅从字符串开头开始匹配</li>\r\n<li>Jupyter Notebook 分享代码 <a href=\"http://nbviewer.ipython.org\" target=\"_blank\" rel=\"noopener\">http://nbviewer.ipython.org</a></li>\r\n<li>上述网站可渲染 Github 仓库 / Gist 的 .ipynb 文件，但如果文件改动，需在网址后加 <code>?flush_cache=true</code> 强制刷新</li>\r\n<li>推荐 Python 安装包国内镜像网站: <a href=\"http://mirrors.sohu.com/python\" target=\"_blank\" rel=\"noopener\">http://mirrors.sohu.com/python</a></li>\r\n<li>Jupyter Notebook 更改 MathJax 字体方法： <a href=\"https://stackoverflow.com/a/44290246/4154610\" target=\"_blank\" rel=\"noopener\">https://stackoverflow.com/a/44290246/4154610</a></li>\r\n<li><a href=\"https://stackoverflow.com/a/15155212/4154610\" target=\"_blank\" rel=\"noopener\">计算 <code>datatime</code> 加上特定月数后的日期</a>： <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> datetime <span class=\"keyword\">import</span> datetime</span><br><span class=\"line\"><span class=\"keyword\">from</span> dateutil.relativedelta <span class=\"keyword\">import</span> relativedelta</span><br><span class=\"line\"></span><br><span class=\"line\">date_after_month = datetime.today()+ relativedelta(months=<span class=\"number\">1</span>)</span><br><span class=\"line\">print(<span class=\"string\">'Today: '</span>,datetime.today().strftime(<span class=\"string\">'%d/%m/%Y'</span>))</span><br><span class=\"line\">print(<span class=\"string\">'After Month:'</span>, date_after_month.strftime(<span class=\"string\">'%d/%m/%Y'</span>))</span><br></pre></td></tr></table></figure></li>\r\n<li>代码语法高亮显示工具 <a href=\"http://pygments.org\" target=\"_blank\" rel=\"noopener\">Pygments</a>： <code>pip install pygments</code>，命令为 <code>pygmentize</code></li>\r\n<li>Pycharm 自带的代码格式工具风格不同于 <code>autopep8</code>，<code>yapf</code> 等，在遇到单行长代码（如公式）时，在运算符前面回行，可保证一定的美观度（<code>#</code> 表示第 79 列）： <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Before:</span></span><br><span class=\"line\">eq1 = (n0 * (<span class=\"number\">1</span> / alpha + ln(beta)) - summation(ln(t[i]), (i, <span class=\"number\">0</span>, n0 - <span class=\"number\">1</span>)) + beta ** alpha * (summation(t[i] ** (-alpha) * ln(t[i]), (i, <span class=\"number\">0</span>, n0 - <span class=\"number\">1</span>)) - ln(alpha) * summation(t[i] ** (-alpha), (i, <span class=\"number\">0</span>, n0 - <span class=\"number\">1</span>)))).replace(t, ts)</span><br><span class=\"line\">eq2 = (n0 - beta ** alpha * summation(t[i] ** (-alpha), (i, <span class=\"number\">0</span>, n0 - <span class=\"number\">1</span>))).replace(t, ts)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># After:</span></span><br><span class=\"line\">eq1 = (n0 * (<span class=\"number\">1</span> / alpha + ln(beta))                                         <span class=\"comment\">#</span></span><br><span class=\"line\">       - summation(ln(t[i]), (i, <span class=\"number\">0</span>, n0 - <span class=\"number\">1</span>)) + beta ** alpha               <span class=\"comment\">#</span></span><br><span class=\"line\">       * (summation(t[i] ** (-alpha) * ln(t[i]), (i, <span class=\"number\">0</span>, n0 - <span class=\"number\">1</span>))           <span class=\"comment\">#</span></span><br><span class=\"line\">          - ln(alpha) * summation(t[i] ** (-alpha),                        <span class=\"comment\">#</span></span><br><span class=\"line\">                                  (i, <span class=\"number\">0</span>, n0 - <span class=\"number\">1</span>)))).replace(t, ts)         <span class=\"comment\">#</span></span><br><span class=\"line\">eq2 = (n0 - beta ** alpha                                                  <span class=\"comment\">#</span></span><br><span class=\"line\">       * summation(t[i] ** (-alpha), (i, <span class=\"number\">0</span>, n0 - <span class=\"number\">1</span>))).replace(t, ts)       <span class=\"comment\">#</span></span><br></pre></td></tr></table></figure></li>\r\n<li>Python 时光机 — <a href=\"http://python-future.org/compatible_idioms.html\" target=\"_blank\" rel=\"noopener\">Python-Future</a></li>\r\n<li>利用 <code>json</code> 库将 Python 对象转为 Json 对象时，所有键都会被转化为字符串，所以如果对字典对象进行转换，可能出现 <code>x != loads(dump(x))</code> 的情形</li>\r\n<li>如利用 <code>Conda</code> 作为包管理器，当包越来越多时可能出现同时用 Pip 和 Conda 装过的同名包，而这种情况处理起来也比较棘手（如果随意删除安装其中的包可能导致各种依赖关系问题）。所以建议用 Conda 新建环境时候先用 Conda 安装大部分包，再用 Pip 安装没有被 Conda 仓库收录的包。如科学计算方面，可先利用 Conda 安装 <code>nb-conda-kernels</code>，此操作会自动安装 Jupyter、IPython 等科学计算环境，再利用 Pip 安装其它包即可</li>\r\n<li>Python 二进制包合集（<code>Windows</code>，<code>Wheel</code>） <a href=\"https://www.lfd.uci.edu/~gohlke/pythonlibs\" target=\"_blank\" rel=\"noopener\">Unofficial Windows Binaries for Python Extension Packages</a></li>\r\n<li>Visual Studio Code（VSCode）中新建 Jupyter 文档显示 No Kernel 时，如果 Python 环境为 Anaconda / Miniconda，通常由于 Sqlite3 问题，可以在 <a href=\"https://www.sqlite.org/download.html\" target=\"_blank\" rel=\"noopener\">SQLite Download Page</a> 下载 <code>sqlite3.dll</code> 复制到 Python 环境中的 <code>DLLs</code> 目录下，如 <code>D:\\Miniconda\\envs\\py37\\DLLs</code></li>\r\n<li>利用 <code>xlrd</code> 库的 <code>open_workbook</code> 函数打开 Excel 文件后，如需关闭此文件，需显式调用 <code>&lt;opened_workbook&gt;.release_resources()</code> 进行释放</li>\r\n</ol>\r\n","site":{"data":{}},"excerpt":"<p>Python 3.x 笔记。</p>","more":"<ol type=\"1\">\r\n<li>编码声明。<code>python</code> 文件前两行的注释若能被正则匹配到 <code>coding[=:]\\s*([-\\w.]+)</code>，则括号中的内容即被认为是文档编码声明。一般花哨的形式有（GNU Emacs）： <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: &lt;encoding-name&gt; -*-</span></span><br></pre></td></tr></table></figure> 或 (Bram Moolenaar’s VIM): <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># vim:fileencoding=&lt;encoding-name&gt;</span></span><br></pre></td></tr></table></figure> 文档搜索关键字：<code>Encoding declarations</code></li>\r\n<li>正则模块函数 <code>re.match</code> 仅从字符串开头开始匹配</li>\r\n<li>Jupyter Notebook 分享代码 <a href=\"http://nbviewer.ipython.org\" target=\"_blank\" rel=\"noopener\">http://nbviewer.ipython.org</a></li>\r\n<li>上述网站可渲染 Github 仓库 / Gist 的 .ipynb 文件，但如果文件改动，需在网址后加 <code>?flush_cache=true</code> 强制刷新</li>\r\n<li>推荐 Python 安装包国内镜像网站: <a href=\"http://mirrors.sohu.com/python\" target=\"_blank\" rel=\"noopener\">http://mirrors.sohu.com/python</a></li>\r\n<li>Jupyter Notebook 更改 MathJax 字体方法： <a href=\"https://stackoverflow.com/a/44290246/4154610\" target=\"_blank\" rel=\"noopener\">https://stackoverflow.com/a/44290246/4154610</a></li>\r\n<li><a href=\"https://stackoverflow.com/a/15155212/4154610\" target=\"_blank\" rel=\"noopener\">计算 <code>datatime</code> 加上特定月数后的日期</a>： <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> datetime <span class=\"keyword\">import</span> datetime</span><br><span class=\"line\"><span class=\"keyword\">from</span> dateutil.relativedelta <span class=\"keyword\">import</span> relativedelta</span><br><span class=\"line\"></span><br><span class=\"line\">date_after_month = datetime.today()+ relativedelta(months=<span class=\"number\">1</span>)</span><br><span class=\"line\">print(<span class=\"string\">'Today: '</span>,datetime.today().strftime(<span class=\"string\">'%d/%m/%Y'</span>))</span><br><span class=\"line\">print(<span class=\"string\">'After Month:'</span>, date_after_month.strftime(<span class=\"string\">'%d/%m/%Y'</span>))</span><br></pre></td></tr></table></figure></li>\r\n<li>代码语法高亮显示工具 <a href=\"http://pygments.org\" target=\"_blank\" rel=\"noopener\">Pygments</a>： <code>pip install pygments</code>，命令为 <code>pygmentize</code></li>\r\n<li>Pycharm 自带的代码格式工具风格不同于 <code>autopep8</code>，<code>yapf</code> 等，在遇到单行长代码（如公式）时，在运算符前面回行，可保证一定的美观度（<code>#</code> 表示第 79 列）： <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Before:</span></span><br><span class=\"line\">eq1 = (n0 * (<span class=\"number\">1</span> / alpha + ln(beta)) - summation(ln(t[i]), (i, <span class=\"number\">0</span>, n0 - <span class=\"number\">1</span>)) + beta ** alpha * (summation(t[i] ** (-alpha) * ln(t[i]), (i, <span class=\"number\">0</span>, n0 - <span class=\"number\">1</span>)) - ln(alpha) * summation(t[i] ** (-alpha), (i, <span class=\"number\">0</span>, n0 - <span class=\"number\">1</span>)))).replace(t, ts)</span><br><span class=\"line\">eq2 = (n0 - beta ** alpha * summation(t[i] ** (-alpha), (i, <span class=\"number\">0</span>, n0 - <span class=\"number\">1</span>))).replace(t, ts)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># After:</span></span><br><span class=\"line\">eq1 = (n0 * (<span class=\"number\">1</span> / alpha + ln(beta))                                         <span class=\"comment\">#</span></span><br><span class=\"line\">       - summation(ln(t[i]), (i, <span class=\"number\">0</span>, n0 - <span class=\"number\">1</span>)) + beta ** alpha               <span class=\"comment\">#</span></span><br><span class=\"line\">       * (summation(t[i] ** (-alpha) * ln(t[i]), (i, <span class=\"number\">0</span>, n0 - <span class=\"number\">1</span>))           <span class=\"comment\">#</span></span><br><span class=\"line\">          - ln(alpha) * summation(t[i] ** (-alpha),                        <span class=\"comment\">#</span></span><br><span class=\"line\">                                  (i, <span class=\"number\">0</span>, n0 - <span class=\"number\">1</span>)))).replace(t, ts)         <span class=\"comment\">#</span></span><br><span class=\"line\">eq2 = (n0 - beta ** alpha                                                  <span class=\"comment\">#</span></span><br><span class=\"line\">       * summation(t[i] ** (-alpha), (i, <span class=\"number\">0</span>, n0 - <span class=\"number\">1</span>))).replace(t, ts)       <span class=\"comment\">#</span></span><br></pre></td></tr></table></figure></li>\r\n<li>Python 时光机 — <a href=\"http://python-future.org/compatible_idioms.html\" target=\"_blank\" rel=\"noopener\">Python-Future</a></li>\r\n<li>利用 <code>json</code> 库将 Python 对象转为 Json 对象时，所有键都会被转化为字符串，所以如果对字典对象进行转换，可能出现 <code>x != loads(dump(x))</code> 的情形</li>\r\n<li>如利用 <code>Conda</code> 作为包管理器，当包越来越多时可能出现同时用 Pip 和 Conda 装过的同名包，而这种情况处理起来也比较棘手（如果随意删除安装其中的包可能导致各种依赖关系问题）。所以建议用 Conda 新建环境时候先用 Conda 安装大部分包，再用 Pip 安装没有被 Conda 仓库收录的包。如科学计算方面，可先利用 Conda 安装 <code>nb-conda-kernels</code>，此操作会自动安装 Jupyter、IPython 等科学计算环境，再利用 Pip 安装其它包即可</li>\r\n<li>Python 二进制包合集（<code>Windows</code>，<code>Wheel</code>） <a href=\"https://www.lfd.uci.edu/~gohlke/pythonlibs\" target=\"_blank\" rel=\"noopener\">Unofficial Windows Binaries for Python Extension Packages</a></li>\r\n<li>Visual Studio Code（VSCode）中新建 Jupyter 文档显示 No Kernel 时，如果 Python 环境为 Anaconda / Miniconda，通常由于 Sqlite3 问题，可以在 <a href=\"https://www.sqlite.org/download.html\" target=\"_blank\" rel=\"noopener\">SQLite Download Page</a> 下载 <code>sqlite3.dll</code> 复制到 Python 环境中的 <code>DLLs</code> 目录下，如 <code>D:\\Miniconda\\envs\\py37\\DLLs</code></li>\r\n<li>利用 <code>xlrd</code> 库的 <code>open_workbook</code> 函数打开 Excel 文件后，如需关闭此文件，需显式调用 <code>&lt;opened_workbook&gt;.release_resources()</code> 进行释放</li>\r\n</ol>"},{"title":"《统计学习方法》笔记一","date":"2018-06-29T03:58:58.000Z","mathjax":true,"_content":"\n李航《统计学习方法》一书第 12 页关于简单的多项式曲线拟合有如下结论：\n\n{% note %}\n具体地，求以下经验风险最小化：\n$$\nL(\\omega) = \\frac 12 \\sum_{i=1}^N \\left(f(x_i, \\omega) - y_i\\right)^2\n\\tag{1.18} \\label{1.18}\n$$\n... <br>\n这是一个简单的最优化问题。将模型与训练数据代入式 $\\eqref{1.18}$ 中，有\n$$\nL(\\omega) = \\frac 12 \\sum_{i=1}^N \\left(\\sum_{j=0}^M \\omega_j x_i^j-y_i\\right)^2\n$$\n对 $\\omega_j$ 求偏导数并令其为 $0$，可得\n$$\n\\omega_j = \\frac{\\sum\\limits_{i=1}^N x_i^j y_i}{\\sum\\limits_{i=1}^N x_i^{j+1}}, \\quad j = 0,1,2,\\ldots M\n\\tag{*} \\label{*}\n$$\n{% endnote %}\n\n<!-- more -->\n\n但通过简单求导，似乎事实并不那么简单。这里为计算 $\\partial L/\\partial \\omega_j$，将原求和式下标换作 $k$，以免混淆出错。\n\n$$\n    \\frac{\\partial L}{\\partial \\omega_j}\n    = \\sum_{i=1}^N \\left(\\sum_{j=0}^M \\omega_j x_i^j - y_i\\right) x_i^j\n    = \\sum_{k=0}^M \\left(\\sum_{i=1}^N x_i^{k+j}\\right)\\omega_k\n      - \\sum_{i=1}^N y_i x_i^j\n    \\tag{1}\n    \\label{1}\n$$\n\n故对于 $j = 0, 1, 2\\ldots M$，令 $\\partial L/\\partial \\omega_j = 0$，可得如下 $M$ 元方程组：\n\n$$\n    \\begin{cases}\n        \\omega_0 \\sum\\limits_{i=1}^N x_i^0 +\n        \\omega_1 \\sum\\limits_{i=1}^N x_i^1 + \\cdots +\n        \\omega_M \\sum\\limits_{i=1}^N x_i^M = \\sum\\limits_{i=1}^N y_i & \\\\\n        \\omega_0 \\sum\\limits_{i=1}^N x_i^1 +\n        \\omega_1 \\sum\\limits_{i=1}^N x_i^2 + \\cdots +\n        \\omega_M \\sum\\limits_{i=1}^N x_i^{M+1} = \\sum\\limits_{i=1}^N x_i y_i & \\\\\n        \\hfil   \\vdots  \\hfil & \\\\\n        \\omega_0 \\sum\\limits_{i=1}^N x_i^M +\n        \\omega_1 \\sum\\limits_{i=1}^N x_i^{M+1} + \\cdots +\n        \\omega_M \\sum\\limits_{i=1}^N x_i^{2M} = \\sum\\limits_{i=1}^N x_i^M y_i &\n    \\end{cases}\n$$\n\n写为矩阵形式：\n\n$$\n    \\underbrace{\n    \\begin{pmatrix}\n        \\sum\\limits_{i=1}^N x_i^0 & \\cdots & \\sum\\limits_{i=1}^N x_i^1 & \\sum\\limits_{i=1}^N x_i^M \\\\\n        \\sum\\limits_{i=1}^N x_i^1 & \\cdots & \\sum\\limits_{i=1}^N x_i^2 & \\sum\\limits_{i=1}^N x_i^{M+1} \\\\\n        \\vdots & \\vdots & \\ddots & \\vdots \\\\\n        \\sum\\limits_{i=1}^N x_i^M & \\cdots & \\sum\\limits_{i=1}^N x_i^{M+1} & \\sum\\limits_{i=1}^N x_i^{2M}\n    \\end{pmatrix}\n    }_{\\boldsymbol{A}}\n    \\underbrace{\n    \\begin{pmatrix}\n        \\omega_0 \\vphantom{\\sum\\limits_{i=1}^{N}x_i^{M+1}} \\\\\n        \\omega_1 \\vphantom{\\sum\\limits_{i=1}^{N}x_i^{M+1}} \\\\\n        \\vdots \\vphantom{\\ddots}\\\\\n        \\omega_M \\vphantom{\\sum\\limits_{i=1}^{N}x_i^{M+1}}\n    \\end{pmatrix}\n    }_{\\boldsymbol{\\omega}}\n    =\n    \\underbrace{\n    \\begin{pmatrix}\n        \\sum\\limits_{i=1}^N y_i \\vphantom{\\sum\\limits_{i=1}^{N}x_i^{M+1}}\\\\\n        \\sum\\limits_{i=1}^N x_i y_i \\vphantom{\\sum\\limits_{i=1}^{N}x_i^{M+1}}\\\\\n        \\vdots \\vphantom{\\ddots}\\\\\n        \\sum\\limits_{i=1}^N x_i^M y_i \\vphantom{\\sum\\limits_{i=1}^{N}x_i^{M+1}}\\\\\n    \\end{pmatrix}\n    }_{\\boldsymbol{B}}\n$$\n\n注意到 $\\boldsymbol{A}, \\boldsymbol{B}$ 均可写为两个矩阵相乘的形式：\n\n$$\n    \\boldsymbol{A}=\n    \\begin{pmatrix}\n        1 & 1 & 1 & \\cdots & 1 \\vphantom{x_1^M} \\\\\n        x_1 & x_2 & x_3 & \\cdots & x_M \\vphantom{x_2^M} \\\\\n        x_1^2 & x_2^2 & x_3^2 & \\cdots & x_M^2 \\vphantom{x_3^M} \\\\\n        \\vdots & \\vdots & \\vdots & \\ddots & \\vdots \\\\\n        x_1^M & x_2^M & x_3^M & \\cdots & x_M^M \\vphantom{x_M^M}\n    \\end{pmatrix}\n    \\begin{pmatrix}\n        1 & x_1 & x_1^2 & \\cdots & x_1^M \\\\\n        1 & x_2 & x_2^2 & \\cdots & x_2^M \\\\\n        1 & x_3 & x_3^2 & \\cdots & x_3^M \\\\\n        \\vdots & \\vdots & \\vdots & \\ddots & \\vdots \\\\\n        1 & x_M & x_M^2 & \\cdots & x_M^M \\\\\n    \\end{pmatrix}\n    \\triangleq \\boldsymbol{V} \\boldsymbol{V}', \\quad\n    \\boldsymbol{B} = \\boldsymbol{V} \\boldsymbol{Y}\n$$\n其中 $\\boldsymbol{Y}$ 为输出向量。于是多项式参数矩阵应由下式给出：\n\n$$\n    \\boldsymbol{\\omega} =\n    (\\boldsymbol{V}\\boldsymbol{V'})^{-1}\\boldsymbol{V}\\boldsymbol{Y}\n    \\tag{**}\n    \\label{**}\n$$\n\n该式与 $\\eqref{*}$ 有一定出入，且不易进一步化简，其中涉及 Vandermonde 矩阵逆，可参考\n\n- [Proof Wiki - Inverse of Vandermonde Matrix][inverse-of-vandermonde-matrix]\n- [Proof of Vandermonde Matrix Inverse Formula][mse-698254]\n- [Inverse of the Vandermonde and Vandermonde confluent matrices][inverse-of-the-vandermonde-and-vandermonde-confluent-matrices]\n\n于是针对原书中结论 $\\eqref{*}$ 以及逐步推导的结果 $\\eqref{**}$ 进行数值试验。\n给定 $\\boldsymbol{X}, \\boldsymbol{Y}$，分别利用两种方法得到 $\\boldsymbol{\\omega}$ 的结果，并代回\n$\\eqref{1}$ 中，这里利用 Python 的科学计算包进行试验。\n\n{% codeblock lang:python polyfit.py %}\nimport numpy as np\nimport numpy.random as nr\n\nnp.set_printoptions(precision=4, suppress=True)\n\n\ndef equj(xs, ys, omegas, j):\n    n = len(xs)\n    m = len(omegas)\n    return np.sum([np.sum(omegas[k] * xs[i-1] ** (k+j) for k in range(m))\n                   - xs[i-1] ** j * ys[i-1] for i in range(1, n+1)])\n\n\ndef omegaj1(xs, ys, j):\n    # 方法一\n    return np.sum(xs ** j * ys) / np.sum(xs ** (j+1))\n\n\ndef omegaj2(xs, ys, m):\n    # 方法二\n    v = np.matrix(np.column_stack([xs ** i for i in range(m)]).T)\n    y = np.matrix(v) * np.matrix(ys).T\n    return np.linalg.solve(v * v.T, y)\n\n\nns = [4, 4, 6, 8, 10, 10, 10]\nms = [3, 4, 5, 7, 6, 7, 8]\n\nfor n0, m0 in zip(ns, ms):\n    xs0 = np.linspace(.1, 1, n0)\n    ys0 = nr.uniform(1, 10, size=n0)\n    omegas_sol1 = [omegaj1(xs0, ys0, j) for j in range(m0+1)]\n    omegas_sol2 = omegaj2(xs0, ys0, m0)\n    res1 = np.array([equj(xs0, ys0, omegas_sol1, j) for j in range(m0+1)])\n    res2 = np.array([equj(xs0, ys0, omegas_sol2, j) for j in range(m0+1)])\n\n    print(f'x: {xs0}')\n    print(f'y: {ys0}')\n    print(f'N: {n0}, M: {m0}')\n    print('res1:', res1)\n    print('res2:', res2)\n    print()\n{% endcodeblock %}\n\n结论整合如下：\n\n$$\n\\begin{array}{c|l}\n    \\hline\n    {(N, M)} & {(4, 3)} \\\\\n    {\\boldsymbol{X}} & {\\begin{array}{llll} {0.1} & {0.4} & {0.7} & {1.0} \\end{array}} \\\\\n    {\\boldsymbol{Y}} & {\\begin{array}{llll} {6.4086} & {2.5888} & {1.1871} & {3.0044} \\end{array}} \\\\\n    {\\text{res}_1} & {\\begin{array}{llll} {26.8738} & {20.8370}  & {17.5522} & {15.6374} \\end{array}} \\\\\n    {\\text{res}_2} & {\\begin{array}{llll} 0  &  0  &  0  &  {-0.0065} \\end{array}} \\\\\n    \\hline\n    {(N, M)} & {(4, 4)} \\\\\n    {\\boldsymbol{X}} & {\\begin{array}{llll} 0.1 & 0.4 & 0.7 & 1.0 \\end{array}} \\\\\n    {\\boldsymbol{Y}} & {\\begin{array}{llll} {6.0025} & {7.9131} & {4.7549} & {4.6187} \\end{array}} \\\\\n    {\\text{res}_1} & {\\begin{array}{lllll} {58.2611} & {44.2894} & {38.6435} & {35.4777} & {33.4895} \\end{array}} \\\\\n    {\\text{res}_2} & {\\begin{array}{lllll} 0  &  0  &  0  &  0 & 0 \\end{array}} \\\\\n    \\hline\n    {(N, M)} & {(6, 5)} \\\\\n    {\\boldsymbol{X}} & {\\begin{array}{llllll} {0.10} & {0.28} & {0.46} & {0.64} & {0.82} & {1.00} \\end{array}} \\\\\n    {\\boldsymbol{Y}} & {\\begin{array}{llllll} {4.0511} & {7.6577} & {2.0744} & {4.0110}  & {3.2187} & {7.4847} \\end{array}} \\\\\n    {\\text{res}_1} & {\\begin{array}{llllll} {94.1633} & {70.4719} & {59.2198} & {52.4345} & {47.9117} & {44.7218} \\end{array}} \\\\\n    {\\text{res}_2} & {\\begin{array}{llllll} 0  &  0  &  0  &  0 & 0 & {-0.0040}\\end{array}} \\\\\n    \\hline\n    {(N, M)} & {(8, 7)} \\\\\n    {\\boldsymbol{X}} & {\\begin{array}{llllllll} {0.1000} & {0.2286} & {0.3571} & {0.4857} & {0.6143} & {0.7429} & {0.8714} & {1.0000} \\end{array}} \\\\\n    {\\boldsymbol{Y}} & {\\begin{array}{llllllll} {7.5006} & {8.4878} & {6.9965} & {8.8697} & {3.8661} & {3.0010}  & {6.0474} & {9.7587} \\end{array}} \\\\\n    {\\text{res}_1} & {\\begin{array}{llll} {193.4017} & {148.1521} & {125.1272} & {110.7083} \\\\ {100.7469} &  {93.4678} &  {87.9480}  &  {83.6494} \\end{array}} \\\\\n    {\\text{res}_2} & {\\begin{array}{llllllll} 0  &  0  &  0  &  0 & 0 & 0 & 0 & {-0.0001} \\end{array}} \\\\\n    \\hline\n    {(N, M)} & {(10, 6)} \\\\\n    {\\boldsymbol{X}} & {\\begin{array}{llllllllll} {0.1} & {0.2} & {0.3} & {0.4} & {0.5} & {0.6} & {0.7} & {0.8} & {0.9} & {1.0} \\end{array}} \\\\\n    {\\boldsymbol{Y}} & {\\begin{array}{lllll} {8.4519} & {2.8615} & {8.2275} & {5.5887} & {6.4139} \\\\ {4.8329} & {2.3945} & {9.5324} & {1.5159} & {4.8203} \\end{array}} \\\\\n    {\\text{res}_1} & {\\begin{array}{lllllll} {158.5266} & {117.4165}  & {96.8007} &  {84.1716} &  {75.5419} &  {69.2490}  &  {64.4573} \\end{array}} \\\\\n    {\\text{res}_2} & {\\begin{array}{llllllllll} 0  &  0  &  0  &  0 & 0 & 0 & 0 & {-0.0001} \\end{array}} \\\\\n    \\hline\n    {(N, M)} & {(10, 7)} \\\\\n    {\\boldsymbol{X}} & {\\begin{array}{llllllllll} {0.1} & {0.2} & {0.3} & {0.4} & {0.5} & {0.6} & {0.7} & {0.8} & {0.9} & {1.0} \\end{array}} \\\\\n    {\\boldsymbol{Y}} & {\\begin{array}{lllll} {2.9699} & {8.8436} & {6.0365} & {8.7695} & {4.6556} \\\\ {8.6279} & {1.5868} & {7.5356} & {2.1053} & {5.5741} \\end{array}} \\\\\n    {\\text{res}_1} & {\\begin{array}{llll} {176.0512} & {131.4928} & {109.7501} &  {96.1845} \\\\ {86.7478} & {79.7768} & {74.4193} & {70.1824} \\end{array}} \\\\\n    {\\text{res}_2} & {\\begin{array}{llllllllll} 0  &  0  &  0  &  0 & 0 & 0 & 0 & {-0.0001} \\end{array}} \\\\\n    \\hline\n    {(N, M)} & {(10, 8)} \\\\\n    {\\boldsymbol{X}} & {\\begin{array}{llllllllll} {0.1} & {0.2} & {0.3} & {0.4} & {0.5} & {0.6} & {0.7} & {0.8} & {0.9} & {1.0} \\end{array}} \\\\\n    {\\boldsymbol{Y}} & {\\begin{array}{lllll} {1.9506} & {5.4975} & {7.7366} & {3.4942} & {4.6710} \\\\ {9.2793} & {9.7969} & {2.0273} & {3.1859} & {3.0251} \\end{array}} \\\\\n    {\\text{res}_1} & {\\begin{array}{lllll} {158.7535} & {117.7695} &  {98.8822} &  {87.3893} &  {79.4357} \\\\ {73.5334} & {68.9573} & {65.3023} & {62.3207} & \\end{array}} \\\\\n    {\\text{res}_2} & {\\begin{array}{llllllll} 0  &  0  &  0  &  0 & 0 & 0 & 0 & 0 \\end{array}} \\\\\n    \\hline\n\\end{array}\n$$\n\n方法一得出的 $\\boldsymbol{\\omega}$ 代回方程的结果不为零，说明原书结论有误。\n\n\n[mse-698254]: https://math.stackexchange.com/questions/698254/proof-of-vandermonde-matrix-inverse-formula\n[inverse-of-vandermonde-matrix]: https://proofwiki.org/wiki/Inverse_of_Vandermonde_Matrix\n[inverse-of-the-vandermonde-and-vandermonde-confluent-matrices]: http://naturalspublishing.com/files/published/18raq6j7bs84z4.pdf\n\n","source":"_posts/notes-on-statistical-learning-methods-01.md","raw":"---\ntitle: 《统计学习方法》笔记一\ndate: 2018-06-29 11:58:58\ncategories: Machine Learning\ntags:\n    - Python\n    - Statistics\n    - Matrix\n    - Linear Algebra\nmathjax: true\n---\n\n李航《统计学习方法》一书第 12 页关于简单的多项式曲线拟合有如下结论：\n\n{% note %}\n具体地，求以下经验风险最小化：\n$$\nL(\\omega) = \\frac 12 \\sum_{i=1}^N \\left(f(x_i, \\omega) - y_i\\right)^2\n\\tag{1.18} \\label{1.18}\n$$\n... <br>\n这是一个简单的最优化问题。将模型与训练数据代入式 $\\eqref{1.18}$ 中，有\n$$\nL(\\omega) = \\frac 12 \\sum_{i=1}^N \\left(\\sum_{j=0}^M \\omega_j x_i^j-y_i\\right)^2\n$$\n对 $\\omega_j$ 求偏导数并令其为 $0$，可得\n$$\n\\omega_j = \\frac{\\sum\\limits_{i=1}^N x_i^j y_i}{\\sum\\limits_{i=1}^N x_i^{j+1}}, \\quad j = 0,1,2,\\ldots M\n\\tag{*} \\label{*}\n$$\n{% endnote %}\n\n<!-- more -->\n\n但通过简单求导，似乎事实并不那么简单。这里为计算 $\\partial L/\\partial \\omega_j$，将原求和式下标换作 $k$，以免混淆出错。\n\n$$\n    \\frac{\\partial L}{\\partial \\omega_j}\n    = \\sum_{i=1}^N \\left(\\sum_{j=0}^M \\omega_j x_i^j - y_i\\right) x_i^j\n    = \\sum_{k=0}^M \\left(\\sum_{i=1}^N x_i^{k+j}\\right)\\omega_k\n      - \\sum_{i=1}^N y_i x_i^j\n    \\tag{1}\n    \\label{1}\n$$\n\n故对于 $j = 0, 1, 2\\ldots M$，令 $\\partial L/\\partial \\omega_j = 0$，可得如下 $M$ 元方程组：\n\n$$\n    \\begin{cases}\n        \\omega_0 \\sum\\limits_{i=1}^N x_i^0 +\n        \\omega_1 \\sum\\limits_{i=1}^N x_i^1 + \\cdots +\n        \\omega_M \\sum\\limits_{i=1}^N x_i^M = \\sum\\limits_{i=1}^N y_i & \\\\\n        \\omega_0 \\sum\\limits_{i=1}^N x_i^1 +\n        \\omega_1 \\sum\\limits_{i=1}^N x_i^2 + \\cdots +\n        \\omega_M \\sum\\limits_{i=1}^N x_i^{M+1} = \\sum\\limits_{i=1}^N x_i y_i & \\\\\n        \\hfil   \\vdots  \\hfil & \\\\\n        \\omega_0 \\sum\\limits_{i=1}^N x_i^M +\n        \\omega_1 \\sum\\limits_{i=1}^N x_i^{M+1} + \\cdots +\n        \\omega_M \\sum\\limits_{i=1}^N x_i^{2M} = \\sum\\limits_{i=1}^N x_i^M y_i &\n    \\end{cases}\n$$\n\n写为矩阵形式：\n\n$$\n    \\underbrace{\n    \\begin{pmatrix}\n        \\sum\\limits_{i=1}^N x_i^0 & \\cdots & \\sum\\limits_{i=1}^N x_i^1 & \\sum\\limits_{i=1}^N x_i^M \\\\\n        \\sum\\limits_{i=1}^N x_i^1 & \\cdots & \\sum\\limits_{i=1}^N x_i^2 & \\sum\\limits_{i=1}^N x_i^{M+1} \\\\\n        \\vdots & \\vdots & \\ddots & \\vdots \\\\\n        \\sum\\limits_{i=1}^N x_i^M & \\cdots & \\sum\\limits_{i=1}^N x_i^{M+1} & \\sum\\limits_{i=1}^N x_i^{2M}\n    \\end{pmatrix}\n    }_{\\boldsymbol{A}}\n    \\underbrace{\n    \\begin{pmatrix}\n        \\omega_0 \\vphantom{\\sum\\limits_{i=1}^{N}x_i^{M+1}} \\\\\n        \\omega_1 \\vphantom{\\sum\\limits_{i=1}^{N}x_i^{M+1}} \\\\\n        \\vdots \\vphantom{\\ddots}\\\\\n        \\omega_M \\vphantom{\\sum\\limits_{i=1}^{N}x_i^{M+1}}\n    \\end{pmatrix}\n    }_{\\boldsymbol{\\omega}}\n    =\n    \\underbrace{\n    \\begin{pmatrix}\n        \\sum\\limits_{i=1}^N y_i \\vphantom{\\sum\\limits_{i=1}^{N}x_i^{M+1}}\\\\\n        \\sum\\limits_{i=1}^N x_i y_i \\vphantom{\\sum\\limits_{i=1}^{N}x_i^{M+1}}\\\\\n        \\vdots \\vphantom{\\ddots}\\\\\n        \\sum\\limits_{i=1}^N x_i^M y_i \\vphantom{\\sum\\limits_{i=1}^{N}x_i^{M+1}}\\\\\n    \\end{pmatrix}\n    }_{\\boldsymbol{B}}\n$$\n\n注意到 $\\boldsymbol{A}, \\boldsymbol{B}$ 均可写为两个矩阵相乘的形式：\n\n$$\n    \\boldsymbol{A}=\n    \\begin{pmatrix}\n        1 & 1 & 1 & \\cdots & 1 \\vphantom{x_1^M} \\\\\n        x_1 & x_2 & x_3 & \\cdots & x_M \\vphantom{x_2^M} \\\\\n        x_1^2 & x_2^2 & x_3^2 & \\cdots & x_M^2 \\vphantom{x_3^M} \\\\\n        \\vdots & \\vdots & \\vdots & \\ddots & \\vdots \\\\\n        x_1^M & x_2^M & x_3^M & \\cdots & x_M^M \\vphantom{x_M^M}\n    \\end{pmatrix}\n    \\begin{pmatrix}\n        1 & x_1 & x_1^2 & \\cdots & x_1^M \\\\\n        1 & x_2 & x_2^2 & \\cdots & x_2^M \\\\\n        1 & x_3 & x_3^2 & \\cdots & x_3^M \\\\\n        \\vdots & \\vdots & \\vdots & \\ddots & \\vdots \\\\\n        1 & x_M & x_M^2 & \\cdots & x_M^M \\\\\n    \\end{pmatrix}\n    \\triangleq \\boldsymbol{V} \\boldsymbol{V}', \\quad\n    \\boldsymbol{B} = \\boldsymbol{V} \\boldsymbol{Y}\n$$\n其中 $\\boldsymbol{Y}$ 为输出向量。于是多项式参数矩阵应由下式给出：\n\n$$\n    \\boldsymbol{\\omega} =\n    (\\boldsymbol{V}\\boldsymbol{V'})^{-1}\\boldsymbol{V}\\boldsymbol{Y}\n    \\tag{**}\n    \\label{**}\n$$\n\n该式与 $\\eqref{*}$ 有一定出入，且不易进一步化简，其中涉及 Vandermonde 矩阵逆，可参考\n\n- [Proof Wiki - Inverse of Vandermonde Matrix][inverse-of-vandermonde-matrix]\n- [Proof of Vandermonde Matrix Inverse Formula][mse-698254]\n- [Inverse of the Vandermonde and Vandermonde confluent matrices][inverse-of-the-vandermonde-and-vandermonde-confluent-matrices]\n\n于是针对原书中结论 $\\eqref{*}$ 以及逐步推导的结果 $\\eqref{**}$ 进行数值试验。\n给定 $\\boldsymbol{X}, \\boldsymbol{Y}$，分别利用两种方法得到 $\\boldsymbol{\\omega}$ 的结果，并代回\n$\\eqref{1}$ 中，这里利用 Python 的科学计算包进行试验。\n\n{% codeblock lang:python polyfit.py %}\nimport numpy as np\nimport numpy.random as nr\n\nnp.set_printoptions(precision=4, suppress=True)\n\n\ndef equj(xs, ys, omegas, j):\n    n = len(xs)\n    m = len(omegas)\n    return np.sum([np.sum(omegas[k] * xs[i-1] ** (k+j) for k in range(m))\n                   - xs[i-1] ** j * ys[i-1] for i in range(1, n+1)])\n\n\ndef omegaj1(xs, ys, j):\n    # 方法一\n    return np.sum(xs ** j * ys) / np.sum(xs ** (j+1))\n\n\ndef omegaj2(xs, ys, m):\n    # 方法二\n    v = np.matrix(np.column_stack([xs ** i for i in range(m)]).T)\n    y = np.matrix(v) * np.matrix(ys).T\n    return np.linalg.solve(v * v.T, y)\n\n\nns = [4, 4, 6, 8, 10, 10, 10]\nms = [3, 4, 5, 7, 6, 7, 8]\n\nfor n0, m0 in zip(ns, ms):\n    xs0 = np.linspace(.1, 1, n0)\n    ys0 = nr.uniform(1, 10, size=n0)\n    omegas_sol1 = [omegaj1(xs0, ys0, j) for j in range(m0+1)]\n    omegas_sol2 = omegaj2(xs0, ys0, m0)\n    res1 = np.array([equj(xs0, ys0, omegas_sol1, j) for j in range(m0+1)])\n    res2 = np.array([equj(xs0, ys0, omegas_sol2, j) for j in range(m0+1)])\n\n    print(f'x: {xs0}')\n    print(f'y: {ys0}')\n    print(f'N: {n0}, M: {m0}')\n    print('res1:', res1)\n    print('res2:', res2)\n    print()\n{% endcodeblock %}\n\n结论整合如下：\n\n$$\n\\begin{array}{c|l}\n    \\hline\n    {(N, M)} & {(4, 3)} \\\\\n    {\\boldsymbol{X}} & {\\begin{array}{llll} {0.1} & {0.4} & {0.7} & {1.0} \\end{array}} \\\\\n    {\\boldsymbol{Y}} & {\\begin{array}{llll} {6.4086} & {2.5888} & {1.1871} & {3.0044} \\end{array}} \\\\\n    {\\text{res}_1} & {\\begin{array}{llll} {26.8738} & {20.8370}  & {17.5522} & {15.6374} \\end{array}} \\\\\n    {\\text{res}_2} & {\\begin{array}{llll} 0  &  0  &  0  &  {-0.0065} \\end{array}} \\\\\n    \\hline\n    {(N, M)} & {(4, 4)} \\\\\n    {\\boldsymbol{X}} & {\\begin{array}{llll} 0.1 & 0.4 & 0.7 & 1.0 \\end{array}} \\\\\n    {\\boldsymbol{Y}} & {\\begin{array}{llll} {6.0025} & {7.9131} & {4.7549} & {4.6187} \\end{array}} \\\\\n    {\\text{res}_1} & {\\begin{array}{lllll} {58.2611} & {44.2894} & {38.6435} & {35.4777} & {33.4895} \\end{array}} \\\\\n    {\\text{res}_2} & {\\begin{array}{lllll} 0  &  0  &  0  &  0 & 0 \\end{array}} \\\\\n    \\hline\n    {(N, M)} & {(6, 5)} \\\\\n    {\\boldsymbol{X}} & {\\begin{array}{llllll} {0.10} & {0.28} & {0.46} & {0.64} & {0.82} & {1.00} \\end{array}} \\\\\n    {\\boldsymbol{Y}} & {\\begin{array}{llllll} {4.0511} & {7.6577} & {2.0744} & {4.0110}  & {3.2187} & {7.4847} \\end{array}} \\\\\n    {\\text{res}_1} & {\\begin{array}{llllll} {94.1633} & {70.4719} & {59.2198} & {52.4345} & {47.9117} & {44.7218} \\end{array}} \\\\\n    {\\text{res}_2} & {\\begin{array}{llllll} 0  &  0  &  0  &  0 & 0 & {-0.0040}\\end{array}} \\\\\n    \\hline\n    {(N, M)} & {(8, 7)} \\\\\n    {\\boldsymbol{X}} & {\\begin{array}{llllllll} {0.1000} & {0.2286} & {0.3571} & {0.4857} & {0.6143} & {0.7429} & {0.8714} & {1.0000} \\end{array}} \\\\\n    {\\boldsymbol{Y}} & {\\begin{array}{llllllll} {7.5006} & {8.4878} & {6.9965} & {8.8697} & {3.8661} & {3.0010}  & {6.0474} & {9.7587} \\end{array}} \\\\\n    {\\text{res}_1} & {\\begin{array}{llll} {193.4017} & {148.1521} & {125.1272} & {110.7083} \\\\ {100.7469} &  {93.4678} &  {87.9480}  &  {83.6494} \\end{array}} \\\\\n    {\\text{res}_2} & {\\begin{array}{llllllll} 0  &  0  &  0  &  0 & 0 & 0 & 0 & {-0.0001} \\end{array}} \\\\\n    \\hline\n    {(N, M)} & {(10, 6)} \\\\\n    {\\boldsymbol{X}} & {\\begin{array}{llllllllll} {0.1} & {0.2} & {0.3} & {0.4} & {0.5} & {0.6} & {0.7} & {0.8} & {0.9} & {1.0} \\end{array}} \\\\\n    {\\boldsymbol{Y}} & {\\begin{array}{lllll} {8.4519} & {2.8615} & {8.2275} & {5.5887} & {6.4139} \\\\ {4.8329} & {2.3945} & {9.5324} & {1.5159} & {4.8203} \\end{array}} \\\\\n    {\\text{res}_1} & {\\begin{array}{lllllll} {158.5266} & {117.4165}  & {96.8007} &  {84.1716} &  {75.5419} &  {69.2490}  &  {64.4573} \\end{array}} \\\\\n    {\\text{res}_2} & {\\begin{array}{llllllllll} 0  &  0  &  0  &  0 & 0 & 0 & 0 & {-0.0001} \\end{array}} \\\\\n    \\hline\n    {(N, M)} & {(10, 7)} \\\\\n    {\\boldsymbol{X}} & {\\begin{array}{llllllllll} {0.1} & {0.2} & {0.3} & {0.4} & {0.5} & {0.6} & {0.7} & {0.8} & {0.9} & {1.0} \\end{array}} \\\\\n    {\\boldsymbol{Y}} & {\\begin{array}{lllll} {2.9699} & {8.8436} & {6.0365} & {8.7695} & {4.6556} \\\\ {8.6279} & {1.5868} & {7.5356} & {2.1053} & {5.5741} \\end{array}} \\\\\n    {\\text{res}_1} & {\\begin{array}{llll} {176.0512} & {131.4928} & {109.7501} &  {96.1845} \\\\ {86.7478} & {79.7768} & {74.4193} & {70.1824} \\end{array}} \\\\\n    {\\text{res}_2} & {\\begin{array}{llllllllll} 0  &  0  &  0  &  0 & 0 & 0 & 0 & {-0.0001} \\end{array}} \\\\\n    \\hline\n    {(N, M)} & {(10, 8)} \\\\\n    {\\boldsymbol{X}} & {\\begin{array}{llllllllll} {0.1} & {0.2} & {0.3} & {0.4} & {0.5} & {0.6} & {0.7} & {0.8} & {0.9} & {1.0} \\end{array}} \\\\\n    {\\boldsymbol{Y}} & {\\begin{array}{lllll} {1.9506} & {5.4975} & {7.7366} & {3.4942} & {4.6710} \\\\ {9.2793} & {9.7969} & {2.0273} & {3.1859} & {3.0251} \\end{array}} \\\\\n    {\\text{res}_1} & {\\begin{array}{lllll} {158.7535} & {117.7695} &  {98.8822} &  {87.3893} &  {79.4357} \\\\ {73.5334} & {68.9573} & {65.3023} & {62.3207} & \\end{array}} \\\\\n    {\\text{res}_2} & {\\begin{array}{llllllll} 0  &  0  &  0  &  0 & 0 & 0 & 0 & 0 \\end{array}} \\\\\n    \\hline\n\\end{array}\n$$\n\n方法一得出的 $\\boldsymbol{\\omega}$ 代回方程的结果不为零，说明原书结论有误。\n\n\n[mse-698254]: https://math.stackexchange.com/questions/698254/proof-of-vandermonde-matrix-inverse-formula\n[inverse-of-vandermonde-matrix]: https://proofwiki.org/wiki/Inverse_of_Vandermonde_Matrix\n[inverse-of-the-vandermonde-and-vandermonde-confluent-matrices]: http://naturalspublishing.com/files/published/18raq6j7bs84z4.pdf\n\n","slug":"notes-on-statistical-learning-methods-01","published":1,"updated":"2023-03-09T16:09:38.265Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u336q002bp4x0xxp3hxgk","content":"<p>李航《统计学习方法》一书第 12 页关于简单的多项式曲线拟合有如下结论：</p>\r\n<div class=\"note \">具体地，求以下经验风险最小化：\n$$\nL(\\omega) = \\frac 12 \\sum_{i=1}^N \\left(f(x_i, \\omega) - y_i\\right)^2\n\\tag{1.18} \\label{1.18}\n$$\n... <br>\n这是一个简单的最优化问题。将模型与训练数据代入式 $\\eqref{1.18}$ 中，有\n$$\nL(\\omega) = \\frac 12 \\sum_{i=1}^N \\left(\\sum_{j=0}^M \\omega_j x_i^j-y_i\\right)^2\n$$\n对 $\\omega_j$ 求偏导数并令其为 $0$，可得\n$$\n\\omega_j = \\frac{\\sum\\limits_{i=1}^N x_i^j y_i}{\\sum\\limits_{i=1}^N x_i^{j+1}}, \\quad j = 0,1,2,\\ldots M\n\\tag{*} \\label{*}\n$$</div>\r\n<a id=\"more\"></a>\r\n<p>但通过简单求导，似乎事实并不那么简单。这里为计算 <span class=\"math inline\">\\(\\partial L/\\partial \\omega_j\\)</span>，将原求和式下标换作 <span class=\"math inline\">\\(k\\)</span>，以免混淆出错。</p>\r\n<p><span class=\"math display\">\\[\r\n    \\frac{\\partial L}{\\partial \\omega_j}\r\n    = \\sum_{i=1}^N \\left(\\sum_{j=0}^M \\omega_j x_i^j - y_i\\right) x_i^j\r\n    = \\sum_{k=0}^M \\left(\\sum_{i=1}^N x_i^{k+j}\\right)\\omega_k\r\n      - \\sum_{i=1}^N y_i x_i^j\r\n    \\tag{1}\r\n    \\label{1}\r\n\\]</span></p>\r\n<p>故对于 <span class=\"math inline\">\\(j = 0, 1, 2\\ldots M\\)</span>，令 <span class=\"math inline\">\\(\\partial L/\\partial \\omega_j = 0\\)</span>，可得如下 <span class=\"math inline\">\\(M\\)</span> 元方程组：</p>\r\n<p><span class=\"math display\">\\[\r\n    \\begin{cases}\r\n        \\omega_0 \\sum\\limits_{i=1}^N x_i^0 +\r\n        \\omega_1 \\sum\\limits_{i=1}^N x_i^1 + \\cdots +\r\n        \\omega_M \\sum\\limits_{i=1}^N x_i^M = \\sum\\limits_{i=1}^N y_i &amp; \\\\\r\n        \\omega_0 \\sum\\limits_{i=1}^N x_i^1 +\r\n        \\omega_1 \\sum\\limits_{i=1}^N x_i^2 + \\cdots +\r\n        \\omega_M \\sum\\limits_{i=1}^N x_i^{M+1} = \\sum\\limits_{i=1}^N x_i y_i &amp; \\\\\r\n        \\hfil   \\vdots  \\hfil &amp; \\\\\r\n        \\omega_0 \\sum\\limits_{i=1}^N x_i^M +\r\n        \\omega_1 \\sum\\limits_{i=1}^N x_i^{M+1} + \\cdots +\r\n        \\omega_M \\sum\\limits_{i=1}^N x_i^{2M} = \\sum\\limits_{i=1}^N x_i^M y_i &amp;\r\n    \\end{cases}\r\n\\]</span></p>\r\n<p>写为矩阵形式：</p>\r\n<p><span class=\"math display\">\\[\r\n    \\underbrace{\r\n    \\begin{pmatrix}\r\n        \\sum\\limits_{i=1}^N x_i^0 &amp; \\cdots &amp; \\sum\\limits_{i=1}^N x_i^1 &amp; \\sum\\limits_{i=1}^N x_i^M \\\\\r\n        \\sum\\limits_{i=1}^N x_i^1 &amp; \\cdots &amp; \\sum\\limits_{i=1}^N x_i^2 &amp; \\sum\\limits_{i=1}^N x_i^{M+1} \\\\\r\n        \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\\r\n        \\sum\\limits_{i=1}^N x_i^M &amp; \\cdots &amp; \\sum\\limits_{i=1}^N x_i^{M+1} &amp; \\sum\\limits_{i=1}^N x_i^{2M}\r\n    \\end{pmatrix}\r\n    }_{\\boldsymbol{A}}\r\n    \\underbrace{\r\n    \\begin{pmatrix}\r\n        \\omega_0 \\vphantom{\\sum\\limits_{i=1}^{N}x_i^{M+1}} \\\\\r\n        \\omega_1 \\vphantom{\\sum\\limits_{i=1}^{N}x_i^{M+1}} \\\\\r\n        \\vdots \\vphantom{\\ddots}\\\\\r\n        \\omega_M \\vphantom{\\sum\\limits_{i=1}^{N}x_i^{M+1}}\r\n    \\end{pmatrix}\r\n    }_{\\boldsymbol{\\omega}}\r\n    =\r\n    \\underbrace{\r\n    \\begin{pmatrix}\r\n        \\sum\\limits_{i=1}^N y_i \\vphantom{\\sum\\limits_{i=1}^{N}x_i^{M+1}}\\\\\r\n        \\sum\\limits_{i=1}^N x_i y_i \\vphantom{\\sum\\limits_{i=1}^{N}x_i^{M+1}}\\\\\r\n        \\vdots \\vphantom{\\ddots}\\\\\r\n        \\sum\\limits_{i=1}^N x_i^M y_i \\vphantom{\\sum\\limits_{i=1}^{N}x_i^{M+1}}\\\\\r\n    \\end{pmatrix}\r\n    }_{\\boldsymbol{B}}\r\n\\]</span></p>\r\n<p>注意到 <span class=\"math inline\">\\(\\boldsymbol{A}, \\boldsymbol{B}\\)</span> 均可写为两个矩阵相乘的形式：</p>\r\n<p><span class=\"math display\">\\[\r\n    \\boldsymbol{A}=\r\n    \\begin{pmatrix}\r\n        1 &amp; 1 &amp; 1 &amp; \\cdots &amp; 1 \\vphantom{x_1^M} \\\\\r\n        x_1 &amp; x_2 &amp; x_3 &amp; \\cdots &amp; x_M \\vphantom{x_2^M} \\\\\r\n        x_1^2 &amp; x_2^2 &amp; x_3^2 &amp; \\cdots &amp; x_M^2 \\vphantom{x_3^M} \\\\\r\n        \\vdots &amp; \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\\r\n        x_1^M &amp; x_2^M &amp; x_3^M &amp; \\cdots &amp; x_M^M \\vphantom{x_M^M}\r\n    \\end{pmatrix}\r\n    \\begin{pmatrix}\r\n        1 &amp; x_1 &amp; x_1^2 &amp; \\cdots &amp; x_1^M \\\\\r\n        1 &amp; x_2 &amp; x_2^2 &amp; \\cdots &amp; x_2^M \\\\\r\n        1 &amp; x_3 &amp; x_3^2 &amp; \\cdots &amp; x_3^M \\\\\r\n        \\vdots &amp; \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\\r\n        1 &amp; x_M &amp; x_M^2 &amp; \\cdots &amp; x_M^M \\\\\r\n    \\end{pmatrix}\r\n    \\triangleq \\boldsymbol{V} \\boldsymbol{V}&#39;, \\quad\r\n    \\boldsymbol{B} = \\boldsymbol{V} \\boldsymbol{Y}\r\n\\]</span> 其中 <span class=\"math inline\">\\(\\boldsymbol{Y}\\)</span> 为输出向量。于是多项式参数矩阵应由下式给出：</p>\r\n<p><span class=\"math display\">\\[\r\n    \\boldsymbol{\\omega} =\r\n    (\\boldsymbol{V}\\boldsymbol{V&#39;})^{-1}\\boldsymbol{V}\\boldsymbol{Y}\r\n    \\tag{**}\r\n    \\label{**}\r\n\\]</span></p>\r\n<p>该式与 <span class=\"math inline\">\\(\\eqref{*}\\)</span> 有一定出入，且不易进一步化简，其中涉及 Vandermonde 矩阵逆，可参考</p>\r\n<ul>\r\n<li><a href=\"https://proofwiki.org/wiki/Inverse_of_Vandermonde_Matrix\" target=\"_blank\" rel=\"noopener\">Proof Wiki - Inverse of Vandermonde Matrix</a></li>\r\n<li><a href=\"https://math.stackexchange.com/questions/698254/proof-of-vandermonde-matrix-inverse-formula\" target=\"_blank\" rel=\"noopener\">Proof of Vandermonde Matrix Inverse Formula</a></li>\r\n<li><a href=\"http://naturalspublishing.com/files/published/18raq6j7bs84z4.pdf\" target=\"_blank\" rel=\"noopener\">Inverse of the Vandermonde and Vandermonde confluent matrices</a></li>\r\n</ul>\r\n<p>于是针对原书中结论 <span class=\"math inline\">\\(\\eqref{*}\\)</span> 以及逐步推导的结果 <span class=\"math inline\">\\(\\eqref{**}\\)</span> 进行数值试验。 给定 <span class=\"math inline\">\\(\\boldsymbol{X}, \\boldsymbol{Y}\\)</span>，分别利用两种方法得到 <span class=\"math inline\">\\(\\boldsymbol{\\omega}\\)</span> 的结果，并代回 <span class=\"math inline\">\\(\\eqref{1}\\)</span> 中，这里利用 Python 的科学计算包进行试验。</p>\r\n<figure class=\"highlight python\"><figcaption><span>polyfit.py</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy.random <span class=\"keyword\">as</span> nr</span><br><span class=\"line\"></span><br><span class=\"line\">np.set_printoptions(precision=<span class=\"number\">4</span>, suppress=<span class=\"keyword\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">equj</span><span class=\"params\">(xs, ys, omegas, j)</span>:</span></span><br><span class=\"line\">    n = len(xs)</span><br><span class=\"line\">    m = len(omegas)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> np.sum([np.sum(omegas[k] * xs[i<span class=\"number\">-1</span>] ** (k+j) <span class=\"keyword\">for</span> k <span class=\"keyword\">in</span> range(m))</span><br><span class=\"line\">                   - xs[i<span class=\"number\">-1</span>] ** j * ys[i<span class=\"number\">-1</span>] <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, n+<span class=\"number\">1</span>)])</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">omegaj1</span><span class=\"params\">(xs, ys, j)</span>:</span></span><br><span class=\"line\">    <span class=\"comment\"># 方法一</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> np.sum(xs ** j * ys) / np.sum(xs ** (j+<span class=\"number\">1</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">omegaj2</span><span class=\"params\">(xs, ys, m)</span>:</span></span><br><span class=\"line\">    <span class=\"comment\"># 方法二</span></span><br><span class=\"line\">    v = np.matrix(np.column_stack([xs ** i <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(m)]).T)</span><br><span class=\"line\">    y = np.matrix(v) * np.matrix(ys).T</span><br><span class=\"line\">    <span class=\"keyword\">return</span> np.linalg.solve(v * v.T, y)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">ns = [<span class=\"number\">4</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>, <span class=\"number\">8</span>, <span class=\"number\">10</span>, <span class=\"number\">10</span>, <span class=\"number\">10</span>]</span><br><span class=\"line\">ms = [<span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> n0, m0 <span class=\"keyword\">in</span> zip(ns, ms):</span><br><span class=\"line\">    xs0 = np.linspace(<span class=\"number\">.1</span>, <span class=\"number\">1</span>, n0)</span><br><span class=\"line\">    ys0 = nr.uniform(<span class=\"number\">1</span>, <span class=\"number\">10</span>, size=n0)</span><br><span class=\"line\">    omegas_sol1 = [omegaj1(xs0, ys0, j) <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(m0+<span class=\"number\">1</span>)]</span><br><span class=\"line\">    omegas_sol2 = omegaj2(xs0, ys0, m0)</span><br><span class=\"line\">    res1 = np.array([equj(xs0, ys0, omegas_sol1, j) <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(m0+<span class=\"number\">1</span>)])</span><br><span class=\"line\">    res2 = np.array([equj(xs0, ys0, omegas_sol2, j) <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(m0+<span class=\"number\">1</span>)])</span><br><span class=\"line\"></span><br><span class=\"line\">    print(<span class=\"string\">f'x: <span class=\"subst\">&#123;xs0&#125;</span>'</span>)</span><br><span class=\"line\">    print(<span class=\"string\">f'y: <span class=\"subst\">&#123;ys0&#125;</span>'</span>)</span><br><span class=\"line\">    print(<span class=\"string\">f'N: <span class=\"subst\">&#123;n0&#125;</span>, M: <span class=\"subst\">&#123;m0&#125;</span>'</span>)</span><br><span class=\"line\">    print(<span class=\"string\">'res1:'</span>, res1)</span><br><span class=\"line\">    print(<span class=\"string\">'res2:'</span>, res2)</span><br><span class=\"line\">    print()</span><br></pre></td></tr></table></figure>\r\n<p>结论整合如下：</p>\r\n<p><span class=\"math display\">\\[\r\n\\begin{array}{c|l}\r\n    \\hline\r\n    {(N, M)} &amp; {(4, 3)} \\\\\r\n    {\\boldsymbol{X}} &amp; {\\begin{array}{llll} {0.1} &amp; {0.4} &amp; {0.7} &amp; {1.0} \\end{array}} \\\\\r\n    {\\boldsymbol{Y}} &amp; {\\begin{array}{llll} {6.4086} &amp; {2.5888} &amp; {1.1871} &amp; {3.0044} \\end{array}} \\\\\r\n    {\\text{res}_1} &amp; {\\begin{array}{llll} {26.8738} &amp; {20.8370}  &amp; {17.5522} &amp; {15.6374} \\end{array}} \\\\\r\n    {\\text{res}_2} &amp; {\\begin{array}{llll} 0  &amp;  0  &amp;  0  &amp;  {-0.0065} \\end{array}} \\\\\r\n    \\hline\r\n    {(N, M)} &amp; {(4, 4)} \\\\\r\n    {\\boldsymbol{X}} &amp; {\\begin{array}{llll} 0.1 &amp; 0.4 &amp; 0.7 &amp; 1.0 \\end{array}} \\\\\r\n    {\\boldsymbol{Y}} &amp; {\\begin{array}{llll} {6.0025} &amp; {7.9131} &amp; {4.7549} &amp; {4.6187} \\end{array}} \\\\\r\n    {\\text{res}_1} &amp; {\\begin{array}{lllll} {58.2611} &amp; {44.2894} &amp; {38.6435} &amp; {35.4777} &amp; {33.4895} \\end{array}} \\\\\r\n    {\\text{res}_2} &amp; {\\begin{array}{lllll} 0  &amp;  0  &amp;  0  &amp;  0 &amp; 0 \\end{array}} \\\\\r\n    \\hline\r\n    {(N, M)} &amp; {(6, 5)} \\\\\r\n    {\\boldsymbol{X}} &amp; {\\begin{array}{llllll} {0.10} &amp; {0.28} &amp; {0.46} &amp; {0.64} &amp; {0.82} &amp; {1.00} \\end{array}} \\\\\r\n    {\\boldsymbol{Y}} &amp; {\\begin{array}{llllll} {4.0511} &amp; {7.6577} &amp; {2.0744} &amp; {4.0110}  &amp; {3.2187} &amp; {7.4847} \\end{array}} \\\\\r\n    {\\text{res}_1} &amp; {\\begin{array}{llllll} {94.1633} &amp; {70.4719} &amp; {59.2198} &amp; {52.4345} &amp; {47.9117} &amp; {44.7218} \\end{array}} \\\\\r\n    {\\text{res}_2} &amp; {\\begin{array}{llllll} 0  &amp;  0  &amp;  0  &amp;  0 &amp; 0 &amp; {-0.0040}\\end{array}} \\\\\r\n    \\hline\r\n    {(N, M)} &amp; {(8, 7)} \\\\\r\n    {\\boldsymbol{X}} &amp; {\\begin{array}{llllllll} {0.1000} &amp; {0.2286} &amp; {0.3571} &amp; {0.4857} &amp; {0.6143} &amp; {0.7429} &amp; {0.8714} &amp; {1.0000} \\end{array}} \\\\\r\n    {\\boldsymbol{Y}} &amp; {\\begin{array}{llllllll} {7.5006} &amp; {8.4878} &amp; {6.9965} &amp; {8.8697} &amp; {3.8661} &amp; {3.0010}  &amp; {6.0474} &amp; {9.7587} \\end{array}} \\\\\r\n    {\\text{res}_1} &amp; {\\begin{array}{llll} {193.4017} &amp; {148.1521} &amp; {125.1272} &amp; {110.7083} \\\\ {100.7469} &amp;  {93.4678} &amp;  {87.9480}  &amp;  {83.6494} \\end{array}} \\\\\r\n    {\\text{res}_2} &amp; {\\begin{array}{llllllll} 0  &amp;  0  &amp;  0  &amp;  0 &amp; 0 &amp; 0 &amp; 0 &amp; {-0.0001} \\end{array}} \\\\\r\n    \\hline\r\n    {(N, M)} &amp; {(10, 6)} \\\\\r\n    {\\boldsymbol{X}} &amp; {\\begin{array}{llllllllll} {0.1} &amp; {0.2} &amp; {0.3} &amp; {0.4} &amp; {0.5} &amp; {0.6} &amp; {0.7} &amp; {0.8} &amp; {0.9} &amp; {1.0} \\end{array}} \\\\\r\n    {\\boldsymbol{Y}} &amp; {\\begin{array}{lllll} {8.4519} &amp; {2.8615} &amp; {8.2275} &amp; {5.5887} &amp; {6.4139} \\\\ {4.8329} &amp; {2.3945} &amp; {9.5324} &amp; {1.5159} &amp; {4.8203} \\end{array}} \\\\\r\n    {\\text{res}_1} &amp; {\\begin{array}{lllllll} {158.5266} &amp; {117.4165}  &amp; {96.8007} &amp;  {84.1716} &amp;  {75.5419} &amp;  {69.2490}  &amp;  {64.4573} \\end{array}} \\\\\r\n    {\\text{res}_2} &amp; {\\begin{array}{llllllllll} 0  &amp;  0  &amp;  0  &amp;  0 &amp; 0 &amp; 0 &amp; 0 &amp; {-0.0001} \\end{array}} \\\\\r\n    \\hline\r\n    {(N, M)} &amp; {(10, 7)} \\\\\r\n    {\\boldsymbol{X}} &amp; {\\begin{array}{llllllllll} {0.1} &amp; {0.2} &amp; {0.3} &amp; {0.4} &amp; {0.5} &amp; {0.6} &amp; {0.7} &amp; {0.8} &amp; {0.9} &amp; {1.0} \\end{array}} \\\\\r\n    {\\boldsymbol{Y}} &amp; {\\begin{array}{lllll} {2.9699} &amp; {8.8436} &amp; {6.0365} &amp; {8.7695} &amp; {4.6556} \\\\ {8.6279} &amp; {1.5868} &amp; {7.5356} &amp; {2.1053} &amp; {5.5741} \\end{array}} \\\\\r\n    {\\text{res}_1} &amp; {\\begin{array}{llll} {176.0512} &amp; {131.4928} &amp; {109.7501} &amp;  {96.1845} \\\\ {86.7478} &amp; {79.7768} &amp; {74.4193} &amp; {70.1824} \\end{array}} \\\\\r\n    {\\text{res}_2} &amp; {\\begin{array}{llllllllll} 0  &amp;  0  &amp;  0  &amp;  0 &amp; 0 &amp; 0 &amp; 0 &amp; {-0.0001} \\end{array}} \\\\\r\n    \\hline\r\n    {(N, M)} &amp; {(10, 8)} \\\\\r\n    {\\boldsymbol{X}} &amp; {\\begin{array}{llllllllll} {0.1} &amp; {0.2} &amp; {0.3} &amp; {0.4} &amp; {0.5} &amp; {0.6} &amp; {0.7} &amp; {0.8} &amp; {0.9} &amp; {1.0} \\end{array}} \\\\\r\n    {\\boldsymbol{Y}} &amp; {\\begin{array}{lllll} {1.9506} &amp; {5.4975} &amp; {7.7366} &amp; {3.4942} &amp; {4.6710} \\\\ {9.2793} &amp; {9.7969} &amp; {2.0273} &amp; {3.1859} &amp; {3.0251} \\end{array}} \\\\\r\n    {\\text{res}_1} &amp; {\\begin{array}{lllll} {158.7535} &amp; {117.7695} &amp;  {98.8822} &amp;  {87.3893} &amp;  {79.4357} \\\\ {73.5334} &amp; {68.9573} &amp; {65.3023} &amp; {62.3207} &amp; \\end{array}} \\\\\r\n    {\\text{res}_2} &amp; {\\begin{array}{llllllll} 0  &amp;  0  &amp;  0  &amp;  0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 \\end{array}} \\\\\r\n    \\hline\r\n\\end{array}\r\n\\]</span></p>\r\n<p>方法一得出的 <span class=\"math inline\">\\(\\boldsymbol{\\omega}\\)</span> 代回方程的结果不为零，说明原书结论有误。</p>\r\n","site":{"data":{}},"excerpt":"<p>李航《统计学习方法》一书第 12 页关于简单的多项式曲线拟合有如下结论：</p>\r\n<div class=\"note \">具体地，求以下经验风险最小化：\n$$\nL(\\omega) = \\frac 12 \\sum_{i=1}^N \\left(f(x_i, \\omega) - y_i\\right)^2\n\\tag{1.18} \\label{1.18}\n$$\n... <br>\n这是一个简单的最优化问题。将模型与训练数据代入式 $\\eqref{1.18}$ 中，有\n$$\nL(\\omega) = \\frac 12 \\sum_{i=1}^N \\left(\\sum_{j=0}^M \\omega_j x_i^j-y_i\\right)^2\n$$\n对 $\\omega_j$ 求偏导数并令其为 $0$，可得\n$$\n\\omega_j = \\frac{\\sum\\limits_{i=1}^N x_i^j y_i}{\\sum\\limits_{i=1}^N x_i^{j+1}}, \\quad j = 0,1,2,\\ldots M\n\\tag{*} \\label{*}\n$$</div>","more":"<p>但通过简单求导，似乎事实并不那么简单。这里为计算 <span class=\"math inline\">\\(\\partial L/\\partial \\omega_j\\)</span>，将原求和式下标换作 <span class=\"math inline\">\\(k\\)</span>，以免混淆出错。</p>\r\n<p><span class=\"math display\">\\[\r\n    \\frac{\\partial L}{\\partial \\omega_j}\r\n    = \\sum_{i=1}^N \\left(\\sum_{j=0}^M \\omega_j x_i^j - y_i\\right) x_i^j\r\n    = \\sum_{k=0}^M \\left(\\sum_{i=1}^N x_i^{k+j}\\right)\\omega_k\r\n      - \\sum_{i=1}^N y_i x_i^j\r\n    \\tag{1}\r\n    \\label{1}\r\n\\]</span></p>\r\n<p>故对于 <span class=\"math inline\">\\(j = 0, 1, 2\\ldots M\\)</span>，令 <span class=\"math inline\">\\(\\partial L/\\partial \\omega_j = 0\\)</span>，可得如下 <span class=\"math inline\">\\(M\\)</span> 元方程组：</p>\r\n<p><span class=\"math display\">\\[\r\n    \\begin{cases}\r\n        \\omega_0 \\sum\\limits_{i=1}^N x_i^0 +\r\n        \\omega_1 \\sum\\limits_{i=1}^N x_i^1 + \\cdots +\r\n        \\omega_M \\sum\\limits_{i=1}^N x_i^M = \\sum\\limits_{i=1}^N y_i &amp; \\\\\r\n        \\omega_0 \\sum\\limits_{i=1}^N x_i^1 +\r\n        \\omega_1 \\sum\\limits_{i=1}^N x_i^2 + \\cdots +\r\n        \\omega_M \\sum\\limits_{i=1}^N x_i^{M+1} = \\sum\\limits_{i=1}^N x_i y_i &amp; \\\\\r\n        \\hfil   \\vdots  \\hfil &amp; \\\\\r\n        \\omega_0 \\sum\\limits_{i=1}^N x_i^M +\r\n        \\omega_1 \\sum\\limits_{i=1}^N x_i^{M+1} + \\cdots +\r\n        \\omega_M \\sum\\limits_{i=1}^N x_i^{2M} = \\sum\\limits_{i=1}^N x_i^M y_i &amp;\r\n    \\end{cases}\r\n\\]</span></p>\r\n<p>写为矩阵形式：</p>\r\n<p><span class=\"math display\">\\[\r\n    \\underbrace{\r\n    \\begin{pmatrix}\r\n        \\sum\\limits_{i=1}^N x_i^0 &amp; \\cdots &amp; \\sum\\limits_{i=1}^N x_i^1 &amp; \\sum\\limits_{i=1}^N x_i^M \\\\\r\n        \\sum\\limits_{i=1}^N x_i^1 &amp; \\cdots &amp; \\sum\\limits_{i=1}^N x_i^2 &amp; \\sum\\limits_{i=1}^N x_i^{M+1} \\\\\r\n        \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\\r\n        \\sum\\limits_{i=1}^N x_i^M &amp; \\cdots &amp; \\sum\\limits_{i=1}^N x_i^{M+1} &amp; \\sum\\limits_{i=1}^N x_i^{2M}\r\n    \\end{pmatrix}\r\n    }_{\\boldsymbol{A}}\r\n    \\underbrace{\r\n    \\begin{pmatrix}\r\n        \\omega_0 \\vphantom{\\sum\\limits_{i=1}^{N}x_i^{M+1}} \\\\\r\n        \\omega_1 \\vphantom{\\sum\\limits_{i=1}^{N}x_i^{M+1}} \\\\\r\n        \\vdots \\vphantom{\\ddots}\\\\\r\n        \\omega_M \\vphantom{\\sum\\limits_{i=1}^{N}x_i^{M+1}}\r\n    \\end{pmatrix}\r\n    }_{\\boldsymbol{\\omega}}\r\n    =\r\n    \\underbrace{\r\n    \\begin{pmatrix}\r\n        \\sum\\limits_{i=1}^N y_i \\vphantom{\\sum\\limits_{i=1}^{N}x_i^{M+1}}\\\\\r\n        \\sum\\limits_{i=1}^N x_i y_i \\vphantom{\\sum\\limits_{i=1}^{N}x_i^{M+1}}\\\\\r\n        \\vdots \\vphantom{\\ddots}\\\\\r\n        \\sum\\limits_{i=1}^N x_i^M y_i \\vphantom{\\sum\\limits_{i=1}^{N}x_i^{M+1}}\\\\\r\n    \\end{pmatrix}\r\n    }_{\\boldsymbol{B}}\r\n\\]</span></p>\r\n<p>注意到 <span class=\"math inline\">\\(\\boldsymbol{A}, \\boldsymbol{B}\\)</span> 均可写为两个矩阵相乘的形式：</p>\r\n<p><span class=\"math display\">\\[\r\n    \\boldsymbol{A}=\r\n    \\begin{pmatrix}\r\n        1 &amp; 1 &amp; 1 &amp; \\cdots &amp; 1 \\vphantom{x_1^M} \\\\\r\n        x_1 &amp; x_2 &amp; x_3 &amp; \\cdots &amp; x_M \\vphantom{x_2^M} \\\\\r\n        x_1^2 &amp; x_2^2 &amp; x_3^2 &amp; \\cdots &amp; x_M^2 \\vphantom{x_3^M} \\\\\r\n        \\vdots &amp; \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\\r\n        x_1^M &amp; x_2^M &amp; x_3^M &amp; \\cdots &amp; x_M^M \\vphantom{x_M^M}\r\n    \\end{pmatrix}\r\n    \\begin{pmatrix}\r\n        1 &amp; x_1 &amp; x_1^2 &amp; \\cdots &amp; x_1^M \\\\\r\n        1 &amp; x_2 &amp; x_2^2 &amp; \\cdots &amp; x_2^M \\\\\r\n        1 &amp; x_3 &amp; x_3^2 &amp; \\cdots &amp; x_3^M \\\\\r\n        \\vdots &amp; \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\\r\n        1 &amp; x_M &amp; x_M^2 &amp; \\cdots &amp; x_M^M \\\\\r\n    \\end{pmatrix}\r\n    \\triangleq \\boldsymbol{V} \\boldsymbol{V}&#39;, \\quad\r\n    \\boldsymbol{B} = \\boldsymbol{V} \\boldsymbol{Y}\r\n\\]</span> 其中 <span class=\"math inline\">\\(\\boldsymbol{Y}\\)</span> 为输出向量。于是多项式参数矩阵应由下式给出：</p>\r\n<p><span class=\"math display\">\\[\r\n    \\boldsymbol{\\omega} =\r\n    (\\boldsymbol{V}\\boldsymbol{V&#39;})^{-1}\\boldsymbol{V}\\boldsymbol{Y}\r\n    \\tag{**}\r\n    \\label{**}\r\n\\]</span></p>\r\n<p>该式与 <span class=\"math inline\">\\(\\eqref{*}\\)</span> 有一定出入，且不易进一步化简，其中涉及 Vandermonde 矩阵逆，可参考</p>\r\n<ul>\r\n<li><a href=\"https://proofwiki.org/wiki/Inverse_of_Vandermonde_Matrix\" target=\"_blank\" rel=\"noopener\">Proof Wiki - Inverse of Vandermonde Matrix</a></li>\r\n<li><a href=\"https://math.stackexchange.com/questions/698254/proof-of-vandermonde-matrix-inverse-formula\" target=\"_blank\" rel=\"noopener\">Proof of Vandermonde Matrix Inverse Formula</a></li>\r\n<li><a href=\"http://naturalspublishing.com/files/published/18raq6j7bs84z4.pdf\" target=\"_blank\" rel=\"noopener\">Inverse of the Vandermonde and Vandermonde confluent matrices</a></li>\r\n</ul>\r\n<p>于是针对原书中结论 <span class=\"math inline\">\\(\\eqref{*}\\)</span> 以及逐步推导的结果 <span class=\"math inline\">\\(\\eqref{**}\\)</span> 进行数值试验。 给定 <span class=\"math inline\">\\(\\boldsymbol{X}, \\boldsymbol{Y}\\)</span>，分别利用两种方法得到 <span class=\"math inline\">\\(\\boldsymbol{\\omega}\\)</span> 的结果，并代回 <span class=\"math inline\">\\(\\eqref{1}\\)</span> 中，这里利用 Python 的科学计算包进行试验。</p>\r\n<figure class=\"highlight python\"><figcaption><span>polyfit.py</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy.random <span class=\"keyword\">as</span> nr</span><br><span class=\"line\"></span><br><span class=\"line\">np.set_printoptions(precision=<span class=\"number\">4</span>, suppress=<span class=\"keyword\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">equj</span><span class=\"params\">(xs, ys, omegas, j)</span>:</span></span><br><span class=\"line\">    n = len(xs)</span><br><span class=\"line\">    m = len(omegas)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> np.sum([np.sum(omegas[k] * xs[i<span class=\"number\">-1</span>] ** (k+j) <span class=\"keyword\">for</span> k <span class=\"keyword\">in</span> range(m))</span><br><span class=\"line\">                   - xs[i<span class=\"number\">-1</span>] ** j * ys[i<span class=\"number\">-1</span>] <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, n+<span class=\"number\">1</span>)])</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">omegaj1</span><span class=\"params\">(xs, ys, j)</span>:</span></span><br><span class=\"line\">    <span class=\"comment\"># 方法一</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> np.sum(xs ** j * ys) / np.sum(xs ** (j+<span class=\"number\">1</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">omegaj2</span><span class=\"params\">(xs, ys, m)</span>:</span></span><br><span class=\"line\">    <span class=\"comment\"># 方法二</span></span><br><span class=\"line\">    v = np.matrix(np.column_stack([xs ** i <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(m)]).T)</span><br><span class=\"line\">    y = np.matrix(v) * np.matrix(ys).T</span><br><span class=\"line\">    <span class=\"keyword\">return</span> np.linalg.solve(v * v.T, y)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">ns = [<span class=\"number\">4</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>, <span class=\"number\">8</span>, <span class=\"number\">10</span>, <span class=\"number\">10</span>, <span class=\"number\">10</span>]</span><br><span class=\"line\">ms = [<span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> n0, m0 <span class=\"keyword\">in</span> zip(ns, ms):</span><br><span class=\"line\">    xs0 = np.linspace(<span class=\"number\">.1</span>, <span class=\"number\">1</span>, n0)</span><br><span class=\"line\">    ys0 = nr.uniform(<span class=\"number\">1</span>, <span class=\"number\">10</span>, size=n0)</span><br><span class=\"line\">    omegas_sol1 = [omegaj1(xs0, ys0, j) <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(m0+<span class=\"number\">1</span>)]</span><br><span class=\"line\">    omegas_sol2 = omegaj2(xs0, ys0, m0)</span><br><span class=\"line\">    res1 = np.array([equj(xs0, ys0, omegas_sol1, j) <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(m0+<span class=\"number\">1</span>)])</span><br><span class=\"line\">    res2 = np.array([equj(xs0, ys0, omegas_sol2, j) <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(m0+<span class=\"number\">1</span>)])</span><br><span class=\"line\"></span><br><span class=\"line\">    print(<span class=\"string\">f'x: <span class=\"subst\">&#123;xs0&#125;</span>'</span>)</span><br><span class=\"line\">    print(<span class=\"string\">f'y: <span class=\"subst\">&#123;ys0&#125;</span>'</span>)</span><br><span class=\"line\">    print(<span class=\"string\">f'N: <span class=\"subst\">&#123;n0&#125;</span>, M: <span class=\"subst\">&#123;m0&#125;</span>'</span>)</span><br><span class=\"line\">    print(<span class=\"string\">'res1:'</span>, res1)</span><br><span class=\"line\">    print(<span class=\"string\">'res2:'</span>, res2)</span><br><span class=\"line\">    print()</span><br></pre></td></tr></table></figure>\r\n<p>结论整合如下：</p>\r\n<p><span class=\"math display\">\\[\r\n\\begin{array}{c|l}\r\n    \\hline\r\n    {(N, M)} &amp; {(4, 3)} \\\\\r\n    {\\boldsymbol{X}} &amp; {\\begin{array}{llll} {0.1} &amp; {0.4} &amp; {0.7} &amp; {1.0} \\end{array}} \\\\\r\n    {\\boldsymbol{Y}} &amp; {\\begin{array}{llll} {6.4086} &amp; {2.5888} &amp; {1.1871} &amp; {3.0044} \\end{array}} \\\\\r\n    {\\text{res}_1} &amp; {\\begin{array}{llll} {26.8738} &amp; {20.8370}  &amp; {17.5522} &amp; {15.6374} \\end{array}} \\\\\r\n    {\\text{res}_2} &amp; {\\begin{array}{llll} 0  &amp;  0  &amp;  0  &amp;  {-0.0065} \\end{array}} \\\\\r\n    \\hline\r\n    {(N, M)} &amp; {(4, 4)} \\\\\r\n    {\\boldsymbol{X}} &amp; {\\begin{array}{llll} 0.1 &amp; 0.4 &amp; 0.7 &amp; 1.0 \\end{array}} \\\\\r\n    {\\boldsymbol{Y}} &amp; {\\begin{array}{llll} {6.0025} &amp; {7.9131} &amp; {4.7549} &amp; {4.6187} \\end{array}} \\\\\r\n    {\\text{res}_1} &amp; {\\begin{array}{lllll} {58.2611} &amp; {44.2894} &amp; {38.6435} &amp; {35.4777} &amp; {33.4895} \\end{array}} \\\\\r\n    {\\text{res}_2} &amp; {\\begin{array}{lllll} 0  &amp;  0  &amp;  0  &amp;  0 &amp; 0 \\end{array}} \\\\\r\n    \\hline\r\n    {(N, M)} &amp; {(6, 5)} \\\\\r\n    {\\boldsymbol{X}} &amp; {\\begin{array}{llllll} {0.10} &amp; {0.28} &amp; {0.46} &amp; {0.64} &amp; {0.82} &amp; {1.00} \\end{array}} \\\\\r\n    {\\boldsymbol{Y}} &amp; {\\begin{array}{llllll} {4.0511} &amp; {7.6577} &amp; {2.0744} &amp; {4.0110}  &amp; {3.2187} &amp; {7.4847} \\end{array}} \\\\\r\n    {\\text{res}_1} &amp; {\\begin{array}{llllll} {94.1633} &amp; {70.4719} &amp; {59.2198} &amp; {52.4345} &amp; {47.9117} &amp; {44.7218} \\end{array}} \\\\\r\n    {\\text{res}_2} &amp; {\\begin{array}{llllll} 0  &amp;  0  &amp;  0  &amp;  0 &amp; 0 &amp; {-0.0040}\\end{array}} \\\\\r\n    \\hline\r\n    {(N, M)} &amp; {(8, 7)} \\\\\r\n    {\\boldsymbol{X}} &amp; {\\begin{array}{llllllll} {0.1000} &amp; {0.2286} &amp; {0.3571} &amp; {0.4857} &amp; {0.6143} &amp; {0.7429} &amp; {0.8714} &amp; {1.0000} \\end{array}} \\\\\r\n    {\\boldsymbol{Y}} &amp; {\\begin{array}{llllllll} {7.5006} &amp; {8.4878} &amp; {6.9965} &amp; {8.8697} &amp; {3.8661} &amp; {3.0010}  &amp; {6.0474} &amp; {9.7587} \\end{array}} \\\\\r\n    {\\text{res}_1} &amp; {\\begin{array}{llll} {193.4017} &amp; {148.1521} &amp; {125.1272} &amp; {110.7083} \\\\ {100.7469} &amp;  {93.4678} &amp;  {87.9480}  &amp;  {83.6494} \\end{array}} \\\\\r\n    {\\text{res}_2} &amp; {\\begin{array}{llllllll} 0  &amp;  0  &amp;  0  &amp;  0 &amp; 0 &amp; 0 &amp; 0 &amp; {-0.0001} \\end{array}} \\\\\r\n    \\hline\r\n    {(N, M)} &amp; {(10, 6)} \\\\\r\n    {\\boldsymbol{X}} &amp; {\\begin{array}{llllllllll} {0.1} &amp; {0.2} &amp; {0.3} &amp; {0.4} &amp; {0.5} &amp; {0.6} &amp; {0.7} &amp; {0.8} &amp; {0.9} &amp; {1.0} \\end{array}} \\\\\r\n    {\\boldsymbol{Y}} &amp; {\\begin{array}{lllll} {8.4519} &amp; {2.8615} &amp; {8.2275} &amp; {5.5887} &amp; {6.4139} \\\\ {4.8329} &amp; {2.3945} &amp; {9.5324} &amp; {1.5159} &amp; {4.8203} \\end{array}} \\\\\r\n    {\\text{res}_1} &amp; {\\begin{array}{lllllll} {158.5266} &amp; {117.4165}  &amp; {96.8007} &amp;  {84.1716} &amp;  {75.5419} &amp;  {69.2490}  &amp;  {64.4573} \\end{array}} \\\\\r\n    {\\text{res}_2} &amp; {\\begin{array}{llllllllll} 0  &amp;  0  &amp;  0  &amp;  0 &amp; 0 &amp; 0 &amp; 0 &amp; {-0.0001} \\end{array}} \\\\\r\n    \\hline\r\n    {(N, M)} &amp; {(10, 7)} \\\\\r\n    {\\boldsymbol{X}} &amp; {\\begin{array}{llllllllll} {0.1} &amp; {0.2} &amp; {0.3} &amp; {0.4} &amp; {0.5} &amp; {0.6} &amp; {0.7} &amp; {0.8} &amp; {0.9} &amp; {1.0} \\end{array}} \\\\\r\n    {\\boldsymbol{Y}} &amp; {\\begin{array}{lllll} {2.9699} &amp; {8.8436} &amp; {6.0365} &amp; {8.7695} &amp; {4.6556} \\\\ {8.6279} &amp; {1.5868} &amp; {7.5356} &amp; {2.1053} &amp; {5.5741} \\end{array}} \\\\\r\n    {\\text{res}_1} &amp; {\\begin{array}{llll} {176.0512} &amp; {131.4928} &amp; {109.7501} &amp;  {96.1845} \\\\ {86.7478} &amp; {79.7768} &amp; {74.4193} &amp; {70.1824} \\end{array}} \\\\\r\n    {\\text{res}_2} &amp; {\\begin{array}{llllllllll} 0  &amp;  0  &amp;  0  &amp;  0 &amp; 0 &amp; 0 &amp; 0 &amp; {-0.0001} \\end{array}} \\\\\r\n    \\hline\r\n    {(N, M)} &amp; {(10, 8)} \\\\\r\n    {\\boldsymbol{X}} &amp; {\\begin{array}{llllllllll} {0.1} &amp; {0.2} &amp; {0.3} &amp; {0.4} &amp; {0.5} &amp; {0.6} &amp; {0.7} &amp; {0.8} &amp; {0.9} &amp; {1.0} \\end{array}} \\\\\r\n    {\\boldsymbol{Y}} &amp; {\\begin{array}{lllll} {1.9506} &amp; {5.4975} &amp; {7.7366} &amp; {3.4942} &amp; {4.6710} \\\\ {9.2793} &amp; {9.7969} &amp; {2.0273} &amp; {3.1859} &amp; {3.0251} \\end{array}} \\\\\r\n    {\\text{res}_1} &amp; {\\begin{array}{lllll} {158.7535} &amp; {117.7695} &amp;  {98.8822} &amp;  {87.3893} &amp;  {79.4357} \\\\ {73.5334} &amp; {68.9573} &amp; {65.3023} &amp; {62.3207} &amp; \\end{array}} \\\\\r\n    {\\text{res}_2} &amp; {\\begin{array}{llllllll} 0  &amp;  0  &amp;  0  &amp;  0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 \\end{array}} \\\\\r\n    \\hline\r\n\\end{array}\r\n\\]</span></p>\r\n<p>方法一得出的 <span class=\"math inline\">\\(\\boldsymbol{\\omega}\\)</span> 代回方程的结果不为零，说明原书结论有误。</p>"},{"title":"第 n 名用户","date":"2018-07-08T14:56:14.000Z","mathjax":true,"_content":"\n{% note info %}\n<a href=\"https://www.codewars.com/kata/t-dot-t-t-number-6-nth-user/train/csharp\">T.T.T.#6: nth user</a><br>\nA product to do market research, n users to participate in the activities.\nThey give each user a number. The first user number is 1,\nsecond users numbered 2, and so on... But no digits 4 and 9 in user's numbers,\nthat is to say the number of 3rd users is 3,\nthe number of 4th users is 5...the number of 8th users is 10... like this:\n{% codeblock  %}\nuser   1st 2nd 3rd 4th 5th 6th 7th 8th 9th 10th ........ nth\nnumber  1   2   3   5   6   7   8  10   11  12  ........ ??\n{% endcodeblock  %}\nPlease calculate, how much is the number of the nth user?\n{% endnote %}\n\n简言之，从 $1$ 开始，将不含 $4$ 和 $9$ 的正整数依次写下来，求第 $n$ 个数。\n\n<!-- more -->\n\n### 简单的尝试\n\n暴力穷举，从 $1$ 开始逐个验证是否含有数码 $4$ 和 $9$ 即可。原题仅支持 Javascript 及 C# 代码提交，所以写段 C# ：\n\n```cs\nusing System;\n\npublic class Kata {\n    private static Boolean CheckValidNumber(int n) {\n        for (; n != 0; n /= 10)\n            if (n % 10 == 4 || n % 10 == 9)\n                return false;\n        return true;\n    }\n\n    public static string UserNumber(int n) {\n        int t = 1, tmp = 1;\n        while (t++ <= n) {\n            while (true)\n                if (CheckValidNumber(tmp++))\n                    break;\n        }\n        return (tmp - 1).ToString();\n    }\n}\n```\n\n不出所料超时：`Process was terminated. It took longer than 12000ms to complete`。\n\n### 巧用进制\n\n观察符合题意的数字：\n\n```plain 列表 I\n      1   2   3   5   6   7   8\n 10  11  12  13  15  16  17  18\n 20  21  22  23  25  26  27  28\n 30  31  32  33  35  36  37  38\n 50  51  52  53  55  56  57  58\n 60  61  62  63  65  66  67  68\n 70  71  72  73  75  76  77  78\n 80  81  82  83  85  86  87  88\n100 101 102 103 105 106 107 108\n...\n```\n\n很容易发现每个数的个位顺序均为 $0, 1, 2, 3, 5, 6, 7, 8$, 第一行除外。如果将这个序列映射到容易处理的序列如自然数序列、其它进制数序列，则可将问题化归至简单问题上，联想到八进制的逢八进一，把上述列表按照「八进制」的规则重排：\n\n```plain 列表 II\n      1   2   3   4   5   6   7\n 10  11  12  13  14  15  16  17\n 20  21  22  23  24  25  26  27\n 30  31  32  33  34  35  36  37\n 40  41  42  43  44  45  46  47\n 50  51  52  53  54  55  56  57\n 60  61  62  63  64  65  66  67\n 70  71  72  73  74  75  76  77\n 80  81  82  83  84  85  86  87\n 90  91  92  93  94  95  96  97\n...\n```\n\n建立了一个一一映射 $\\mathrm{II} \\mapsto \\mathrm{I}$。于是对于题目中的第 $n_{(10)}$ 个的数字，可先将其转为八进制后表示的数字 $n_{(8)}$，在列表 II 中定位这个数，再到列表 I 转换即可。西莎普代码实现：\n\n```cs\nprivate static string UserNumber(int n) {\n    char[] tb = {'0', '1', '2', '3', '5', '6', '7', '8'};\n    var n8 = Convert.ToString(n, 8).ToCharArray();\n    for (int i = 0; i < n8.Length; i++)\n        n8[i] = tb[n8[i] - '0'];\n    return String.Concat(n8);\n}\n```\n\n测试：\n\n```plain\n1       : 1\n2       : 2\n5       : 6\n10      : 12\n1000    : 1860\n5000    : 11710\n99999   : 303238\n1000000 : 3751100\n9999999 : 57113188\n```\n\n### 拓展 -- 包含一系列数字\n\n> 序列 $\\{c_n\\}$ 由正整数中去除含有数字 $a_1, a_2, \\ldots, a_k \\ (k < 9, a_i \\neq 0)$ 的数组成，确定其第 $N$ 项。\n\n由于去除了 $k$ 个数码，所以这个序列中的数字由 $10 - k$ 个数码组成，这些剩下的数码记为 $ b_1, b_2, \\ldots, b_{10-k} $。同样的思路，将 $0, 1, \\ldots, 9-k$ 分别对应至 $b_1, b_2, \\ldots, b_{10-k}$，之后将 $N$ 转为 $10 - k$ 进制数，利用这层映射关系得到原数。附上 Java 代码:\n\n```java\npublic static String generalUserNumber(int n, int[] a) {\n    int base = 10 - a.length;\n    int[] tmp = new int[10];\n    char[] b = new char[base];\n    for (int t : a) tmp[t] = -1;\n    for (int i = 0, j = 0; i < 10; i++) {\n        if (tmp[i] != -1) {\n            b[j] = (char) (i + '0');\n            j++;\n        }\n    }\n    char[] nb = Integer.toString(n, base).toCharArray();\n    for (int i = 0; i < nb.length; i++)\n        nb[i] = b[nb[i] - '0'];\n    return String.valueOf(nb);\n}\n```\n\n测试：\n\n```plain\n10   [1, 3, 5, 7, 9]          : 40\n20   [2, 4, 6, 8]             : 53\n30   [8, 4, 6, 9, 2, 7]       : 153\n2048 [9, 8, 7, 6, 5, 4, 3, 2] : 100000000000\n```\n","source":"_posts/nth-user.md","raw":"---\ntitle: 第 n 名用户\ndate: 2018-07-08 22:56:14\ncategories: Algorithms\ntags:\n    - Java\n    - C-Sharp\nmathjax: true\n---\n\n{% note info %}\n<a href=\"https://www.codewars.com/kata/t-dot-t-t-number-6-nth-user/train/csharp\">T.T.T.#6: nth user</a><br>\nA product to do market research, n users to participate in the activities.\nThey give each user a number. The first user number is 1,\nsecond users numbered 2, and so on... But no digits 4 and 9 in user's numbers,\nthat is to say the number of 3rd users is 3,\nthe number of 4th users is 5...the number of 8th users is 10... like this:\n{% codeblock  %}\nuser   1st 2nd 3rd 4th 5th 6th 7th 8th 9th 10th ........ nth\nnumber  1   2   3   5   6   7   8  10   11  12  ........ ??\n{% endcodeblock  %}\nPlease calculate, how much is the number of the nth user?\n{% endnote %}\n\n简言之，从 $1$ 开始，将不含 $4$ 和 $9$ 的正整数依次写下来，求第 $n$ 个数。\n\n<!-- more -->\n\n### 简单的尝试\n\n暴力穷举，从 $1$ 开始逐个验证是否含有数码 $4$ 和 $9$ 即可。原题仅支持 Javascript 及 C# 代码提交，所以写段 C# ：\n\n```cs\nusing System;\n\npublic class Kata {\n    private static Boolean CheckValidNumber(int n) {\n        for (; n != 0; n /= 10)\n            if (n % 10 == 4 || n % 10 == 9)\n                return false;\n        return true;\n    }\n\n    public static string UserNumber(int n) {\n        int t = 1, tmp = 1;\n        while (t++ <= n) {\n            while (true)\n                if (CheckValidNumber(tmp++))\n                    break;\n        }\n        return (tmp - 1).ToString();\n    }\n}\n```\n\n不出所料超时：`Process was terminated. It took longer than 12000ms to complete`。\n\n### 巧用进制\n\n观察符合题意的数字：\n\n```plain 列表 I\n      1   2   3   5   6   7   8\n 10  11  12  13  15  16  17  18\n 20  21  22  23  25  26  27  28\n 30  31  32  33  35  36  37  38\n 50  51  52  53  55  56  57  58\n 60  61  62  63  65  66  67  68\n 70  71  72  73  75  76  77  78\n 80  81  82  83  85  86  87  88\n100 101 102 103 105 106 107 108\n...\n```\n\n很容易发现每个数的个位顺序均为 $0, 1, 2, 3, 5, 6, 7, 8$, 第一行除外。如果将这个序列映射到容易处理的序列如自然数序列、其它进制数序列，则可将问题化归至简单问题上，联想到八进制的逢八进一，把上述列表按照「八进制」的规则重排：\n\n```plain 列表 II\n      1   2   3   4   5   6   7\n 10  11  12  13  14  15  16  17\n 20  21  22  23  24  25  26  27\n 30  31  32  33  34  35  36  37\n 40  41  42  43  44  45  46  47\n 50  51  52  53  54  55  56  57\n 60  61  62  63  64  65  66  67\n 70  71  72  73  74  75  76  77\n 80  81  82  83  84  85  86  87\n 90  91  92  93  94  95  96  97\n...\n```\n\n建立了一个一一映射 $\\mathrm{II} \\mapsto \\mathrm{I}$。于是对于题目中的第 $n_{(10)}$ 个的数字，可先将其转为八进制后表示的数字 $n_{(8)}$，在列表 II 中定位这个数，再到列表 I 转换即可。西莎普代码实现：\n\n```cs\nprivate static string UserNumber(int n) {\n    char[] tb = {'0', '1', '2', '3', '5', '6', '7', '8'};\n    var n8 = Convert.ToString(n, 8).ToCharArray();\n    for (int i = 0; i < n8.Length; i++)\n        n8[i] = tb[n8[i] - '0'];\n    return String.Concat(n8);\n}\n```\n\n测试：\n\n```plain\n1       : 1\n2       : 2\n5       : 6\n10      : 12\n1000    : 1860\n5000    : 11710\n99999   : 303238\n1000000 : 3751100\n9999999 : 57113188\n```\n\n### 拓展 -- 包含一系列数字\n\n> 序列 $\\{c_n\\}$ 由正整数中去除含有数字 $a_1, a_2, \\ldots, a_k \\ (k < 9, a_i \\neq 0)$ 的数组成，确定其第 $N$ 项。\n\n由于去除了 $k$ 个数码，所以这个序列中的数字由 $10 - k$ 个数码组成，这些剩下的数码记为 $ b_1, b_2, \\ldots, b_{10-k} $。同样的思路，将 $0, 1, \\ldots, 9-k$ 分别对应至 $b_1, b_2, \\ldots, b_{10-k}$，之后将 $N$ 转为 $10 - k$ 进制数，利用这层映射关系得到原数。附上 Java 代码:\n\n```java\npublic static String generalUserNumber(int n, int[] a) {\n    int base = 10 - a.length;\n    int[] tmp = new int[10];\n    char[] b = new char[base];\n    for (int t : a) tmp[t] = -1;\n    for (int i = 0, j = 0; i < 10; i++) {\n        if (tmp[i] != -1) {\n            b[j] = (char) (i + '0');\n            j++;\n        }\n    }\n    char[] nb = Integer.toString(n, base).toCharArray();\n    for (int i = 0; i < nb.length; i++)\n        nb[i] = b[nb[i] - '0'];\n    return String.valueOf(nb);\n}\n```\n\n测试：\n\n```plain\n10   [1, 3, 5, 7, 9]          : 40\n20   [2, 4, 6, 8]             : 53\n30   [8, 4, 6, 9, 2, 7]       : 153\n2048 [9, 8, 7, 6, 5, 4, 3, 2] : 100000000000\n```\n","slug":"nth-user","published":1,"updated":"2023-03-09T16:09:38.267Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u336r002fp4x0dkqggfbc","content":"<div class=\"note info\"><a href=\"https://www.codewars.com/kata/t-dot-t-t-number-6-nth-user/train/csharp\" target=\"_blank\" rel=\"noopener\">T.T.T.#6: nth user</a><br>\nA product to do market research, n users to participate in the activities.\nThey give each user a number. The first user number is 1,\nsecond users numbered 2, and so on... But no digits 4 and 9 in user's numbers,\nthat is to say the number of 3rd users is 3,\nthe number of 4th users is 5...the number of 8th users is 10... like this:\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user   1st 2nd 3rd 4th 5th 6th 7th 8th 9th 10th ........ nth</span><br><span class=\"line\">number  1   2   3   5   6   7   8  10   11  12  ........ ??</span><br></pre></td></tr></table></figure>\nPlease calculate, how much is the number of the nth user?</div>\r\n<p>简言之，从 <span class=\"math inline\">\\(1\\)</span> 开始，将不含 <span class=\"math inline\">\\(4\\)</span> 和 <span class=\"math inline\">\\(9\\)</span> 的正整数依次写下来，求第 <span class=\"math inline\">\\(n\\)</span> 个数。</p>\r\n<a id=\"more\"></a>\r\n<h3 id=\"简单的尝试\">简单的尝试</h3>\r\n<p>暴力穷举，从 <span class=\"math inline\">\\(1\\)</span> 开始逐个验证是否含有数码 <span class=\"math inline\">\\(4\\)</span> 和 <span class=\"math inline\">\\(9\\)</span> 即可。原题仅支持 Javascript 及 C# 代码提交，所以写段 C# ：</p>\r\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Kata</span> &#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Boolean <span class=\"title\">CheckValidNumber</span>(<span class=\"params\"><span class=\"keyword\">int</span> n</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (; n != <span class=\"number\">0</span>; n /= <span class=\"number\">10</span>)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (n % <span class=\"number\">10</span> == <span class=\"number\">4</span> || n % <span class=\"number\">10</span> == <span class=\"number\">9</span>)</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">string</span> <span class=\"title\">UserNumber</span>(<span class=\"params\"><span class=\"keyword\">int</span> n</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> t = <span class=\"number\">1</span>, tmp = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (t++ &lt;= n) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>)</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (CheckValidNumber(tmp++))</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (tmp - <span class=\"number\">1</span>).ToString();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<p>不出所料超时：<code>Process was terminated. It took longer than 12000ms to complete</code>。</p>\r\n<h3 id=\"巧用进制\">巧用进制</h3>\r\n<p>观察符合题意的数字：</p>\r\n<figure class=\"highlight plain\"><figcaption><span>列表 I</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">      1   2   3   5   6   7   8</span><br><span class=\"line\"> 10  11  12  13  15  16  17  18</span><br><span class=\"line\"> 20  21  22  23  25  26  27  28</span><br><span class=\"line\"> 30  31  32  33  35  36  37  38</span><br><span class=\"line\"> 50  51  52  53  55  56  57  58</span><br><span class=\"line\"> 60  61  62  63  65  66  67  68</span><br><span class=\"line\"> 70  71  72  73  75  76  77  78</span><br><span class=\"line\"> 80  81  82  83  85  86  87  88</span><br><span class=\"line\">100 101 102 103 105 106 107 108</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\r\n<p>很容易发现每个数的个位顺序均为 <span class=\"math inline\">\\(0, 1, 2, 3, 5, 6, 7, 8\\)</span>, 第一行除外。如果将这个序列映射到容易处理的序列如自然数序列、其它进制数序列，则可将问题化归至简单问题上，联想到八进制的逢八进一，把上述列表按照「八进制」的规则重排：</p>\r\n<figure class=\"highlight plain\"><figcaption><span>列表 II</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">      1   2   3   4   5   6   7</span><br><span class=\"line\"> 10  11  12  13  14  15  16  17</span><br><span class=\"line\"> 20  21  22  23  24  25  26  27</span><br><span class=\"line\"> 30  31  32  33  34  35  36  37</span><br><span class=\"line\"> 40  41  42  43  44  45  46  47</span><br><span class=\"line\"> 50  51  52  53  54  55  56  57</span><br><span class=\"line\"> 60  61  62  63  64  65  66  67</span><br><span class=\"line\"> 70  71  72  73  74  75  76  77</span><br><span class=\"line\"> 80  81  82  83  84  85  86  87</span><br><span class=\"line\"> 90  91  92  93  94  95  96  97</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\r\n<p>建立了一个一一映射 <span class=\"math inline\">\\(\\mathrm{II} \\mapsto \\mathrm{I}\\)</span>。于是对于题目中的第 <span class=\"math inline\">\\(n_{(10)}\\)</span> 个的数字，可先将其转为八进制后表示的数字 <span class=\"math inline\">\\(n_{(8)}\\)</span>，在列表 II 中定位这个数，再到列表 I 转换即可。西莎普代码实现：</p>\r\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">string</span> <span class=\"title\">UserNumber</span>(<span class=\"params\"><span class=\"keyword\">int</span> n</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">char</span>[] tb = &#123;<span class=\"string\">'0'</span>, <span class=\"string\">'1'</span>, <span class=\"string\">'2'</span>, <span class=\"string\">'3'</span>, <span class=\"string\">'5'</span>, <span class=\"string\">'6'</span>, <span class=\"string\">'7'</span>, <span class=\"string\">'8'</span>&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> n8 = Convert.ToString(n, <span class=\"number\">8</span>).ToCharArray();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n8.Length; i++)</span><br><span class=\"line\">        n8[i] = tb[n8[i] - <span class=\"string\">'0'</span>];</span><br><span class=\"line\">    <span class=\"keyword\">return</span> String.Concat(n8);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<p>测试：</p>\r\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1       : 1</span><br><span class=\"line\">2       : 2</span><br><span class=\"line\">5       : 6</span><br><span class=\"line\">10      : 12</span><br><span class=\"line\">1000    : 1860</span><br><span class=\"line\">5000    : 11710</span><br><span class=\"line\">99999   : 303238</span><br><span class=\"line\">1000000 : 3751100</span><br><span class=\"line\">9999999 : 57113188</span><br></pre></td></tr></table></figure>\r\n<h3 id=\"拓展-包含一系列数字\">拓展 – 包含一系列数字</h3>\r\n<blockquote>\r\n<p>序列 <span class=\"math inline\">\\(\\{c_n\\}\\)</span> 由正整数中去除含有数字 <span class=\"math inline\">\\(a_1, a_2, \\ldots, a_k \\ (k &lt; 9, a_i \\neq 0)\\)</span> 的数组成，确定其第 <span class=\"math inline\">\\(N\\)</span> 项。</p>\r\n</blockquote>\r\n<p>由于去除了 <span class=\"math inline\">\\(k\\)</span> 个数码，所以这个序列中的数字由 <span class=\"math inline\">\\(10 - k\\)</span> 个数码组成，这些剩下的数码记为 $ b_1, b_2, , b_{10-k} $。同样的思路，将 <span class=\"math inline\">\\(0, 1, \\ldots, 9-k\\)</span> 分别对应至 <span class=\"math inline\">\\(b_1, b_2, \\ldots, b_{10-k}\\)</span>，之后将 <span class=\"math inline\">\\(N\\)</span> 转为 <span class=\"math inline\">\\(10 - k\\)</span> 进制数，利用这层映射关系得到原数。附上 Java 代码:</p>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">generalUserNumber</span><span class=\"params\">(<span class=\"keyword\">int</span> n, <span class=\"keyword\">int</span>[] a)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> base = <span class=\"number\">10</span> - a.length;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] tmp = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">10</span>];</span><br><span class=\"line\">    <span class=\"keyword\">char</span>[] b = <span class=\"keyword\">new</span> <span class=\"keyword\">char</span>[base];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> t : a) tmp[t] = -<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>, j = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (tmp[i] != -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            b[j] = (<span class=\"keyword\">char</span>) (i + <span class=\"string\">'0'</span>);</span><br><span class=\"line\">            j++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">char</span>[] nb = Integer.toString(n, base).toCharArray();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; nb.length; i++)</span><br><span class=\"line\">        nb[i] = b[nb[i] - <span class=\"string\">'0'</span>];</span><br><span class=\"line\">    <span class=\"keyword\">return</span> String.valueOf(nb);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<p>测试：</p>\r\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10   [1, 3, 5, 7, 9]          : 40</span><br><span class=\"line\">20   [2, 4, 6, 8]             : 53</span><br><span class=\"line\">30   [8, 4, 6, 9, 2, 7]       : 153</span><br><span class=\"line\">2048 [9, 8, 7, 6, 5, 4, 3, 2] : 100000000000</span><br></pre></td></tr></table></figure>\r\n","site":{"data":{}},"excerpt":"<div class=\"note info\"><a href=\"https://www.codewars.com/kata/t-dot-t-t-number-6-nth-user/train/csharp\" target=\"_blank\" rel=\"noopener\">T.T.T.#6: nth user</a><br>\nA product to do market research, n users to participate in the activities.\nThey give each user a number. The first user number is 1,\nsecond users numbered 2, and so on... But no digits 4 and 9 in user's numbers,\nthat is to say the number of 3rd users is 3,\nthe number of 4th users is 5...the number of 8th users is 10... like this:\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user   1st 2nd 3rd 4th 5th 6th 7th 8th 9th 10th ........ nth</span><br><span class=\"line\">number  1   2   3   5   6   7   8  10   11  12  ........ ??</span><br></pre></td></tr></table></figure>\nPlease calculate, how much is the number of the nth user?</div>\r\n<p>简言之，从 <span class=\"math inline\">\\(1\\)</span> 开始，将不含 <span class=\"math inline\">\\(4\\)</span> 和 <span class=\"math inline\">\\(9\\)</span> 的正整数依次写下来，求第 <span class=\"math inline\">\\(n\\)</span> 个数。</p>","more":"<h3 id=\"简单的尝试\">简单的尝试</h3>\r\n<p>暴力穷举，从 <span class=\"math inline\">\\(1\\)</span> 开始逐个验证是否含有数码 <span class=\"math inline\">\\(4\\)</span> 和 <span class=\"math inline\">\\(9\\)</span> 即可。原题仅支持 Javascript 及 C# 代码提交，所以写段 C# ：</p>\r\n<!--�111-->\r\n<p>不出所料超时：<code>Process was terminated. It took longer than 12000ms to complete</code>。</p>\r\n<h3 id=\"巧用进制\">巧用进制</h3>\r\n<p>观察符合题意的数字：</p>\r\n<!--�112-->\r\n<p>很容易发现每个数的个位顺序均为 <span class=\"math inline\">\\(0, 1, 2, 3, 5, 6, 7, 8\\)</span>, 第一行除外。如果将这个序列映射到容易处理的序列如自然数序列、其它进制数序列，则可将问题化归至简单问题上，联想到八进制的逢八进一，把上述列表按照「八进制」的规则重排：</p>\r\n<!--�113-->\r\n<p>建立了一个一一映射 <span class=\"math inline\">\\(\\mathrm{II} \\mapsto \\mathrm{I}\\)</span>。于是对于题目中的第 <span class=\"math inline\">\\(n_{(10)}\\)</span> 个的数字，可先将其转为八进制后表示的数字 <span class=\"math inline\">\\(n_{(8)}\\)</span>，在列表 II 中定位这个数，再到列表 I 转换即可。西莎普代码实现：</p>\r\n<!--�114-->\r\n<p>测试：</p>\r\n<!--�115-->\r\n<h3 id=\"拓展-包含一系列数字\">拓展 – 包含一系列数字</h3>\r\n<blockquote>\r\n<p>序列 <span class=\"math inline\">\\(\\{c_n\\}\\)</span> 由正整数中去除含有数字 <span class=\"math inline\">\\(a_1, a_2, \\ldots, a_k \\ (k &lt; 9, a_i \\neq 0)\\)</span> 的数组成，确定其第 <span class=\"math inline\">\\(N\\)</span> 项。</p>\r\n</blockquote>\r\n<p>由于去除了 <span class=\"math inline\">\\(k\\)</span> 个数码，所以这个序列中的数字由 <span class=\"math inline\">\\(10 - k\\)</span> 个数码组成，这些剩下的数码记为 $ b_1, b_2, , b_{10-k} $。同样的思路，将 <span class=\"math inline\">\\(0, 1, \\ldots, 9-k\\)</span> 分别对应至 <span class=\"math inline\">\\(b_1, b_2, \\ldots, b_{10-k}\\)</span>，之后将 <span class=\"math inline\">\\(N\\)</span> 转为 <span class=\"math inline\">\\(10 - k\\)</span> 进制数，利用这层映射关系得到原数。附上 Java 代码:</p>\r\n<!--�116-->\r\n<p>测试：</p>\r\n<!--�117-->"},{"title":"Lingo 学习（一）","date":"2018-07-14T08:15:51.000Z","mathjax":true,"_content":"\n## 环境搭建\n\n- Lingo 17.0 (Windows 10 x64)\n- Notepad++ 7.4.2 x86\n  - NppExec\n  - Visimulator\n  - [语法高亮及代码补全][lingo-notepad++]\n\n<!-- more -->\n\n## Lingo 界面速览\n\n### 文件类型\n\n| 扩展名 | 文件类型                                | 扩展名 | 文件类型           |\n| :--:   | :---                                    | :--:   | :---               |\n| .lg4 | Windows 下模型文件，支持字体、格式、OLE | .lng | 纯文本格式模型文件 |\n| .ldt | 数据文件                                | .ltf | 命令脚本文件       |\n| .ltx | Lindo 语法的模型文件                    | .lgr | 报告文件           |\n\n### Lingo 菜单\n\n| 中文             | 英文     | 中文         | 英文             |\n| :--:             | :--:     | :--:         | :--:             |\n| 求解结果         | Solution | 灵敏性分析   | Range            |\n| 生成模型展开形式 | Generate | 生成图形     | Picture          |\n| 调试             | Debug    | 模型统计资料 | Model Statistics |\n| 查看             | Look     |              |                  |\n\n### 求解器状态窗口信息\n\n- 变量数量 (Variables)\n- 约束变量 (Constraints)\n- 非零系数数量 (Nonzeroes)\n- 内存使用量 (Generator Memory Used)\n- 已运行时间 (Elapsed Runtime)\n- 求解器状态 (Solver Status)\n  - 模型类型 (Model Class)：线性规划 (LP)、二次规划 (QP)、整数线性规划 (ILP)、整数二次规划 (IQP)、纯整数线性规划 (PILP)、纯整数二次规划 (PIQP)、非线性规划 (NLP)、混合整数规划 (MIP)、整数非线性工 (INLP)、纯整数非线性规划 (PINLP)、混合整数非线性规划 (MINLP)\n  - 当前解的状态 (State)：全局最优解 (Global Optimum)、局部最优解 (Local Optimum)、可行解 (Feasible)、不可行解 (Infeasible)、无界 (Unbounded)、中断 (Interrupted)、未确定 (Undetermined)\n  - 当前解的目标函数值 (Objective)\n  - 当前约束不满足的总量 (Infeasibility)\n  - 迭代次数 (Iterations)\n  - 扩展求解器状态 (Extended Solver Status)：特殊算法类型 (Solver Type)、可行解的最佳目标函数值 (Best Obj)、目标函数值的界限 (Obj Bound)、特殊求解程序运行步数 (Steps)、有效步数 (Active)\n\n## Lingo 语言速览\n\n### 逻辑运算符\n\n| 运算符  | 作用                     | 运算符  | 作用                       | 运算符 | 作用                       |\n| :--:    | :--                      | :--:    | :--                        | :--:   | :--                        |\n| #EQ#  | 两操作数相等时为真       | #NE#  | 两操作数不等时为真         | #GT# | 左边（严格）大于右边时为真 |\n| #GE#  | 左边大于或等于右边时为真 | #LT#  | 左边（严格）小于右边时为真 | #LE# | 左边小于或等于右边时为真   |\n| #NOT# | 取反                     | #AND# | 逻辑与                     | #OR# | 逻辑或                     |\n\n注：#AND# 和 #OR# 优先级较低，但高于 <=、=、>=。\n\n### 数学函数\n\n| 函数名 | 解释 | 函数名 | 解释 | 函数名 | 解释 |\n| :-- | :-- | :-- | :-- | :-- | :-- |\n| @abs(x) | 绝对值 | @acos(x) | 反余弦 | @acosh(x) | 反双曲余弦 |\n| @asin(x) | 反正弦 | @asinh(x) | 反双曲正弦 | @atan(x) | 反正切 |\n| @atan2(x, y) | $\\arctan (y/x)$ | @atanh(x) | 反双曲正切 | @cos(x) | 余弦 |\n| @cosh(x) | 双曲余弦 | @exp(x) | $e^x$ | @floor(x) | 向 0 取整 |\n| @int(x) | 向负无穷取整 | @integral(proc, x, xl, xu, y) | 辛普森数值积分 | @lgm(x) | Gamma 函数自然对数 |\n| @log(x) | 自然对数 | @log10(x) | 10 为底对数 | @logb(x, b) | b 为底对数 |\n| @mod(x, y) | 取模 | @pi() | 圆周率 | @pow(x, y) | $x^y$ |\n| @round(x, n) | 最近四舍五入 | @rounddown(x, n) | 向零四舍五入 | @roundup(x, n) | 远离零四舍五入 |\n| @sign(x) | 符号函数 | @sin(x) | 正弦 | @sinh(x) | 双曲正弦 |\n| @smax(x1, x2, ..., xn) | 最大值 | @smin(x1, x2, ..., xn) | 最小值 | @sqr(x) | 平方 |\n| @sqrt(x) | 开方 | @tan(x) | 正切 | @tanh(x) | 双曲正切 |\n\n### 概率函数\n\n| 函数名                 | 解释                 | 函数名        | 解释                           | 函数名             | 解释                             |\n| :--                    | :--                  | :--           | :--                            | :--                | :--                              |\n| @norminv(p, mu, sigma) | 正态分布下分位数     | @normsinv(p)  | 标准正态分布分位数             | @pbn(p, n, x)      | 二项分布 CDF 值                  |\n| @pcx(n, x)             | 卡方分布 CDF 值      | @peb(a, x)    | 允许无穷排队的 Erlang 繁忙概率 | @pel(a, x)         | 不允许无穷排队的 Erlang 繁忙概率 |\n| @pfd(n, d, x)          | F 分布 CDF 值        | @pfs(a, x, c) | Poisson 服务系统期望值         | @phg(pop, g, n, x) | 超几何分布概率值                 |\n| @ppl(a, x)             | 泊松分布线性损失函数 | @pps(a, x)    | 泊松分布 CDF 值                | @psl(x)            | 单位正态线性损失函数             |\n| @psn(x)                | 标准正态分布 CDF 值  | @ptd(n, x)    | t 分布 CDF 值                  | @qrand(seed)       | (0, 1) 间随机数                  |\n\n### 变量界定函数\n\n| 函数名                 | 解释                | 函数名        | 解释               | 函数名                     | 解释             |\n| :--                    | :--                 | :--           | :--                | :--                        | :--              |\n| @bin(variable) | 限制变量取 0 或 1 | @bnd(lower, variable, upper) | 限制 $L\\leqslant x \\leqslant U$ | @free(variable) | 取消变量限制，可取任意实数 |\n| @gin(variable) | 限制为整数 | @priority(variable, priority) | 设置优先级| @semic(lower, variable, upper) | 或者为 0，或者在区间 (lower, upper) |\n\n### 集合操作函数\n\n- @for(s: e)\n- @max(s: e)\n- @prod(s: e)\n- @size(s)\n- @insert(s, idx)\n- @sum(s: e)\n- @min(s: e)\n- @in(s, e)\n- @index(s: e)\n- @wrap(idx, limit)\n\n\n\n----------------------------------\n\n## 一些经典问题\n\n### 运输问题\n\n假设 Wireless Widget有 6 个供货仓库，货物分别发往 8 个供销商。每个仓库有一定的库存量，现要制定出最小化运输成本，使得运输方案达到每个供销商需求的运输方案。\n\n<!-- more -->\n\n已知信息如下：\n\n| 仓库 | 库存 | 供销商 | 需求 |\n| :--: | :--: |  :--:  | :--: |\n|   1  |  60  |   1    |  35  |\n|   2  |  55  |   2    |  37  |\n|   3  |  51  |   3    |  22  |\n|   4  |  43  |   4    |  32  |\n|   5  |  41  |   5    |  41  |\n|   6  |  52  |   6    |  32  |\n|      |      |   7    |  43  |\n|      |      |   8    |  38  |\n\n每个仓库（WH1 ~ WH6）到每个供销商的单位运费表如下：\n\n|          | V1   | V2   | V3   | V4   | V5   | V6   | V7   | V8   |\n| :--:     | :--: | :--: | :--: | :--: | :--: | :--: | :--: | :--: |\n| **WH1**  | 6    | 2    | 6    | 7    | 4    | 2    | 5    | 9    |\n| **WH2**  | 4    | 9    | 5    | 3    | 8    | 5    | 8    | 2    |\n| **WH3**  | 5    | 2    | 1    | 9    | 7    | 4    | 3    | 3    |\n| **WH4**  | 7    | 6    | 7    | 3    | 9    | 2    | 7    | 1    |\n| **WH5**  | 2    | 3    | 9    | 5    | 7    | 2    | 6    | 5    |\n| **WH6**  | 5    | 5    | 2    | 2    | 8    | 1    | 4    | 3    |\n\n对问题建模，记 $\\text{volume}_{ij}$ 为第 $i$ 个仓库到第 $j$ 个供销商的货运量，$\\text{cost}_{ij}$ 表示第 $i$ 个仓库到第 $j$ 个供销商的单位货物运价，$\\text{capacity}_i$ 表示第 $i$ 个仓库的最大供货量，$\\text{demand}_j$ 表示第 $j$ 个供销商的订货量。\n\n目标函数是令总运输费用最少。约束条件：\n\n- 各仓库的出货量不超过其库存\n- 各供销商收到的货物总量等于订货数\n- 决策变量 $\\text{cost}_{ij}$ 非负。\n\n数学表达为：\n\n$$\n\\begin{array}{cl}\n    \\min & z = \\sum\\limits_{i=1}^6 \\sum\\limits_{j=1}^8 \\text{cost}_{ij}\\ \\text{volume}_{ij} \\\\\n    \\text{s.t.} & \\begin{cases}\n        \\sum\\limits_{j=1}^8 \\text{volume}_{ij} \\leqslant \\text{capacity}_i, & i = 1,2,\\ldots,6 \\\\\n        \\sum\\limits_{i=1}^6 \\text{volume}_{ij} = \\text{demand}_j, & j = 1,2,\\ldots,8 \\\\\n        \\text{volume}_{ij} \\geqslant 0, & i=1,2,\\ldots,6, \\ j=1,2,\\ldots,8 \\\\\n    \\end{cases}\n\\end{array}\n$$\n\n相应的 Lingo 程序代码：\n\n```matlab\nmodel:\n    sets:\n        warehouses/wh1..wh6/:capacity;\n        vendors/vd1..vd8/:demand;\n        crosstab(warehouses, vendors): volume, cost;\n    endsets\n\n    data:\n       capacity = 60 55 51 43 41 52;\n       demand = 35 37 22 32 41 32 43 38;\n       cost = 6 2 6 7 4 2 5 9\n              4 9 5 3 8 5 8 2\n              5 2 1 9 7 4 3 3\n              7 6 7 3 9 2 7 1\n              2 3 9 5 7 2 6 5\n              5 5 2 2 8 1 4 3;\n    enddata\n\n    min = @sum(crosstab(i, j): volume(i, j) * cost(i, j));\n    @for(warehouses(i):\n        @sum(vendors(j): volume(i, j)) <= capacity(i));\n    @for(vendors(j):\n        @sum(warehouses(i): volume(i, j)) = demand(j));\nend\n```\n\n其中 `SET` 过程大大简化了程序代码，也提升了程序的可读性，否则对于每个变量都需要进行硬编码。其语法 为 `<集合名称>[集合元素][:<集合属性>]`。当然 `SET` 中的前两个关于库存和供销商的描述可以拆分为\n\n```matlab\nsets:\n    warehouses:capacity;\n    vendors:demand;\n    ...\nendsets\n\ndata:\n    warehouses = wh1..wh6;\n    demand = vd1..vd8;\nenddata\n```\n\n当然笔者更青睐紧凑的方式。`crosstab` 表示由 `warehouses` 和 `demand` 构成的派生集，即包含了 6 × 8 = 48 个变量。在目标函数及约束条件语句中，由于目标函数的操作数完全来自 `crosstab`，所以可省略部分语句：`min = @sum(crosstab: volume * cost);`。\n\n程序经过 17 次迭代后得出的目标函数值为 664.0000，最优运输方案如下表。\n\n|          | V1   | V2   | V3   | V4   | V5   | V6   | V7   | V8   | 合计 | 库存 |\n| :--:     | :--: | :--: | :--: | :--: | :--: | :--: | :--: | :--: | :--: | :--: |\n| **WH1**  | 0    | 19   | 0    | 0    | 41   | 0    | 0    | 0    | 60   | 60   |\n| **WH2**  | 1    | 0    | 0    | 32   | 0    | 0    | 0    | 0    | 33   | 55   |\n| **WH3**  | 0    | 11   | 0    | 0    | 0    | 0    | 40   | 0    | 51   | 51   |\n| **WH4**  | 0    | 0    | 0    | 0    | 0    | 5    | 0    | 38   | 43   | 43   |\n| **WH5**  | 34   | 7    | 0    | 0    | 0    | 0    | 0    | 0    | 41   | 41   |\n| **WH6**  | 0    | 0    | 22   | 0    | 0    | 27   | 3    | 0    | 52   | 52   |\n| **合计** | 35   | 37   | 22   | 32   | 41   | 32   | 43   | 38   |      |      |\n| **需求** | 35   | 37   | 22   | 32   | 41   | 32   | 43   | 38   |      |      |\n\n-----------------------------------\n\n### 值班问题\n\n某项工作一周 7 天都需有人上班，周一至周日所需的最少人数分别为 20、16、13、16、19、14 和 12。要求员工一周连续工作 5 天接着休息 2 天。给出人员安排，使每周所需人数最少。\n\n若安排得当，记周一至周日分别安排 $X(i)$ 人上班。那么周一上班的人必然周五、周六休息，以此类推。令总上班人数为 $Z$，那么上周周二、周三的人仍在休息中，所以有 $X(1) = Z-X(1)-X(2)$，同样可以得到其他 6 个等式。概括之就是\n$$X(i) = Z-X(i+1)-X(i+2), \\ i=1,2,\\ldots, 7$$\n当然，$X(8)$ 相当于 $X(1)$，$X(9)$ 相当于 $X(2)$。所以需要特殊的函数对其进行转化，`wrap` 函数正合此意。除了此函数，由此 [公式][essentials-of-matlab-examples] 也可。代码如下：\n\n```matlab\nmodel:\n    sets:\n        days/mon..sun/: r, x;\n    endsets\n\n    data:\n        r = 20 16 13 16 19 14 12;\n    enddata\n\n    min = z;\n    z = @sum(days: x);\n    n = @size(days);\n    @for(days(i): z-x(@wrap(i+1,n))-x(@wrap(i+2,n)) >= r(i));\n    ! @for(days(i): z-x(1+@mod(i,n))-x(1+@mod(i+1,n)) >= r(i));\nend\n```\n\n程序得出的最优解为：8、2、0、6、3、3、0。这说明每周最少需要 22 名员工，周一安排 8 人开始上班，或者说这 8 人休周六和周日，周一工作，其余类推。周二安排 2 人，等等。待轮休稳定后即可满足每天所需要的最少上班员工数。\n\n----------------------------------\n\n### 投资的收益和风险\n\n市场上有 $n$ 种资产 $S_i (i=1,2,\\ldots,n)$ 供投资者选择，某公司有数额为 $M$ 的一笔资金用于一个时期的投资。公司财务分析人员对这 $n$ 种资产进行了评估，估算出在这一时期内购买 $S_i$ 的平均收益率为 $r_i$，并预测出购买 $S_i$ 的风险损失率为 $q_i$。考虑到投资越分散，总的风险越小，公司决定当用这笔资金购买若干种资产时，总体风险可用所投资的 $S_i$ 中最大的一个风险来度量。购买 $S_i$ 要付交易费，费率为 $p_i$，并且当购买额不超过给定值 $u_i$ 时，交易费按购买 $u_i$ 计算（不买当然无须付费）。另外，假定同期银行存款利率是 $r_0$, 且既无交易费又无风险（$r_0=5\\%$）。\n\n{% fold 数据表 %}\n<table>\n  <tr>\n    <th style=\"text-align: center;\">$E_i$</th>\n    <th style=\"text-align: center;\">$r_i$(%)</th>\n    <th style=\"text-align: center;\">$q_i$(%)</th>\n    <th style=\"text-align: center;\">$p_i$(%)</th>\n    <th style=\"text-align: center;\">$u_i$(元)</th>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S1</strong></td>\n    <td style=\"text-align: center;\">9.6</td>\n    <td style=\"text-align: center;\">42.0</td>\n    <td style=\"text-align: center;\">2.1</td>\n    <td style=\"text-align: center;\">181</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S2</strong></td>\n    <td style=\"text-align: center;\">18.5</td>\n    <td style=\"text-align: center;\">54.0</td>\n    <td style=\"text-align: center;\">3.2</td>\n    <td style=\"text-align: center;\">407</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S3</strong></td>\n    <td style=\"text-align: center;\">49.4</td>\n    <td style=\"text-align: center;\">60.0</td>\n    <td style=\"text-align: center;\">6.0</td>\n    <td style=\"text-align: center;\">428</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S4</strong></td>\n    <td style=\"text-align: center;\">23.9</td>\n    <td style=\"text-align: center;\">42.0</td>\n    <td style=\"text-align: center;\">1.5</td>\n    <td style=\"text-align: center;\">549</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S5</strong></td>\n    <td style=\"text-align: center;\">8.1</td>\n    <td style=\"text-align: center;\">1.2</td>\n    <td style=\"text-align: center;\">7.6</td>\n    <td style=\"text-align: center;\">270</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S6</strong></td>\n    <td style=\"text-align: center;\">14.0</td>\n    <td style=\"text-align: center;\">39.0</td>\n    <td style=\"text-align: center;\">3.4</td>\n    <td style=\"text-align: center;\">397</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S7</strong></td>\n    <td style=\"text-align: center;\">40.7</td>\n    <td style=\"text-align: center;\">68.0</td>\n    <td style=\"text-align: center;\">5.6</td>\n    <td style=\"text-align: center;\">178</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S8</strong></td>\n    <td style=\"text-align: center;\">31.2</td>\n    <td style=\"text-align: center;\">33.4</td>\n    <td style=\"text-align: center;\">3.1</td>\n    <td style=\"text-align: center;\">220</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S9</strong></td>\n    <td style=\"text-align: center;\">33.6</td>\n    <td style=\"text-align: center;\">53.3</td>\n    <td style=\"text-align: center;\">2.7</td>\n    <td style=\"text-align: center;\">475</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S10</strong></td>\n    <td style=\"text-align: center;\">36.8</td>\n    <td style=\"text-align: center;\">40.0</td>\n    <td style=\"text-align: center;\">2.9</td>\n    <td style=\"text-align: center;\">248</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S11</strong></td>\n    <td style=\"text-align: center;\">11.8</td>\n    <td style=\"text-align: center;\">31.0</td>\n    <td style=\"text-align: center;\">5.1</td>\n    <td style=\"text-align: center;\">195</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S12</strong></td>\n    <td style=\"text-align: center;\">9.0</td>\n    <td style=\"text-align: center;\">5.5</td>\n    <td style=\"text-align: center;\">5.7</td>\n    <td style=\"text-align: center;\">320</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S13</strong></td>\n    <td style=\"text-align: center;\">35.0</td>\n    <td style=\"text-align: center;\">46.0</td>\n    <td style=\"text-align: center;\">2.7</td>\n    <td style=\"text-align: center;\">267</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S14</strong></td>\n    <td style=\"text-align: center;\">9.4</td>\n    <td style=\"text-align: center;\">5.3</td>\n    <td style=\"text-align: center;\">4.5</td>\n    <td style=\"text-align: center;\">328</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S15</strong></td>\n    <td style=\"text-align: center;\">15.0</td>\n    <td style=\"text-align: center;\">23.0</td>\n    <td style=\"text-align: center;\">7.6</td>\n    <td style=\"text-align: center;\">131</td>\n  </tr>\n</table>\n{% endfold %}\n\n要使净收益尽可能大，总体风险尽可能小，这是一个多目标的规划模型：\n\n$$\n    \\begin{gather*}\n        \\max \\ Q(x) = r_0 x_0 + \\sum_{i=1}^n r_ix_i - \\sum_{i=1}^n p_iy_i,\n            \\ i=1,2,\\ldots,n \\\\\n        \\min \\ F(x) = \\max\\limits_{1\\leqslant i\\leqslant n}\\{q_ix_i\\}\n    \\end{gather*}\n$$\n\n这里仅考虑模型的一种简化情形：投资者承受风险的程度不同，故给定风险一个界限 $a$，使得所有风险率均小于此值，即 $q_ix_i \\leqslant Ma (i=1,2,\\ldots,n)$。所以目标函数中最小化风险的要求转化为其中一个约束条件。\n\n约束条件为：\n\n$$\n    \\begin{cases}\n        \\displaystyle \\sum_{i=1}^nx_i + \\sum_{i=1}^n p_iy_i = M, & i=1,2,\\cdots,n\\\\\n        \\displaystyle x_i \\geqslant 0, & i=1,2,\\cdots,n\\\\\n        \\displaystyle y_i = \\begin{cases}\n            x_i, &x_i>u_i\\\\\n            u_i, &0<x_i\\leqslant u_i\\\\\n            0, &x_i=0\n        \\end{cases}, & i=1,2,\\cdots, n\n    \\end{cases}\n$$\n\n由于约束条件中含有分段函数，这时可引入 0 - 1 变量将模型转化为混合整数线性规划模型，但也可以利用 Lingo 中的 `@if` 函数来构造条件，但模型为非线性规划模型。\n\n{% fold \"混合整数线性规划模型 Lingo 程序\" %}\n{% codeblock lang:matlab %}\nmodel:\n    sets:\n        S/1..15/:x,y,r,p,q,u,z1,z2,z3,b1,b2,b3;\n    endsets\n\n    data:\n        M=4000;\n        bili=0.05;\n        r0=5;\n        r=9.6 18.5 49.4 23.9 8.1 14 40.7 31.2 33.6 36.8 11.8 9 35 9.4 15;\n        q=42 54 60 42 1.2 39 68 33.4 53.3 40 31 5.5 46 5.3 23;\n        p=2.1 3.2 6 1.5 7.6 3.4 5.6 3.1 2.7 2.9 5.1 5.7 2.7 4.5 7.6;\n        u=181 407 428 549 270 397 178 220 475 248 195 320 267 328 131;\n    enddata\n\n    max=r0*x0/100+@Sum(S:r*x/100)-@Sum(S:p*y/100);\n    @For(S:q*x/100<M*bili);\n    x0+@Sum(S:x)+@Sum(S:p*y/100)=M;\n\n    @For(S:y=z1+z2+z3);\n    @For(S:b1+b2+b3=1);\n    @For(S:u-x<2*M*(1-b1)); @For(S:x-M<2*M*(1-b1));\n    @For(S:-x<2*M*(1-b2)); @For(S:x-u<2*M*(1-b2));\n    @For(S:-x<2*M*(1-b3)); @For(S:x<2*M*(1-b3));\n\n    @For(S:-2*M*b1<z1); @For(S:z1<2*M*b1);\n    @For(S:x-2*M*(1-b1)<z1); @For(S:z1<x+2*M*(1-b1));\n    @For(S:-2*M*b2<z2); @For(S:z2<2*M*b2);\n    @For(S:u-2*M*(1-b2)<z2); @For(S:z2<u+2*M*(1-b2));\n    @For(S:z3=0);\n\n    @For(S:@Bin(b1));\n    @For(S:@Bin(b2));\n    @For(S:@Bin(b3));\nend\n{% endcodeblock %}\n{% endfold %}\n\n{% fold \"非线性规划模型 Lingo 程序\" %}\n{% codeblock lang:matlab %}\nmodel:\n    sets:\n        assets/1..15/: x, y, r, q, p, u;\n    endsets\n    data:\n        M = 4000;\n        r0 = 5;\n        a = 0.05;\n        r =  9.6 18.5 49.4 23.9  8.1\n            14.0 40.7 31.2 33.6 36.8\n            11.8  9.0 35.0  9.4 15.0;\n        q = 42  54   60   42 1.2\n            39  68 33.4 53.3  40\n            31 5.5   46  5.3  23;\n        p = 2.1 3.2 6.0 1.5 7.6\n            3.4 5.6 3.1 2.7 2.9\n            5.1 5.7 2.7 4.5 7.6;\n        u = 181 407 428 549 270\n            397 178 220 475 248\n            195 320 267 328 131;\n    enddata\n\n    max=(x0*r0+@sum(assets: r*x-p*y))/100;\n    @for(assets: y=@if(x #le# u, @if(x #eq# 0, 0, u), x));\n    @for(assets: q*x/100<=M*a);\n    x0+@sum(assets: x)+@sum(assets: p*y/100)=M;\nend\n{% endcodeblock %}\n{% endfold %}\n\n程序输出结果如下：\n\n| Variable | Value    | Variable | Value    | Variable | Value    | Variable | Value    |\n| :---:    | :---:    | :---:    | :---:    | :---:    | :---:    | :---:    | :---:    |\n| **X0**   | 0        | **X4**   | 476.1905 | **X8**   | 598.8024 | **X12**  | 0        |\n| **S1**   | 0        | **X5**   | 0        | **X9**   | 375.2345 | **X13**  | 434.7826 |\n| **X2**   | 370.3704 | **X6**   | 479.8182 | **X10**  | 500      | **X14**  | 0        |\n| **X3**   | 333.3333 | **X7**   | 294.1176 | **X11**  | 0        | **X15**  | 0        |\n\n在此种投资组合下，收益 1045.604 元。\n\n#### 分段函数处理方法\n上述关于混合整数线性规划模型的 Lingo 程序中引入不少中间决策变量，这里对其展开讨论，下面内容节选自余胜威《MATLAB 数学建模经典案例实战》。（部分改动）\n\n{% note info %}\n设有限区间的有界分段函数：\n\n$$\n    y = f(x) = \\begin{cases}\n            \\varphi_1(x), & x\\in(a_1, b_1) & \\\\\n            \\varphi_2(x), & x\\in(a_2, b_2) & \\\\\n            \\hfil \\cdots \\\\\n            \\varphi_n(x), & x\\in(a_n, b_n) & \\\\\n        \\end{cases}, \\quad\n        a_1 < b_1 \\leqslant a_2 < b_2 \\leqslant \\cdots \\leqslant a_n < b_n\n$$\n\n等价为：\n\n$$\n    \\begin{cases}\n        y = y_1 + y_2 + \\cdots y_n \\\\\n        \\delta_1 + \\delta_2 + \\cdots + \\delta_n = 1, \\delta_i \\in \\{0,1\\} \\\\\n        x - a_i \\geqslant -(1-\\delta_i)L_x \\\\\n        x - b_i \\leqslant (1-\\delta_i)U_x \\\\\n        -\\delta_i L_{y1} \\leqslant y_i \\leqslant \\delta_i U_{y1} \\\\\n        -(1-\\delta_i) L_{y2} \\leqslant y_i-\\varphi_i(x)\n        \\leqslant (1-\\delta_i) U_{y2}\n    \\end{cases}\n$$\n{% endnote %}\n\n其中 $\\delta_i$ 表明 $x$ 所处区间，通过上述约束条件中的第 3、4 式保证。具体而言，给定 $i\\in\\{1,\\ldots,n\\}$，若 $x \\in (a_i, b_i)$，必然有 $x-a_i \\geqslant 0$ 以及 $x-b_i \\leqslant 0$；对其他区间而言，有 $x-a_i \\geqslant -L$，以及 $x-b_i \\leqslant U$，其中 $U, L > 0$ 分别为 $x$ 支撑集的上限和下限的绝对值。引入 0 - 1 变量 $\\delta_i$（类似于概率论中示性函数），对于任何区间，整合上述不等式，即为 3、4 式。注意到给定的 $x$ 仅会落入一个区间，故 $\\sum \\delta_i = 1$（2 式）。对于 $y_i$，讨论类似。当然为简单起见，可将所有界限以它们的最大值代替。\n\n乍看求解模型被复杂化，但把可能为非线性规划的问题转为了混合整数线性规划问题，加快求解收敛速度。\n\n-----------------------------\n\n### 计划排序模型\n\n完成某产品的装配过程需要 11 项任务（用 A ~ K 表示），每项任务所花费的时间如下：\n\n<table>\n  <tr>\n    <td><strong>任务</strong></td>\n    <td><strong>A</strong></td>\n    <td><strong>B</strong></td>\n    <td><strong>C</strong></td>\n    <td><strong>D</strong></td>\n    <td><strong>E</strong></td>\n    <td><strong>F</strong></td>\n  </tr>\n  <tr>\n    <td><strong>时间</strong></td>\n    <td>45</td>\n    <td>11</td>\n    <td>9</td>\n    <td>50</td>\n    <td>15</td>\n    <td>12</td>\n  </tr>\n  <tr>\n    <td><strong>任务</strong></td>\n    <td><strong>G</strong></td>\n    <td><strong>H</strong></td>\n    <td><strong>I</strong></td>\n    <td><strong>J</strong></td>\n    <td><strong>K</strong></td>\n    <td></td>\n  </tr>\n  <tr>\n    <td><strong>时间</strong></td>\n    <td>12</td>\n    <td>12</td>\n    <td>12</td>\n    <td>8</td>\n    <td>9</td>\n    <td></td>\n  </tr>\n</table>\n\n各项任务之间存在先后顺序如下图所示。装配流水线有四个顺序工作站，对于有先后次序的任务，只能在流水线上向后传（如任务 B 和 C 的次序为先 B 后 C，如果安排 B 给第 3 站做，则 C 要么由 B 自己完成，要么传给第 4 站来做，而不能交往 1 或 2 号站），每项任务必须只能分配至一个工作站来做。合理分配生产计划，使整个装配周期最短。\n\n<img src=\"/img/task_priority.svg\" width=\"50%\">\n\n记 $x_{ik}$ 表示将任务 $i\\ (i=A,B,\\ldots,K)$ 分配给工作站 $k\\ (k=1,2,3,4)$ 的情况，1 表示分配，0 表示不分配，$t_i$ 表示完成各项任务所需时间。则目标函数为 $\\min\\ T = \\max\\limits_{1\\leqslant k \\leqslant 4} \\sum\\limits_{i=1}^{11} t_ix_{ik}$。由每项任务只能分配给一个工作站来做，故对所有任务 $i$ 有：$\\sum\\limits_{k=1}^4 x_{ik}=1$。对于任务间的优先级，考虑任务 $i$ 先于任务 $j$，则可行的任务安排表 (11 × 4) 有：\n\n\\begin{array}{ccccc}\n\\begin{array}{ccccc}\n    \\hline\n      & 1 & 2 & 3 & 4 \\\\\n    \\hline\n    i & 1 &   &   &   \\\\\n    j & 1 &   &   &   \\\\\n    \\Delta  & 0 & 0 & 0 & 0 \\\\\n    \\hline\n\\end{array}\n&\n\\begin{array}{ccccc}\n    \\hline\n      & 1 & 2 & 3 & 4 \\\\\n    \\hline\n    i & 1 &   &   &   \\\\\n    j &   & 1 &   &   \\\\\n    \\Delta  & -1 & 1 & 0 & 0 \\\\\n    \\hline\n\\end{array}\n&\n\\begin{array}{ccccc}\n    \\hline\n      & 1 & 2 & 3 & 4 \\\\\n    \\hline\n    i & 1 &   &   &   \\\\\n    j &   &   & 1 &   \\\\\n    \\Delta  & -1 & 0 & 1 & 0 \\\\\n    \\hline\n\\end{array}\n&\n\\begin{array}{ccccc}\n    \\hline\n      & 1 & 2 & 3 & 4 \\\\\n    \\hline\n    i & 1 &   &   &   \\\\\n    j &   &   &   & 1 \\\\\n    \\Delta  & -1 & 0 & 0 & 1 \\\\\n    \\hline\n\\end{array}\n&\n\\begin{array}{ccccc}\n    \\hline\n      & 1 & 2 & 3 & 4 \\\\\n    \\hline\n    i &   & 1 &   &   \\\\\n    j &   & 1 &   &   \\\\\n    \\Delta  & 0 & 0 & 0 & 0 \\\\\n    \\hline\n\\end{array} \\\\[15pt]\n\\begin{array}{ccccc}\n    \\hline\n      & 1 & 2 & 3 & 4 \\\\\n    \\hline\n    i &   & 1 &   &   \\\\\n    j &   &   & 1 &   \\\\\n    \\Delta  & 0 & -1 & 1 & 0 \\\\\n    \\hline\n\\end{array}\n&\n\\begin{array}{ccccc}\n    \\hline\n      & 1 & 2 & 3 & 4 \\\\\n    \\hline\n    i &   & 1 &   &   \\\\\n    j &   &   &   & 1 \\\\\n    \\Delta  & 0 & -1 & 0 & 1 \\\\\n    \\hline\n\\end{array}\n&\n\\begin{array}{ccccc}\n    \\hline\n      & 1 & 2 & 3 & 4 \\\\\n    \\hline\n    i &   &   & 1 &   \\\\\n    j &   &   & 1 &   \\\\\n    \\Delta  & 0 & 0 & 0 & 0 \\\\\n    \\hline\n\\end{array}\n&\n\\begin{array}{ccccc}\n    \\hline\n      & 1 & 2 & 3 & 4 \\\\\n    \\hline\n    i &   &   & 1 &   \\\\\n    j &   &   &   & 1 \\\\\n    \\Delta  & 0 & 0 & -1 & 1 \\\\\n    \\hline\n\\end{array}\n&\n\\begin{array}{ccccc}\n    \\hline\n      & 1 & 2 & 3 & 4 \\\\\n    \\hline\n    i &   &   &   & 1  \\\\\n    j &   &   &   & 1 \\\\\n    \\Delta  & 0 & 0 & 0 & 0 \\\\\n    \\hline\n\\end{array}\n\\end{array}\n\n其中最后一行为任务 $j$ 的分配数与任务 $i$ 的分配数之差。对每个工作站引入权重 $f_k = k$，可发现上述所有情况均满足 $\\sum\\limits_{i=k}^4 f_k\\Delta_k \\geqslant 0$，通过进一步试验可归纳任何一种「任务 $j$ 优先于任务 $i$」的分配方案均不满足上述等式。\n于是对所有 $i$ 优先于 $j$：$\\sum\\limits_{k=1}^4 k(x_{jk}-x_{ik}) \\geqslant 0$。\n\n至此，该模型是一个非线性规划，但可进一步转为线性规划。增加约束条件：$\\sum\\limits_{i=1}^{11}t_ix_{ik} \\leqslant Z$，目标函数变为 $\\min \\ Z$。两种模型的迭代次数分别为 147 (MILP)、590 (PINLP)。\n\n{% fold '计划排序模型 Lingo 程序' %}\n```matlab\nmodel:\n    sets:\n        task/A..K/:t;\n        prio(task, task)/A,B B,C C,F C,G D,E E,H E,I F,J G,J H,J I,J J,K/;\n        station/1..4/;\n        txs(task, station):x;\n    endsets\n\n    data:\n        t = 45 11 9 50 15 12 12 12 12 8 9;\n    enddata\n\n    ! 注释行为非线性规划方案;\n    ! min=@max(station(k): @sum(task(i): t(i)*x(i, k))); ;\n    min=Z;\n    @for(station(k): @sum(task(i): t(i)*x(i, k))<=Z);\n    @for(task(i): @sum(station(j): x(i, j)) = 1);\n    @for(prio(i, j): @sum(station(k): k*(x(j, k)-x(i, k)))>=0);\n    @for(txs: @bin(x));\nend\n```\n{% endfold %}\n\n----------------------------------\n\n### 配对模型\n\n将 8 个职员安排到 4 个办公室，每室两人。同事两两之间的相容程度如下（数字越小代表相容越好）\n\n$$\n\\begin{array}{c|cccccccc}\n    \\hline\n        & S_1 & S_2 & S_3 & S_4 & S_5 & S_6 & S_7 & S_8 \\\\\n    \\hline\n    S_1 & -   & 9   & 3   & 4   & 2   & 1   & 5   & 6   \\\\\n    S_2 & -   & -   & 1   & 7   & 3   & 5   & 2   & 1   \\\\\n    S_3 & -   & -   & -   & 4   & 4   & 2   & 9   & 2   \\\\\n    S_4 & -   & -   & -   & -   & 1   & 5   & 5   & 2   \\\\\n    S_5 & -   & -   & -   & -   & -   & 8   & 7   & 6   \\\\\n    S_6 & -   & -   & -   & -   & -   & -   & 2   & 3   \\\\\n    S_7 & -   & -   & -   & -   & -   & -   & -   & 4   \\\\\n    S_8 & -   & -   & -   & -   & -   & -   & -   & -   \\\\\n    \\hline\n\\end{array}\n$$\n\n安排配对方案，使组合的总相容程度最好。\n\n引入决策矩阵 $X$，元素 $X_{ij} \\in \\{0, 1\\}$，每人组合一次，说明对于每个职员 $i$，必有 $\\sum\\limits_{j=i \\ \\text{or}\\ k=i}X_{jk} = 1$，所以模型为：\n\n$$\n    \\begin{array}{cl}\n        \\min & \\sum\\limits_{i<j} C_{ij} X_{ij} \\\\\n        \\text{s.t.} & \\begin{cases}\n            \\sum\\limits_{j=i \\ \\text{or}\\ k=i}X_{jk} = 1, & i=1,2,\\ldots,8 \\\\\n            X_{ij} = 0 \\ \\text{or} \\ 1, & i<j\n        \\end{cases}\n    \\end{array}\n$$\n\n{% fold '配对模型 Lingo 程序' %}\n```matlab\nmodel:\n    sets:\n        people/1..8/;\n        links(people, people) | &2 #gt# &1: tol, x;\n    endsets\n\n    data:\n        tol = 9 3 4 2 1 5 6\n                1 7 3 5 2 1\n                  4 4 2 9 2\n                    1 5 5 2\n                      8 7 6\n                        2 3\n                          4;\n    enddata\n\n    @for(people(i): @sum(links(j, k) | j #eq# i #or# k #eq# i: x(j, k)) = 1);\n    @for(links: @bin(x));\n    min = @sum(links: x*tol);\nend\n```\n{% endfold %}\n\n--------------------------\n\n### 下料问题\n\n钢管原材料每根长 19m，现需要 A、B、C、D 四种钢管部件，长度分别为 4m、5m、6m、8m，数量分别为 50、10、20、15 根，不同的下料方式不超过 3 种，安排下料方式使得所需钢管原材料最少。\n\n一般化问题，假设用到 $k$ 种下料方式，用 $x_i\\ (i=1,2,\\ldots,k)$ 表示第 $i$ 种下料方式所切割的原料钢管数量，非负整数 $n_{ij}$ 表示第 $i$ 种下料方法得到部件 $j\\ (j=1,2,\\ldots,m)$ 的数量，$b_j$ 表示第 $j$ 种部件的需求量。$L$ 表示钢管材料的长度，$l_j$ 表示部件长度，则下料方式应满足：1) 切割出的部件总长度不超过 $L$；2) 余料严格小于 $\\min \\{l_j\\}$。故建立优化模型：\n\n$$\n\\begin{array}{cl}\n    {\\min} & z = \\sum\\limits_{i=1}^k x_i \\\\\n    \\text{s.t.} & \\begin{cases}\n        \\sum\\limits_{i=1}^k n_{ij}x_i \\geqslant b_j, & j=1,2,\\ldots,m \\\\\n        L - \\min\\{n_{ij}\\} < \\sum\\limits_{j=1}^m n_{ij}l_j \\leqslant L, & i=1,2,\\ldots,k \\\\\n        x_{i}, n_{ij} \\in \\mathbb{N}, & i=1,2,\\ldots,k; \\ j=1,2,\\ldots,m\n    \\end{cases}\n\\end{array}\n$$\n\n在此问题中 $k=3, m=4$。\n\n{% fold '下料问题 Lingo 程序' %}\n```matlab\nmodel:\n    sets:\n        ! craft(1~k): 工艺, 即切割方式 ;\n        ! material(1~m): 不同部件数量 ;\n        ! links: 每种切割方式下不同部件数量 ;\n        craft/1..3/: x;\n        material/1..4/: m, b;\n        links(craft, material): n;\n    endsets\n\n    data:\n        m = 4 5 6 8;\n        b = 50 10 20 15;\n        L = 19;\n    enddata\n\n    min = @sum(craft: x);\n    @for(material(j): @sum(craft(i): n(i, j)*x(i))>=b(j));\n    @for(craft(i): @sum(material(j): n(i, j)*m(j))<=L);\n    @for(craft(i): @sum(material(j): n(i, j)*m(j))>=16);\n    @for(craft: @gin(x));\n    @for(links: @gin(n));\nend\n```\n{% endfold %}\n\n求解结果如下：\n\n<table>\n  <tr>\n    <td style=\"text-align: center;\" rowspan=\"2\"><strong>下料方式</strong></td>\n    <td style=\"text-align: center;\" colspan=\"4\"><strong>部件长度<br></strong></td>\n    <td style=\"text-align: center;\" rowspan=\"2\"><strong>余料长度</strong></td>\n    <td style=\"text-align: center;\" rowspan=\"2\"><strong>切割根数</strong></td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\">4m</td>\n    <td style=\"text-align: center;\">5m</td>\n    <td style=\"text-align: center;\">6m</td>\n    <td style=\"text-align: center;\">8m</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>方式一</strong></td>\n    <td style=\"text-align: center;\">0</td>\n    <td style=\"text-align: center;\">0</td>\n    <td style=\"text-align: center;\">0</td>\n    <td style=\"text-align: center;\">2</td>\n    <td style=\"text-align: center;\">3</td>\n    <td style=\"text-align: center;\">8</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>方式二</strong></td>\n    <td style=\"text-align: center;\">2</td>\n    <td style=\"text-align: center;\">1</td>\n    <td style=\"text-align: center;\">1</td>\n    <td style=\"text-align: center;\">0</td>\n    <td style=\"text-align: center;\">0</td>\n    <td style=\"text-align: center;\">10</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>方式三</strong></td>\n    <td style=\"text-align: center;\">3</td>\n    <td style=\"text-align: center;\">0</td>\n    <td style=\"text-align: center;\">1</td>\n    <td style=\"text-align: center;\">0</td>\n    <td style=\"text-align: center;\">1</td>\n    <td style=\"text-align: center;\">10</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>合计</strong></td>\n    <td style=\"text-align: center;\">50</td>\n    <td style=\"text-align: center;\">10</td>\n    <td style=\"text-align: center;\">20</td>\n    <td style=\"text-align: center;\">16</td>\n    <td style=\"text-align: center;\">34m</td>\n    <td style=\"text-align: center;\">28</td>\n  </tr>\n</table>\n\n注意到上述切割方案余料总长 34m，且多出一根 8m 长的部件。\n\n\n\n[lingo-notepad++]: http://bbs.pinggu.org/thread-3875796-1-1.html\n[essentials-of-matlab-examples]: /essentials-of-matlab-examples#mjx-eqn-J\n","source":"_posts/learning-lingo-01.md","raw":"---\ntitle: Lingo 学习（一）\ndate: 2018-07-14 16:15:51\ntags:\n    - Lingo\n    - Programming\n    - Linear Algebra\ncategories: Mathematical Modeling\nmathjax: true\n---\n\n## 环境搭建\n\n- Lingo 17.0 (Windows 10 x64)\n- Notepad++ 7.4.2 x86\n  - NppExec\n  - Visimulator\n  - [语法高亮及代码补全][lingo-notepad++]\n\n<!-- more -->\n\n## Lingo 界面速览\n\n### 文件类型\n\n| 扩展名 | 文件类型                                | 扩展名 | 文件类型           |\n| :--:   | :---                                    | :--:   | :---               |\n| .lg4 | Windows 下模型文件，支持字体、格式、OLE | .lng | 纯文本格式模型文件 |\n| .ldt | 数据文件                                | .ltf | 命令脚本文件       |\n| .ltx | Lindo 语法的模型文件                    | .lgr | 报告文件           |\n\n### Lingo 菜单\n\n| 中文             | 英文     | 中文         | 英文             |\n| :--:             | :--:     | :--:         | :--:             |\n| 求解结果         | Solution | 灵敏性分析   | Range            |\n| 生成模型展开形式 | Generate | 生成图形     | Picture          |\n| 调试             | Debug    | 模型统计资料 | Model Statistics |\n| 查看             | Look     |              |                  |\n\n### 求解器状态窗口信息\n\n- 变量数量 (Variables)\n- 约束变量 (Constraints)\n- 非零系数数量 (Nonzeroes)\n- 内存使用量 (Generator Memory Used)\n- 已运行时间 (Elapsed Runtime)\n- 求解器状态 (Solver Status)\n  - 模型类型 (Model Class)：线性规划 (LP)、二次规划 (QP)、整数线性规划 (ILP)、整数二次规划 (IQP)、纯整数线性规划 (PILP)、纯整数二次规划 (PIQP)、非线性规划 (NLP)、混合整数规划 (MIP)、整数非线性工 (INLP)、纯整数非线性规划 (PINLP)、混合整数非线性规划 (MINLP)\n  - 当前解的状态 (State)：全局最优解 (Global Optimum)、局部最优解 (Local Optimum)、可行解 (Feasible)、不可行解 (Infeasible)、无界 (Unbounded)、中断 (Interrupted)、未确定 (Undetermined)\n  - 当前解的目标函数值 (Objective)\n  - 当前约束不满足的总量 (Infeasibility)\n  - 迭代次数 (Iterations)\n  - 扩展求解器状态 (Extended Solver Status)：特殊算法类型 (Solver Type)、可行解的最佳目标函数值 (Best Obj)、目标函数值的界限 (Obj Bound)、特殊求解程序运行步数 (Steps)、有效步数 (Active)\n\n## Lingo 语言速览\n\n### 逻辑运算符\n\n| 运算符  | 作用                     | 运算符  | 作用                       | 运算符 | 作用                       |\n| :--:    | :--                      | :--:    | :--                        | :--:   | :--                        |\n| #EQ#  | 两操作数相等时为真       | #NE#  | 两操作数不等时为真         | #GT# | 左边（严格）大于右边时为真 |\n| #GE#  | 左边大于或等于右边时为真 | #LT#  | 左边（严格）小于右边时为真 | #LE# | 左边小于或等于右边时为真   |\n| #NOT# | 取反                     | #AND# | 逻辑与                     | #OR# | 逻辑或                     |\n\n注：#AND# 和 #OR# 优先级较低，但高于 <=、=、>=。\n\n### 数学函数\n\n| 函数名 | 解释 | 函数名 | 解释 | 函数名 | 解释 |\n| :-- | :-- | :-- | :-- | :-- | :-- |\n| @abs(x) | 绝对值 | @acos(x) | 反余弦 | @acosh(x) | 反双曲余弦 |\n| @asin(x) | 反正弦 | @asinh(x) | 反双曲正弦 | @atan(x) | 反正切 |\n| @atan2(x, y) | $\\arctan (y/x)$ | @atanh(x) | 反双曲正切 | @cos(x) | 余弦 |\n| @cosh(x) | 双曲余弦 | @exp(x) | $e^x$ | @floor(x) | 向 0 取整 |\n| @int(x) | 向负无穷取整 | @integral(proc, x, xl, xu, y) | 辛普森数值积分 | @lgm(x) | Gamma 函数自然对数 |\n| @log(x) | 自然对数 | @log10(x) | 10 为底对数 | @logb(x, b) | b 为底对数 |\n| @mod(x, y) | 取模 | @pi() | 圆周率 | @pow(x, y) | $x^y$ |\n| @round(x, n) | 最近四舍五入 | @rounddown(x, n) | 向零四舍五入 | @roundup(x, n) | 远离零四舍五入 |\n| @sign(x) | 符号函数 | @sin(x) | 正弦 | @sinh(x) | 双曲正弦 |\n| @smax(x1, x2, ..., xn) | 最大值 | @smin(x1, x2, ..., xn) | 最小值 | @sqr(x) | 平方 |\n| @sqrt(x) | 开方 | @tan(x) | 正切 | @tanh(x) | 双曲正切 |\n\n### 概率函数\n\n| 函数名                 | 解释                 | 函数名        | 解释                           | 函数名             | 解释                             |\n| :--                    | :--                  | :--           | :--                            | :--                | :--                              |\n| @norminv(p, mu, sigma) | 正态分布下分位数     | @normsinv(p)  | 标准正态分布分位数             | @pbn(p, n, x)      | 二项分布 CDF 值                  |\n| @pcx(n, x)             | 卡方分布 CDF 值      | @peb(a, x)    | 允许无穷排队的 Erlang 繁忙概率 | @pel(a, x)         | 不允许无穷排队的 Erlang 繁忙概率 |\n| @pfd(n, d, x)          | F 分布 CDF 值        | @pfs(a, x, c) | Poisson 服务系统期望值         | @phg(pop, g, n, x) | 超几何分布概率值                 |\n| @ppl(a, x)             | 泊松分布线性损失函数 | @pps(a, x)    | 泊松分布 CDF 值                | @psl(x)            | 单位正态线性损失函数             |\n| @psn(x)                | 标准正态分布 CDF 值  | @ptd(n, x)    | t 分布 CDF 值                  | @qrand(seed)       | (0, 1) 间随机数                  |\n\n### 变量界定函数\n\n| 函数名                 | 解释                | 函数名        | 解释               | 函数名                     | 解释             |\n| :--                    | :--                 | :--           | :--                | :--                        | :--              |\n| @bin(variable) | 限制变量取 0 或 1 | @bnd(lower, variable, upper) | 限制 $L\\leqslant x \\leqslant U$ | @free(variable) | 取消变量限制，可取任意实数 |\n| @gin(variable) | 限制为整数 | @priority(variable, priority) | 设置优先级| @semic(lower, variable, upper) | 或者为 0，或者在区间 (lower, upper) |\n\n### 集合操作函数\n\n- @for(s: e)\n- @max(s: e)\n- @prod(s: e)\n- @size(s)\n- @insert(s, idx)\n- @sum(s: e)\n- @min(s: e)\n- @in(s, e)\n- @index(s: e)\n- @wrap(idx, limit)\n\n\n\n----------------------------------\n\n## 一些经典问题\n\n### 运输问题\n\n假设 Wireless Widget有 6 个供货仓库，货物分别发往 8 个供销商。每个仓库有一定的库存量，现要制定出最小化运输成本，使得运输方案达到每个供销商需求的运输方案。\n\n<!-- more -->\n\n已知信息如下：\n\n| 仓库 | 库存 | 供销商 | 需求 |\n| :--: | :--: |  :--:  | :--: |\n|   1  |  60  |   1    |  35  |\n|   2  |  55  |   2    |  37  |\n|   3  |  51  |   3    |  22  |\n|   4  |  43  |   4    |  32  |\n|   5  |  41  |   5    |  41  |\n|   6  |  52  |   6    |  32  |\n|      |      |   7    |  43  |\n|      |      |   8    |  38  |\n\n每个仓库（WH1 ~ WH6）到每个供销商的单位运费表如下：\n\n|          | V1   | V2   | V3   | V4   | V5   | V6   | V7   | V8   |\n| :--:     | :--: | :--: | :--: | :--: | :--: | :--: | :--: | :--: |\n| **WH1**  | 6    | 2    | 6    | 7    | 4    | 2    | 5    | 9    |\n| **WH2**  | 4    | 9    | 5    | 3    | 8    | 5    | 8    | 2    |\n| **WH3**  | 5    | 2    | 1    | 9    | 7    | 4    | 3    | 3    |\n| **WH4**  | 7    | 6    | 7    | 3    | 9    | 2    | 7    | 1    |\n| **WH5**  | 2    | 3    | 9    | 5    | 7    | 2    | 6    | 5    |\n| **WH6**  | 5    | 5    | 2    | 2    | 8    | 1    | 4    | 3    |\n\n对问题建模，记 $\\text{volume}_{ij}$ 为第 $i$ 个仓库到第 $j$ 个供销商的货运量，$\\text{cost}_{ij}$ 表示第 $i$ 个仓库到第 $j$ 个供销商的单位货物运价，$\\text{capacity}_i$ 表示第 $i$ 个仓库的最大供货量，$\\text{demand}_j$ 表示第 $j$ 个供销商的订货量。\n\n目标函数是令总运输费用最少。约束条件：\n\n- 各仓库的出货量不超过其库存\n- 各供销商收到的货物总量等于订货数\n- 决策变量 $\\text{cost}_{ij}$ 非负。\n\n数学表达为：\n\n$$\n\\begin{array}{cl}\n    \\min & z = \\sum\\limits_{i=1}^6 \\sum\\limits_{j=1}^8 \\text{cost}_{ij}\\ \\text{volume}_{ij} \\\\\n    \\text{s.t.} & \\begin{cases}\n        \\sum\\limits_{j=1}^8 \\text{volume}_{ij} \\leqslant \\text{capacity}_i, & i = 1,2,\\ldots,6 \\\\\n        \\sum\\limits_{i=1}^6 \\text{volume}_{ij} = \\text{demand}_j, & j = 1,2,\\ldots,8 \\\\\n        \\text{volume}_{ij} \\geqslant 0, & i=1,2,\\ldots,6, \\ j=1,2,\\ldots,8 \\\\\n    \\end{cases}\n\\end{array}\n$$\n\n相应的 Lingo 程序代码：\n\n```matlab\nmodel:\n    sets:\n        warehouses/wh1..wh6/:capacity;\n        vendors/vd1..vd8/:demand;\n        crosstab(warehouses, vendors): volume, cost;\n    endsets\n\n    data:\n       capacity = 60 55 51 43 41 52;\n       demand = 35 37 22 32 41 32 43 38;\n       cost = 6 2 6 7 4 2 5 9\n              4 9 5 3 8 5 8 2\n              5 2 1 9 7 4 3 3\n              7 6 7 3 9 2 7 1\n              2 3 9 5 7 2 6 5\n              5 5 2 2 8 1 4 3;\n    enddata\n\n    min = @sum(crosstab(i, j): volume(i, j) * cost(i, j));\n    @for(warehouses(i):\n        @sum(vendors(j): volume(i, j)) <= capacity(i));\n    @for(vendors(j):\n        @sum(warehouses(i): volume(i, j)) = demand(j));\nend\n```\n\n其中 `SET` 过程大大简化了程序代码，也提升了程序的可读性，否则对于每个变量都需要进行硬编码。其语法 为 `<集合名称>[集合元素][:<集合属性>]`。当然 `SET` 中的前两个关于库存和供销商的描述可以拆分为\n\n```matlab\nsets:\n    warehouses:capacity;\n    vendors:demand;\n    ...\nendsets\n\ndata:\n    warehouses = wh1..wh6;\n    demand = vd1..vd8;\nenddata\n```\n\n当然笔者更青睐紧凑的方式。`crosstab` 表示由 `warehouses` 和 `demand` 构成的派生集，即包含了 6 × 8 = 48 个变量。在目标函数及约束条件语句中，由于目标函数的操作数完全来自 `crosstab`，所以可省略部分语句：`min = @sum(crosstab: volume * cost);`。\n\n程序经过 17 次迭代后得出的目标函数值为 664.0000，最优运输方案如下表。\n\n|          | V1   | V2   | V3   | V4   | V5   | V6   | V7   | V8   | 合计 | 库存 |\n| :--:     | :--: | :--: | :--: | :--: | :--: | :--: | :--: | :--: | :--: | :--: |\n| **WH1**  | 0    | 19   | 0    | 0    | 41   | 0    | 0    | 0    | 60   | 60   |\n| **WH2**  | 1    | 0    | 0    | 32   | 0    | 0    | 0    | 0    | 33   | 55   |\n| **WH3**  | 0    | 11   | 0    | 0    | 0    | 0    | 40   | 0    | 51   | 51   |\n| **WH4**  | 0    | 0    | 0    | 0    | 0    | 5    | 0    | 38   | 43   | 43   |\n| **WH5**  | 34   | 7    | 0    | 0    | 0    | 0    | 0    | 0    | 41   | 41   |\n| **WH6**  | 0    | 0    | 22   | 0    | 0    | 27   | 3    | 0    | 52   | 52   |\n| **合计** | 35   | 37   | 22   | 32   | 41   | 32   | 43   | 38   |      |      |\n| **需求** | 35   | 37   | 22   | 32   | 41   | 32   | 43   | 38   |      |      |\n\n-----------------------------------\n\n### 值班问题\n\n某项工作一周 7 天都需有人上班，周一至周日所需的最少人数分别为 20、16、13、16、19、14 和 12。要求员工一周连续工作 5 天接着休息 2 天。给出人员安排，使每周所需人数最少。\n\n若安排得当，记周一至周日分别安排 $X(i)$ 人上班。那么周一上班的人必然周五、周六休息，以此类推。令总上班人数为 $Z$，那么上周周二、周三的人仍在休息中，所以有 $X(1) = Z-X(1)-X(2)$，同样可以得到其他 6 个等式。概括之就是\n$$X(i) = Z-X(i+1)-X(i+2), \\ i=1,2,\\ldots, 7$$\n当然，$X(8)$ 相当于 $X(1)$，$X(9)$ 相当于 $X(2)$。所以需要特殊的函数对其进行转化，`wrap` 函数正合此意。除了此函数，由此 [公式][essentials-of-matlab-examples] 也可。代码如下：\n\n```matlab\nmodel:\n    sets:\n        days/mon..sun/: r, x;\n    endsets\n\n    data:\n        r = 20 16 13 16 19 14 12;\n    enddata\n\n    min = z;\n    z = @sum(days: x);\n    n = @size(days);\n    @for(days(i): z-x(@wrap(i+1,n))-x(@wrap(i+2,n)) >= r(i));\n    ! @for(days(i): z-x(1+@mod(i,n))-x(1+@mod(i+1,n)) >= r(i));\nend\n```\n\n程序得出的最优解为：8、2、0、6、3、3、0。这说明每周最少需要 22 名员工，周一安排 8 人开始上班，或者说这 8 人休周六和周日，周一工作，其余类推。周二安排 2 人，等等。待轮休稳定后即可满足每天所需要的最少上班员工数。\n\n----------------------------------\n\n### 投资的收益和风险\n\n市场上有 $n$ 种资产 $S_i (i=1,2,\\ldots,n)$ 供投资者选择，某公司有数额为 $M$ 的一笔资金用于一个时期的投资。公司财务分析人员对这 $n$ 种资产进行了评估，估算出在这一时期内购买 $S_i$ 的平均收益率为 $r_i$，并预测出购买 $S_i$ 的风险损失率为 $q_i$。考虑到投资越分散，总的风险越小，公司决定当用这笔资金购买若干种资产时，总体风险可用所投资的 $S_i$ 中最大的一个风险来度量。购买 $S_i$ 要付交易费，费率为 $p_i$，并且当购买额不超过给定值 $u_i$ 时，交易费按购买 $u_i$ 计算（不买当然无须付费）。另外，假定同期银行存款利率是 $r_0$, 且既无交易费又无风险（$r_0=5\\%$）。\n\n{% fold 数据表 %}\n<table>\n  <tr>\n    <th style=\"text-align: center;\">$E_i$</th>\n    <th style=\"text-align: center;\">$r_i$(%)</th>\n    <th style=\"text-align: center;\">$q_i$(%)</th>\n    <th style=\"text-align: center;\">$p_i$(%)</th>\n    <th style=\"text-align: center;\">$u_i$(元)</th>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S1</strong></td>\n    <td style=\"text-align: center;\">9.6</td>\n    <td style=\"text-align: center;\">42.0</td>\n    <td style=\"text-align: center;\">2.1</td>\n    <td style=\"text-align: center;\">181</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S2</strong></td>\n    <td style=\"text-align: center;\">18.5</td>\n    <td style=\"text-align: center;\">54.0</td>\n    <td style=\"text-align: center;\">3.2</td>\n    <td style=\"text-align: center;\">407</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S3</strong></td>\n    <td style=\"text-align: center;\">49.4</td>\n    <td style=\"text-align: center;\">60.0</td>\n    <td style=\"text-align: center;\">6.0</td>\n    <td style=\"text-align: center;\">428</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S4</strong></td>\n    <td style=\"text-align: center;\">23.9</td>\n    <td style=\"text-align: center;\">42.0</td>\n    <td style=\"text-align: center;\">1.5</td>\n    <td style=\"text-align: center;\">549</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S5</strong></td>\n    <td style=\"text-align: center;\">8.1</td>\n    <td style=\"text-align: center;\">1.2</td>\n    <td style=\"text-align: center;\">7.6</td>\n    <td style=\"text-align: center;\">270</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S6</strong></td>\n    <td style=\"text-align: center;\">14.0</td>\n    <td style=\"text-align: center;\">39.0</td>\n    <td style=\"text-align: center;\">3.4</td>\n    <td style=\"text-align: center;\">397</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S7</strong></td>\n    <td style=\"text-align: center;\">40.7</td>\n    <td style=\"text-align: center;\">68.0</td>\n    <td style=\"text-align: center;\">5.6</td>\n    <td style=\"text-align: center;\">178</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S8</strong></td>\n    <td style=\"text-align: center;\">31.2</td>\n    <td style=\"text-align: center;\">33.4</td>\n    <td style=\"text-align: center;\">3.1</td>\n    <td style=\"text-align: center;\">220</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S9</strong></td>\n    <td style=\"text-align: center;\">33.6</td>\n    <td style=\"text-align: center;\">53.3</td>\n    <td style=\"text-align: center;\">2.7</td>\n    <td style=\"text-align: center;\">475</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S10</strong></td>\n    <td style=\"text-align: center;\">36.8</td>\n    <td style=\"text-align: center;\">40.0</td>\n    <td style=\"text-align: center;\">2.9</td>\n    <td style=\"text-align: center;\">248</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S11</strong></td>\n    <td style=\"text-align: center;\">11.8</td>\n    <td style=\"text-align: center;\">31.0</td>\n    <td style=\"text-align: center;\">5.1</td>\n    <td style=\"text-align: center;\">195</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S12</strong></td>\n    <td style=\"text-align: center;\">9.0</td>\n    <td style=\"text-align: center;\">5.5</td>\n    <td style=\"text-align: center;\">5.7</td>\n    <td style=\"text-align: center;\">320</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S13</strong></td>\n    <td style=\"text-align: center;\">35.0</td>\n    <td style=\"text-align: center;\">46.0</td>\n    <td style=\"text-align: center;\">2.7</td>\n    <td style=\"text-align: center;\">267</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S14</strong></td>\n    <td style=\"text-align: center;\">9.4</td>\n    <td style=\"text-align: center;\">5.3</td>\n    <td style=\"text-align: center;\">4.5</td>\n    <td style=\"text-align: center;\">328</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S15</strong></td>\n    <td style=\"text-align: center;\">15.0</td>\n    <td style=\"text-align: center;\">23.0</td>\n    <td style=\"text-align: center;\">7.6</td>\n    <td style=\"text-align: center;\">131</td>\n  </tr>\n</table>\n{% endfold %}\n\n要使净收益尽可能大，总体风险尽可能小，这是一个多目标的规划模型：\n\n$$\n    \\begin{gather*}\n        \\max \\ Q(x) = r_0 x_0 + \\sum_{i=1}^n r_ix_i - \\sum_{i=1}^n p_iy_i,\n            \\ i=1,2,\\ldots,n \\\\\n        \\min \\ F(x) = \\max\\limits_{1\\leqslant i\\leqslant n}\\{q_ix_i\\}\n    \\end{gather*}\n$$\n\n这里仅考虑模型的一种简化情形：投资者承受风险的程度不同，故给定风险一个界限 $a$，使得所有风险率均小于此值，即 $q_ix_i \\leqslant Ma (i=1,2,\\ldots,n)$。所以目标函数中最小化风险的要求转化为其中一个约束条件。\n\n约束条件为：\n\n$$\n    \\begin{cases}\n        \\displaystyle \\sum_{i=1}^nx_i + \\sum_{i=1}^n p_iy_i = M, & i=1,2,\\cdots,n\\\\\n        \\displaystyle x_i \\geqslant 0, & i=1,2,\\cdots,n\\\\\n        \\displaystyle y_i = \\begin{cases}\n            x_i, &x_i>u_i\\\\\n            u_i, &0<x_i\\leqslant u_i\\\\\n            0, &x_i=0\n        \\end{cases}, & i=1,2,\\cdots, n\n    \\end{cases}\n$$\n\n由于约束条件中含有分段函数，这时可引入 0 - 1 变量将模型转化为混合整数线性规划模型，但也可以利用 Lingo 中的 `@if` 函数来构造条件，但模型为非线性规划模型。\n\n{% fold \"混合整数线性规划模型 Lingo 程序\" %}\n{% codeblock lang:matlab %}\nmodel:\n    sets:\n        S/1..15/:x,y,r,p,q,u,z1,z2,z3,b1,b2,b3;\n    endsets\n\n    data:\n        M=4000;\n        bili=0.05;\n        r0=5;\n        r=9.6 18.5 49.4 23.9 8.1 14 40.7 31.2 33.6 36.8 11.8 9 35 9.4 15;\n        q=42 54 60 42 1.2 39 68 33.4 53.3 40 31 5.5 46 5.3 23;\n        p=2.1 3.2 6 1.5 7.6 3.4 5.6 3.1 2.7 2.9 5.1 5.7 2.7 4.5 7.6;\n        u=181 407 428 549 270 397 178 220 475 248 195 320 267 328 131;\n    enddata\n\n    max=r0*x0/100+@Sum(S:r*x/100)-@Sum(S:p*y/100);\n    @For(S:q*x/100<M*bili);\n    x0+@Sum(S:x)+@Sum(S:p*y/100)=M;\n\n    @For(S:y=z1+z2+z3);\n    @For(S:b1+b2+b3=1);\n    @For(S:u-x<2*M*(1-b1)); @For(S:x-M<2*M*(1-b1));\n    @For(S:-x<2*M*(1-b2)); @For(S:x-u<2*M*(1-b2));\n    @For(S:-x<2*M*(1-b3)); @For(S:x<2*M*(1-b3));\n\n    @For(S:-2*M*b1<z1); @For(S:z1<2*M*b1);\n    @For(S:x-2*M*(1-b1)<z1); @For(S:z1<x+2*M*(1-b1));\n    @For(S:-2*M*b2<z2); @For(S:z2<2*M*b2);\n    @For(S:u-2*M*(1-b2)<z2); @For(S:z2<u+2*M*(1-b2));\n    @For(S:z3=0);\n\n    @For(S:@Bin(b1));\n    @For(S:@Bin(b2));\n    @For(S:@Bin(b3));\nend\n{% endcodeblock %}\n{% endfold %}\n\n{% fold \"非线性规划模型 Lingo 程序\" %}\n{% codeblock lang:matlab %}\nmodel:\n    sets:\n        assets/1..15/: x, y, r, q, p, u;\n    endsets\n    data:\n        M = 4000;\n        r0 = 5;\n        a = 0.05;\n        r =  9.6 18.5 49.4 23.9  8.1\n            14.0 40.7 31.2 33.6 36.8\n            11.8  9.0 35.0  9.4 15.0;\n        q = 42  54   60   42 1.2\n            39  68 33.4 53.3  40\n            31 5.5   46  5.3  23;\n        p = 2.1 3.2 6.0 1.5 7.6\n            3.4 5.6 3.1 2.7 2.9\n            5.1 5.7 2.7 4.5 7.6;\n        u = 181 407 428 549 270\n            397 178 220 475 248\n            195 320 267 328 131;\n    enddata\n\n    max=(x0*r0+@sum(assets: r*x-p*y))/100;\n    @for(assets: y=@if(x #le# u, @if(x #eq# 0, 0, u), x));\n    @for(assets: q*x/100<=M*a);\n    x0+@sum(assets: x)+@sum(assets: p*y/100)=M;\nend\n{% endcodeblock %}\n{% endfold %}\n\n程序输出结果如下：\n\n| Variable | Value    | Variable | Value    | Variable | Value    | Variable | Value    |\n| :---:    | :---:    | :---:    | :---:    | :---:    | :---:    | :---:    | :---:    |\n| **X0**   | 0        | **X4**   | 476.1905 | **X8**   | 598.8024 | **X12**  | 0        |\n| **S1**   | 0        | **X5**   | 0        | **X9**   | 375.2345 | **X13**  | 434.7826 |\n| **X2**   | 370.3704 | **X6**   | 479.8182 | **X10**  | 500      | **X14**  | 0        |\n| **X3**   | 333.3333 | **X7**   | 294.1176 | **X11**  | 0        | **X15**  | 0        |\n\n在此种投资组合下，收益 1045.604 元。\n\n#### 分段函数处理方法\n上述关于混合整数线性规划模型的 Lingo 程序中引入不少中间决策变量，这里对其展开讨论，下面内容节选自余胜威《MATLAB 数学建模经典案例实战》。（部分改动）\n\n{% note info %}\n设有限区间的有界分段函数：\n\n$$\n    y = f(x) = \\begin{cases}\n            \\varphi_1(x), & x\\in(a_1, b_1) & \\\\\n            \\varphi_2(x), & x\\in(a_2, b_2) & \\\\\n            \\hfil \\cdots \\\\\n            \\varphi_n(x), & x\\in(a_n, b_n) & \\\\\n        \\end{cases}, \\quad\n        a_1 < b_1 \\leqslant a_2 < b_2 \\leqslant \\cdots \\leqslant a_n < b_n\n$$\n\n等价为：\n\n$$\n    \\begin{cases}\n        y = y_1 + y_2 + \\cdots y_n \\\\\n        \\delta_1 + \\delta_2 + \\cdots + \\delta_n = 1, \\delta_i \\in \\{0,1\\} \\\\\n        x - a_i \\geqslant -(1-\\delta_i)L_x \\\\\n        x - b_i \\leqslant (1-\\delta_i)U_x \\\\\n        -\\delta_i L_{y1} \\leqslant y_i \\leqslant \\delta_i U_{y1} \\\\\n        -(1-\\delta_i) L_{y2} \\leqslant y_i-\\varphi_i(x)\n        \\leqslant (1-\\delta_i) U_{y2}\n    \\end{cases}\n$$\n{% endnote %}\n\n其中 $\\delta_i$ 表明 $x$ 所处区间，通过上述约束条件中的第 3、4 式保证。具体而言，给定 $i\\in\\{1,\\ldots,n\\}$，若 $x \\in (a_i, b_i)$，必然有 $x-a_i \\geqslant 0$ 以及 $x-b_i \\leqslant 0$；对其他区间而言，有 $x-a_i \\geqslant -L$，以及 $x-b_i \\leqslant U$，其中 $U, L > 0$ 分别为 $x$ 支撑集的上限和下限的绝对值。引入 0 - 1 变量 $\\delta_i$（类似于概率论中示性函数），对于任何区间，整合上述不等式，即为 3、4 式。注意到给定的 $x$ 仅会落入一个区间，故 $\\sum \\delta_i = 1$（2 式）。对于 $y_i$，讨论类似。当然为简单起见，可将所有界限以它们的最大值代替。\n\n乍看求解模型被复杂化，但把可能为非线性规划的问题转为了混合整数线性规划问题，加快求解收敛速度。\n\n-----------------------------\n\n### 计划排序模型\n\n完成某产品的装配过程需要 11 项任务（用 A ~ K 表示），每项任务所花费的时间如下：\n\n<table>\n  <tr>\n    <td><strong>任务</strong></td>\n    <td><strong>A</strong></td>\n    <td><strong>B</strong></td>\n    <td><strong>C</strong></td>\n    <td><strong>D</strong></td>\n    <td><strong>E</strong></td>\n    <td><strong>F</strong></td>\n  </tr>\n  <tr>\n    <td><strong>时间</strong></td>\n    <td>45</td>\n    <td>11</td>\n    <td>9</td>\n    <td>50</td>\n    <td>15</td>\n    <td>12</td>\n  </tr>\n  <tr>\n    <td><strong>任务</strong></td>\n    <td><strong>G</strong></td>\n    <td><strong>H</strong></td>\n    <td><strong>I</strong></td>\n    <td><strong>J</strong></td>\n    <td><strong>K</strong></td>\n    <td></td>\n  </tr>\n  <tr>\n    <td><strong>时间</strong></td>\n    <td>12</td>\n    <td>12</td>\n    <td>12</td>\n    <td>8</td>\n    <td>9</td>\n    <td></td>\n  </tr>\n</table>\n\n各项任务之间存在先后顺序如下图所示。装配流水线有四个顺序工作站，对于有先后次序的任务，只能在流水线上向后传（如任务 B 和 C 的次序为先 B 后 C，如果安排 B 给第 3 站做，则 C 要么由 B 自己完成，要么传给第 4 站来做，而不能交往 1 或 2 号站），每项任务必须只能分配至一个工作站来做。合理分配生产计划，使整个装配周期最短。\n\n<img src=\"/img/task_priority.svg\" width=\"50%\">\n\n记 $x_{ik}$ 表示将任务 $i\\ (i=A,B,\\ldots,K)$ 分配给工作站 $k\\ (k=1,2,3,4)$ 的情况，1 表示分配，0 表示不分配，$t_i$ 表示完成各项任务所需时间。则目标函数为 $\\min\\ T = \\max\\limits_{1\\leqslant k \\leqslant 4} \\sum\\limits_{i=1}^{11} t_ix_{ik}$。由每项任务只能分配给一个工作站来做，故对所有任务 $i$ 有：$\\sum\\limits_{k=1}^4 x_{ik}=1$。对于任务间的优先级，考虑任务 $i$ 先于任务 $j$，则可行的任务安排表 (11 × 4) 有：\n\n\\begin{array}{ccccc}\n\\begin{array}{ccccc}\n    \\hline\n      & 1 & 2 & 3 & 4 \\\\\n    \\hline\n    i & 1 &   &   &   \\\\\n    j & 1 &   &   &   \\\\\n    \\Delta  & 0 & 0 & 0 & 0 \\\\\n    \\hline\n\\end{array}\n&\n\\begin{array}{ccccc}\n    \\hline\n      & 1 & 2 & 3 & 4 \\\\\n    \\hline\n    i & 1 &   &   &   \\\\\n    j &   & 1 &   &   \\\\\n    \\Delta  & -1 & 1 & 0 & 0 \\\\\n    \\hline\n\\end{array}\n&\n\\begin{array}{ccccc}\n    \\hline\n      & 1 & 2 & 3 & 4 \\\\\n    \\hline\n    i & 1 &   &   &   \\\\\n    j &   &   & 1 &   \\\\\n    \\Delta  & -1 & 0 & 1 & 0 \\\\\n    \\hline\n\\end{array}\n&\n\\begin{array}{ccccc}\n    \\hline\n      & 1 & 2 & 3 & 4 \\\\\n    \\hline\n    i & 1 &   &   &   \\\\\n    j &   &   &   & 1 \\\\\n    \\Delta  & -1 & 0 & 0 & 1 \\\\\n    \\hline\n\\end{array}\n&\n\\begin{array}{ccccc}\n    \\hline\n      & 1 & 2 & 3 & 4 \\\\\n    \\hline\n    i &   & 1 &   &   \\\\\n    j &   & 1 &   &   \\\\\n    \\Delta  & 0 & 0 & 0 & 0 \\\\\n    \\hline\n\\end{array} \\\\[15pt]\n\\begin{array}{ccccc}\n    \\hline\n      & 1 & 2 & 3 & 4 \\\\\n    \\hline\n    i &   & 1 &   &   \\\\\n    j &   &   & 1 &   \\\\\n    \\Delta  & 0 & -1 & 1 & 0 \\\\\n    \\hline\n\\end{array}\n&\n\\begin{array}{ccccc}\n    \\hline\n      & 1 & 2 & 3 & 4 \\\\\n    \\hline\n    i &   & 1 &   &   \\\\\n    j &   &   &   & 1 \\\\\n    \\Delta  & 0 & -1 & 0 & 1 \\\\\n    \\hline\n\\end{array}\n&\n\\begin{array}{ccccc}\n    \\hline\n      & 1 & 2 & 3 & 4 \\\\\n    \\hline\n    i &   &   & 1 &   \\\\\n    j &   &   & 1 &   \\\\\n    \\Delta  & 0 & 0 & 0 & 0 \\\\\n    \\hline\n\\end{array}\n&\n\\begin{array}{ccccc}\n    \\hline\n      & 1 & 2 & 3 & 4 \\\\\n    \\hline\n    i &   &   & 1 &   \\\\\n    j &   &   &   & 1 \\\\\n    \\Delta  & 0 & 0 & -1 & 1 \\\\\n    \\hline\n\\end{array}\n&\n\\begin{array}{ccccc}\n    \\hline\n      & 1 & 2 & 3 & 4 \\\\\n    \\hline\n    i &   &   &   & 1  \\\\\n    j &   &   &   & 1 \\\\\n    \\Delta  & 0 & 0 & 0 & 0 \\\\\n    \\hline\n\\end{array}\n\\end{array}\n\n其中最后一行为任务 $j$ 的分配数与任务 $i$ 的分配数之差。对每个工作站引入权重 $f_k = k$，可发现上述所有情况均满足 $\\sum\\limits_{i=k}^4 f_k\\Delta_k \\geqslant 0$，通过进一步试验可归纳任何一种「任务 $j$ 优先于任务 $i$」的分配方案均不满足上述等式。\n于是对所有 $i$ 优先于 $j$：$\\sum\\limits_{k=1}^4 k(x_{jk}-x_{ik}) \\geqslant 0$。\n\n至此，该模型是一个非线性规划，但可进一步转为线性规划。增加约束条件：$\\sum\\limits_{i=1}^{11}t_ix_{ik} \\leqslant Z$，目标函数变为 $\\min \\ Z$。两种模型的迭代次数分别为 147 (MILP)、590 (PINLP)。\n\n{% fold '计划排序模型 Lingo 程序' %}\n```matlab\nmodel:\n    sets:\n        task/A..K/:t;\n        prio(task, task)/A,B B,C C,F C,G D,E E,H E,I F,J G,J H,J I,J J,K/;\n        station/1..4/;\n        txs(task, station):x;\n    endsets\n\n    data:\n        t = 45 11 9 50 15 12 12 12 12 8 9;\n    enddata\n\n    ! 注释行为非线性规划方案;\n    ! min=@max(station(k): @sum(task(i): t(i)*x(i, k))); ;\n    min=Z;\n    @for(station(k): @sum(task(i): t(i)*x(i, k))<=Z);\n    @for(task(i): @sum(station(j): x(i, j)) = 1);\n    @for(prio(i, j): @sum(station(k): k*(x(j, k)-x(i, k)))>=0);\n    @for(txs: @bin(x));\nend\n```\n{% endfold %}\n\n----------------------------------\n\n### 配对模型\n\n将 8 个职员安排到 4 个办公室，每室两人。同事两两之间的相容程度如下（数字越小代表相容越好）\n\n$$\n\\begin{array}{c|cccccccc}\n    \\hline\n        & S_1 & S_2 & S_3 & S_4 & S_5 & S_6 & S_7 & S_8 \\\\\n    \\hline\n    S_1 & -   & 9   & 3   & 4   & 2   & 1   & 5   & 6   \\\\\n    S_2 & -   & -   & 1   & 7   & 3   & 5   & 2   & 1   \\\\\n    S_3 & -   & -   & -   & 4   & 4   & 2   & 9   & 2   \\\\\n    S_4 & -   & -   & -   & -   & 1   & 5   & 5   & 2   \\\\\n    S_5 & -   & -   & -   & -   & -   & 8   & 7   & 6   \\\\\n    S_6 & -   & -   & -   & -   & -   & -   & 2   & 3   \\\\\n    S_7 & -   & -   & -   & -   & -   & -   & -   & 4   \\\\\n    S_8 & -   & -   & -   & -   & -   & -   & -   & -   \\\\\n    \\hline\n\\end{array}\n$$\n\n安排配对方案，使组合的总相容程度最好。\n\n引入决策矩阵 $X$，元素 $X_{ij} \\in \\{0, 1\\}$，每人组合一次，说明对于每个职员 $i$，必有 $\\sum\\limits_{j=i \\ \\text{or}\\ k=i}X_{jk} = 1$，所以模型为：\n\n$$\n    \\begin{array}{cl}\n        \\min & \\sum\\limits_{i<j} C_{ij} X_{ij} \\\\\n        \\text{s.t.} & \\begin{cases}\n            \\sum\\limits_{j=i \\ \\text{or}\\ k=i}X_{jk} = 1, & i=1,2,\\ldots,8 \\\\\n            X_{ij} = 0 \\ \\text{or} \\ 1, & i<j\n        \\end{cases}\n    \\end{array}\n$$\n\n{% fold '配对模型 Lingo 程序' %}\n```matlab\nmodel:\n    sets:\n        people/1..8/;\n        links(people, people) | &2 #gt# &1: tol, x;\n    endsets\n\n    data:\n        tol = 9 3 4 2 1 5 6\n                1 7 3 5 2 1\n                  4 4 2 9 2\n                    1 5 5 2\n                      8 7 6\n                        2 3\n                          4;\n    enddata\n\n    @for(people(i): @sum(links(j, k) | j #eq# i #or# k #eq# i: x(j, k)) = 1);\n    @for(links: @bin(x));\n    min = @sum(links: x*tol);\nend\n```\n{% endfold %}\n\n--------------------------\n\n### 下料问题\n\n钢管原材料每根长 19m，现需要 A、B、C、D 四种钢管部件，长度分别为 4m、5m、6m、8m，数量分别为 50、10、20、15 根，不同的下料方式不超过 3 种，安排下料方式使得所需钢管原材料最少。\n\n一般化问题，假设用到 $k$ 种下料方式，用 $x_i\\ (i=1,2,\\ldots,k)$ 表示第 $i$ 种下料方式所切割的原料钢管数量，非负整数 $n_{ij}$ 表示第 $i$ 种下料方法得到部件 $j\\ (j=1,2,\\ldots,m)$ 的数量，$b_j$ 表示第 $j$ 种部件的需求量。$L$ 表示钢管材料的长度，$l_j$ 表示部件长度，则下料方式应满足：1) 切割出的部件总长度不超过 $L$；2) 余料严格小于 $\\min \\{l_j\\}$。故建立优化模型：\n\n$$\n\\begin{array}{cl}\n    {\\min} & z = \\sum\\limits_{i=1}^k x_i \\\\\n    \\text{s.t.} & \\begin{cases}\n        \\sum\\limits_{i=1}^k n_{ij}x_i \\geqslant b_j, & j=1,2,\\ldots,m \\\\\n        L - \\min\\{n_{ij}\\} < \\sum\\limits_{j=1}^m n_{ij}l_j \\leqslant L, & i=1,2,\\ldots,k \\\\\n        x_{i}, n_{ij} \\in \\mathbb{N}, & i=1,2,\\ldots,k; \\ j=1,2,\\ldots,m\n    \\end{cases}\n\\end{array}\n$$\n\n在此问题中 $k=3, m=4$。\n\n{% fold '下料问题 Lingo 程序' %}\n```matlab\nmodel:\n    sets:\n        ! craft(1~k): 工艺, 即切割方式 ;\n        ! material(1~m): 不同部件数量 ;\n        ! links: 每种切割方式下不同部件数量 ;\n        craft/1..3/: x;\n        material/1..4/: m, b;\n        links(craft, material): n;\n    endsets\n\n    data:\n        m = 4 5 6 8;\n        b = 50 10 20 15;\n        L = 19;\n    enddata\n\n    min = @sum(craft: x);\n    @for(material(j): @sum(craft(i): n(i, j)*x(i))>=b(j));\n    @for(craft(i): @sum(material(j): n(i, j)*m(j))<=L);\n    @for(craft(i): @sum(material(j): n(i, j)*m(j))>=16);\n    @for(craft: @gin(x));\n    @for(links: @gin(n));\nend\n```\n{% endfold %}\n\n求解结果如下：\n\n<table>\n  <tr>\n    <td style=\"text-align: center;\" rowspan=\"2\"><strong>下料方式</strong></td>\n    <td style=\"text-align: center;\" colspan=\"4\"><strong>部件长度<br></strong></td>\n    <td style=\"text-align: center;\" rowspan=\"2\"><strong>余料长度</strong></td>\n    <td style=\"text-align: center;\" rowspan=\"2\"><strong>切割根数</strong></td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\">4m</td>\n    <td style=\"text-align: center;\">5m</td>\n    <td style=\"text-align: center;\">6m</td>\n    <td style=\"text-align: center;\">8m</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>方式一</strong></td>\n    <td style=\"text-align: center;\">0</td>\n    <td style=\"text-align: center;\">0</td>\n    <td style=\"text-align: center;\">0</td>\n    <td style=\"text-align: center;\">2</td>\n    <td style=\"text-align: center;\">3</td>\n    <td style=\"text-align: center;\">8</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>方式二</strong></td>\n    <td style=\"text-align: center;\">2</td>\n    <td style=\"text-align: center;\">1</td>\n    <td style=\"text-align: center;\">1</td>\n    <td style=\"text-align: center;\">0</td>\n    <td style=\"text-align: center;\">0</td>\n    <td style=\"text-align: center;\">10</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>方式三</strong></td>\n    <td style=\"text-align: center;\">3</td>\n    <td style=\"text-align: center;\">0</td>\n    <td style=\"text-align: center;\">1</td>\n    <td style=\"text-align: center;\">0</td>\n    <td style=\"text-align: center;\">1</td>\n    <td style=\"text-align: center;\">10</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>合计</strong></td>\n    <td style=\"text-align: center;\">50</td>\n    <td style=\"text-align: center;\">10</td>\n    <td style=\"text-align: center;\">20</td>\n    <td style=\"text-align: center;\">16</td>\n    <td style=\"text-align: center;\">34m</td>\n    <td style=\"text-align: center;\">28</td>\n  </tr>\n</table>\n\n注意到上述切割方案余料总长 34m，且多出一根 8m 长的部件。\n\n\n\n[lingo-notepad++]: http://bbs.pinggu.org/thread-3875796-1-1.html\n[essentials-of-matlab-examples]: /essentials-of-matlab-examples#mjx-eqn-J\n","slug":"learning-lingo-01","published":1,"updated":"2023-03-09T16:09:38.250Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u336t002jp4x0znjr15ls","content":"<h2 id=\"环境搭建\">环境搭建</h2>\r\n<ul>\r\n<li>Lingo 17.0 (Windows 10 x64)</li>\r\n<li>Notepad++ 7.4.2 x86\r\n<ul>\r\n<li>NppExec</li>\r\n<li>Visimulator</li>\r\n<li><a href=\"http://bbs.pinggu.org/thread-3875796-1-1.html\" target=\"_blank\" rel=\"noopener\">语法高亮及代码补全</a></li>\r\n</ul></li>\r\n</ul>\r\n<a id=\"more\"></a>\r\n<h2 id=\"lingo-界面速览\">Lingo 界面速览</h2>\r\n<h3 id=\"文件类型\">文件类型</h3>\r\n<table>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: center;\">扩展名</th>\r\n<th style=\"text-align: left;\">文件类型</th>\r\n<th style=\"text-align: center;\">扩展名</th>\r\n<th style=\"text-align: left;\">文件类型</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">.lg4</td>\r\n<td style=\"text-align: left;\">Windows 下模型文件，支持字体、格式、OLE</td>\r\n<td style=\"text-align: center;\">.lng</td>\r\n<td style=\"text-align: left;\">纯文本格式模型文件</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\">.ldt</td>\r\n<td style=\"text-align: left;\">数据文件</td>\r\n<td style=\"text-align: center;\">.ltf</td>\r\n<td style=\"text-align: left;\">命令脚本文件</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">.ltx</td>\r\n<td style=\"text-align: left;\">Lindo 语法的模型文件</td>\r\n<td style=\"text-align: center;\">.lgr</td>\r\n<td style=\"text-align: left;\">报告文件</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h3 id=\"lingo-菜单\">Lingo 菜单</h3>\r\n<table>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: center;\">中文</th>\r\n<th style=\"text-align: center;\">英文</th>\r\n<th style=\"text-align: center;\">中文</th>\r\n<th style=\"text-align: center;\">英文</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">求解结果</td>\r\n<td style=\"text-align: center;\">Solution</td>\r\n<td style=\"text-align: center;\">灵敏性分析</td>\r\n<td style=\"text-align: center;\">Range</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\">生成模型展开形式</td>\r\n<td style=\"text-align: center;\">Generate</td>\r\n<td style=\"text-align: center;\">生成图形</td>\r\n<td style=\"text-align: center;\">Picture</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">调试</td>\r\n<td style=\"text-align: center;\">Debug</td>\r\n<td style=\"text-align: center;\">模型统计资料</td>\r\n<td style=\"text-align: center;\">Model Statistics</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\">查看</td>\r\n<td style=\"text-align: center;\">Look</td>\r\n<td style=\"text-align: center;\"></td>\r\n<td style=\"text-align: center;\"></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h3 id=\"求解器状态窗口信息\">求解器状态窗口信息</h3>\r\n<ul>\r\n<li>变量数量 (Variables)</li>\r\n<li>约束变量 (Constraints)</li>\r\n<li>非零系数数量 (Nonzeroes)</li>\r\n<li>内存使用量 (Generator Memory Used)</li>\r\n<li>已运行时间 (Elapsed Runtime)</li>\r\n<li>求解器状态 (Solver Status)\r\n<ul>\r\n<li>模型类型 (Model Class)：线性规划 (LP)、二次规划 (QP)、整数线性规划 (ILP)、整数二次规划 (IQP)、纯整数线性规划 (PILP)、纯整数二次规划 (PIQP)、非线性规划 (NLP)、混合整数规划 (MIP)、整数非线性工 (INLP)、纯整数非线性规划 (PINLP)、混合整数非线性规划 (MINLP)</li>\r\n<li>当前解的状态 (State)：全局最优解 (Global Optimum)、局部最优解 (Local Optimum)、可行解 (Feasible)、不可行解 (Infeasible)、无界 (Unbounded)、中断 (Interrupted)、未确定 (Undetermined)</li>\r\n<li>当前解的目标函数值 (Objective)</li>\r\n<li>当前约束不满足的总量 (Infeasibility)</li>\r\n<li>迭代次数 (Iterations)</li>\r\n<li>扩展求解器状态 (Extended Solver Status)：特殊算法类型 (Solver Type)、可行解的最佳目标函数值 (Best Obj)、目标函数值的界限 (Obj Bound)、特殊求解程序运行步数 (Steps)、有效步数 (Active)</li>\r\n</ul></li>\r\n</ul>\r\n<h2 id=\"lingo-语言速览\">Lingo 语言速览</h2>\r\n<h3 id=\"逻辑运算符\">逻辑运算符</h3>\r\n<table>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: center;\">运算符</th>\r\n<th style=\"text-align: left;\">作用</th>\r\n<th style=\"text-align: center;\">运算符</th>\r\n<th style=\"text-align: left;\">作用</th>\r\n<th style=\"text-align: center;\">运算符</th>\r\n<th style=\"text-align: left;\">作用</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">#EQ#</td>\r\n<td style=\"text-align: left;\">两操作数相等时为真</td>\r\n<td style=\"text-align: center;\">#NE#</td>\r\n<td style=\"text-align: left;\">两操作数不等时为真</td>\r\n<td style=\"text-align: center;\">#GT#</td>\r\n<td style=\"text-align: left;\">左边（严格）大于右边时为真</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\">#GE#</td>\r\n<td style=\"text-align: left;\">左边大于或等于右边时为真</td>\r\n<td style=\"text-align: center;\">#LT#</td>\r\n<td style=\"text-align: left;\">左边（严格）小于右边时为真</td>\r\n<td style=\"text-align: center;\">#LE#</td>\r\n<td style=\"text-align: left;\">左边小于或等于右边时为真</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">#NOT#</td>\r\n<td style=\"text-align: left;\">取反</td>\r\n<td style=\"text-align: center;\">#AND#</td>\r\n<td style=\"text-align: left;\">逻辑与</td>\r\n<td style=\"text-align: center;\">#OR#</td>\r\n<td style=\"text-align: left;\">逻辑或</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p>注：#AND# 和 #OR# 优先级较低，但高于 &lt;=、=、&gt;=。</p>\r\n<h3 id=\"数学函数\">数学函数</h3>\r\n<table>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: left;\">函数名</th>\r\n<th style=\"text-align: left;\">解释</th>\r\n<th style=\"text-align: left;\">函数名</th>\r\n<th style=\"text-align: left;\">解释</th>\r\n<th style=\"text-align: left;\">函数名</th>\r\n<th style=\"text-align: left;\">解释</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"abs\">@abs</span>(x)</td>\r\n<td style=\"text-align: left;\">绝对值</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"acos\">@acos</span>(x)</td>\r\n<td style=\"text-align: left;\">反余弦</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"acosh\">@acosh</span>(x)</td>\r\n<td style=\"text-align: left;\">反双曲余弦</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"asin\">@asin</span>(x)</td>\r\n<td style=\"text-align: left;\">反正弦</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"asinh\">@asinh</span>(x)</td>\r\n<td style=\"text-align: left;\">反双曲正弦</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"atan\">@atan</span>(x)</td>\r\n<td style=\"text-align: left;\">反正切</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"atan2\">@atan2</span>(x, y)</td>\r\n<td style=\"text-align: left;\"><span class=\"math inline\">\\(\\arctan (y/x)\\)</span></td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"atanh\">@atanh</span>(x)</td>\r\n<td style=\"text-align: left;\">反双曲正切</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"cos\">@cos</span>(x)</td>\r\n<td style=\"text-align: left;\">余弦</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"cosh\">@cosh</span>(x)</td>\r\n<td style=\"text-align: left;\">双曲余弦</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"exp\">@exp</span>(x)</td>\r\n<td style=\"text-align: left;\"><span class=\"math inline\">\\(e^x\\)</span></td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"floor\">@floor</span>(x)</td>\r\n<td style=\"text-align: left;\">向 0 取整</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"int\">@int</span>(x)</td>\r\n<td style=\"text-align: left;\">向负无穷取整</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"integral\">@integral</span>(proc, x, xl, xu, y)</td>\r\n<td style=\"text-align: left;\">辛普森数值积分</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"lgm\">@lgm</span>(x)</td>\r\n<td style=\"text-align: left;\">Gamma 函数自然对数</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"log\">@log</span>(x)</td>\r\n<td style=\"text-align: left;\">自然对数</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"log10\">@log10</span>(x)</td>\r\n<td style=\"text-align: left;\">10 为底对数</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"logb\">@logb</span>(x, b)</td>\r\n<td style=\"text-align: left;\">b 为底对数</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"mod\">@mod</span>(x, y)</td>\r\n<td style=\"text-align: left;\">取模</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"pi\">@pi</span>()</td>\r\n<td style=\"text-align: left;\">圆周率</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"pow\">@pow</span>(x, y)</td>\r\n<td style=\"text-align: left;\"><span class=\"math inline\">\\(x^y\\)</span></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"round\">@round</span>(x, n)</td>\r\n<td style=\"text-align: left;\">最近四舍五入</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"rounddown\">@rounddown</span>(x, n)</td>\r\n<td style=\"text-align: left;\">向零四舍五入</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"roundup\">@roundup</span>(x, n)</td>\r\n<td style=\"text-align: left;\">远离零四舍五入</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"sign\">@sign</span>(x)</td>\r\n<td style=\"text-align: left;\">符号函数</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"sin\">@sin</span>(x)</td>\r\n<td style=\"text-align: left;\">正弦</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"sinh\">@sinh</span>(x)</td>\r\n<td style=\"text-align: left;\">双曲正弦</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"smax\">@smax</span>(x1, x2, …, xn)</td>\r\n<td style=\"text-align: left;\">最大值</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"smin\">@smin</span>(x1, x2, …, xn)</td>\r\n<td style=\"text-align: left;\">最小值</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"sqr\">@sqr</span>(x)</td>\r\n<td style=\"text-align: left;\">平方</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"sqrt\">@sqrt</span>(x)</td>\r\n<td style=\"text-align: left;\">开方</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"tan\">@tan</span>(x)</td>\r\n<td style=\"text-align: left;\">正切</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"tanh\">@tanh</span>(x)</td>\r\n<td style=\"text-align: left;\">双曲正切</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h3 id=\"概率函数\">概率函数</h3>\r\n<table style=\"width:100%;\">\r\n<colgroup>\r\n<col style=\"width: 16%\">\r\n<col style=\"width: 16%\">\r\n<col style=\"width: 16%\">\r\n<col style=\"width: 16%\">\r\n<col style=\"width: 16%\">\r\n<col style=\"width: 16%\">\r\n</colgroup>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: left;\">函数名</th>\r\n<th style=\"text-align: left;\">解释</th>\r\n<th style=\"text-align: left;\">函数名</th>\r\n<th style=\"text-align: left;\">解释</th>\r\n<th style=\"text-align: left;\">函数名</th>\r\n<th style=\"text-align: left;\">解释</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"norminv\">@norminv</span>(p, mu, sigma)</td>\r\n<td style=\"text-align: left;\">正态分布下分位数</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"normsinv\">@normsinv</span>(p)</td>\r\n<td style=\"text-align: left;\">标准正态分布分位数</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"pbn\">@pbn</span>(p, n, x)</td>\r\n<td style=\"text-align: left;\">二项分布 CDF 值</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"pcx\">@pcx</span>(n, x)</td>\r\n<td style=\"text-align: left;\">卡方分布 CDF 值</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"peb\">@peb</span>(a, x)</td>\r\n<td style=\"text-align: left;\">允许无穷排队的 Erlang 繁忙概率</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"pel\">@pel</span>(a, x)</td>\r\n<td style=\"text-align: left;\">不允许无穷排队的 Erlang 繁忙概率</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"pfd\">@pfd</span>(n, d, x)</td>\r\n<td style=\"text-align: left;\">F 分布 CDF 值</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"pfs\">@pfs</span>(a, x, c)</td>\r\n<td style=\"text-align: left;\">Poisson 服务系统期望值</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"phg\">@phg</span>(pop, g, n, x)</td>\r\n<td style=\"text-align: left;\">超几何分布概率值</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"ppl\">@ppl</span>(a, x)</td>\r\n<td style=\"text-align: left;\">泊松分布线性损失函数</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"pps\">@pps</span>(a, x)</td>\r\n<td style=\"text-align: left;\">泊松分布 CDF 值</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"psl\">@psl</span>(x)</td>\r\n<td style=\"text-align: left;\">单位正态线性损失函数</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"psn\">@psn</span>(x)</td>\r\n<td style=\"text-align: left;\">标准正态分布 CDF 值</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"ptd\">@ptd</span>(n, x)</td>\r\n<td style=\"text-align: left;\">t 分布 CDF 值</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"qrand\">@qrand</span>(seed)</td>\r\n<td style=\"text-align: left;\">(0, 1) 间随机数</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h3 id=\"变量界定函数\">变量界定函数</h3>\r\n<table style=\"width:100%;\">\r\n<colgroup>\r\n<col style=\"width: 16%\">\r\n<col style=\"width: 16%\">\r\n<col style=\"width: 16%\">\r\n<col style=\"width: 16%\">\r\n<col style=\"width: 16%\">\r\n<col style=\"width: 16%\">\r\n</colgroup>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: left;\">函数名</th>\r\n<th style=\"text-align: left;\">解释</th>\r\n<th style=\"text-align: left;\">函数名</th>\r\n<th style=\"text-align: left;\">解释</th>\r\n<th style=\"text-align: left;\">函数名</th>\r\n<th style=\"text-align: left;\">解释</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"bin\">@bin</span>(variable)</td>\r\n<td style=\"text-align: left;\">限制变量取 0 或 1</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"bnd\">@bnd</span>(lower, variable, upper)</td>\r\n<td style=\"text-align: left;\">限制 <span class=\"math inline\">\\(L\\leqslant x \\leqslant U\\)</span></td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"free\">@free</span>(variable)</td>\r\n<td style=\"text-align: left;\">取消变量限制，可取任意实数</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"gin\">@gin</span>(variable)</td>\r\n<td style=\"text-align: left;\">限制为整数</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"priority\">@priority</span>(variable, priority)</td>\r\n<td style=\"text-align: left;\">设置优先级</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"semic\">@semic</span>(lower, variable, upper)</td>\r\n<td style=\"text-align: left;\">或者为 0，或者在区间 (lower, upper)</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h3 id=\"集合操作函数\">集合操作函数</h3>\r\n<ul>\r\n<li><span class=\"citation\" data-cites=\"for\">@for</span>(s: e)</li>\r\n<li><span class=\"citation\" data-cites=\"max\">@max</span>(s: e)</li>\r\n<li><span class=\"citation\" data-cites=\"prod\">@prod</span>(s: e)</li>\r\n<li><span class=\"citation\" data-cites=\"size\">@size</span>(s)</li>\r\n<li><span class=\"citation\" data-cites=\"insert\">@insert</span>(s, idx)</li>\r\n<li><span class=\"citation\" data-cites=\"sum\">@sum</span>(s: e)</li>\r\n<li><span class=\"citation\" data-cites=\"min\">@min</span>(s: e)</li>\r\n<li><span class=\"citation\" data-cites=\"in\">@in</span>(s, e)</li>\r\n<li><span class=\"citation\" data-cites=\"index\">@index</span>(s: e)</li>\r\n<li><span class=\"citation\" data-cites=\"wrap\">@wrap</span>(idx, limit)</li>\r\n</ul>\r\n<hr>\r\n<h2 id=\"一些经典问题\">一些经典问题</h2>\r\n<h3 id=\"运输问题\">运输问题</h3>\r\n<p>假设 Wireless Widget有 6 个供货仓库，货物分别发往 8 个供销商。每个仓库有一定的库存量，现要制定出最小化运输成本，使得运输方案达到每个供销商需求的运输方案。</p>\r\n<!-- more -->\r\n<p>已知信息如下：</p>\r\n<table>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: center;\">仓库</th>\r\n<th style=\"text-align: center;\">库存</th>\r\n<th style=\"text-align: center;\">供销商</th>\r\n<th style=\"text-align: center;\">需求</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">1</td>\r\n<td style=\"text-align: center;\">60</td>\r\n<td style=\"text-align: center;\">1</td>\r\n<td style=\"text-align: center;\">35</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\">2</td>\r\n<td style=\"text-align: center;\">55</td>\r\n<td style=\"text-align: center;\">2</td>\r\n<td style=\"text-align: center;\">37</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">3</td>\r\n<td style=\"text-align: center;\">51</td>\r\n<td style=\"text-align: center;\">3</td>\r\n<td style=\"text-align: center;\">22</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\">4</td>\r\n<td style=\"text-align: center;\">43</td>\r\n<td style=\"text-align: center;\">4</td>\r\n<td style=\"text-align: center;\">32</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">5</td>\r\n<td style=\"text-align: center;\">41</td>\r\n<td style=\"text-align: center;\">5</td>\r\n<td style=\"text-align: center;\">41</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\">6</td>\r\n<td style=\"text-align: center;\">52</td>\r\n<td style=\"text-align: center;\">6</td>\r\n<td style=\"text-align: center;\">32</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"></td>\r\n<td style=\"text-align: center;\"></td>\r\n<td style=\"text-align: center;\">7</td>\r\n<td style=\"text-align: center;\">43</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"></td>\r\n<td style=\"text-align: center;\"></td>\r\n<td style=\"text-align: center;\">8</td>\r\n<td style=\"text-align: center;\">38</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p>每个仓库（WH1 ~ WH6）到每个供销商的单位运费表如下：</p>\r\n<table>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: center;\"></th>\r\n<th style=\"text-align: center;\">V1</th>\r\n<th style=\"text-align: center;\">V2</th>\r\n<th style=\"text-align: center;\">V3</th>\r\n<th style=\"text-align: center;\">V4</th>\r\n<th style=\"text-align: center;\">V5</th>\r\n<th style=\"text-align: center;\">V6</th>\r\n<th style=\"text-align: center;\">V7</th>\r\n<th style=\"text-align: center;\">V8</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><strong>WH1</strong></td>\r\n<td style=\"text-align: center;\">6</td>\r\n<td style=\"text-align: center;\">2</td>\r\n<td style=\"text-align: center;\">6</td>\r\n<td style=\"text-align: center;\">7</td>\r\n<td style=\"text-align: center;\">4</td>\r\n<td style=\"text-align: center;\">2</td>\r\n<td style=\"text-align: center;\">5</td>\r\n<td style=\"text-align: center;\">9</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><strong>WH2</strong></td>\r\n<td style=\"text-align: center;\">4</td>\r\n<td style=\"text-align: center;\">9</td>\r\n<td style=\"text-align: center;\">5</td>\r\n<td style=\"text-align: center;\">3</td>\r\n<td style=\"text-align: center;\">8</td>\r\n<td style=\"text-align: center;\">5</td>\r\n<td style=\"text-align: center;\">8</td>\r\n<td style=\"text-align: center;\">2</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><strong>WH3</strong></td>\r\n<td style=\"text-align: center;\">5</td>\r\n<td style=\"text-align: center;\">2</td>\r\n<td style=\"text-align: center;\">1</td>\r\n<td style=\"text-align: center;\">9</td>\r\n<td style=\"text-align: center;\">7</td>\r\n<td style=\"text-align: center;\">4</td>\r\n<td style=\"text-align: center;\">3</td>\r\n<td style=\"text-align: center;\">3</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><strong>WH4</strong></td>\r\n<td style=\"text-align: center;\">7</td>\r\n<td style=\"text-align: center;\">6</td>\r\n<td style=\"text-align: center;\">7</td>\r\n<td style=\"text-align: center;\">3</td>\r\n<td style=\"text-align: center;\">9</td>\r\n<td style=\"text-align: center;\">2</td>\r\n<td style=\"text-align: center;\">7</td>\r\n<td style=\"text-align: center;\">1</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><strong>WH5</strong></td>\r\n<td style=\"text-align: center;\">2</td>\r\n<td style=\"text-align: center;\">3</td>\r\n<td style=\"text-align: center;\">9</td>\r\n<td style=\"text-align: center;\">5</td>\r\n<td style=\"text-align: center;\">7</td>\r\n<td style=\"text-align: center;\">2</td>\r\n<td style=\"text-align: center;\">6</td>\r\n<td style=\"text-align: center;\">5</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><strong>WH6</strong></td>\r\n<td style=\"text-align: center;\">5</td>\r\n<td style=\"text-align: center;\">5</td>\r\n<td style=\"text-align: center;\">2</td>\r\n<td style=\"text-align: center;\">2</td>\r\n<td style=\"text-align: center;\">8</td>\r\n<td style=\"text-align: center;\">1</td>\r\n<td style=\"text-align: center;\">4</td>\r\n<td style=\"text-align: center;\">3</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p>对问题建模，记 <span class=\"math inline\">\\(\\text{volume}_{ij}\\)</span> 为第 <span class=\"math inline\">\\(i\\)</span> 个仓库到第 <span class=\"math inline\">\\(j\\)</span> 个供销商的货运量，<span class=\"math inline\">\\(\\text{cost}_{ij}\\)</span> 表示第 <span class=\"math inline\">\\(i\\)</span> 个仓库到第 <span class=\"math inline\">\\(j\\)</span> 个供销商的单位货物运价，<span class=\"math inline\">\\(\\text{capacity}_i\\)</span> 表示第 <span class=\"math inline\">\\(i\\)</span> 个仓库的最大供货量，<span class=\"math inline\">\\(\\text{demand}_j\\)</span> 表示第 <span class=\"math inline\">\\(j\\)</span> 个供销商的订货量。</p>\r\n<p>目标函数是令总运输费用最少。约束条件：</p>\r\n<ul>\r\n<li>各仓库的出货量不超过其库存</li>\r\n<li>各供销商收到的货物总量等于订货数</li>\r\n<li>决策变量 <span class=\"math inline\">\\(\\text{cost}_{ij}\\)</span> 非负。</li>\r\n</ul>\r\n<p>数学表达为：</p>\r\n<p><span class=\"math display\">\\[\r\n\\begin{array}{cl}\r\n    \\min &amp; z = \\sum\\limits_{i=1}^6 \\sum\\limits_{j=1}^8 \\text{cost}_{ij}\\ \\text{volume}_{ij} \\\\\r\n    \\text{s.t.} &amp; \\begin{cases}\r\n        \\sum\\limits_{j=1}^8 \\text{volume}_{ij} \\leqslant \\text{capacity}_i, &amp; i = 1,2,\\ldots,6 \\\\\r\n        \\sum\\limits_{i=1}^6 \\text{volume}_{ij} = \\text{demand}_j, &amp; j = 1,2,\\ldots,8 \\\\\r\n        \\text{volume}_{ij} \\geqslant 0, &amp; i=1,2,\\ldots,6, \\ j=1,2,\\ldots,8 \\\\\r\n    \\end{cases}\r\n\\end{array}\r\n\\]</span></p>\r\n<p>相应的 Lingo 程序代码：</p>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">model:</span><br><span class=\"line\">    sets:</span><br><span class=\"line\">        warehouses/wh1..wh6/:capacity;</span><br><span class=\"line\">        vendors/vd1..vd8/:demand;</span><br><span class=\"line\">        crosstab(warehouses, vendors): volume, cost;</span><br><span class=\"line\">    endsets</span><br><span class=\"line\"></span><br><span class=\"line\">    data:</span><br><span class=\"line\">       capacity = <span class=\"number\">60</span> <span class=\"number\">55</span> <span class=\"number\">51</span> <span class=\"number\">43</span> <span class=\"number\">41</span> <span class=\"number\">52</span>;</span><br><span class=\"line\">       demand = <span class=\"number\">35</span> <span class=\"number\">37</span> <span class=\"number\">22</span> <span class=\"number\">32</span> <span class=\"number\">41</span> <span class=\"number\">32</span> <span class=\"number\">43</span> <span class=\"number\">38</span>;</span><br><span class=\"line\">       cost = <span class=\"number\">6</span> <span class=\"number\">2</span> <span class=\"number\">6</span> <span class=\"number\">7</span> <span class=\"number\">4</span> <span class=\"number\">2</span> <span class=\"number\">5</span> <span class=\"number\">9</span></span><br><span class=\"line\">              <span class=\"number\">4</span> <span class=\"number\">9</span> <span class=\"number\">5</span> <span class=\"number\">3</span> <span class=\"number\">8</span> <span class=\"number\">5</span> <span class=\"number\">8</span> <span class=\"number\">2</span></span><br><span class=\"line\">              <span class=\"number\">5</span> <span class=\"number\">2</span> <span class=\"number\">1</span> <span class=\"number\">9</span> <span class=\"number\">7</span> <span class=\"number\">4</span> <span class=\"number\">3</span> <span class=\"number\">3</span></span><br><span class=\"line\">              <span class=\"number\">7</span> <span class=\"number\">6</span> <span class=\"number\">7</span> <span class=\"number\">3</span> <span class=\"number\">9</span> <span class=\"number\">2</span> <span class=\"number\">7</span> <span class=\"number\">1</span></span><br><span class=\"line\">              <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">9</span> <span class=\"number\">5</span> <span class=\"number\">7</span> <span class=\"number\">2</span> <span class=\"number\">6</span> <span class=\"number\">5</span></span><br><span class=\"line\">              <span class=\"number\">5</span> <span class=\"number\">5</span> <span class=\"number\">2</span> <span class=\"number\">2</span> <span class=\"number\">8</span> <span class=\"number\">1</span> <span class=\"number\">4</span> <span class=\"number\">3</span>;</span><br><span class=\"line\">    enddata</span><br><span class=\"line\"></span><br><span class=\"line\">    min = @sum(crosstab(<span class=\"built_in\">i</span>, <span class=\"built_in\">j</span>): volume(<span class=\"built_in\">i</span>, <span class=\"built_in\">j</span>) * cost(<span class=\"built_in\">i</span>, <span class=\"built_in\">j</span>));</span><br><span class=\"line\">    @<span class=\"keyword\">for</span>(warehouses(<span class=\"built_in\">i</span>):</span><br><span class=\"line\">        @sum(vendors(<span class=\"built_in\">j</span>): volume(<span class=\"built_in\">i</span>, <span class=\"built_in\">j</span>)) &lt;= capacity(<span class=\"built_in\">i</span>));</span><br><span class=\"line\">    @<span class=\"keyword\">for</span>(vendors(<span class=\"built_in\">j</span>):</span><br><span class=\"line\">        @sum(warehouses(<span class=\"built_in\">i</span>): volume(<span class=\"built_in\">i</span>, <span class=\"built_in\">j</span>)) = demand(<span class=\"built_in\">j</span>));</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\r\n<p>其中 <code>SET</code> 过程大大简化了程序代码，也提升了程序的可读性，否则对于每个变量都需要进行硬编码。其语法 为 <code>&lt;集合名称&gt;[集合元素][:&lt;集合属性&gt;]</code>。当然 <code>SET</code> 中的前两个关于库存和供销商的描述可以拆分为</p>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sets:</span><br><span class=\"line\">    warehouses:capacity;</span><br><span class=\"line\">    vendors:demand;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">endsets</span><br><span class=\"line\"></span><br><span class=\"line\">data:</span><br><span class=\"line\">    warehouses = wh1..wh6;</span><br><span class=\"line\">    demand = vd1..vd8;</span><br><span class=\"line\">enddata</span><br></pre></td></tr></table></figure>\r\n<p>当然笔者更青睐紧凑的方式。<code>crosstab</code> 表示由 <code>warehouses</code> 和 <code>demand</code> 构成的派生集，即包含了 6 × 8 = 48 个变量。在目标函数及约束条件语句中，由于目标函数的操作数完全来自 <code>crosstab</code>，所以可省略部分语句：<code>min = @sum(crosstab: volume * cost);</code>。</p>\r\n<p>程序经过 17 次迭代后得出的目标函数值为 664.0000，最优运输方案如下表。</p>\r\n<table>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: center;\"></th>\r\n<th style=\"text-align: center;\">V1</th>\r\n<th style=\"text-align: center;\">V2</th>\r\n<th style=\"text-align: center;\">V3</th>\r\n<th style=\"text-align: center;\">V4</th>\r\n<th style=\"text-align: center;\">V5</th>\r\n<th style=\"text-align: center;\">V6</th>\r\n<th style=\"text-align: center;\">V7</th>\r\n<th style=\"text-align: center;\">V8</th>\r\n<th style=\"text-align: center;\">合计</th>\r\n<th style=\"text-align: center;\">库存</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><strong>WH1</strong></td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">19</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">41</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">60</td>\r\n<td style=\"text-align: center;\">60</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><strong>WH2</strong></td>\r\n<td style=\"text-align: center;\">1</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">32</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">33</td>\r\n<td style=\"text-align: center;\">55</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><strong>WH3</strong></td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">11</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">40</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">51</td>\r\n<td style=\"text-align: center;\">51</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><strong>WH4</strong></td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">5</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">38</td>\r\n<td style=\"text-align: center;\">43</td>\r\n<td style=\"text-align: center;\">43</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><strong>WH5</strong></td>\r\n<td style=\"text-align: center;\">34</td>\r\n<td style=\"text-align: center;\">7</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">41</td>\r\n<td style=\"text-align: center;\">41</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><strong>WH6</strong></td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">22</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">27</td>\r\n<td style=\"text-align: center;\">3</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">52</td>\r\n<td style=\"text-align: center;\">52</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><strong>合计</strong></td>\r\n<td style=\"text-align: center;\">35</td>\r\n<td style=\"text-align: center;\">37</td>\r\n<td style=\"text-align: center;\">22</td>\r\n<td style=\"text-align: center;\">32</td>\r\n<td style=\"text-align: center;\">41</td>\r\n<td style=\"text-align: center;\">32</td>\r\n<td style=\"text-align: center;\">43</td>\r\n<td style=\"text-align: center;\">38</td>\r\n<td style=\"text-align: center;\"></td>\r\n<td style=\"text-align: center;\"></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><strong>需求</strong></td>\r\n<td style=\"text-align: center;\">35</td>\r\n<td style=\"text-align: center;\">37</td>\r\n<td style=\"text-align: center;\">22</td>\r\n<td style=\"text-align: center;\">32</td>\r\n<td style=\"text-align: center;\">41</td>\r\n<td style=\"text-align: center;\">32</td>\r\n<td style=\"text-align: center;\">43</td>\r\n<td style=\"text-align: center;\">38</td>\r\n<td style=\"text-align: center;\"></td>\r\n<td style=\"text-align: center;\"></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<hr>\r\n<h3 id=\"值班问题\">值班问题</h3>\r\n<p>某项工作一周 7 天都需有人上班，周一至周日所需的最少人数分别为 20、16、13、16、19、14 和 12。要求员工一周连续工作 5 天接着休息 2 天。给出人员安排，使每周所需人数最少。</p>\r\n<p>若安排得当，记周一至周日分别安排 <span class=\"math inline\">\\(X(i)\\)</span> 人上班。那么周一上班的人必然周五、周六休息，以此类推。令总上班人数为 <span class=\"math inline\">\\(Z\\)</span>，那么上周周二、周三的人仍在休息中，所以有 <span class=\"math inline\">\\(X(1) = Z-X(1)-X(2)\\)</span>，同样可以得到其他 6 个等式。概括之就是 <span class=\"math display\">\\[X(i) = Z-X(i+1)-X(i+2), \\ i=1,2,\\ldots, 7\\]</span> 当然，<span class=\"math inline\">\\(X(8)\\)</span> 相当于 <span class=\"math inline\">\\(X(1)\\)</span>，<span class=\"math inline\">\\(X(9)\\)</span> 相当于 <span class=\"math inline\">\\(X(2)\\)</span>。所以需要特殊的函数对其进行转化，<code>wrap</code> 函数正合此意。除了此函数，由此 <a href=\"/essentials-of-matlab-examples#mjx-eqn-J\">公式</a> 也可。代码如下：</p>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">model:</span><br><span class=\"line\">    sets:</span><br><span class=\"line\">        days/mon..sun/: r, x;</span><br><span class=\"line\">    endsets</span><br><span class=\"line\"></span><br><span class=\"line\">    data:</span><br><span class=\"line\">        r = <span class=\"number\">20</span> <span class=\"number\">16</span> <span class=\"number\">13</span> <span class=\"number\">16</span> <span class=\"number\">19</span> <span class=\"number\">14</span> <span class=\"number\">12</span>;</span><br><span class=\"line\">    enddata</span><br><span class=\"line\"></span><br><span class=\"line\">    min = z;</span><br><span class=\"line\">    z = @sum(days: x);</span><br><span class=\"line\">    n = @<span class=\"built_in\">size</span>(days);</span><br><span class=\"line\">    @<span class=\"keyword\">for</span>(days(<span class=\"built_in\">i</span>): z-x(@wrap(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,n))-x(@wrap(<span class=\"built_in\">i</span>+<span class=\"number\">2</span>,n)) &gt;= r(<span class=\"built_in\">i</span>));</span><br><span class=\"line\">    ! @<span class=\"keyword\">for</span>(days(<span class=\"built_in\">i</span>): z-x(<span class=\"number\">1</span>+@<span class=\"built_in\">mod</span>(<span class=\"built_in\">i</span>,n))-x(<span class=\"number\">1</span>+@<span class=\"built_in\">mod</span>(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,n)) &gt;= r(<span class=\"built_in\">i</span>));</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\r\n<p>程序得出的最优解为：8、2、0、6、3、3、0。这说明每周最少需要 22 名员工，周一安排 8 人开始上班，或者说这 8 人休周六和周日，周一工作，其余类推。周二安排 2 人，等等。待轮休稳定后即可满足每天所需要的最少上班员工数。</p>\r\n<hr>\r\n<h3 id=\"投资的收益和风险\">投资的收益和风险</h3>\r\n<p>市场上有 <span class=\"math inline\">\\(n\\)</span> 种资产 <span class=\"math inline\">\\(S_i (i=1,2,\\ldots,n)\\)</span> 供投资者选择，某公司有数额为 <span class=\"math inline\">\\(M\\)</span> 的一笔资金用于一个时期的投资。公司财务分析人员对这 <span class=\"math inline\">\\(n\\)</span> 种资产进行了评估，估算出在这一时期内购买 <span class=\"math inline\">\\(S_i\\)</span> 的平均收益率为 <span class=\"math inline\">\\(r_i\\)</span>，并预测出购买 <span class=\"math inline\">\\(S_i\\)</span> 的风险损失率为 <span class=\"math inline\">\\(q_i\\)</span>。考虑到投资越分散，总的风险越小，公司决定当用这笔资金购买若干种资产时，总体风险可用所投资的 <span class=\"math inline\">\\(S_i\\)</span> 中最大的一个风险来度量。购买 <span class=\"math inline\">\\(S_i\\)</span> 要付交易费，费率为 <span class=\"math inline\">\\(p_i\\)</span>，并且当购买额不超过给定值 <span class=\"math inline\">\\(u_i\\)</span> 时，交易费按购买 <span class=\"math inline\">\\(u_i\\)</span> 计算（不买当然无须付费）。另外，假定同期银行存款利率是 <span class=\"math inline\">\\(r_0\\)</span>, 且既无交易费又无风险（<span class=\"math inline\">\\(r_0=5\\%\\)</span>）。</p>\r\n<div><div class=\"fold_hider\"><div class=\"close hider_title\">数据表</div></div><div class=\"fold\">\n<table>\n  <tr>\n    <th style=\"text-align: center;\">$E_i$</th>\n    <th style=\"text-align: center;\">$r_i$(%)</th>\n    <th style=\"text-align: center;\">$q_i$(%)</th>\n    <th style=\"text-align: center;\">$p_i$(%)</th>\n    <th style=\"text-align: center;\">$u_i$(元)</th>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S1</strong></td>\n    <td style=\"text-align: center;\">9.6</td>\n    <td style=\"text-align: center;\">42.0</td>\n    <td style=\"text-align: center;\">2.1</td>\n    <td style=\"text-align: center;\">181</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S2</strong></td>\n    <td style=\"text-align: center;\">18.5</td>\n    <td style=\"text-align: center;\">54.0</td>\n    <td style=\"text-align: center;\">3.2</td>\n    <td style=\"text-align: center;\">407</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S3</strong></td>\n    <td style=\"text-align: center;\">49.4</td>\n    <td style=\"text-align: center;\">60.0</td>\n    <td style=\"text-align: center;\">6.0</td>\n    <td style=\"text-align: center;\">428</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S4</strong></td>\n    <td style=\"text-align: center;\">23.9</td>\n    <td style=\"text-align: center;\">42.0</td>\n    <td style=\"text-align: center;\">1.5</td>\n    <td style=\"text-align: center;\">549</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S5</strong></td>\n    <td style=\"text-align: center;\">8.1</td>\n    <td style=\"text-align: center;\">1.2</td>\n    <td style=\"text-align: center;\">7.6</td>\n    <td style=\"text-align: center;\">270</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S6</strong></td>\n    <td style=\"text-align: center;\">14.0</td>\n    <td style=\"text-align: center;\">39.0</td>\n    <td style=\"text-align: center;\">3.4</td>\n    <td style=\"text-align: center;\">397</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S7</strong></td>\n    <td style=\"text-align: center;\">40.7</td>\n    <td style=\"text-align: center;\">68.0</td>\n    <td style=\"text-align: center;\">5.6</td>\n    <td style=\"text-align: center;\">178</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S8</strong></td>\n    <td style=\"text-align: center;\">31.2</td>\n    <td style=\"text-align: center;\">33.4</td>\n    <td style=\"text-align: center;\">3.1</td>\n    <td style=\"text-align: center;\">220</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S9</strong></td>\n    <td style=\"text-align: center;\">33.6</td>\n    <td style=\"text-align: center;\">53.3</td>\n    <td style=\"text-align: center;\">2.7</td>\n    <td style=\"text-align: center;\">475</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S10</strong></td>\n    <td style=\"text-align: center;\">36.8</td>\n    <td style=\"text-align: center;\">40.0</td>\n    <td style=\"text-align: center;\">2.9</td>\n    <td style=\"text-align: center;\">248</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S11</strong></td>\n    <td style=\"text-align: center;\">11.8</td>\n    <td style=\"text-align: center;\">31.0</td>\n    <td style=\"text-align: center;\">5.1</td>\n    <td style=\"text-align: center;\">195</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S12</strong></td>\n    <td style=\"text-align: center;\">9.0</td>\n    <td style=\"text-align: center;\">5.5</td>\n    <td style=\"text-align: center;\">5.7</td>\n    <td style=\"text-align: center;\">320</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S13</strong></td>\n    <td style=\"text-align: center;\">35.0</td>\n    <td style=\"text-align: center;\">46.0</td>\n    <td style=\"text-align: center;\">2.7</td>\n    <td style=\"text-align: center;\">267</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S14</strong></td>\n    <td style=\"text-align: center;\">9.4</td>\n    <td style=\"text-align: center;\">5.3</td>\n    <td style=\"text-align: center;\">4.5</td>\n    <td style=\"text-align: center;\">328</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S15</strong></td>\n    <td style=\"text-align: center;\">15.0</td>\n    <td style=\"text-align: center;\">23.0</td>\n    <td style=\"text-align: center;\">7.6</td>\n    <td style=\"text-align: center;\">131</td>\n  </tr>\n</table>\n</div></div>\r\n<p>要使净收益尽可能大，总体风险尽可能小，这是一个多目标的规划模型：</p>\r\n<p><span class=\"math display\">\\[\r\n    \\begin{gather*}\r\n        \\max \\ Q(x) = r_0 x_0 + \\sum_{i=1}^n r_ix_i - \\sum_{i=1}^n p_iy_i,\r\n            \\ i=1,2,\\ldots,n \\\\\r\n        \\min \\ F(x) = \\max\\limits_{1\\leqslant i\\leqslant n}\\{q_ix_i\\}\r\n    \\end{gather*}\r\n\\]</span></p>\r\n<p>这里仅考虑模型的一种简化情形：投资者承受风险的程度不同，故给定风险一个界限 <span class=\"math inline\">\\(a\\)</span>，使得所有风险率均小于此值，即 <span class=\"math inline\">\\(q_ix_i \\leqslant Ma (i=1,2,\\ldots,n)\\)</span>。所以目标函数中最小化风险的要求转化为其中一个约束条件。</p>\r\n<p>约束条件为：</p>\r\n<p><span class=\"math display\">\\[\r\n    \\begin{cases}\r\n        \\displaystyle \\sum_{i=1}^nx_i + \\sum_{i=1}^n p_iy_i = M, &amp; i=1,2,\\cdots,n\\\\\r\n        \\displaystyle x_i \\geqslant 0, &amp; i=1,2,\\cdots,n\\\\\r\n        \\displaystyle y_i = \\begin{cases}\r\n            x_i, &amp;x_i&gt;u_i\\\\\r\n            u_i, &amp;0&lt;x_i\\leqslant u_i\\\\\r\n            0, &amp;x_i=0\r\n        \\end{cases}, &amp; i=1,2,\\cdots, n\r\n    \\end{cases}\r\n\\]</span></p>\r\n<p>由于约束条件中含有分段函数，这时可引入 0 - 1 变量将模型转化为混合整数线性规划模型，但也可以利用 Lingo 中的 <code>@if</code> 函数来构造条件，但模型为非线性规划模型。</p>\r\n<div><div class=\"fold_hider\"><div class=\"close hider_title\">混合整数线性规划模型 Lingo 程序</div></div><div class=\"fold\">\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">model:</span><br><span class=\"line\">    sets:</span><br><span class=\"line\">        S/<span class=\"number\">1.</span><span class=\"number\">.15</span>/:x,y,r,p,q,u,z1,z2,z3,b1,b2,b3;</span><br><span class=\"line\">    endsets</span><br><span class=\"line\"></span><br><span class=\"line\">    data:</span><br><span class=\"line\">        M=<span class=\"number\">4000</span>;</span><br><span class=\"line\">        bili=<span class=\"number\">0.05</span>;</span><br><span class=\"line\">        r0=<span class=\"number\">5</span>;</span><br><span class=\"line\">        r=<span class=\"number\">9.6</span> <span class=\"number\">18.5</span> <span class=\"number\">49.4</span> <span class=\"number\">23.9</span> <span class=\"number\">8.1</span> <span class=\"number\">14</span> <span class=\"number\">40.7</span> <span class=\"number\">31.2</span> <span class=\"number\">33.6</span> <span class=\"number\">36.8</span> <span class=\"number\">11.8</span> <span class=\"number\">9</span> <span class=\"number\">35</span> <span class=\"number\">9.4</span> <span class=\"number\">15</span>;</span><br><span class=\"line\">        q=<span class=\"number\">42</span> <span class=\"number\">54</span> <span class=\"number\">60</span> <span class=\"number\">42</span> <span class=\"number\">1.2</span> <span class=\"number\">39</span> <span class=\"number\">68</span> <span class=\"number\">33.4</span> <span class=\"number\">53.3</span> <span class=\"number\">40</span> <span class=\"number\">31</span> <span class=\"number\">5.5</span> <span class=\"number\">46</span> <span class=\"number\">5.3</span> <span class=\"number\">23</span>;</span><br><span class=\"line\">        p=<span class=\"number\">2.1</span> <span class=\"number\">3.2</span> <span class=\"number\">6</span> <span class=\"number\">1.5</span> <span class=\"number\">7.6</span> <span class=\"number\">3.4</span> <span class=\"number\">5.6</span> <span class=\"number\">3.1</span> <span class=\"number\">2.7</span> <span class=\"number\">2.9</span> <span class=\"number\">5.1</span> <span class=\"number\">5.7</span> <span class=\"number\">2.7</span> <span class=\"number\">4.5</span> <span class=\"number\">7.6</span>;</span><br><span class=\"line\">        u=<span class=\"number\">181</span> <span class=\"number\">407</span> <span class=\"number\">428</span> <span class=\"number\">549</span> <span class=\"number\">270</span> <span class=\"number\">397</span> <span class=\"number\">178</span> <span class=\"number\">220</span> <span class=\"number\">475</span> <span class=\"number\">248</span> <span class=\"number\">195</span> <span class=\"number\">320</span> <span class=\"number\">267</span> <span class=\"number\">328</span> <span class=\"number\">131</span>;</span><br><span class=\"line\">    enddata</span><br><span class=\"line\"></span><br><span class=\"line\">    max=r0*x0/<span class=\"number\">100</span>+@Sum(S:r*x/<span class=\"number\">100</span>)-@Sum(S:p*y/<span class=\"number\">100</span>);</span><br><span class=\"line\">    @For(S:q*x/<span class=\"number\">100</span>&lt;M*bili);</span><br><span class=\"line\">    x0+@Sum(S:x)+@Sum(S:p*y/<span class=\"number\">100</span>)=M;</span><br><span class=\"line\"></span><br><span class=\"line\">    @For(S:y=z1+z2+z3);</span><br><span class=\"line\">    @For(S:b1+b2+b3=<span class=\"number\">1</span>);</span><br><span class=\"line\">    @For(S:u-x&lt;<span class=\"number\">2</span>*M*(<span class=\"number\">1</span>-b1)); @For(S:x-M&lt;<span class=\"number\">2</span>*M*(<span class=\"number\">1</span>-b1));</span><br><span class=\"line\">    @For(S:-x&lt;<span class=\"number\">2</span>*M*(<span class=\"number\">1</span>-b2)); @For(S:x-u&lt;<span class=\"number\">2</span>*M*(<span class=\"number\">1</span>-b2));</span><br><span class=\"line\">    @For(S:-x&lt;<span class=\"number\">2</span>*M*(<span class=\"number\">1</span>-b3)); @For(S:x&lt;<span class=\"number\">2</span>*M*(<span class=\"number\">1</span>-b3));</span><br><span class=\"line\"></span><br><span class=\"line\">    @For(S:<span class=\"number\">-2</span>*M*b1&lt;z1); @For(S:z1&lt;<span class=\"number\">2</span>*M*b1);</span><br><span class=\"line\">    @For(S:x<span class=\"number\">-2</span>*M*(<span class=\"number\">1</span>-b1)&lt;z1); @For(S:z1&lt;x+<span class=\"number\">2</span>*M*(<span class=\"number\">1</span>-b1));</span><br><span class=\"line\">    @For(S:<span class=\"number\">-2</span>*M*b2&lt;z2); @For(S:z2&lt;<span class=\"number\">2</span>*M*b2);</span><br><span class=\"line\">    @For(S:u<span class=\"number\">-2</span>*M*(<span class=\"number\">1</span>-b2)&lt;z2); @For(S:z2&lt;u+<span class=\"number\">2</span>*M*(<span class=\"number\">1</span>-b2));</span><br><span class=\"line\">    @For(S:z3=<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    @For(S:@Bin(b1));</span><br><span class=\"line\">    @For(S:@Bin(b2));</span><br><span class=\"line\">    @For(S:@Bin(b3));</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n</div></div>\r\n<div><div class=\"fold_hider\"><div class=\"close hider_title\">非线性规划模型 Lingo 程序</div></div><div class=\"fold\">\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">model:</span><br><span class=\"line\">    sets:</span><br><span class=\"line\">        assets/<span class=\"number\">1.</span><span class=\"number\">.15</span>/: x, y, r, q, p, u;</span><br><span class=\"line\">    endsets</span><br><span class=\"line\">    data:</span><br><span class=\"line\">        M = <span class=\"number\">4000</span>;</span><br><span class=\"line\">        r0 = <span class=\"number\">5</span>;</span><br><span class=\"line\">        a = <span class=\"number\">0.05</span>;</span><br><span class=\"line\">        r =  <span class=\"number\">9.6</span> <span class=\"number\">18.5</span> <span class=\"number\">49.4</span> <span class=\"number\">23.9</span>  <span class=\"number\">8.1</span></span><br><span class=\"line\">            <span class=\"number\">14.0</span> <span class=\"number\">40.7</span> <span class=\"number\">31.2</span> <span class=\"number\">33.6</span> <span class=\"number\">36.8</span></span><br><span class=\"line\">            <span class=\"number\">11.8</span>  <span class=\"number\">9.0</span> <span class=\"number\">35.0</span>  <span class=\"number\">9.4</span> <span class=\"number\">15.0</span>;</span><br><span class=\"line\">        q = <span class=\"number\">42</span>  <span class=\"number\">54</span>   <span class=\"number\">60</span>   <span class=\"number\">42</span> <span class=\"number\">1.2</span></span><br><span class=\"line\">            <span class=\"number\">39</span>  <span class=\"number\">68</span> <span class=\"number\">33.4</span> <span class=\"number\">53.3</span>  <span class=\"number\">40</span></span><br><span class=\"line\">            <span class=\"number\">31</span> <span class=\"number\">5.5</span>   <span class=\"number\">46</span>  <span class=\"number\">5.3</span>  <span class=\"number\">23</span>;</span><br><span class=\"line\">        p = <span class=\"number\">2.1</span> <span class=\"number\">3.2</span> <span class=\"number\">6.0</span> <span class=\"number\">1.5</span> <span class=\"number\">7.6</span></span><br><span class=\"line\">            <span class=\"number\">3.4</span> <span class=\"number\">5.6</span> <span class=\"number\">3.1</span> <span class=\"number\">2.7</span> <span class=\"number\">2.9</span></span><br><span class=\"line\">            <span class=\"number\">5.1</span> <span class=\"number\">5.7</span> <span class=\"number\">2.7</span> <span class=\"number\">4.5</span> <span class=\"number\">7.6</span>;</span><br><span class=\"line\">        u = <span class=\"number\">181</span> <span class=\"number\">407</span> <span class=\"number\">428</span> <span class=\"number\">549</span> <span class=\"number\">270</span></span><br><span class=\"line\">            <span class=\"number\">397</span> <span class=\"number\">178</span> <span class=\"number\">220</span> <span class=\"number\">475</span> <span class=\"number\">248</span></span><br><span class=\"line\">            <span class=\"number\">195</span> <span class=\"number\">320</span> <span class=\"number\">267</span> <span class=\"number\">328</span> <span class=\"number\">131</span>;</span><br><span class=\"line\">    enddata</span><br><span class=\"line\"></span><br><span class=\"line\">    max=(x0*r0+@sum(assets: r*x-p*y))/<span class=\"number\">100</span>;</span><br><span class=\"line\">    @for(assets: y=@if(x #le# u, @if(x #eq# 0, 0, u), x));</span><br><span class=\"line\">    @<span class=\"keyword\">for</span>(assets: q*x/<span class=\"number\">100</span>&lt;=M*a);</span><br><span class=\"line\">    x0+@sum(assets: x)+@sum(assets: p*y/<span class=\"number\">100</span>)=M;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n</div></div>\r\n<p>程序输出结果如下：</p>\r\n<table>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: center;\">Variable</th>\r\n<th style=\"text-align: center;\">Value</th>\r\n<th style=\"text-align: center;\">Variable</th>\r\n<th style=\"text-align: center;\">Value</th>\r\n<th style=\"text-align: center;\">Variable</th>\r\n<th style=\"text-align: center;\">Value</th>\r\n<th style=\"text-align: center;\">Variable</th>\r\n<th style=\"text-align: center;\">Value</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><strong>X0</strong></td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\"><strong>X4</strong></td>\r\n<td style=\"text-align: center;\">476.1905</td>\r\n<td style=\"text-align: center;\"><strong>X8</strong></td>\r\n<td style=\"text-align: center;\">598.8024</td>\r\n<td style=\"text-align: center;\"><strong>X12</strong></td>\r\n<td style=\"text-align: center;\">0</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><strong>S1</strong></td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\"><strong>X5</strong></td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\"><strong>X9</strong></td>\r\n<td style=\"text-align: center;\">375.2345</td>\r\n<td style=\"text-align: center;\"><strong>X13</strong></td>\r\n<td style=\"text-align: center;\">434.7826</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><strong>X2</strong></td>\r\n<td style=\"text-align: center;\">370.3704</td>\r\n<td style=\"text-align: center;\"><strong>X6</strong></td>\r\n<td style=\"text-align: center;\">479.8182</td>\r\n<td style=\"text-align: center;\"><strong>X10</strong></td>\r\n<td style=\"text-align: center;\">500</td>\r\n<td style=\"text-align: center;\"><strong>X14</strong></td>\r\n<td style=\"text-align: center;\">0</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><strong>X3</strong></td>\r\n<td style=\"text-align: center;\">333.3333</td>\r\n<td style=\"text-align: center;\"><strong>X7</strong></td>\r\n<td style=\"text-align: center;\">294.1176</td>\r\n<td style=\"text-align: center;\"><strong>X11</strong></td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\"><strong>X15</strong></td>\r\n<td style=\"text-align: center;\">0</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p>在此种投资组合下，收益 1045.604 元。</p>\r\n<h4 id=\"分段函数处理方法\">分段函数处理方法</h4>\r\n<p>上述关于混合整数线性规划模型的 Lingo 程序中引入不少中间决策变量，这里对其展开讨论，下面内容节选自余胜威《MATLAB 数学建模经典案例实战》。（部分改动）</p>\r\n<div class=\"note info\">设有限区间的有界分段函数：\n\n$$\n    y = f(x) = \\begin{cases}\n            \\varphi_1(x), & x\\in(a_1, b_1) & \\\\\n            \\varphi_2(x), & x\\in(a_2, b_2) & \\\\\n            \\hfil \\cdots \\\\\n            \\varphi_n(x), & x\\in(a_n, b_n) & \\\\\n        \\end{cases}, \\quad\n        a_1 < b_1 \\leqslant a_2 < b_2 \\leqslant \\cdots \\leqslant a_n < b_n\n$$\n\n等价为：\n\n$$\n    \\begin{cases}\n        y = y_1 + y_2 + \\cdots y_n \\\\\n        \\delta_1 + \\delta_2 + \\cdots + \\delta_n = 1, \\delta_i \\in \\{0,1\\} \\\\\n        x - a_i \\geqslant -(1-\\delta_i)L_x \\\\\n        x - b_i \\leqslant (1-\\delta_i)U_x \\\\\n        -\\delta_i L_{y1} \\leqslant y_i \\leqslant \\delta_i U_{y1} \\\\\n        -(1-\\delta_i) L_{y2} \\leqslant y_i-\\varphi_i(x)\n        \\leqslant (1-\\delta_i) U_{y2}\n    \\end{cases}\n$$</div>\r\n<p>其中 <span class=\"math inline\">\\(\\delta_i\\)</span> 表明 <span class=\"math inline\">\\(x\\)</span> 所处区间，通过上述约束条件中的第 3、4 式保证。具体而言，给定 <span class=\"math inline\">\\(i\\in\\{1,\\ldots,n\\}\\)</span>，若 <span class=\"math inline\">\\(x \\in (a_i, b_i)\\)</span>，必然有 <span class=\"math inline\">\\(x-a_i \\geqslant 0\\)</span> 以及 <span class=\"math inline\">\\(x-b_i \\leqslant 0\\)</span>；对其他区间而言，有 <span class=\"math inline\">\\(x-a_i \\geqslant -L\\)</span>，以及 <span class=\"math inline\">\\(x-b_i \\leqslant U\\)</span>，其中 <span class=\"math inline\">\\(U, L &gt; 0\\)</span> 分别为 <span class=\"math inline\">\\(x\\)</span> 支撑集的上限和下限的绝对值。引入 0 - 1 变量 <span class=\"math inline\">\\(\\delta_i\\)</span>（类似于概率论中示性函数），对于任何区间，整合上述不等式，即为 3、4 式。注意到给定的 <span class=\"math inline\">\\(x\\)</span> 仅会落入一个区间，故 <span class=\"math inline\">\\(\\sum \\delta_i = 1\\)</span>（2 式）。对于 <span class=\"math inline\">\\(y_i\\)</span>，讨论类似。当然为简单起见，可将所有界限以它们的最大值代替。</p>\r\n<p>乍看求解模型被复杂化，但把可能为非线性规划的问题转为了混合整数线性规划问题，加快求解收敛速度。</p>\r\n<hr>\r\n<h3 id=\"计划排序模型\">计划排序模型</h3>\r\n<p>完成某产品的装配过程需要 11 项任务（用 A ~ K 表示），每项任务所花费的时间如下：</p>\r\n<table>\r\n<tr>\r\n<td>\r\n<strong>任务</strong>\r\n</td>\r\n<td>\r\n<strong>A</strong>\r\n</td>\r\n<td>\r\n<strong>B</strong>\r\n</td>\r\n<td>\r\n<strong>C</strong>\r\n</td>\r\n<td>\r\n<strong>D</strong>\r\n</td>\r\n<td>\r\n<strong>E</strong>\r\n</td>\r\n<td>\r\n<strong>F</strong>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n<strong>时间</strong>\r\n</td>\r\n<td>\r\n45\r\n</td>\r\n<td>\r\n11\r\n</td>\r\n<td>\r\n9\r\n</td>\r\n<td>\r\n50\r\n</td>\r\n<td>\r\n15\r\n</td>\r\n<td>\r\n12\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n<strong>任务</strong>\r\n</td>\r\n<td>\r\n<strong>G</strong>\r\n</td>\r\n<td>\r\n<strong>H</strong>\r\n</td>\r\n<td>\r\n<strong>I</strong>\r\n</td>\r\n<td>\r\n<strong>J</strong>\r\n</td>\r\n<td>\r\n<strong>K</strong>\r\n</td>\r\n<td>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n<strong>时间</strong>\r\n</td>\r\n<td>\r\n12\r\n</td>\r\n<td>\r\n12\r\n</td>\r\n<td>\r\n12\r\n</td>\r\n<td>\r\n8\r\n</td>\r\n<td>\r\n9\r\n</td>\r\n<td>\r\n</td>\r\n</tr>\r\n</table>\r\n<p>各项任务之间存在先后顺序如下图所示。装配流水线有四个顺序工作站，对于有先后次序的任务，只能在流水线上向后传（如任务 B 和 C 的次序为先 B 后 C，如果安排 B 给第 3 站做，则 C 要么由 B 自己完成，要么传给第 4 站来做，而不能交往 1 或 2 号站），每项任务必须只能分配至一个工作站来做。合理分配生产计划，使整个装配周期最短。</p>\r\n<p><img src=\"/img/task_priority.svg\" width=\"50%\"></p>\r\n<p>记 <span class=\"math inline\">\\(x_{ik}\\)</span> 表示将任务 <span class=\"math inline\">\\(i\\ (i=A,B,\\ldots,K)\\)</span> 分配给工作站 <span class=\"math inline\">\\(k\\ (k=1,2,3,4)\\)</span> 的情况，1 表示分配，0 表示不分配，<span class=\"math inline\">\\(t_i\\)</span> 表示完成各项任务所需时间。则目标函数为 <span class=\"math inline\">\\(\\min\\ T = \\max\\limits_{1\\leqslant k \\leqslant 4} \\sum\\limits_{i=1}^{11} t_ix_{ik}\\)</span>。由每项任务只能分配给一个工作站来做，故对所有任务 <span class=\"math inline\">\\(i\\)</span> 有：<span class=\"math inline\">\\(\\sum\\limits_{k=1}^4 x_{ik}=1\\)</span>。对于任务间的优先级，考虑任务 <span class=\"math inline\">\\(i\\)</span> 先于任务 <span class=\"math inline\">\\(j\\)</span>，则可行的任务安排表 (11 × 4) 有：</p>\r\n<span class=\"math display\">\\[\\begin{array}{ccccc}\r\n\\begin{array}{ccccc}\r\n    \\hline\r\n      &amp; 1 &amp; 2 &amp; 3 &amp; 4 \\\\\r\n    \\hline\r\n    i &amp; 1 &amp;   &amp;   &amp;   \\\\\r\n    j &amp; 1 &amp;   &amp;   &amp;   \\\\\r\n    \\Delta  &amp; 0 &amp; 0 &amp; 0 &amp; 0 \\\\\r\n    \\hline\r\n\\end{array}\r\n&amp;\r\n\\begin{array}{ccccc}\r\n    \\hline\r\n      &amp; 1 &amp; 2 &amp; 3 &amp; 4 \\\\\r\n    \\hline\r\n    i &amp; 1 &amp;   &amp;   &amp;   \\\\\r\n    j &amp;   &amp; 1 &amp;   &amp;   \\\\\r\n    \\Delta  &amp; -1 &amp; 1 &amp; 0 &amp; 0 \\\\\r\n    \\hline\r\n\\end{array}\r\n&amp;\r\n\\begin{array}{ccccc}\r\n    \\hline\r\n      &amp; 1 &amp; 2 &amp; 3 &amp; 4 \\\\\r\n    \\hline\r\n    i &amp; 1 &amp;   &amp;   &amp;   \\\\\r\n    j &amp;   &amp;   &amp; 1 &amp;   \\\\\r\n    \\Delta  &amp; -1 &amp; 0 &amp; 1 &amp; 0 \\\\\r\n    \\hline\r\n\\end{array}\r\n&amp;\r\n\\begin{array}{ccccc}\r\n    \\hline\r\n      &amp; 1 &amp; 2 &amp; 3 &amp; 4 \\\\\r\n    \\hline\r\n    i &amp; 1 &amp;   &amp;   &amp;   \\\\\r\n    j &amp;   &amp;   &amp;   &amp; 1 \\\\\r\n    \\Delta  &amp; -1 &amp; 0 &amp; 0 &amp; 1 \\\\\r\n    \\hline\r\n\\end{array}\r\n&amp;\r\n\\begin{array}{ccccc}\r\n    \\hline\r\n      &amp; 1 &amp; 2 &amp; 3 &amp; 4 \\\\\r\n    \\hline\r\n    i &amp;   &amp; 1 &amp;   &amp;   \\\\\r\n    j &amp;   &amp; 1 &amp;   &amp;   \\\\\r\n    \\Delta  &amp; 0 &amp; 0 &amp; 0 &amp; 0 \\\\\r\n    \\hline\r\n\\end{array} \\\\[15pt]\r\n\\begin{array}{ccccc}\r\n    \\hline\r\n      &amp; 1 &amp; 2 &amp; 3 &amp; 4 \\\\\r\n    \\hline\r\n    i &amp;   &amp; 1 &amp;   &amp;   \\\\\r\n    j &amp;   &amp;   &amp; 1 &amp;   \\\\\r\n    \\Delta  &amp; 0 &amp; -1 &amp; 1 &amp; 0 \\\\\r\n    \\hline\r\n\\end{array}\r\n&amp;\r\n\\begin{array}{ccccc}\r\n    \\hline\r\n      &amp; 1 &amp; 2 &amp; 3 &amp; 4 \\\\\r\n    \\hline\r\n    i &amp;   &amp; 1 &amp;   &amp;   \\\\\r\n    j &amp;   &amp;   &amp;   &amp; 1 \\\\\r\n    \\Delta  &amp; 0 &amp; -1 &amp; 0 &amp; 1 \\\\\r\n    \\hline\r\n\\end{array}\r\n&amp;\r\n\\begin{array}{ccccc}\r\n    \\hline\r\n      &amp; 1 &amp; 2 &amp; 3 &amp; 4 \\\\\r\n    \\hline\r\n    i &amp;   &amp;   &amp; 1 &amp;   \\\\\r\n    j &amp;   &amp;   &amp; 1 &amp;   \\\\\r\n    \\Delta  &amp; 0 &amp; 0 &amp; 0 &amp; 0 \\\\\r\n    \\hline\r\n\\end{array}\r\n&amp;\r\n\\begin{array}{ccccc}\r\n    \\hline\r\n      &amp; 1 &amp; 2 &amp; 3 &amp; 4 \\\\\r\n    \\hline\r\n    i &amp;   &amp;   &amp; 1 &amp;   \\\\\r\n    j &amp;   &amp;   &amp;   &amp; 1 \\\\\r\n    \\Delta  &amp; 0 &amp; 0 &amp; -1 &amp; 1 \\\\\r\n    \\hline\r\n\\end{array}\r\n&amp;\r\n\\begin{array}{ccccc}\r\n    \\hline\r\n      &amp; 1 &amp; 2 &amp; 3 &amp; 4 \\\\\r\n    \\hline\r\n    i &amp;   &amp;   &amp;   &amp; 1  \\\\\r\n    j &amp;   &amp;   &amp;   &amp; 1 \\\\\r\n    \\Delta  &amp; 0 &amp; 0 &amp; 0 &amp; 0 \\\\\r\n    \\hline\r\n\\end{array}\r\n\\end{array}\\]</span>\r\n<p>其中最后一行为任务 <span class=\"math inline\">\\(j\\)</span> 的分配数与任务 <span class=\"math inline\">\\(i\\)</span> 的分配数之差。对每个工作站引入权重 <span class=\"math inline\">\\(f_k = k\\)</span>，可发现上述所有情况均满足 <span class=\"math inline\">\\(\\sum\\limits_{i=k}^4 f_k\\Delta_k \\geqslant 0\\)</span>，通过进一步试验可归纳任何一种「任务 <span class=\"math inline\">\\(j\\)</span> 优先于任务 <span class=\"math inline\">\\(i\\)</span>」的分配方案均不满足上述等式。 于是对所有 <span class=\"math inline\">\\(i\\)</span> 优先于 <span class=\"math inline\">\\(j\\)</span>：<span class=\"math inline\">\\(\\sum\\limits_{k=1}^4 k(x_{jk}-x_{ik}) \\geqslant 0\\)</span>。</p>\r\n<p>至此，该模型是一个非线性规划，但可进一步转为线性规划。增加约束条件：<span class=\"math inline\">\\(\\sum\\limits_{i=1}^{11}t_ix_{ik} \\leqslant Z\\)</span>，目标函数变为 <span class=\"math inline\">\\(\\min \\ Z\\)</span>。两种模型的迭代次数分别为 147 (MILP)、590 (PINLP)。</p>\r\n<div><div class=\"fold_hider\"><div class=\"close hider_title\">计划排序模型 Lingo 程序</div></div><div class=\"fold\">\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">model:</span><br><span class=\"line\">    sets:</span><br><span class=\"line\">        task/A..K/:t;</span><br><span class=\"line\">        prio(task, task)/A,B B,C C,F C,G D,E E,H E,I F,J G,J H,J I,J J,K/;</span><br><span class=\"line\">        station/<span class=\"number\">1.</span><span class=\"number\">.4</span>/;</span><br><span class=\"line\">        txs(task, station):x;</span><br><span class=\"line\">    endsets</span><br><span class=\"line\"></span><br><span class=\"line\">    data:</span><br><span class=\"line\">        t = <span class=\"number\">45</span> <span class=\"number\">11</span> <span class=\"number\">9</span> <span class=\"number\">50</span> <span class=\"number\">15</span> <span class=\"number\">12</span> <span class=\"number\">12</span> <span class=\"number\">12</span> <span class=\"number\">12</span> <span class=\"number\">8</span> <span class=\"number\">9</span>;</span><br><span class=\"line\">    enddata</span><br><span class=\"line\"></span><br><span class=\"line\">    ! 注释行为非线性规划方案;</span><br><span class=\"line\">    ! min=@max(station(k): @sum(task(<span class=\"built_in\">i</span>): t(<span class=\"built_in\">i</span>)*x(<span class=\"built_in\">i</span>, k))); ;</span><br><span class=\"line\">    min=Z;</span><br><span class=\"line\">    @<span class=\"keyword\">for</span>(station(k): @sum(task(<span class=\"built_in\">i</span>): t(<span class=\"built_in\">i</span>)*x(<span class=\"built_in\">i</span>, k))&lt;=Z);</span><br><span class=\"line\">    @<span class=\"keyword\">for</span>(task(<span class=\"built_in\">i</span>): @sum(station(<span class=\"built_in\">j</span>): x(<span class=\"built_in\">i</span>, <span class=\"built_in\">j</span>)) = <span class=\"number\">1</span>);</span><br><span class=\"line\">    @<span class=\"keyword\">for</span>(prio(<span class=\"built_in\">i</span>, <span class=\"built_in\">j</span>): @sum(station(k): k*(x(<span class=\"built_in\">j</span>, k)-x(<span class=\"built_in\">i</span>, k)))&gt;=<span class=\"number\">0</span>);</span><br><span class=\"line\">    @<span class=\"keyword\">for</span>(txs: @bin(x));</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n</div></div>\r\n<hr>\r\n<h3 id=\"配对模型\">配对模型</h3>\r\n<p>将 8 个职员安排到 4 个办公室，每室两人。同事两两之间的相容程度如下（数字越小代表相容越好）</p>\r\n<p><span class=\"math display\">\\[\r\n\\begin{array}{c|cccccccc}\r\n    \\hline\r\n        &amp; S_1 &amp; S_2 &amp; S_3 &amp; S_4 &amp; S_5 &amp; S_6 &amp; S_7 &amp; S_8 \\\\\r\n    \\hline\r\n    S_1 &amp; -   &amp; 9   &amp; 3   &amp; 4   &amp; 2   &amp; 1   &amp; 5   &amp; 6   \\\\\r\n    S_2 &amp; -   &amp; -   &amp; 1   &amp; 7   &amp; 3   &amp; 5   &amp; 2   &amp; 1   \\\\\r\n    S_3 &amp; -   &amp; -   &amp; -   &amp; 4   &amp; 4   &amp; 2   &amp; 9   &amp; 2   \\\\\r\n    S_4 &amp; -   &amp; -   &amp; -   &amp; -   &amp; 1   &amp; 5   &amp; 5   &amp; 2   \\\\\r\n    S_5 &amp; -   &amp; -   &amp; -   &amp; -   &amp; -   &amp; 8   &amp; 7   &amp; 6   \\\\\r\n    S_6 &amp; -   &amp; -   &amp; -   &amp; -   &amp; -   &amp; -   &amp; 2   &amp; 3   \\\\\r\n    S_7 &amp; -   &amp; -   &amp; -   &amp; -   &amp; -   &amp; -   &amp; -   &amp; 4   \\\\\r\n    S_8 &amp; -   &amp; -   &amp; -   &amp; -   &amp; -   &amp; -   &amp; -   &amp; -   \\\\\r\n    \\hline\r\n\\end{array}\r\n\\]</span></p>\r\n<p>安排配对方案，使组合的总相容程度最好。</p>\r\n<p>引入决策矩阵 <span class=\"math inline\">\\(X\\)</span>，元素 <span class=\"math inline\">\\(X_{ij} \\in \\{0, 1\\}\\)</span>，每人组合一次，说明对于每个职员 <span class=\"math inline\">\\(i\\)</span>，必有 <span class=\"math inline\">\\(\\sum\\limits_{j=i \\ \\text{or}\\ k=i}X_{jk} = 1\\)</span>，所以模型为：</p>\r\n<p><span class=\"math display\">\\[\r\n    \\begin{array}{cl}\r\n        \\min &amp; \\sum\\limits_{i&lt;j} C_{ij} X_{ij} \\\\\r\n        \\text{s.t.} &amp; \\begin{cases}\r\n            \\sum\\limits_{j=i \\ \\text{or}\\ k=i}X_{jk} = 1, &amp; i=1,2,\\ldots,8 \\\\\r\n            X_{ij} = 0 \\ \\text{or} \\ 1, &amp; i&lt;j\r\n        \\end{cases}\r\n    \\end{array}\r\n\\]</span></p>\r\n<div><div class=\"fold_hider\"><div class=\"close hider_title\">配对模型 Lingo 程序</div></div><div class=\"fold\">\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">model:</span><br><span class=\"line\">    sets:</span><br><span class=\"line\">        people/<span class=\"number\">1.</span><span class=\"number\">.8</span>/;</span><br><span class=\"line\">        links(people, people) | &amp;2 #gt# &amp;1: tol, x;</span><br><span class=\"line\">    endsets</span><br><span class=\"line\"></span><br><span class=\"line\">    data:</span><br><span class=\"line\">        tol = <span class=\"number\">9</span> <span class=\"number\">3</span> <span class=\"number\">4</span> <span class=\"number\">2</span> <span class=\"number\">1</span> <span class=\"number\">5</span> <span class=\"number\">6</span></span><br><span class=\"line\">                <span class=\"number\">1</span> <span class=\"number\">7</span> <span class=\"number\">3</span> <span class=\"number\">5</span> <span class=\"number\">2</span> <span class=\"number\">1</span></span><br><span class=\"line\">                  <span class=\"number\">4</span> <span class=\"number\">4</span> <span class=\"number\">2</span> <span class=\"number\">9</span> <span class=\"number\">2</span></span><br><span class=\"line\">                    <span class=\"number\">1</span> <span class=\"number\">5</span> <span class=\"number\">5</span> <span class=\"number\">2</span></span><br><span class=\"line\">                      <span class=\"number\">8</span> <span class=\"number\">7</span> <span class=\"number\">6</span></span><br><span class=\"line\">                        <span class=\"number\">2</span> <span class=\"number\">3</span></span><br><span class=\"line\">                          <span class=\"number\">4</span>;</span><br><span class=\"line\">    enddata</span><br><span class=\"line\"></span><br><span class=\"line\">    @for(people(i): @sum(links(j, k) | j #eq# i #or# k #eq# i: x(j, k)) = 1);</span><br><span class=\"line\">    @<span class=\"keyword\">for</span>(links: @bin(x));</span><br><span class=\"line\">    min = @sum(links: x*tol);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n</div></div>\r\n<hr>\r\n<h3 id=\"下料问题\">下料问题</h3>\r\n<p>钢管原材料每根长 19m，现需要 A、B、C、D 四种钢管部件，长度分别为 4m、5m、6m、8m，数量分别为 50、10、20、15 根，不同的下料方式不超过 3 种，安排下料方式使得所需钢管原材料最少。</p>\r\n<p>一般化问题，假设用到 <span class=\"math inline\">\\(k\\)</span> 种下料方式，用 <span class=\"math inline\">\\(x_i\\ (i=1,2,\\ldots,k)\\)</span> 表示第 <span class=\"math inline\">\\(i\\)</span> 种下料方式所切割的原料钢管数量，非负整数 <span class=\"math inline\">\\(n_{ij}\\)</span> 表示第 <span class=\"math inline\">\\(i\\)</span> 种下料方法得到部件 <span class=\"math inline\">\\(j\\ (j=1,2,\\ldots,m)\\)</span> 的数量，<span class=\"math inline\">\\(b_j\\)</span> 表示第 <span class=\"math inline\">\\(j\\)</span> 种部件的需求量。<span class=\"math inline\">\\(L\\)</span> 表示钢管材料的长度，<span class=\"math inline\">\\(l_j\\)</span> 表示部件长度，则下料方式应满足：1) 切割出的部件总长度不超过 <span class=\"math inline\">\\(L\\)</span>；2) 余料严格小于 <span class=\"math inline\">\\(\\min \\{l_j\\}\\)</span>。故建立优化模型：</p>\r\n<p><span class=\"math display\">\\[\r\n\\begin{array}{cl}\r\n    {\\min} &amp; z = \\sum\\limits_{i=1}^k x_i \\\\\r\n    \\text{s.t.} &amp; \\begin{cases}\r\n        \\sum\\limits_{i=1}^k n_{ij}x_i \\geqslant b_j, &amp; j=1,2,\\ldots,m \\\\\r\n        L - \\min\\{n_{ij}\\} &lt; \\sum\\limits_{j=1}^m n_{ij}l_j \\leqslant L, &amp; i=1,2,\\ldots,k \\\\\r\n        x_{i}, n_{ij} \\in \\mathbb{N}, &amp; i=1,2,\\ldots,k; \\ j=1,2,\\ldots,m\r\n    \\end{cases}\r\n\\end{array}\r\n\\]</span></p>\r\n<p>在此问题中 <span class=\"math inline\">\\(k=3, m=4\\)</span>。</p>\r\n<div><div class=\"fold_hider\"><div class=\"close hider_title\">下料问题 Lingo 程序</div></div><div class=\"fold\">\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">model:</span><br><span class=\"line\">    sets:</span><br><span class=\"line\">        ! craft(<span class=\"number\">1</span>~k): 工艺, 即切割方式 ;</span><br><span class=\"line\">        ! material(<span class=\"number\">1</span>~m): 不同部件数量 ;</span><br><span class=\"line\">        ! links: 每种切割方式下不同部件数量 ;</span><br><span class=\"line\">        craft/<span class=\"number\">1.</span><span class=\"number\">.3</span>/: x;</span><br><span class=\"line\">        material/<span class=\"number\">1.</span><span class=\"number\">.4</span>/: m, b;</span><br><span class=\"line\">        links(craft, material): n;</span><br><span class=\"line\">    endsets</span><br><span class=\"line\"></span><br><span class=\"line\">    data:</span><br><span class=\"line\">        m = <span class=\"number\">4</span> <span class=\"number\">5</span> <span class=\"number\">6</span> <span class=\"number\">8</span>;</span><br><span class=\"line\">        b = <span class=\"number\">50</span> <span class=\"number\">10</span> <span class=\"number\">20</span> <span class=\"number\">15</span>;</span><br><span class=\"line\">        L = <span class=\"number\">19</span>;</span><br><span class=\"line\">    enddata</span><br><span class=\"line\"></span><br><span class=\"line\">    min = @sum(craft: x);</span><br><span class=\"line\">    @<span class=\"keyword\">for</span>(material(<span class=\"built_in\">j</span>): @sum(craft(<span class=\"built_in\">i</span>): n(<span class=\"built_in\">i</span>, <span class=\"built_in\">j</span>)*x(<span class=\"built_in\">i</span>))&gt;=b(<span class=\"built_in\">j</span>));</span><br><span class=\"line\">    @<span class=\"keyword\">for</span>(craft(<span class=\"built_in\">i</span>): @sum(material(<span class=\"built_in\">j</span>): n(<span class=\"built_in\">i</span>, <span class=\"built_in\">j</span>)*m(<span class=\"built_in\">j</span>))&lt;=L);</span><br><span class=\"line\">    @<span class=\"keyword\">for</span>(craft(<span class=\"built_in\">i</span>): @sum(material(<span class=\"built_in\">j</span>): n(<span class=\"built_in\">i</span>, <span class=\"built_in\">j</span>)*m(<span class=\"built_in\">j</span>))&gt;=<span class=\"number\">16</span>);</span><br><span class=\"line\">    @<span class=\"keyword\">for</span>(craft: @gin(x));</span><br><span class=\"line\">    @<span class=\"keyword\">for</span>(links: @gin(n));</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n</div></div>\r\n<p>求解结果如下：</p>\r\n<table>\r\n<tr>\r\n<td style=\"text-align: center;\" rowspan=\"2\">\r\n<strong>下料方式</strong>\r\n</td>\r\n<td style=\"text-align: center;\" colspan=\"4\">\r\n<strong>部件长度<br></strong>\r\n</td>\r\n<td style=\"text-align: center;\" rowspan=\"2\">\r\n<strong>余料长度</strong>\r\n</td>\r\n<td style=\"text-align: center;\" rowspan=\"2\">\r\n<strong>切割根数</strong>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"text-align: center;\">\r\n4m\r\n</td>\r\n<td style=\"text-align: center;\">\r\n5m\r\n</td>\r\n<td style=\"text-align: center;\">\r\n6m\r\n</td>\r\n<td style=\"text-align: center;\">\r\n8m\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"text-align: center;\">\r\n<strong>方式一</strong>\r\n</td>\r\n<td style=\"text-align: center;\">\r\n0\r\n</td>\r\n<td style=\"text-align: center;\">\r\n0\r\n</td>\r\n<td style=\"text-align: center;\">\r\n0\r\n</td>\r\n<td style=\"text-align: center;\">\r\n2\r\n</td>\r\n<td style=\"text-align: center;\">\r\n3\r\n</td>\r\n<td style=\"text-align: center;\">\r\n8\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"text-align: center;\">\r\n<strong>方式二</strong>\r\n</td>\r\n<td style=\"text-align: center;\">\r\n2\r\n</td>\r\n<td style=\"text-align: center;\">\r\n1\r\n</td>\r\n<td style=\"text-align: center;\">\r\n1\r\n</td>\r\n<td style=\"text-align: center;\">\r\n0\r\n</td>\r\n<td style=\"text-align: center;\">\r\n0\r\n</td>\r\n<td style=\"text-align: center;\">\r\n10\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"text-align: center;\">\r\n<strong>方式三</strong>\r\n</td>\r\n<td style=\"text-align: center;\">\r\n3\r\n</td>\r\n<td style=\"text-align: center;\">\r\n0\r\n</td>\r\n<td style=\"text-align: center;\">\r\n1\r\n</td>\r\n<td style=\"text-align: center;\">\r\n0\r\n</td>\r\n<td style=\"text-align: center;\">\r\n1\r\n</td>\r\n<td style=\"text-align: center;\">\r\n10\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"text-align: center;\">\r\n<strong>合计</strong>\r\n</td>\r\n<td style=\"text-align: center;\">\r\n50\r\n</td>\r\n<td style=\"text-align: center;\">\r\n10\r\n</td>\r\n<td style=\"text-align: center;\">\r\n20\r\n</td>\r\n<td style=\"text-align: center;\">\r\n16\r\n</td>\r\n<td style=\"text-align: center;\">\r\n34m\r\n</td>\r\n<td style=\"text-align: center;\">\r\n28\r\n</td>\r\n</tr>\r\n</table>\r\n<p>注意到上述切割方案余料总长 34m，且多出一根 8m 长的部件。</p>\r\n","site":{"data":{}},"excerpt":"<h2 id=\"环境搭建\">环境搭建</h2>\r\n<ul>\r\n<li>Lingo 17.0 (Windows 10 x64)</li>\r\n<li>Notepad++ 7.4.2 x86\r\n<ul>\r\n<li>NppExec</li>\r\n<li>Visimulator</li>\r\n<li><a href=\"http://bbs.pinggu.org/thread-3875796-1-1.html\" target=\"_blank\" rel=\"noopener\">语法高亮及代码补全</a></li>\r\n</ul></li>\r\n</ul>","more":"<h2 id=\"lingo-界面速览\">Lingo 界面速览</h2>\r\n<h3 id=\"文件类型\">文件类型</h3>\r\n<table>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: center;\">扩展名</th>\r\n<th style=\"text-align: left;\">文件类型</th>\r\n<th style=\"text-align: center;\">扩展名</th>\r\n<th style=\"text-align: left;\">文件类型</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">.lg4</td>\r\n<td style=\"text-align: left;\">Windows 下模型文件，支持字体、格式、OLE</td>\r\n<td style=\"text-align: center;\">.lng</td>\r\n<td style=\"text-align: left;\">纯文本格式模型文件</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\">.ldt</td>\r\n<td style=\"text-align: left;\">数据文件</td>\r\n<td style=\"text-align: center;\">.ltf</td>\r\n<td style=\"text-align: left;\">命令脚本文件</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">.ltx</td>\r\n<td style=\"text-align: left;\">Lindo 语法的模型文件</td>\r\n<td style=\"text-align: center;\">.lgr</td>\r\n<td style=\"text-align: left;\">报告文件</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h3 id=\"lingo-菜单\">Lingo 菜单</h3>\r\n<table>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: center;\">中文</th>\r\n<th style=\"text-align: center;\">英文</th>\r\n<th style=\"text-align: center;\">中文</th>\r\n<th style=\"text-align: center;\">英文</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">求解结果</td>\r\n<td style=\"text-align: center;\">Solution</td>\r\n<td style=\"text-align: center;\">灵敏性分析</td>\r\n<td style=\"text-align: center;\">Range</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\">生成模型展开形式</td>\r\n<td style=\"text-align: center;\">Generate</td>\r\n<td style=\"text-align: center;\">生成图形</td>\r\n<td style=\"text-align: center;\">Picture</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">调试</td>\r\n<td style=\"text-align: center;\">Debug</td>\r\n<td style=\"text-align: center;\">模型统计资料</td>\r\n<td style=\"text-align: center;\">Model Statistics</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\">查看</td>\r\n<td style=\"text-align: center;\">Look</td>\r\n<td style=\"text-align: center;\"></td>\r\n<td style=\"text-align: center;\"></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h3 id=\"求解器状态窗口信息\">求解器状态窗口信息</h3>\r\n<ul>\r\n<li>变量数量 (Variables)</li>\r\n<li>约束变量 (Constraints)</li>\r\n<li>非零系数数量 (Nonzeroes)</li>\r\n<li>内存使用量 (Generator Memory Used)</li>\r\n<li>已运行时间 (Elapsed Runtime)</li>\r\n<li>求解器状态 (Solver Status)\r\n<ul>\r\n<li>模型类型 (Model Class)：线性规划 (LP)、二次规划 (QP)、整数线性规划 (ILP)、整数二次规划 (IQP)、纯整数线性规划 (PILP)、纯整数二次规划 (PIQP)、非线性规划 (NLP)、混合整数规划 (MIP)、整数非线性工 (INLP)、纯整数非线性规划 (PINLP)、混合整数非线性规划 (MINLP)</li>\r\n<li>当前解的状态 (State)：全局最优解 (Global Optimum)、局部最优解 (Local Optimum)、可行解 (Feasible)、不可行解 (Infeasible)、无界 (Unbounded)、中断 (Interrupted)、未确定 (Undetermined)</li>\r\n<li>当前解的目标函数值 (Objective)</li>\r\n<li>当前约束不满足的总量 (Infeasibility)</li>\r\n<li>迭代次数 (Iterations)</li>\r\n<li>扩展求解器状态 (Extended Solver Status)：特殊算法类型 (Solver Type)、可行解的最佳目标函数值 (Best Obj)、目标函数值的界限 (Obj Bound)、特殊求解程序运行步数 (Steps)、有效步数 (Active)</li>\r\n</ul></li>\r\n</ul>\r\n<h2 id=\"lingo-语言速览\">Lingo 语言速览</h2>\r\n<h3 id=\"逻辑运算符\">逻辑运算符</h3>\r\n<table>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: center;\">运算符</th>\r\n<th style=\"text-align: left;\">作用</th>\r\n<th style=\"text-align: center;\">运算符</th>\r\n<th style=\"text-align: left;\">作用</th>\r\n<th style=\"text-align: center;\">运算符</th>\r\n<th style=\"text-align: left;\">作用</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">#EQ#</td>\r\n<td style=\"text-align: left;\">两操作数相等时为真</td>\r\n<td style=\"text-align: center;\">#NE#</td>\r\n<td style=\"text-align: left;\">两操作数不等时为真</td>\r\n<td style=\"text-align: center;\">#GT#</td>\r\n<td style=\"text-align: left;\">左边（严格）大于右边时为真</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\">#GE#</td>\r\n<td style=\"text-align: left;\">左边大于或等于右边时为真</td>\r\n<td style=\"text-align: center;\">#LT#</td>\r\n<td style=\"text-align: left;\">左边（严格）小于右边时为真</td>\r\n<td style=\"text-align: center;\">#LE#</td>\r\n<td style=\"text-align: left;\">左边小于或等于右边时为真</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">#NOT#</td>\r\n<td style=\"text-align: left;\">取反</td>\r\n<td style=\"text-align: center;\">#AND#</td>\r\n<td style=\"text-align: left;\">逻辑与</td>\r\n<td style=\"text-align: center;\">#OR#</td>\r\n<td style=\"text-align: left;\">逻辑或</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p>注：#AND# 和 #OR# 优先级较低，但高于 &lt;=、=、&gt;=。</p>\r\n<h3 id=\"数学函数\">数学函数</h3>\r\n<table>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: left;\">函数名</th>\r\n<th style=\"text-align: left;\">解释</th>\r\n<th style=\"text-align: left;\">函数名</th>\r\n<th style=\"text-align: left;\">解释</th>\r\n<th style=\"text-align: left;\">函数名</th>\r\n<th style=\"text-align: left;\">解释</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"abs\">@abs</span>(x)</td>\r\n<td style=\"text-align: left;\">绝对值</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"acos\">@acos</span>(x)</td>\r\n<td style=\"text-align: left;\">反余弦</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"acosh\">@acosh</span>(x)</td>\r\n<td style=\"text-align: left;\">反双曲余弦</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"asin\">@asin</span>(x)</td>\r\n<td style=\"text-align: left;\">反正弦</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"asinh\">@asinh</span>(x)</td>\r\n<td style=\"text-align: left;\">反双曲正弦</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"atan\">@atan</span>(x)</td>\r\n<td style=\"text-align: left;\">反正切</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"atan2\">@atan2</span>(x, y)</td>\r\n<td style=\"text-align: left;\"><span class=\"math inline\">\\(\\arctan (y/x)\\)</span></td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"atanh\">@atanh</span>(x)</td>\r\n<td style=\"text-align: left;\">反双曲正切</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"cos\">@cos</span>(x)</td>\r\n<td style=\"text-align: left;\">余弦</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"cosh\">@cosh</span>(x)</td>\r\n<td style=\"text-align: left;\">双曲余弦</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"exp\">@exp</span>(x)</td>\r\n<td style=\"text-align: left;\"><span class=\"math inline\">\\(e^x\\)</span></td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"floor\">@floor</span>(x)</td>\r\n<td style=\"text-align: left;\">向 0 取整</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"int\">@int</span>(x)</td>\r\n<td style=\"text-align: left;\">向负无穷取整</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"integral\">@integral</span>(proc, x, xl, xu, y)</td>\r\n<td style=\"text-align: left;\">辛普森数值积分</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"lgm\">@lgm</span>(x)</td>\r\n<td style=\"text-align: left;\">Gamma 函数自然对数</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"log\">@log</span>(x)</td>\r\n<td style=\"text-align: left;\">自然对数</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"log10\">@log10</span>(x)</td>\r\n<td style=\"text-align: left;\">10 为底对数</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"logb\">@logb</span>(x, b)</td>\r\n<td style=\"text-align: left;\">b 为底对数</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"mod\">@mod</span>(x, y)</td>\r\n<td style=\"text-align: left;\">取模</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"pi\">@pi</span>()</td>\r\n<td style=\"text-align: left;\">圆周率</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"pow\">@pow</span>(x, y)</td>\r\n<td style=\"text-align: left;\"><span class=\"math inline\">\\(x^y\\)</span></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"round\">@round</span>(x, n)</td>\r\n<td style=\"text-align: left;\">最近四舍五入</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"rounddown\">@rounddown</span>(x, n)</td>\r\n<td style=\"text-align: left;\">向零四舍五入</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"roundup\">@roundup</span>(x, n)</td>\r\n<td style=\"text-align: left;\">远离零四舍五入</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"sign\">@sign</span>(x)</td>\r\n<td style=\"text-align: left;\">符号函数</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"sin\">@sin</span>(x)</td>\r\n<td style=\"text-align: left;\">正弦</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"sinh\">@sinh</span>(x)</td>\r\n<td style=\"text-align: left;\">双曲正弦</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"smax\">@smax</span>(x1, x2, …, xn)</td>\r\n<td style=\"text-align: left;\">最大值</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"smin\">@smin</span>(x1, x2, …, xn)</td>\r\n<td style=\"text-align: left;\">最小值</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"sqr\">@sqr</span>(x)</td>\r\n<td style=\"text-align: left;\">平方</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"sqrt\">@sqrt</span>(x)</td>\r\n<td style=\"text-align: left;\">开方</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"tan\">@tan</span>(x)</td>\r\n<td style=\"text-align: left;\">正切</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"tanh\">@tanh</span>(x)</td>\r\n<td style=\"text-align: left;\">双曲正切</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h3 id=\"概率函数\">概率函数</h3>\r\n<table style=\"width:100%;\">\r\n<colgroup>\r\n<col style=\"width: 16%\">\r\n<col style=\"width: 16%\">\r\n<col style=\"width: 16%\">\r\n<col style=\"width: 16%\">\r\n<col style=\"width: 16%\">\r\n<col style=\"width: 16%\">\r\n</colgroup>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: left;\">函数名</th>\r\n<th style=\"text-align: left;\">解释</th>\r\n<th style=\"text-align: left;\">函数名</th>\r\n<th style=\"text-align: left;\">解释</th>\r\n<th style=\"text-align: left;\">函数名</th>\r\n<th style=\"text-align: left;\">解释</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"norminv\">@norminv</span>(p, mu, sigma)</td>\r\n<td style=\"text-align: left;\">正态分布下分位数</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"normsinv\">@normsinv</span>(p)</td>\r\n<td style=\"text-align: left;\">标准正态分布分位数</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"pbn\">@pbn</span>(p, n, x)</td>\r\n<td style=\"text-align: left;\">二项分布 CDF 值</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"pcx\">@pcx</span>(n, x)</td>\r\n<td style=\"text-align: left;\">卡方分布 CDF 值</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"peb\">@peb</span>(a, x)</td>\r\n<td style=\"text-align: left;\">允许无穷排队的 Erlang 繁忙概率</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"pel\">@pel</span>(a, x)</td>\r\n<td style=\"text-align: left;\">不允许无穷排队的 Erlang 繁忙概率</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"pfd\">@pfd</span>(n, d, x)</td>\r\n<td style=\"text-align: left;\">F 分布 CDF 值</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"pfs\">@pfs</span>(a, x, c)</td>\r\n<td style=\"text-align: left;\">Poisson 服务系统期望值</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"phg\">@phg</span>(pop, g, n, x)</td>\r\n<td style=\"text-align: left;\">超几何分布概率值</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"ppl\">@ppl</span>(a, x)</td>\r\n<td style=\"text-align: left;\">泊松分布线性损失函数</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"pps\">@pps</span>(a, x)</td>\r\n<td style=\"text-align: left;\">泊松分布 CDF 值</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"psl\">@psl</span>(x)</td>\r\n<td style=\"text-align: left;\">单位正态线性损失函数</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"psn\">@psn</span>(x)</td>\r\n<td style=\"text-align: left;\">标准正态分布 CDF 值</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"ptd\">@ptd</span>(n, x)</td>\r\n<td style=\"text-align: left;\">t 分布 CDF 值</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"qrand\">@qrand</span>(seed)</td>\r\n<td style=\"text-align: left;\">(0, 1) 间随机数</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h3 id=\"变量界定函数\">变量界定函数</h3>\r\n<table style=\"width:100%;\">\r\n<colgroup>\r\n<col style=\"width: 16%\">\r\n<col style=\"width: 16%\">\r\n<col style=\"width: 16%\">\r\n<col style=\"width: 16%\">\r\n<col style=\"width: 16%\">\r\n<col style=\"width: 16%\">\r\n</colgroup>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: left;\">函数名</th>\r\n<th style=\"text-align: left;\">解释</th>\r\n<th style=\"text-align: left;\">函数名</th>\r\n<th style=\"text-align: left;\">解释</th>\r\n<th style=\"text-align: left;\">函数名</th>\r\n<th style=\"text-align: left;\">解释</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"bin\">@bin</span>(variable)</td>\r\n<td style=\"text-align: left;\">限制变量取 0 或 1</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"bnd\">@bnd</span>(lower, variable, upper)</td>\r\n<td style=\"text-align: left;\">限制 <span class=\"math inline\">\\(L\\leqslant x \\leqslant U\\)</span></td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"free\">@free</span>(variable)</td>\r\n<td style=\"text-align: left;\">取消变量限制，可取任意实数</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"gin\">@gin</span>(variable)</td>\r\n<td style=\"text-align: left;\">限制为整数</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"priority\">@priority</span>(variable, priority)</td>\r\n<td style=\"text-align: left;\">设置优先级</td>\r\n<td style=\"text-align: left;\"><span class=\"citation\" data-cites=\"semic\">@semic</span>(lower, variable, upper)</td>\r\n<td style=\"text-align: left;\">或者为 0，或者在区间 (lower, upper)</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h3 id=\"集合操作函数\">集合操作函数</h3>\r\n<ul>\r\n<li><span class=\"citation\" data-cites=\"for\">@for</span>(s: e)</li>\r\n<li><span class=\"citation\" data-cites=\"max\">@max</span>(s: e)</li>\r\n<li><span class=\"citation\" data-cites=\"prod\">@prod</span>(s: e)</li>\r\n<li><span class=\"citation\" data-cites=\"size\">@size</span>(s)</li>\r\n<li><span class=\"citation\" data-cites=\"insert\">@insert</span>(s, idx)</li>\r\n<li><span class=\"citation\" data-cites=\"sum\">@sum</span>(s: e)</li>\r\n<li><span class=\"citation\" data-cites=\"min\">@min</span>(s: e)</li>\r\n<li><span class=\"citation\" data-cites=\"in\">@in</span>(s, e)</li>\r\n<li><span class=\"citation\" data-cites=\"index\">@index</span>(s: e)</li>\r\n<li><span class=\"citation\" data-cites=\"wrap\">@wrap</span>(idx, limit)</li>\r\n</ul>\r\n<hr>\r\n<h2 id=\"一些经典问题\">一些经典问题</h2>\r\n<h3 id=\"运输问题\">运输问题</h3>\r\n<p>假设 Wireless Widget有 6 个供货仓库，货物分别发往 8 个供销商。每个仓库有一定的库存量，现要制定出最小化运输成本，使得运输方案达到每个供销商需求的运输方案。</p>\r\n<!-- more -->\r\n<p>已知信息如下：</p>\r\n<table>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: center;\">仓库</th>\r\n<th style=\"text-align: center;\">库存</th>\r\n<th style=\"text-align: center;\">供销商</th>\r\n<th style=\"text-align: center;\">需求</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">1</td>\r\n<td style=\"text-align: center;\">60</td>\r\n<td style=\"text-align: center;\">1</td>\r\n<td style=\"text-align: center;\">35</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\">2</td>\r\n<td style=\"text-align: center;\">55</td>\r\n<td style=\"text-align: center;\">2</td>\r\n<td style=\"text-align: center;\">37</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">3</td>\r\n<td style=\"text-align: center;\">51</td>\r\n<td style=\"text-align: center;\">3</td>\r\n<td style=\"text-align: center;\">22</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\">4</td>\r\n<td style=\"text-align: center;\">43</td>\r\n<td style=\"text-align: center;\">4</td>\r\n<td style=\"text-align: center;\">32</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">5</td>\r\n<td style=\"text-align: center;\">41</td>\r\n<td style=\"text-align: center;\">5</td>\r\n<td style=\"text-align: center;\">41</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\">6</td>\r\n<td style=\"text-align: center;\">52</td>\r\n<td style=\"text-align: center;\">6</td>\r\n<td style=\"text-align: center;\">32</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"></td>\r\n<td style=\"text-align: center;\"></td>\r\n<td style=\"text-align: center;\">7</td>\r\n<td style=\"text-align: center;\">43</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"></td>\r\n<td style=\"text-align: center;\"></td>\r\n<td style=\"text-align: center;\">8</td>\r\n<td style=\"text-align: center;\">38</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p>每个仓库（WH1 ~ WH6）到每个供销商的单位运费表如下：</p>\r\n<table>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: center;\"></th>\r\n<th style=\"text-align: center;\">V1</th>\r\n<th style=\"text-align: center;\">V2</th>\r\n<th style=\"text-align: center;\">V3</th>\r\n<th style=\"text-align: center;\">V4</th>\r\n<th style=\"text-align: center;\">V5</th>\r\n<th style=\"text-align: center;\">V6</th>\r\n<th style=\"text-align: center;\">V7</th>\r\n<th style=\"text-align: center;\">V8</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><strong>WH1</strong></td>\r\n<td style=\"text-align: center;\">6</td>\r\n<td style=\"text-align: center;\">2</td>\r\n<td style=\"text-align: center;\">6</td>\r\n<td style=\"text-align: center;\">7</td>\r\n<td style=\"text-align: center;\">4</td>\r\n<td style=\"text-align: center;\">2</td>\r\n<td style=\"text-align: center;\">5</td>\r\n<td style=\"text-align: center;\">9</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><strong>WH2</strong></td>\r\n<td style=\"text-align: center;\">4</td>\r\n<td style=\"text-align: center;\">9</td>\r\n<td style=\"text-align: center;\">5</td>\r\n<td style=\"text-align: center;\">3</td>\r\n<td style=\"text-align: center;\">8</td>\r\n<td style=\"text-align: center;\">5</td>\r\n<td style=\"text-align: center;\">8</td>\r\n<td style=\"text-align: center;\">2</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><strong>WH3</strong></td>\r\n<td style=\"text-align: center;\">5</td>\r\n<td style=\"text-align: center;\">2</td>\r\n<td style=\"text-align: center;\">1</td>\r\n<td style=\"text-align: center;\">9</td>\r\n<td style=\"text-align: center;\">7</td>\r\n<td style=\"text-align: center;\">4</td>\r\n<td style=\"text-align: center;\">3</td>\r\n<td style=\"text-align: center;\">3</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><strong>WH4</strong></td>\r\n<td style=\"text-align: center;\">7</td>\r\n<td style=\"text-align: center;\">6</td>\r\n<td style=\"text-align: center;\">7</td>\r\n<td style=\"text-align: center;\">3</td>\r\n<td style=\"text-align: center;\">9</td>\r\n<td style=\"text-align: center;\">2</td>\r\n<td style=\"text-align: center;\">7</td>\r\n<td style=\"text-align: center;\">1</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><strong>WH5</strong></td>\r\n<td style=\"text-align: center;\">2</td>\r\n<td style=\"text-align: center;\">3</td>\r\n<td style=\"text-align: center;\">9</td>\r\n<td style=\"text-align: center;\">5</td>\r\n<td style=\"text-align: center;\">7</td>\r\n<td style=\"text-align: center;\">2</td>\r\n<td style=\"text-align: center;\">6</td>\r\n<td style=\"text-align: center;\">5</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><strong>WH6</strong></td>\r\n<td style=\"text-align: center;\">5</td>\r\n<td style=\"text-align: center;\">5</td>\r\n<td style=\"text-align: center;\">2</td>\r\n<td style=\"text-align: center;\">2</td>\r\n<td style=\"text-align: center;\">8</td>\r\n<td style=\"text-align: center;\">1</td>\r\n<td style=\"text-align: center;\">4</td>\r\n<td style=\"text-align: center;\">3</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p>对问题建模，记 <span class=\"math inline\">\\(\\text{volume}_{ij}\\)</span> 为第 <span class=\"math inline\">\\(i\\)</span> 个仓库到第 <span class=\"math inline\">\\(j\\)</span> 个供销商的货运量，<span class=\"math inline\">\\(\\text{cost}_{ij}\\)</span> 表示第 <span class=\"math inline\">\\(i\\)</span> 个仓库到第 <span class=\"math inline\">\\(j\\)</span> 个供销商的单位货物运价，<span class=\"math inline\">\\(\\text{capacity}_i\\)</span> 表示第 <span class=\"math inline\">\\(i\\)</span> 个仓库的最大供货量，<span class=\"math inline\">\\(\\text{demand}_j\\)</span> 表示第 <span class=\"math inline\">\\(j\\)</span> 个供销商的订货量。</p>\r\n<p>目标函数是令总运输费用最少。约束条件：</p>\r\n<ul>\r\n<li>各仓库的出货量不超过其库存</li>\r\n<li>各供销商收到的货物总量等于订货数</li>\r\n<li>决策变量 <span class=\"math inline\">\\(\\text{cost}_{ij}\\)</span> 非负。</li>\r\n</ul>\r\n<p>数学表达为：</p>\r\n<p><span class=\"math display\">\\[\r\n\\begin{array}{cl}\r\n    \\min &amp; z = \\sum\\limits_{i=1}^6 \\sum\\limits_{j=1}^8 \\text{cost}_{ij}\\ \\text{volume}_{ij} \\\\\r\n    \\text{s.t.} &amp; \\begin{cases}\r\n        \\sum\\limits_{j=1}^8 \\text{volume}_{ij} \\leqslant \\text{capacity}_i, &amp; i = 1,2,\\ldots,6 \\\\\r\n        \\sum\\limits_{i=1}^6 \\text{volume}_{ij} = \\text{demand}_j, &amp; j = 1,2,\\ldots,8 \\\\\r\n        \\text{volume}_{ij} \\geqslant 0, &amp; i=1,2,\\ldots,6, \\ j=1,2,\\ldots,8 \\\\\r\n    \\end{cases}\r\n\\end{array}\r\n\\]</span></p>\r\n<p>相应的 Lingo 程序代码：</p>\r\n<!--�118-->\r\n<p>其中 <code>SET</code> 过程大大简化了程序代码，也提升了程序的可读性，否则对于每个变量都需要进行硬编码。其语法 为 <code>&lt;集合名称&gt;[集合元素][:&lt;集合属性&gt;]</code>。当然 <code>SET</code> 中的前两个关于库存和供销商的描述可以拆分为</p>\r\n<!--�119-->\r\n<p>当然笔者更青睐紧凑的方式。<code>crosstab</code> 表示由 <code>warehouses</code> 和 <code>demand</code> 构成的派生集，即包含了 6 × 8 = 48 个变量。在目标函数及约束条件语句中，由于目标函数的操作数完全来自 <code>crosstab</code>，所以可省略部分语句：<code>min = @sum(crosstab: volume * cost);</code>。</p>\r\n<p>程序经过 17 次迭代后得出的目标函数值为 664.0000，最优运输方案如下表。</p>\r\n<table>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: center;\"></th>\r\n<th style=\"text-align: center;\">V1</th>\r\n<th style=\"text-align: center;\">V2</th>\r\n<th style=\"text-align: center;\">V3</th>\r\n<th style=\"text-align: center;\">V4</th>\r\n<th style=\"text-align: center;\">V5</th>\r\n<th style=\"text-align: center;\">V6</th>\r\n<th style=\"text-align: center;\">V7</th>\r\n<th style=\"text-align: center;\">V8</th>\r\n<th style=\"text-align: center;\">合计</th>\r\n<th style=\"text-align: center;\">库存</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><strong>WH1</strong></td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">19</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">41</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">60</td>\r\n<td style=\"text-align: center;\">60</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><strong>WH2</strong></td>\r\n<td style=\"text-align: center;\">1</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">32</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">33</td>\r\n<td style=\"text-align: center;\">55</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><strong>WH3</strong></td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">11</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">40</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">51</td>\r\n<td style=\"text-align: center;\">51</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><strong>WH4</strong></td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">5</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">38</td>\r\n<td style=\"text-align: center;\">43</td>\r\n<td style=\"text-align: center;\">43</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><strong>WH5</strong></td>\r\n<td style=\"text-align: center;\">34</td>\r\n<td style=\"text-align: center;\">7</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">41</td>\r\n<td style=\"text-align: center;\">41</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><strong>WH6</strong></td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">22</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">27</td>\r\n<td style=\"text-align: center;\">3</td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">52</td>\r\n<td style=\"text-align: center;\">52</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><strong>合计</strong></td>\r\n<td style=\"text-align: center;\">35</td>\r\n<td style=\"text-align: center;\">37</td>\r\n<td style=\"text-align: center;\">22</td>\r\n<td style=\"text-align: center;\">32</td>\r\n<td style=\"text-align: center;\">41</td>\r\n<td style=\"text-align: center;\">32</td>\r\n<td style=\"text-align: center;\">43</td>\r\n<td style=\"text-align: center;\">38</td>\r\n<td style=\"text-align: center;\"></td>\r\n<td style=\"text-align: center;\"></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><strong>需求</strong></td>\r\n<td style=\"text-align: center;\">35</td>\r\n<td style=\"text-align: center;\">37</td>\r\n<td style=\"text-align: center;\">22</td>\r\n<td style=\"text-align: center;\">32</td>\r\n<td style=\"text-align: center;\">41</td>\r\n<td style=\"text-align: center;\">32</td>\r\n<td style=\"text-align: center;\">43</td>\r\n<td style=\"text-align: center;\">38</td>\r\n<td style=\"text-align: center;\"></td>\r\n<td style=\"text-align: center;\"></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<hr>\r\n<h3 id=\"值班问题\">值班问题</h3>\r\n<p>某项工作一周 7 天都需有人上班，周一至周日所需的最少人数分别为 20、16、13、16、19、14 和 12。要求员工一周连续工作 5 天接着休息 2 天。给出人员安排，使每周所需人数最少。</p>\r\n<p>若安排得当，记周一至周日分别安排 <span class=\"math inline\">\\(X(i)\\)</span> 人上班。那么周一上班的人必然周五、周六休息，以此类推。令总上班人数为 <span class=\"math inline\">\\(Z\\)</span>，那么上周周二、周三的人仍在休息中，所以有 <span class=\"math inline\">\\(X(1) = Z-X(1)-X(2)\\)</span>，同样可以得到其他 6 个等式。概括之就是 <span class=\"math display\">\\[X(i) = Z-X(i+1)-X(i+2), \\ i=1,2,\\ldots, 7\\]</span> 当然，<span class=\"math inline\">\\(X(8)\\)</span> 相当于 <span class=\"math inline\">\\(X(1)\\)</span>，<span class=\"math inline\">\\(X(9)\\)</span> 相当于 <span class=\"math inline\">\\(X(2)\\)</span>。所以需要特殊的函数对其进行转化，<code>wrap</code> 函数正合此意。除了此函数，由此 <a href=\"/essentials-of-matlab-examples#mjx-eqn-J\">公式</a> 也可。代码如下：</p>\r\n<!--�120-->\r\n<p>程序得出的最优解为：8、2、0、6、3、3、0。这说明每周最少需要 22 名员工，周一安排 8 人开始上班，或者说这 8 人休周六和周日，周一工作，其余类推。周二安排 2 人，等等。待轮休稳定后即可满足每天所需要的最少上班员工数。</p>\r\n<hr>\r\n<h3 id=\"投资的收益和风险\">投资的收益和风险</h3>\r\n<p>市场上有 <span class=\"math inline\">\\(n\\)</span> 种资产 <span class=\"math inline\">\\(S_i (i=1,2,\\ldots,n)\\)</span> 供投资者选择，某公司有数额为 <span class=\"math inline\">\\(M\\)</span> 的一笔资金用于一个时期的投资。公司财务分析人员对这 <span class=\"math inline\">\\(n\\)</span> 种资产进行了评估，估算出在这一时期内购买 <span class=\"math inline\">\\(S_i\\)</span> 的平均收益率为 <span class=\"math inline\">\\(r_i\\)</span>，并预测出购买 <span class=\"math inline\">\\(S_i\\)</span> 的风险损失率为 <span class=\"math inline\">\\(q_i\\)</span>。考虑到投资越分散，总的风险越小，公司决定当用这笔资金购买若干种资产时，总体风险可用所投资的 <span class=\"math inline\">\\(S_i\\)</span> 中最大的一个风险来度量。购买 <span class=\"math inline\">\\(S_i\\)</span> 要付交易费，费率为 <span class=\"math inline\">\\(p_i\\)</span>，并且当购买额不超过给定值 <span class=\"math inline\">\\(u_i\\)</span> 时，交易费按购买 <span class=\"math inline\">\\(u_i\\)</span> 计算（不买当然无须付费）。另外，假定同期银行存款利率是 <span class=\"math inline\">\\(r_0\\)</span>, 且既无交易费又无风险（<span class=\"math inline\">\\(r_0=5\\%\\)</span>）。</p>\r\n<div><div class=\"fold_hider\"><div class=\"close hider_title\">数据表</div></div><div class=\"fold\">\n<table>\n  <tr>\n    <th style=\"text-align: center;\">$E_i$</th>\n    <th style=\"text-align: center;\">$r_i$(%)</th>\n    <th style=\"text-align: center;\">$q_i$(%)</th>\n    <th style=\"text-align: center;\">$p_i$(%)</th>\n    <th style=\"text-align: center;\">$u_i$(元)</th>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S1</strong></td>\n    <td style=\"text-align: center;\">9.6</td>\n    <td style=\"text-align: center;\">42.0</td>\n    <td style=\"text-align: center;\">2.1</td>\n    <td style=\"text-align: center;\">181</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S2</strong></td>\n    <td style=\"text-align: center;\">18.5</td>\n    <td style=\"text-align: center;\">54.0</td>\n    <td style=\"text-align: center;\">3.2</td>\n    <td style=\"text-align: center;\">407</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S3</strong></td>\n    <td style=\"text-align: center;\">49.4</td>\n    <td style=\"text-align: center;\">60.0</td>\n    <td style=\"text-align: center;\">6.0</td>\n    <td style=\"text-align: center;\">428</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S4</strong></td>\n    <td style=\"text-align: center;\">23.9</td>\n    <td style=\"text-align: center;\">42.0</td>\n    <td style=\"text-align: center;\">1.5</td>\n    <td style=\"text-align: center;\">549</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S5</strong></td>\n    <td style=\"text-align: center;\">8.1</td>\n    <td style=\"text-align: center;\">1.2</td>\n    <td style=\"text-align: center;\">7.6</td>\n    <td style=\"text-align: center;\">270</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S6</strong></td>\n    <td style=\"text-align: center;\">14.0</td>\n    <td style=\"text-align: center;\">39.0</td>\n    <td style=\"text-align: center;\">3.4</td>\n    <td style=\"text-align: center;\">397</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S7</strong></td>\n    <td style=\"text-align: center;\">40.7</td>\n    <td style=\"text-align: center;\">68.0</td>\n    <td style=\"text-align: center;\">5.6</td>\n    <td style=\"text-align: center;\">178</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S8</strong></td>\n    <td style=\"text-align: center;\">31.2</td>\n    <td style=\"text-align: center;\">33.4</td>\n    <td style=\"text-align: center;\">3.1</td>\n    <td style=\"text-align: center;\">220</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S9</strong></td>\n    <td style=\"text-align: center;\">33.6</td>\n    <td style=\"text-align: center;\">53.3</td>\n    <td style=\"text-align: center;\">2.7</td>\n    <td style=\"text-align: center;\">475</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S10</strong></td>\n    <td style=\"text-align: center;\">36.8</td>\n    <td style=\"text-align: center;\">40.0</td>\n    <td style=\"text-align: center;\">2.9</td>\n    <td style=\"text-align: center;\">248</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S11</strong></td>\n    <td style=\"text-align: center;\">11.8</td>\n    <td style=\"text-align: center;\">31.0</td>\n    <td style=\"text-align: center;\">5.1</td>\n    <td style=\"text-align: center;\">195</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S12</strong></td>\n    <td style=\"text-align: center;\">9.0</td>\n    <td style=\"text-align: center;\">5.5</td>\n    <td style=\"text-align: center;\">5.7</td>\n    <td style=\"text-align: center;\">320</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S13</strong></td>\n    <td style=\"text-align: center;\">35.0</td>\n    <td style=\"text-align: center;\">46.0</td>\n    <td style=\"text-align: center;\">2.7</td>\n    <td style=\"text-align: center;\">267</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S14</strong></td>\n    <td style=\"text-align: center;\">9.4</td>\n    <td style=\"text-align: center;\">5.3</td>\n    <td style=\"text-align: center;\">4.5</td>\n    <td style=\"text-align: center;\">328</td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center;\"><strong>S15</strong></td>\n    <td style=\"text-align: center;\">15.0</td>\n    <td style=\"text-align: center;\">23.0</td>\n    <td style=\"text-align: center;\">7.6</td>\n    <td style=\"text-align: center;\">131</td>\n  </tr>\n</table>\n</div></div>\r\n<p>要使净收益尽可能大，总体风险尽可能小，这是一个多目标的规划模型：</p>\r\n<p><span class=\"math display\">\\[\r\n    \\begin{gather*}\r\n        \\max \\ Q(x) = r_0 x_0 + \\sum_{i=1}^n r_ix_i - \\sum_{i=1}^n p_iy_i,\r\n            \\ i=1,2,\\ldots,n \\\\\r\n        \\min \\ F(x) = \\max\\limits_{1\\leqslant i\\leqslant n}\\{q_ix_i\\}\r\n    \\end{gather*}\r\n\\]</span></p>\r\n<p>这里仅考虑模型的一种简化情形：投资者承受风险的程度不同，故给定风险一个界限 <span class=\"math inline\">\\(a\\)</span>，使得所有风险率均小于此值，即 <span class=\"math inline\">\\(q_ix_i \\leqslant Ma (i=1,2,\\ldots,n)\\)</span>。所以目标函数中最小化风险的要求转化为其中一个约束条件。</p>\r\n<p>约束条件为：</p>\r\n<p><span class=\"math display\">\\[\r\n    \\begin{cases}\r\n        \\displaystyle \\sum_{i=1}^nx_i + \\sum_{i=1}^n p_iy_i = M, &amp; i=1,2,\\cdots,n\\\\\r\n        \\displaystyle x_i \\geqslant 0, &amp; i=1,2,\\cdots,n\\\\\r\n        \\displaystyle y_i = \\begin{cases}\r\n            x_i, &amp;x_i&gt;u_i\\\\\r\n            u_i, &amp;0&lt;x_i\\leqslant u_i\\\\\r\n            0, &amp;x_i=0\r\n        \\end{cases}, &amp; i=1,2,\\cdots, n\r\n    \\end{cases}\r\n\\]</span></p>\r\n<p>由于约束条件中含有分段函数，这时可引入 0 - 1 变量将模型转化为混合整数线性规划模型，但也可以利用 Lingo 中的 <code>@if</code> 函数来构造条件，但模型为非线性规划模型。</p>\r\n<div><div class=\"fold_hider\"><div class=\"close hider_title\">混合整数线性规划模型 Lingo 程序</div></div><div class=\"fold\">\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">model:</span><br><span class=\"line\">    sets:</span><br><span class=\"line\">        S/<span class=\"number\">1.</span><span class=\"number\">.15</span>/:x,y,r,p,q,u,z1,z2,z3,b1,b2,b3;</span><br><span class=\"line\">    endsets</span><br><span class=\"line\"></span><br><span class=\"line\">    data:</span><br><span class=\"line\">        M=<span class=\"number\">4000</span>;</span><br><span class=\"line\">        bili=<span class=\"number\">0.05</span>;</span><br><span class=\"line\">        r0=<span class=\"number\">5</span>;</span><br><span class=\"line\">        r=<span class=\"number\">9.6</span> <span class=\"number\">18.5</span> <span class=\"number\">49.4</span> <span class=\"number\">23.9</span> <span class=\"number\">8.1</span> <span class=\"number\">14</span> <span class=\"number\">40.7</span> <span class=\"number\">31.2</span> <span class=\"number\">33.6</span> <span class=\"number\">36.8</span> <span class=\"number\">11.8</span> <span class=\"number\">9</span> <span class=\"number\">35</span> <span class=\"number\">9.4</span> <span class=\"number\">15</span>;</span><br><span class=\"line\">        q=<span class=\"number\">42</span> <span class=\"number\">54</span> <span class=\"number\">60</span> <span class=\"number\">42</span> <span class=\"number\">1.2</span> <span class=\"number\">39</span> <span class=\"number\">68</span> <span class=\"number\">33.4</span> <span class=\"number\">53.3</span> <span class=\"number\">40</span> <span class=\"number\">31</span> <span class=\"number\">5.5</span> <span class=\"number\">46</span> <span class=\"number\">5.3</span> <span class=\"number\">23</span>;</span><br><span class=\"line\">        p=<span class=\"number\">2.1</span> <span class=\"number\">3.2</span> <span class=\"number\">6</span> <span class=\"number\">1.5</span> <span class=\"number\">7.6</span> <span class=\"number\">3.4</span> <span class=\"number\">5.6</span> <span class=\"number\">3.1</span> <span class=\"number\">2.7</span> <span class=\"number\">2.9</span> <span class=\"number\">5.1</span> <span class=\"number\">5.7</span> <span class=\"number\">2.7</span> <span class=\"number\">4.5</span> <span class=\"number\">7.6</span>;</span><br><span class=\"line\">        u=<span class=\"number\">181</span> <span class=\"number\">407</span> <span class=\"number\">428</span> <span class=\"number\">549</span> <span class=\"number\">270</span> <span class=\"number\">397</span> <span class=\"number\">178</span> <span class=\"number\">220</span> <span class=\"number\">475</span> <span class=\"number\">248</span> <span class=\"number\">195</span> <span class=\"number\">320</span> <span class=\"number\">267</span> <span class=\"number\">328</span> <span class=\"number\">131</span>;</span><br><span class=\"line\">    enddata</span><br><span class=\"line\"></span><br><span class=\"line\">    max=r0*x0/<span class=\"number\">100</span>+@Sum(S:r*x/<span class=\"number\">100</span>)-@Sum(S:p*y/<span class=\"number\">100</span>);</span><br><span class=\"line\">    @For(S:q*x/<span class=\"number\">100</span>&lt;M*bili);</span><br><span class=\"line\">    x0+@Sum(S:x)+@Sum(S:p*y/<span class=\"number\">100</span>)=M;</span><br><span class=\"line\"></span><br><span class=\"line\">    @For(S:y=z1+z2+z3);</span><br><span class=\"line\">    @For(S:b1+b2+b3=<span class=\"number\">1</span>);</span><br><span class=\"line\">    @For(S:u-x&lt;<span class=\"number\">2</span>*M*(<span class=\"number\">1</span>-b1)); @For(S:x-M&lt;<span class=\"number\">2</span>*M*(<span class=\"number\">1</span>-b1));</span><br><span class=\"line\">    @For(S:-x&lt;<span class=\"number\">2</span>*M*(<span class=\"number\">1</span>-b2)); @For(S:x-u&lt;<span class=\"number\">2</span>*M*(<span class=\"number\">1</span>-b2));</span><br><span class=\"line\">    @For(S:-x&lt;<span class=\"number\">2</span>*M*(<span class=\"number\">1</span>-b3)); @For(S:x&lt;<span class=\"number\">2</span>*M*(<span class=\"number\">1</span>-b3));</span><br><span class=\"line\"></span><br><span class=\"line\">    @For(S:<span class=\"number\">-2</span>*M*b1&lt;z1); @For(S:z1&lt;<span class=\"number\">2</span>*M*b1);</span><br><span class=\"line\">    @For(S:x<span class=\"number\">-2</span>*M*(<span class=\"number\">1</span>-b1)&lt;z1); @For(S:z1&lt;x+<span class=\"number\">2</span>*M*(<span class=\"number\">1</span>-b1));</span><br><span class=\"line\">    @For(S:<span class=\"number\">-2</span>*M*b2&lt;z2); @For(S:z2&lt;<span class=\"number\">2</span>*M*b2);</span><br><span class=\"line\">    @For(S:u<span class=\"number\">-2</span>*M*(<span class=\"number\">1</span>-b2)&lt;z2); @For(S:z2&lt;u+<span class=\"number\">2</span>*M*(<span class=\"number\">1</span>-b2));</span><br><span class=\"line\">    @For(S:z3=<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    @For(S:@Bin(b1));</span><br><span class=\"line\">    @For(S:@Bin(b2));</span><br><span class=\"line\">    @For(S:@Bin(b3));</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n</div></div>\r\n<div><div class=\"fold_hider\"><div class=\"close hider_title\">非线性规划模型 Lingo 程序</div></div><div class=\"fold\">\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">model:</span><br><span class=\"line\">    sets:</span><br><span class=\"line\">        assets/<span class=\"number\">1.</span><span class=\"number\">.15</span>/: x, y, r, q, p, u;</span><br><span class=\"line\">    endsets</span><br><span class=\"line\">    data:</span><br><span class=\"line\">        M = <span class=\"number\">4000</span>;</span><br><span class=\"line\">        r0 = <span class=\"number\">5</span>;</span><br><span class=\"line\">        a = <span class=\"number\">0.05</span>;</span><br><span class=\"line\">        r =  <span class=\"number\">9.6</span> <span class=\"number\">18.5</span> <span class=\"number\">49.4</span> <span class=\"number\">23.9</span>  <span class=\"number\">8.1</span></span><br><span class=\"line\">            <span class=\"number\">14.0</span> <span class=\"number\">40.7</span> <span class=\"number\">31.2</span> <span class=\"number\">33.6</span> <span class=\"number\">36.8</span></span><br><span class=\"line\">            <span class=\"number\">11.8</span>  <span class=\"number\">9.0</span> <span class=\"number\">35.0</span>  <span class=\"number\">9.4</span> <span class=\"number\">15.0</span>;</span><br><span class=\"line\">        q = <span class=\"number\">42</span>  <span class=\"number\">54</span>   <span class=\"number\">60</span>   <span class=\"number\">42</span> <span class=\"number\">1.2</span></span><br><span class=\"line\">            <span class=\"number\">39</span>  <span class=\"number\">68</span> <span class=\"number\">33.4</span> <span class=\"number\">53.3</span>  <span class=\"number\">40</span></span><br><span class=\"line\">            <span class=\"number\">31</span> <span class=\"number\">5.5</span>   <span class=\"number\">46</span>  <span class=\"number\">5.3</span>  <span class=\"number\">23</span>;</span><br><span class=\"line\">        p = <span class=\"number\">2.1</span> <span class=\"number\">3.2</span> <span class=\"number\">6.0</span> <span class=\"number\">1.5</span> <span class=\"number\">7.6</span></span><br><span class=\"line\">            <span class=\"number\">3.4</span> <span class=\"number\">5.6</span> <span class=\"number\">3.1</span> <span class=\"number\">2.7</span> <span class=\"number\">2.9</span></span><br><span class=\"line\">            <span class=\"number\">5.1</span> <span class=\"number\">5.7</span> <span class=\"number\">2.7</span> <span class=\"number\">4.5</span> <span class=\"number\">7.6</span>;</span><br><span class=\"line\">        u = <span class=\"number\">181</span> <span class=\"number\">407</span> <span class=\"number\">428</span> <span class=\"number\">549</span> <span class=\"number\">270</span></span><br><span class=\"line\">            <span class=\"number\">397</span> <span class=\"number\">178</span> <span class=\"number\">220</span> <span class=\"number\">475</span> <span class=\"number\">248</span></span><br><span class=\"line\">            <span class=\"number\">195</span> <span class=\"number\">320</span> <span class=\"number\">267</span> <span class=\"number\">328</span> <span class=\"number\">131</span>;</span><br><span class=\"line\">    enddata</span><br><span class=\"line\"></span><br><span class=\"line\">    max=(x0*r0+@sum(assets: r*x-p*y))/<span class=\"number\">100</span>;</span><br><span class=\"line\">    @for(assets: y=@if(x #le# u, @if(x #eq# 0, 0, u), x));</span><br><span class=\"line\">    @<span class=\"keyword\">for</span>(assets: q*x/<span class=\"number\">100</span>&lt;=M*a);</span><br><span class=\"line\">    x0+@sum(assets: x)+@sum(assets: p*y/<span class=\"number\">100</span>)=M;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n</div></div>\r\n<p>程序输出结果如下：</p>\r\n<table>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: center;\">Variable</th>\r\n<th style=\"text-align: center;\">Value</th>\r\n<th style=\"text-align: center;\">Variable</th>\r\n<th style=\"text-align: center;\">Value</th>\r\n<th style=\"text-align: center;\">Variable</th>\r\n<th style=\"text-align: center;\">Value</th>\r\n<th style=\"text-align: center;\">Variable</th>\r\n<th style=\"text-align: center;\">Value</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><strong>X0</strong></td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\"><strong>X4</strong></td>\r\n<td style=\"text-align: center;\">476.1905</td>\r\n<td style=\"text-align: center;\"><strong>X8</strong></td>\r\n<td style=\"text-align: center;\">598.8024</td>\r\n<td style=\"text-align: center;\"><strong>X12</strong></td>\r\n<td style=\"text-align: center;\">0</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><strong>S1</strong></td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\"><strong>X5</strong></td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\"><strong>X9</strong></td>\r\n<td style=\"text-align: center;\">375.2345</td>\r\n<td style=\"text-align: center;\"><strong>X13</strong></td>\r\n<td style=\"text-align: center;\">434.7826</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><strong>X2</strong></td>\r\n<td style=\"text-align: center;\">370.3704</td>\r\n<td style=\"text-align: center;\"><strong>X6</strong></td>\r\n<td style=\"text-align: center;\">479.8182</td>\r\n<td style=\"text-align: center;\"><strong>X10</strong></td>\r\n<td style=\"text-align: center;\">500</td>\r\n<td style=\"text-align: center;\"><strong>X14</strong></td>\r\n<td style=\"text-align: center;\">0</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><strong>X3</strong></td>\r\n<td style=\"text-align: center;\">333.3333</td>\r\n<td style=\"text-align: center;\"><strong>X7</strong></td>\r\n<td style=\"text-align: center;\">294.1176</td>\r\n<td style=\"text-align: center;\"><strong>X11</strong></td>\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\"><strong>X15</strong></td>\r\n<td style=\"text-align: center;\">0</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p>在此种投资组合下，收益 1045.604 元。</p>\r\n<h4 id=\"分段函数处理方法\">分段函数处理方法</h4>\r\n<p>上述关于混合整数线性规划模型的 Lingo 程序中引入不少中间决策变量，这里对其展开讨论，下面内容节选自余胜威《MATLAB 数学建模经典案例实战》。（部分改动）</p>\r\n<div class=\"note info\">设有限区间的有界分段函数：\n\n$$\n    y = f(x) = \\begin{cases}\n            \\varphi_1(x), & x\\in(a_1, b_1) & \\\\\n            \\varphi_2(x), & x\\in(a_2, b_2) & \\\\\n            \\hfil \\cdots \\\\\n            \\varphi_n(x), & x\\in(a_n, b_n) & \\\\\n        \\end{cases}, \\quad\n        a_1 < b_1 \\leqslant a_2 < b_2 \\leqslant \\cdots \\leqslant a_n < b_n\n$$\n\n等价为：\n\n$$\n    \\begin{cases}\n        y = y_1 + y_2 + \\cdots y_n \\\\\n        \\delta_1 + \\delta_2 + \\cdots + \\delta_n = 1, \\delta_i \\in \\{0,1\\} \\\\\n        x - a_i \\geqslant -(1-\\delta_i)L_x \\\\\n        x - b_i \\leqslant (1-\\delta_i)U_x \\\\\n        -\\delta_i L_{y1} \\leqslant y_i \\leqslant \\delta_i U_{y1} \\\\\n        -(1-\\delta_i) L_{y2} \\leqslant y_i-\\varphi_i(x)\n        \\leqslant (1-\\delta_i) U_{y2}\n    \\end{cases}\n$$</div>\r\n<p>其中 <span class=\"math inline\">\\(\\delta_i\\)</span> 表明 <span class=\"math inline\">\\(x\\)</span> 所处区间，通过上述约束条件中的第 3、4 式保证。具体而言，给定 <span class=\"math inline\">\\(i\\in\\{1,\\ldots,n\\}\\)</span>，若 <span class=\"math inline\">\\(x \\in (a_i, b_i)\\)</span>，必然有 <span class=\"math inline\">\\(x-a_i \\geqslant 0\\)</span> 以及 <span class=\"math inline\">\\(x-b_i \\leqslant 0\\)</span>；对其他区间而言，有 <span class=\"math inline\">\\(x-a_i \\geqslant -L\\)</span>，以及 <span class=\"math inline\">\\(x-b_i \\leqslant U\\)</span>，其中 <span class=\"math inline\">\\(U, L &gt; 0\\)</span> 分别为 <span class=\"math inline\">\\(x\\)</span> 支撑集的上限和下限的绝对值。引入 0 - 1 变量 <span class=\"math inline\">\\(\\delta_i\\)</span>（类似于概率论中示性函数），对于任何区间，整合上述不等式，即为 3、4 式。注意到给定的 <span class=\"math inline\">\\(x\\)</span> 仅会落入一个区间，故 <span class=\"math inline\">\\(\\sum \\delta_i = 1\\)</span>（2 式）。对于 <span class=\"math inline\">\\(y_i\\)</span>，讨论类似。当然为简单起见，可将所有界限以它们的最大值代替。</p>\r\n<p>乍看求解模型被复杂化，但把可能为非线性规划的问题转为了混合整数线性规划问题，加快求解收敛速度。</p>\r\n<hr>\r\n<h3 id=\"计划排序模型\">计划排序模型</h3>\r\n<p>完成某产品的装配过程需要 11 项任务（用 A ~ K 表示），每项任务所花费的时间如下：</p>\r\n<table>\r\n<tr>\r\n<td>\r\n<strong>任务</strong>\r\n</td>\r\n<td>\r\n<strong>A</strong>\r\n</td>\r\n<td>\r\n<strong>B</strong>\r\n</td>\r\n<td>\r\n<strong>C</strong>\r\n</td>\r\n<td>\r\n<strong>D</strong>\r\n</td>\r\n<td>\r\n<strong>E</strong>\r\n</td>\r\n<td>\r\n<strong>F</strong>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n<strong>时间</strong>\r\n</td>\r\n<td>\r\n45\r\n</td>\r\n<td>\r\n11\r\n</td>\r\n<td>\r\n9\r\n</td>\r\n<td>\r\n50\r\n</td>\r\n<td>\r\n15\r\n</td>\r\n<td>\r\n12\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n<strong>任务</strong>\r\n</td>\r\n<td>\r\n<strong>G</strong>\r\n</td>\r\n<td>\r\n<strong>H</strong>\r\n</td>\r\n<td>\r\n<strong>I</strong>\r\n</td>\r\n<td>\r\n<strong>J</strong>\r\n</td>\r\n<td>\r\n<strong>K</strong>\r\n</td>\r\n<td>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n<strong>时间</strong>\r\n</td>\r\n<td>\r\n12\r\n</td>\r\n<td>\r\n12\r\n</td>\r\n<td>\r\n12\r\n</td>\r\n<td>\r\n8\r\n</td>\r\n<td>\r\n9\r\n</td>\r\n<td>\r\n</td>\r\n</tr>\r\n</table>\r\n<p>各项任务之间存在先后顺序如下图所示。装配流水线有四个顺序工作站，对于有先后次序的任务，只能在流水线上向后传（如任务 B 和 C 的次序为先 B 后 C，如果安排 B 给第 3 站做，则 C 要么由 B 自己完成，要么传给第 4 站来做，而不能交往 1 或 2 号站），每项任务必须只能分配至一个工作站来做。合理分配生产计划，使整个装配周期最短。</p>\r\n<p><img src=\"/img/task_priority.svg\" width=\"50%\"></p>\r\n<p>记 <span class=\"math inline\">\\(x_{ik}\\)</span> 表示将任务 <span class=\"math inline\">\\(i\\ (i=A,B,\\ldots,K)\\)</span> 分配给工作站 <span class=\"math inline\">\\(k\\ (k=1,2,3,4)\\)</span> 的情况，1 表示分配，0 表示不分配，<span class=\"math inline\">\\(t_i\\)</span> 表示完成各项任务所需时间。则目标函数为 <span class=\"math inline\">\\(\\min\\ T = \\max\\limits_{1\\leqslant k \\leqslant 4} \\sum\\limits_{i=1}^{11} t_ix_{ik}\\)</span>。由每项任务只能分配给一个工作站来做，故对所有任务 <span class=\"math inline\">\\(i\\)</span> 有：<span class=\"math inline\">\\(\\sum\\limits_{k=1}^4 x_{ik}=1\\)</span>。对于任务间的优先级，考虑任务 <span class=\"math inline\">\\(i\\)</span> 先于任务 <span class=\"math inline\">\\(j\\)</span>，则可行的任务安排表 (11 × 4) 有：</p>\r\n<span class=\"math display\">\\[\\begin{array}{ccccc}\r\n\\begin{array}{ccccc}\r\n    \\hline\r\n      &amp; 1 &amp; 2 &amp; 3 &amp; 4 \\\\\r\n    \\hline\r\n    i &amp; 1 &amp;   &amp;   &amp;   \\\\\r\n    j &amp; 1 &amp;   &amp;   &amp;   \\\\\r\n    \\Delta  &amp; 0 &amp; 0 &amp; 0 &amp; 0 \\\\\r\n    \\hline\r\n\\end{array}\r\n&amp;\r\n\\begin{array}{ccccc}\r\n    \\hline\r\n      &amp; 1 &amp; 2 &amp; 3 &amp; 4 \\\\\r\n    \\hline\r\n    i &amp; 1 &amp;   &amp;   &amp;   \\\\\r\n    j &amp;   &amp; 1 &amp;   &amp;   \\\\\r\n    \\Delta  &amp; -1 &amp; 1 &amp; 0 &amp; 0 \\\\\r\n    \\hline\r\n\\end{array}\r\n&amp;\r\n\\begin{array}{ccccc}\r\n    \\hline\r\n      &amp; 1 &amp; 2 &amp; 3 &amp; 4 \\\\\r\n    \\hline\r\n    i &amp; 1 &amp;   &amp;   &amp;   \\\\\r\n    j &amp;   &amp;   &amp; 1 &amp;   \\\\\r\n    \\Delta  &amp; -1 &amp; 0 &amp; 1 &amp; 0 \\\\\r\n    \\hline\r\n\\end{array}\r\n&amp;\r\n\\begin{array}{ccccc}\r\n    \\hline\r\n      &amp; 1 &amp; 2 &amp; 3 &amp; 4 \\\\\r\n    \\hline\r\n    i &amp; 1 &amp;   &amp;   &amp;   \\\\\r\n    j &amp;   &amp;   &amp;   &amp; 1 \\\\\r\n    \\Delta  &amp; -1 &amp; 0 &amp; 0 &amp; 1 \\\\\r\n    \\hline\r\n\\end{array}\r\n&amp;\r\n\\begin{array}{ccccc}\r\n    \\hline\r\n      &amp; 1 &amp; 2 &amp; 3 &amp; 4 \\\\\r\n    \\hline\r\n    i &amp;   &amp; 1 &amp;   &amp;   \\\\\r\n    j &amp;   &amp; 1 &amp;   &amp;   \\\\\r\n    \\Delta  &amp; 0 &amp; 0 &amp; 0 &amp; 0 \\\\\r\n    \\hline\r\n\\end{array} \\\\[15pt]\r\n\\begin{array}{ccccc}\r\n    \\hline\r\n      &amp; 1 &amp; 2 &amp; 3 &amp; 4 \\\\\r\n    \\hline\r\n    i &amp;   &amp; 1 &amp;   &amp;   \\\\\r\n    j &amp;   &amp;   &amp; 1 &amp;   \\\\\r\n    \\Delta  &amp; 0 &amp; -1 &amp; 1 &amp; 0 \\\\\r\n    \\hline\r\n\\end{array}\r\n&amp;\r\n\\begin{array}{ccccc}\r\n    \\hline\r\n      &amp; 1 &amp; 2 &amp; 3 &amp; 4 \\\\\r\n    \\hline\r\n    i &amp;   &amp; 1 &amp;   &amp;   \\\\\r\n    j &amp;   &amp;   &amp;   &amp; 1 \\\\\r\n    \\Delta  &amp; 0 &amp; -1 &amp; 0 &amp; 1 \\\\\r\n    \\hline\r\n\\end{array}\r\n&amp;\r\n\\begin{array}{ccccc}\r\n    \\hline\r\n      &amp; 1 &amp; 2 &amp; 3 &amp; 4 \\\\\r\n    \\hline\r\n    i &amp;   &amp;   &amp; 1 &amp;   \\\\\r\n    j &amp;   &amp;   &amp; 1 &amp;   \\\\\r\n    \\Delta  &amp; 0 &amp; 0 &amp; 0 &amp; 0 \\\\\r\n    \\hline\r\n\\end{array}\r\n&amp;\r\n\\begin{array}{ccccc}\r\n    \\hline\r\n      &amp; 1 &amp; 2 &amp; 3 &amp; 4 \\\\\r\n    \\hline\r\n    i &amp;   &amp;   &amp; 1 &amp;   \\\\\r\n    j &amp;   &amp;   &amp;   &amp; 1 \\\\\r\n    \\Delta  &amp; 0 &amp; 0 &amp; -1 &amp; 1 \\\\\r\n    \\hline\r\n\\end{array}\r\n&amp;\r\n\\begin{array}{ccccc}\r\n    \\hline\r\n      &amp; 1 &amp; 2 &amp; 3 &amp; 4 \\\\\r\n    \\hline\r\n    i &amp;   &amp;   &amp;   &amp; 1  \\\\\r\n    j &amp;   &amp;   &amp;   &amp; 1 \\\\\r\n    \\Delta  &amp; 0 &amp; 0 &amp; 0 &amp; 0 \\\\\r\n    \\hline\r\n\\end{array}\r\n\\end{array}\\]</span>\r\n<p>其中最后一行为任务 <span class=\"math inline\">\\(j\\)</span> 的分配数与任务 <span class=\"math inline\">\\(i\\)</span> 的分配数之差。对每个工作站引入权重 <span class=\"math inline\">\\(f_k = k\\)</span>，可发现上述所有情况均满足 <span class=\"math inline\">\\(\\sum\\limits_{i=k}^4 f_k\\Delta_k \\geqslant 0\\)</span>，通过进一步试验可归纳任何一种「任务 <span class=\"math inline\">\\(j\\)</span> 优先于任务 <span class=\"math inline\">\\(i\\)</span>」的分配方案均不满足上述等式。 于是对所有 <span class=\"math inline\">\\(i\\)</span> 优先于 <span class=\"math inline\">\\(j\\)</span>：<span class=\"math inline\">\\(\\sum\\limits_{k=1}^4 k(x_{jk}-x_{ik}) \\geqslant 0\\)</span>。</p>\r\n<p>至此，该模型是一个非线性规划，但可进一步转为线性规划。增加约束条件：<span class=\"math inline\">\\(\\sum\\limits_{i=1}^{11}t_ix_{ik} \\leqslant Z\\)</span>，目标函数变为 <span class=\"math inline\">\\(\\min \\ Z\\)</span>。两种模型的迭代次数分别为 147 (MILP)、590 (PINLP)。</p>\r\n<div><div class=\"fold_hider\"><div class=\"close hider_title\">计划排序模型 Lingo 程序</div></div><div class=\"fold\">\n<!--�121-->\n\n</div></div>\r\n<hr>\r\n<h3 id=\"配对模型\">配对模型</h3>\r\n<p>将 8 个职员安排到 4 个办公室，每室两人。同事两两之间的相容程度如下（数字越小代表相容越好）</p>\r\n<p><span class=\"math display\">\\[\r\n\\begin{array}{c|cccccccc}\r\n    \\hline\r\n        &amp; S_1 &amp; S_2 &amp; S_3 &amp; S_4 &amp; S_5 &amp; S_6 &amp; S_7 &amp; S_8 \\\\\r\n    \\hline\r\n    S_1 &amp; -   &amp; 9   &amp; 3   &amp; 4   &amp; 2   &amp; 1   &amp; 5   &amp; 6   \\\\\r\n    S_2 &amp; -   &amp; -   &amp; 1   &amp; 7   &amp; 3   &amp; 5   &amp; 2   &amp; 1   \\\\\r\n    S_3 &amp; -   &amp; -   &amp; -   &amp; 4   &amp; 4   &amp; 2   &amp; 9   &amp; 2   \\\\\r\n    S_4 &amp; -   &amp; -   &amp; -   &amp; -   &amp; 1   &amp; 5   &amp; 5   &amp; 2   \\\\\r\n    S_5 &amp; -   &amp; -   &amp; -   &amp; -   &amp; -   &amp; 8   &amp; 7   &amp; 6   \\\\\r\n    S_6 &amp; -   &amp; -   &amp; -   &amp; -   &amp; -   &amp; -   &amp; 2   &amp; 3   \\\\\r\n    S_7 &amp; -   &amp; -   &amp; -   &amp; -   &amp; -   &amp; -   &amp; -   &amp; 4   \\\\\r\n    S_8 &amp; -   &amp; -   &amp; -   &amp; -   &amp; -   &amp; -   &amp; -   &amp; -   \\\\\r\n    \\hline\r\n\\end{array}\r\n\\]</span></p>\r\n<p>安排配对方案，使组合的总相容程度最好。</p>\r\n<p>引入决策矩阵 <span class=\"math inline\">\\(X\\)</span>，元素 <span class=\"math inline\">\\(X_{ij} \\in \\{0, 1\\}\\)</span>，每人组合一次，说明对于每个职员 <span class=\"math inline\">\\(i\\)</span>，必有 <span class=\"math inline\">\\(\\sum\\limits_{j=i \\ \\text{or}\\ k=i}X_{jk} = 1\\)</span>，所以模型为：</p>\r\n<p><span class=\"math display\">\\[\r\n    \\begin{array}{cl}\r\n        \\min &amp; \\sum\\limits_{i&lt;j} C_{ij} X_{ij} \\\\\r\n        \\text{s.t.} &amp; \\begin{cases}\r\n            \\sum\\limits_{j=i \\ \\text{or}\\ k=i}X_{jk} = 1, &amp; i=1,2,\\ldots,8 \\\\\r\n            X_{ij} = 0 \\ \\text{or} \\ 1, &amp; i&lt;j\r\n        \\end{cases}\r\n    \\end{array}\r\n\\]</span></p>\r\n<div><div class=\"fold_hider\"><div class=\"close hider_title\">配对模型 Lingo 程序</div></div><div class=\"fold\">\n<!--�122-->\n\n</div></div>\r\n<hr>\r\n<h3 id=\"下料问题\">下料问题</h3>\r\n<p>钢管原材料每根长 19m，现需要 A、B、C、D 四种钢管部件，长度分别为 4m、5m、6m、8m，数量分别为 50、10、20、15 根，不同的下料方式不超过 3 种，安排下料方式使得所需钢管原材料最少。</p>\r\n<p>一般化问题，假设用到 <span class=\"math inline\">\\(k\\)</span> 种下料方式，用 <span class=\"math inline\">\\(x_i\\ (i=1,2,\\ldots,k)\\)</span> 表示第 <span class=\"math inline\">\\(i\\)</span> 种下料方式所切割的原料钢管数量，非负整数 <span class=\"math inline\">\\(n_{ij}\\)</span> 表示第 <span class=\"math inline\">\\(i\\)</span> 种下料方法得到部件 <span class=\"math inline\">\\(j\\ (j=1,2,\\ldots,m)\\)</span> 的数量，<span class=\"math inline\">\\(b_j\\)</span> 表示第 <span class=\"math inline\">\\(j\\)</span> 种部件的需求量。<span class=\"math inline\">\\(L\\)</span> 表示钢管材料的长度，<span class=\"math inline\">\\(l_j\\)</span> 表示部件长度，则下料方式应满足：1) 切割出的部件总长度不超过 <span class=\"math inline\">\\(L\\)</span>；2) 余料严格小于 <span class=\"math inline\">\\(\\min \\{l_j\\}\\)</span>。故建立优化模型：</p>\r\n<p><span class=\"math display\">\\[\r\n\\begin{array}{cl}\r\n    {\\min} &amp; z = \\sum\\limits_{i=1}^k x_i \\\\\r\n    \\text{s.t.} &amp; \\begin{cases}\r\n        \\sum\\limits_{i=1}^k n_{ij}x_i \\geqslant b_j, &amp; j=1,2,\\ldots,m \\\\\r\n        L - \\min\\{n_{ij}\\} &lt; \\sum\\limits_{j=1}^m n_{ij}l_j \\leqslant L, &amp; i=1,2,\\ldots,k \\\\\r\n        x_{i}, n_{ij} \\in \\mathbb{N}, &amp; i=1,2,\\ldots,k; \\ j=1,2,\\ldots,m\r\n    \\end{cases}\r\n\\end{array}\r\n\\]</span></p>\r\n<p>在此问题中 <span class=\"math inline\">\\(k=3, m=4\\)</span>。</p>\r\n<div><div class=\"fold_hider\"><div class=\"close hider_title\">下料问题 Lingo 程序</div></div><div class=\"fold\">\n<!--�123-->\n\n</div></div>\r\n<p>求解结果如下：</p>\r\n<table>\r\n<tr>\r\n<td style=\"text-align: center;\" rowspan=\"2\">\r\n<strong>下料方式</strong>\r\n</td>\r\n<td style=\"text-align: center;\" colspan=\"4\">\r\n<strong>部件长度<br></strong>\r\n</td>\r\n<td style=\"text-align: center;\" rowspan=\"2\">\r\n<strong>余料长度</strong>\r\n</td>\r\n<td style=\"text-align: center;\" rowspan=\"2\">\r\n<strong>切割根数</strong>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"text-align: center;\">\r\n4m\r\n</td>\r\n<td style=\"text-align: center;\">\r\n5m\r\n</td>\r\n<td style=\"text-align: center;\">\r\n6m\r\n</td>\r\n<td style=\"text-align: center;\">\r\n8m\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"text-align: center;\">\r\n<strong>方式一</strong>\r\n</td>\r\n<td style=\"text-align: center;\">\r\n0\r\n</td>\r\n<td style=\"text-align: center;\">\r\n0\r\n</td>\r\n<td style=\"text-align: center;\">\r\n0\r\n</td>\r\n<td style=\"text-align: center;\">\r\n2\r\n</td>\r\n<td style=\"text-align: center;\">\r\n3\r\n</td>\r\n<td style=\"text-align: center;\">\r\n8\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"text-align: center;\">\r\n<strong>方式二</strong>\r\n</td>\r\n<td style=\"text-align: center;\">\r\n2\r\n</td>\r\n<td style=\"text-align: center;\">\r\n1\r\n</td>\r\n<td style=\"text-align: center;\">\r\n1\r\n</td>\r\n<td style=\"text-align: center;\">\r\n0\r\n</td>\r\n<td style=\"text-align: center;\">\r\n0\r\n</td>\r\n<td style=\"text-align: center;\">\r\n10\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"text-align: center;\">\r\n<strong>方式三</strong>\r\n</td>\r\n<td style=\"text-align: center;\">\r\n3\r\n</td>\r\n<td style=\"text-align: center;\">\r\n0\r\n</td>\r\n<td style=\"text-align: center;\">\r\n1\r\n</td>\r\n<td style=\"text-align: center;\">\r\n0\r\n</td>\r\n<td style=\"text-align: center;\">\r\n1\r\n</td>\r\n<td style=\"text-align: center;\">\r\n10\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"text-align: center;\">\r\n<strong>合计</strong>\r\n</td>\r\n<td style=\"text-align: center;\">\r\n50\r\n</td>\r\n<td style=\"text-align: center;\">\r\n10\r\n</td>\r\n<td style=\"text-align: center;\">\r\n20\r\n</td>\r\n<td style=\"text-align: center;\">\r\n16\r\n</td>\r\n<td style=\"text-align: center;\">\r\n34m\r\n</td>\r\n<td style=\"text-align: center;\">\r\n28\r\n</td>\r\n</tr>\r\n</table>\r\n<p>注意到上述切割方案余料总长 34m，且多出一根 8m 长的部件。</p>"},{"title":"Linux 中的密码管理器 -- pass","date":"2018-01-05T10:33:43.000Z","_content":"\nLinux 中很方便的密码管理小工具 -- pass {% fa key fw %}。\n\n<!-- more -->\n\n一般源都包含 `pass`，直接 `apt` / `yum` / `pacman` 安装即可。\n\n1. 首先创建 `gpg` 密钥对：`gpg --gen-key`\n1. 依次选择 `(1) RSA and RSA (default)`，`0 = key does not expire`，自定义 `Real name`，`Email address` 即可\n1. 初始化密码仓库：`pass init <gpg-id>`，其中的 `<gpg-id>` 便为上面的 `Real name`\n\n## 使用方法\n\n- `pass insert <password-name> [-m]`：（是否细致化）增加密码项，其中 `<password-name>` 可以通过 `/` 来建立层级，放映在目录上就是父子目录\n- `pass`：查看所有密码\n- `pass <password-name>`：取回密码信息\n- `pass generate <password-name> n`：生成 10 个字符的密码\n- `pass rm <password-name>`：删除密码项\n\n## 其它\n\n- `gpg` 列出密钥：`gpg --list-keys`。第一行是公钥文件路径，第二行是公钥信息，第三行是用户 ID，第四行是私钥信息\n\n## 参考\n\n- [pass - the standard unix password manager](https://www.passwordstore.org)\n- [如何在Linux上使用命令行管理密码](https://linux.cn/article-3155-1.html)\n- [GPG入门](http://www.jianshu.com/p/1257dbf3ed8e)\n","source":"_posts/password-manager-on-linux.md","raw":"---\ntitle: Linux 中的密码管理器 -- pass\ndate: 2018-01-05 18:33:43\ntags:\n    - Linux\n    - Pass\ncategories: Handy Utilities\n---\n\nLinux 中很方便的密码管理小工具 -- pass {% fa key fw %}。\n\n<!-- more -->\n\n一般源都包含 `pass`，直接 `apt` / `yum` / `pacman` 安装即可。\n\n1. 首先创建 `gpg` 密钥对：`gpg --gen-key`\n1. 依次选择 `(1) RSA and RSA (default)`，`0 = key does not expire`，自定义 `Real name`，`Email address` 即可\n1. 初始化密码仓库：`pass init <gpg-id>`，其中的 `<gpg-id>` 便为上面的 `Real name`\n\n## 使用方法\n\n- `pass insert <password-name> [-m]`：（是否细致化）增加密码项，其中 `<password-name>` 可以通过 `/` 来建立层级，放映在目录上就是父子目录\n- `pass`：查看所有密码\n- `pass <password-name>`：取回密码信息\n- `pass generate <password-name> n`：生成 10 个字符的密码\n- `pass rm <password-name>`：删除密码项\n\n## 其它\n\n- `gpg` 列出密钥：`gpg --list-keys`。第一行是公钥文件路径，第二行是公钥信息，第三行是用户 ID，第四行是私钥信息\n\n## 参考\n\n- [pass - the standard unix password manager](https://www.passwordstore.org)\n- [如何在Linux上使用命令行管理密码](https://linux.cn/article-3155-1.html)\n- [GPG入门](http://www.jianshu.com/p/1257dbf3ed8e)\n","slug":"password-manager-on-linux","published":1,"updated":"2023-03-09T16:09:38.269Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u336u002np4x06dtdo8yn","content":"<p>Linux 中很方便的密码管理小工具 – pass <i class=\"fa fa-key fa-fw\"></i>。</p>\r\n<a id=\"more\"></a>\r\n<p>一般源都包含 <code>pass</code>，直接 <code>apt</code> / <code>yum</code> / <code>pacman</code> 安装即可。</p>\r\n<ol type=\"1\">\r\n<li>首先创建 <code>gpg</code> 密钥对：<code>gpg --gen-key</code></li>\r\n<li>依次选择 <code>(1) RSA and RSA (default)</code>，<code>0 = key does not expire</code>，自定义 <code>Real name</code>，<code>Email address</code> 即可</li>\r\n<li>初始化密码仓库：<code>pass init &lt;gpg-id&gt;</code>，其中的 <code>&lt;gpg-id&gt;</code> 便为上面的 <code>Real name</code></li>\r\n</ol>\r\n<h2 id=\"使用方法\">使用方法</h2>\r\n<ul>\r\n<li><code>pass insert &lt;password-name&gt; [-m]</code>：（是否细致化）增加密码项，其中 <code>&lt;password-name&gt;</code> 可以通过 <code>/</code> 来建立层级，放映在目录上就是父子目录</li>\r\n<li><code>pass</code>：查看所有密码</li>\r\n<li><code>pass &lt;password-name&gt;</code>：取回密码信息</li>\r\n<li><code>pass generate &lt;password-name&gt; n</code>：生成 10 个字符的密码</li>\r\n<li><code>pass rm &lt;password-name&gt;</code>：删除密码项</li>\r\n</ul>\r\n<h2 id=\"其它\">其它</h2>\r\n<ul>\r\n<li><code>gpg</code> 列出密钥：<code>gpg --list-keys</code>。第一行是公钥文件路径，第二行是公钥信息，第三行是用户 ID，第四行是私钥信息</li>\r\n</ul>\r\n<h2 id=\"参考\">参考</h2>\r\n<ul>\r\n<li><a href=\"https://www.passwordstore.org\" target=\"_blank\" rel=\"noopener\">pass - the standard unix password manager</a></li>\r\n<li><a href=\"https://linux.cn/article-3155-1.html\" target=\"_blank\" rel=\"noopener\">如何在Linux上使用命令行管理密码</a></li>\r\n<li><a href=\"http://www.jianshu.com/p/1257dbf3ed8e\" target=\"_blank\" rel=\"noopener\">GPG入门</a></li>\r\n</ul>\r\n","site":{"data":{}},"excerpt":"<p>Linux 中很方便的密码管理小工具 – pass <i class=\"fa fa-key fa-fw\"></i>。</p>","more":"<p>一般源都包含 <code>pass</code>，直接 <code>apt</code> / <code>yum</code> / <code>pacman</code> 安装即可。</p>\r\n<ol type=\"1\">\r\n<li>首先创建 <code>gpg</code> 密钥对：<code>gpg --gen-key</code></li>\r\n<li>依次选择 <code>(1) RSA and RSA (default)</code>，<code>0 = key does not expire</code>，自定义 <code>Real name</code>，<code>Email address</code> 即可</li>\r\n<li>初始化密码仓库：<code>pass init &lt;gpg-id&gt;</code>，其中的 <code>&lt;gpg-id&gt;</code> 便为上面的 <code>Real name</code></li>\r\n</ol>\r\n<h2 id=\"使用方法\">使用方法</h2>\r\n<ul>\r\n<li><code>pass insert &lt;password-name&gt; [-m]</code>：（是否细致化）增加密码项，其中 <code>&lt;password-name&gt;</code> 可以通过 <code>/</code> 来建立层级，放映在目录上就是父子目录</li>\r\n<li><code>pass</code>：查看所有密码</li>\r\n<li><code>pass &lt;password-name&gt;</code>：取回密码信息</li>\r\n<li><code>pass generate &lt;password-name&gt; n</code>：生成 10 个字符的密码</li>\r\n<li><code>pass rm &lt;password-name&gt;</code>：删除密码项</li>\r\n</ul>\r\n<h2 id=\"其它\">其它</h2>\r\n<ul>\r\n<li><code>gpg</code> 列出密钥：<code>gpg --list-keys</code>。第一行是公钥文件路径，第二行是公钥信息，第三行是用户 ID，第四行是私钥信息</li>\r\n</ul>\r\n<h2 id=\"参考\">参考</h2>\r\n<ul>\r\n<li><a href=\"https://www.passwordstore.org\" target=\"_blank\" rel=\"noopener\">pass - the standard unix password manager</a></li>\r\n<li><a href=\"https://linux.cn/article-3155-1.html\" target=\"_blank\" rel=\"noopener\">如何在Linux上使用命令行管理密码</a></li>\r\n<li><a href=\"http://www.jianshu.com/p/1257dbf3ed8e\" target=\"_blank\" rel=\"noopener\">GPG入门</a></li>\r\n</ul>"},{"title":"Windows 问题与技巧","date":"2018-01-24T12:39:34.000Z","_content":"\n记录 Windows {% fa windows fw %} 下遇到的问题、技巧与备忘。\n\n<!-- more -->\n\n1. JetBrains 的 Vim 插件配置文件放在 `~/.ideavimrc`\n1. MS Access 自动切换输入法修复方法： Options -> Client Settings -> Datasheet IME control\n1. 关闭恼人的 `Connected User Experiences and Telemetry` 服务：\n    1. 打开计划任务程序，定位到 Microsoft - Windows - Application Experience，禁用 Microsoft Compatibility Appraiser\n    1. 打开服务，禁用 Connected User Experiences and Telemetry\n    1. 打开组策略，依次定位 Computer Configuration -  Administrative Templates - Windows Components - Data Collection and Preview Builds - Allow Telemetry，设为 Disabled\n1. 卸载 OneDrive：\n   1. 不让 OneDrive 弹出： `Win-X-A` - `taskkill /f /im OneDrive.exe`\n   2. `%SystemRoot%\\SysWOW64\\OneDriveSetup.exe /uninstall`（注意系统位）\n1. Mobaxterm 中设置 Cygwin 的源：\n    - `apt-cyg -m http://mirrors.neusoft.edu.cn/cygwin/ install/remove. ...`\n    - `apt-cyg -m http://mirrors.ustc.edu.cn/cygwin/ install/remove ...`\n    - `apt-cyg -m http://mirrors.aliyun.com/cygwin/ install/remove ...`\n    - `apt-cyg -m http://mirrors.163.com/cygwin/ install/remove ...`\n1. MobaXterm 中的 Cygwin 如有命令出错，有可能是版本过低\n1. MobaXterm 中如果无法安装包（一般出现校验值错误的情况），可手动下载 `setup.ini`，注意版本为 `x86`\n1. Sublime Text 插件 SFTP 注册码：（在 `Settings-User` 中加入）\n   {% codeblock lang:json %}\n   {\n       \"email\":\"Rimke@163.com\",\n       \"product_key\":\"e83eda-38644b-43c828-e3669b-cd8a85\",\n   }\n   {% endcodeblock %}\n1. Sublime Text 插件 AStyleFormatter 报错：安装 Microsoft Visual C++ 2010 SP1 Redistributable Package (x64)\n1. Sublime Text 主题插件 Boxy 深度定制：\n    - `Boxy` 侧边栏背景色：`Sidebar Tree Defaults - \"sidebar_tree\"`\n    - `Boxy` 侧边栏分隔：`\"class\": sidebar_container\"，\"layer0.tint\"`\n1. Potplayer 遇到「单声道」的情况，将声音 - 环绕置 0 即可\n1. 任务栏透明: [StartIsBack](http://www.zdfans.com/5573.html)\n1. win 7 下一些控件、动态链接库无法注册问题的终极解决办法（**不推荐**）:\n   激活并登陆 `Administrator` 账户（一定必须为该名称，   即使为管理员账户也不能行使此账户的一些职权）\n1. 清除各种显卡右键菜单：\n    - Nvidia：\n      - 清除：`regsvr32 /u nvcpl.dll`\n      - 显示：`regsvr32 nvcpl.dll`\n    - Intel：\n      - 清除：`regsvr32 /u igfxsrvc.dll`\n      - 显示：`regsvr32 igfxsrvc.dll`\n    - Ati：\n      - 清除：`regsvr32 /u atiacmxx.dll`\n      - 显示：`regsvr32 atiacmxx.dll`\n    - Intel集成：\n      - 清除：`regsvr32 /u igfxpph.dll`\n      - 显示：`regsvr32 igfxpph.dll`\n1. 修复 vbs 默认打开方式：`cmd /c cscript/h:wscript`\n1. 无法附着到任务栏：\n   {% codeblock lang:dos %}\n   cmd /k reg add \"HKEY_CLASSES_ROOT\\lnkfile\" /v IsShortcut /f\n   cmd /k reg add \"HKEY_CLASSES_ROOT\\piffile\" /v IsShortcut /f\n   cmd /k taskkill /f /im explorer.exe & explorer.exe\n   {% endcodeblock %}\n1. 启动项文件夹：`shell:Startup`\n1. Cygwin 中 Mintty 快捷方式：`mintty.exe -i /Cygwin-Terminal.ico -`\n1. npm 路径：`C:\\Users\\xxx\\AppData\\Roaming\\npm`\n1. tlmgr 更换 repository：\n   {% codeblock lang:bash %}\n   tlmgr option repository http://mirrors.aliyun.com/CTAN/systems/texlive/tlnet\n   tlmgr option repository http://mirrors.ustc.edu.cn/CTAN/systems/texlive/tlnet\n   {% endcodeblock %}\n   CLI 下更新：\n   {% codeblock lang:bash %}\n   tlmgr update --self --repository http://mirrors.aliyun.com/CTAN/systems/texlive/tlnet/\n   tlmgr update --all --repository http://mirrors.aliyun.com/CTAN/systems/texlive/tlnet/\n   {% endcodeblock %}\n1. Sublime Text 插件 SublimeREPL 出现\n   `OSError: [WinError 6] The handle is invalid` 解决方案：\n   {% codeblock Data/Packages/SublimeREPL/repls/subprocess_repl.py lang:python %}\n   def is_alive(self):\n       return True\n   {% endcodeblock %}\n1. Sublime Text 开启 Debug 模式：`sublime.log_commands(True)`\n1. 华丽的提示符：添加环境变量 `PROMPT`，比如 `[ $e[35;40mNasty-Newbie$e[0m $b $e[1;33;40m$d $t$e[0m $b $e[1;31m$p$e[0m ]$_$e[1;33mλ$e[0m `，显示成：\n   {% codeblock %}\n   [ Nasty-Newbie | Sun 09/09/2018 21:52:58.55 | C:\\Users\\Heller ]\n   λ \n   {% endcodeblock %}\n1. `MSYS2` 中自动挂载文件：`/etc/fstab`，比如：\n   {% codeblock %}\n   # For a description of the file format, see the Users Guide\n   # http://cygwin.com/cygwin-ug-net/using.html#mount-table\n\n   # DO NOT REMOVE NEXT LINE. It remove cygdrive prefix from path\n   none / cygdrive binary,posix=0,noacl,user 0 0\n   C:\\Users\\Michael\\Desktop /desktop\n   D:\\MSYS2\\home\\Michael\\Notes /notes\n   F:\\WorkingDirectory\\Work\\__current /current\n   {% endcodeblock %}\n1. Chrome 浏览器在高分屏幕下的快捷方式：\n   {% codeblock %}\n   \"\\chrome.exe\" /high-dpi-support=1 /force-device-scale-factor=1\n   {% endcodeblock %}\n1. 为 [SourceForge](https://sourceforge.net) 加速：\n   [http://sourceforge.mirrorservice.org](http://sourceforge.mirrorservice.org)\n1. Sublime Text 插件 LaTeXTools 关于 PDF 阅读器 SumaptraPDF 反向搜索的设置：\n   {% codeblock lang:dos %}\n   sumatrapdf.exe -inverse-search \"\\\"C:\\Program Files\\Sublime Text 3\\sublime_text.exe\\\" \\\"%f:%l\\\"\"\n   {% endcodeblock %}\n   关于公式不能预览的问题：手动从 [Ghostscript 官网](https://ghostscript.com)\n   安装，并将环境路径添加至 `TexLive` 路径前面; 添加 ImageMagick 的环境路径\n1. Mathtype 的官方安装包名为 `InstallMTW6.9b.exe`\n1. Avast 杀毒软件的安装需要取消勾选 `Real Site`（中文名可能为 `DNS` 相关），否则网速奇慢！顺便，防火墙也别装了，简直神坑！\n1. Avast 添加排除目录（添加信任）：`Settings` - `Components` - `File Shield` && `Behavior Shield` - `Customize` - `Exclusions`，否则某些程序会无端卡死（比如赖以生存的 `ConEmu`）\n1. 用 UltraISO 刻录的 Windows 10 系统 U 盘无法创建分区（提示为 MBR / GPT\n   分区）解决方案：删除 U 盘中文件夹 `efi/` 以及文件 `bootmgr.efi`\n1. TeamViewer(TV) 提示\n\n   > The screen cannot be captured at the moment.\n   > This is probably due to fast user switching or a disconnected/minimized\n   > Remote Desktop session.\n\n   且场景为：被连接的机器为笔记本，盒上盖子，已打开 tv 服务。\n   解决方案：\n   - 打开笔记本盖子\n   - 或将一根 HDMI 线连接至显示器\n1. Sublime Text 插件 Anaconda 显示类似如下错误且伴有切换至 `python` 文件卡顿：\n   {% codeblock %}\n   <Anaconda.anaconda_lib.workers.local_worker.LocalWorker object at 0x000001EA4B464FD0> initial check failed because:\n   connection to localhost:51568 timed out after 0.2s. tried to connect 7 times during 2 seconds\n   check that there is Python process executing the anaconda jsonserver.py script running in your system. If there is, check that you can connect to your localhost writing the following script in your Sublime Text 3 console:\n   import socket; socket.socket(socket.AF_INET, socket.SOCK_STREAM).connect((\"localhost\", 51568))\n   {% endcodeblock %}\n   场景：MSYS2 环境变量 `/usr/bin`，`/mingw64/bin`；Anaconda 没有加入环境变量。\n   解决方案：将 `\"python_interpreter\": \"/path/to/python_exe\"` 加入**用户配置文件** `Preferences.sublime-settings`\n1. Xshell 5 中 `Shift-Tab` 效果却为切换标签处理办法：设置一次针对 `Shift-Tab` 的快捷键，再取消设置这个快捷键\n1. Word 里面用 Mathtype 编辑的公式用默认的方法导出 PDF 文件时出现各类显示问题：改用 [doPDF](http://www.dopdf.com)\n1. Sublime Text 插件 Clang Format 令其对全文件格式化： [Format whole file if nothing selected](https://github.com/rosshemsley/SublimeClangFormat/pull/10/commits/ea22686f40009104935a0378b7c4fd387121c8a1)\n1. Sublime Text 插件 LaTeXTools 中公式渲染/预览不全解决方案：\n   配置文件中为 `preview_math_template_preamble` 添加 `\\usepackage[margin=2cm]{geometry}`\n1. Windows 批处理在后台运行程序：`start /b xxx`，输出会在当前窗口（当然可以通过 `>nul 2>&1` 抑制输出），但是可以进行其他操作（有点类似于 *nix 中的 `&`）。或者 `start /min \"\" program params`，会在最小化的新窗口中运行程序，同时控制权交给当前终端\n1. Potplayer 关闭左上角的进度显示：基本 -> 消息 -> 取消勾选「在屏幕上显示播放信息」\n1. 自动锁屏可在屏幕保护程序中进行设置，即便是空的锁屏样式\n1. MSYS2 中安装 `watch`：`pacman -S procps-ng`\n1. GNU 工具源码镜像：[http://mirrors.ustc.edu.cn/gnu](http://mirrors.ustc.edu.cn/gnu)\n1. Ghost 系统桌面出现顽固图标注册表：\n   {% codeblock %}\n   HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Desktop\\NameSpace\n   {% endcodeblock %}\n1. 列出所有 Windows 服务状态: `sc queryex type= service state= all | find /i \"NATION\"`\n1. 删除 Outlook 所有账户。Outlook 删除到最后一个账户不给删除了，解决方案如下：\n   1. Close Outlook.\n   2. Run Windows Control Panel.\n   3. Open the \"Mail（Microsoft Outlook 2016）\" applet and click the \"Show Profiles...\" button.\n   4. Remove the existing \"Outlook\" profile.\n   5. Add a new profile, name it \"Outlook\" and create a new account as needed.\n1. Clion 中遇到输入时结果显现两次处理方案：`C-S-a`，输入 `registry`，取消勾选 `run.processes.with.pty`\n   （参考 [User input appears twice in output window in CLion under MinGW](https://youtrack.jetbrains.com/issue/CPP-2580)）\n1. Windows 10 彻底禁用自动更新方案：\n   1. `services.msc` 中设置 `Windows Update` 服务为禁用，并在 `Recovery` 中设置为不恢复\n   1. `gpedit.msc` 中: `Computer Configuration` - `Administrative Templates` -\n      `Windows Components` - `Windows Update` - `Specify intranet ...`，启用此策略，并将 3 个服务器地址设为 `127.0.0.1`\n1. 解决 Microsoft Word 打开时自动切换输入法问题: 选项 - 高级 - 编辑选项 -\n   取消勾选「输入法控制处于活动状态」\n1. Word 2016 中设置正文分栏而脚注不分栏：脚注区右键菜单 - 便笺选项 - 列 - 1 列。\n   **注：** Word 2003 及之前版本如此设置无效\n1. 安装完 Mathtype 后 PowerPoint 2016 打开报错「无法加载 ...ppam 加载项」，所以干脆不用，在 Windows 10 (1709) 注册表中的位置为  \n   {% codeblock %}\n   Computer\\HKEY_LOCAL_MACHINE\\SOFTWARE\\WOW6432Node\\Microsoft\\Office\\16.0\\PowerPoint\\AddIns\\MathType AddIn (PowerPoint 2016)\n   {% endcodeblock %}\n   删除即可\n1. 右键打开方式中程序列表所在注册表路径：\n   {% codeblock %}\n   HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\n   {% endcodeblock %}\n1. Microsoft Word 中设置边框时要记得重新应用边框，否则应用无效\n1. 往 Microsoft Word 里面插入矢量图时建议使用 `.wmf` 类型文件，`.emf` 文件在另存为 PDF 文件时可能导致图片严重失真\n1. Windows 下给快捷方式指派的快捷键有明显延迟解决方案：[slow windows desktop keyboard shortcuts](https://superuser.com/questions/426947/slow-windows-desktop-keyboard-shortcuts)\n1. 修改 Windows 用户名：\n   1. 以其它管理员用户 B 身份登录系统，并注销需要改名的用户 A（如果这个用户已经登录的话）。如仅有一个用户，可考虑新建管理员账户，或开启默认被禁止的 Administrator 账户（计算机管理 - 系统工具 - 本地用户和组 - 用户 - Administrator - 取消勾选账户已禁用）\n   1. 直接修改用户 A 的用户目录名（「运行」输入 `..`，将文件夹 A 改名为 C）\n   1. 找到注册表项\n      ```\n      HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\ProfileList\\<User SID>\\\n      ```\n      并将其改为 `C:\\Users\\C`。  \n      「注」如何定位到 `<User SID>`：每个 `<User SID>` 的子键 `ProfileImagePath` 即为此用户的 `Profile` 目录，找到用户目录为 A 的键即可\n   1. 「运行」中键入 `netplwiz`，双击用户 A 将用户名修改为 C，重启\n1. NVIDIA 显卡搭载部分显示器屏幕发白 / 虚，可通过自定义 NVIDIA 色彩设定：\n   - Desktop Color Depth: `Highest (32-bit)`\n   - Output Color Depth: `8 bpc`\n   - Output Color format: `YCbCr444`\n   - Output dynamic range: `Limited`\n1. 更改右键菜单相对于鼠标点击处的位置：运行中键入\n   ```\n   shell:::{80F3F1D5-FECA-45F3-BC32-752C152E456E}\n   ```\n   在弹出对话框 `Tablet PC Settings` 中切换用手习惯 `Handedness`\n1. Chrome 浏览器默认支持 Flash 需更改注册表项：\n   {% codeblock chrome_flash.reg %}\n   Windows Registry Editor Version 5.00\n   [HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Google\\Chrome]\n   \"AllowOutdatedPlugins\"=dword:00000001\n   \"RunAllFlashInAllowMode\"=dword:00000001\n   \"DefaultPluginsSetting\"=dword:00000001\n   \"HardwareAccelerationModeEnabled\"=dword:00000001\n   [HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Google\\Chrome\\PluginsAllowedForUrls]\n   \"1\"=\"https://*\"\n   \"2\"=\"http://*\"\n   {% endcodeblock %}\n1. Windows 10 蓝牙耳机 / 音箱连接后无法通过系统音量调节解决方案：将注册表项\n   ```\n   HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\Control\\Bluetooth\\Audio\\AVRCP\\CT\n   ```\n   中的 `DisableAbsoluteVolume` 值（DWORD32）改为 `1`\n","source":"_posts/problems-tricks-and-memo-on-windows.md","raw":"---\ntitle: Windows 问题与技巧\ndate: 2018-01-24 20:39:34\ntags:\n    - Windows\ncategories: Tips and Tricks\n---\n\n记录 Windows {% fa windows fw %} 下遇到的问题、技巧与备忘。\n\n<!-- more -->\n\n1. JetBrains 的 Vim 插件配置文件放在 `~/.ideavimrc`\n1. MS Access 自动切换输入法修复方法： Options -> Client Settings -> Datasheet IME control\n1. 关闭恼人的 `Connected User Experiences and Telemetry` 服务：\n    1. 打开计划任务程序，定位到 Microsoft - Windows - Application Experience，禁用 Microsoft Compatibility Appraiser\n    1. 打开服务，禁用 Connected User Experiences and Telemetry\n    1. 打开组策略，依次定位 Computer Configuration -  Administrative Templates - Windows Components - Data Collection and Preview Builds - Allow Telemetry，设为 Disabled\n1. 卸载 OneDrive：\n   1. 不让 OneDrive 弹出： `Win-X-A` - `taskkill /f /im OneDrive.exe`\n   2. `%SystemRoot%\\SysWOW64\\OneDriveSetup.exe /uninstall`（注意系统位）\n1. Mobaxterm 中设置 Cygwin 的源：\n    - `apt-cyg -m http://mirrors.neusoft.edu.cn/cygwin/ install/remove. ...`\n    - `apt-cyg -m http://mirrors.ustc.edu.cn/cygwin/ install/remove ...`\n    - `apt-cyg -m http://mirrors.aliyun.com/cygwin/ install/remove ...`\n    - `apt-cyg -m http://mirrors.163.com/cygwin/ install/remove ...`\n1. MobaXterm 中的 Cygwin 如有命令出错，有可能是版本过低\n1. MobaXterm 中如果无法安装包（一般出现校验值错误的情况），可手动下载 `setup.ini`，注意版本为 `x86`\n1. Sublime Text 插件 SFTP 注册码：（在 `Settings-User` 中加入）\n   {% codeblock lang:json %}\n   {\n       \"email\":\"Rimke@163.com\",\n       \"product_key\":\"e83eda-38644b-43c828-e3669b-cd8a85\",\n   }\n   {% endcodeblock %}\n1. Sublime Text 插件 AStyleFormatter 报错：安装 Microsoft Visual C++ 2010 SP1 Redistributable Package (x64)\n1. Sublime Text 主题插件 Boxy 深度定制：\n    - `Boxy` 侧边栏背景色：`Sidebar Tree Defaults - \"sidebar_tree\"`\n    - `Boxy` 侧边栏分隔：`\"class\": sidebar_container\"，\"layer0.tint\"`\n1. Potplayer 遇到「单声道」的情况，将声音 - 环绕置 0 即可\n1. 任务栏透明: [StartIsBack](http://www.zdfans.com/5573.html)\n1. win 7 下一些控件、动态链接库无法注册问题的终极解决办法（**不推荐**）:\n   激活并登陆 `Administrator` 账户（一定必须为该名称，   即使为管理员账户也不能行使此账户的一些职权）\n1. 清除各种显卡右键菜单：\n    - Nvidia：\n      - 清除：`regsvr32 /u nvcpl.dll`\n      - 显示：`regsvr32 nvcpl.dll`\n    - Intel：\n      - 清除：`regsvr32 /u igfxsrvc.dll`\n      - 显示：`regsvr32 igfxsrvc.dll`\n    - Ati：\n      - 清除：`regsvr32 /u atiacmxx.dll`\n      - 显示：`regsvr32 atiacmxx.dll`\n    - Intel集成：\n      - 清除：`regsvr32 /u igfxpph.dll`\n      - 显示：`regsvr32 igfxpph.dll`\n1. 修复 vbs 默认打开方式：`cmd /c cscript/h:wscript`\n1. 无法附着到任务栏：\n   {% codeblock lang:dos %}\n   cmd /k reg add \"HKEY_CLASSES_ROOT\\lnkfile\" /v IsShortcut /f\n   cmd /k reg add \"HKEY_CLASSES_ROOT\\piffile\" /v IsShortcut /f\n   cmd /k taskkill /f /im explorer.exe & explorer.exe\n   {% endcodeblock %}\n1. 启动项文件夹：`shell:Startup`\n1. Cygwin 中 Mintty 快捷方式：`mintty.exe -i /Cygwin-Terminal.ico -`\n1. npm 路径：`C:\\Users\\xxx\\AppData\\Roaming\\npm`\n1. tlmgr 更换 repository：\n   {% codeblock lang:bash %}\n   tlmgr option repository http://mirrors.aliyun.com/CTAN/systems/texlive/tlnet\n   tlmgr option repository http://mirrors.ustc.edu.cn/CTAN/systems/texlive/tlnet\n   {% endcodeblock %}\n   CLI 下更新：\n   {% codeblock lang:bash %}\n   tlmgr update --self --repository http://mirrors.aliyun.com/CTAN/systems/texlive/tlnet/\n   tlmgr update --all --repository http://mirrors.aliyun.com/CTAN/systems/texlive/tlnet/\n   {% endcodeblock %}\n1. Sublime Text 插件 SublimeREPL 出现\n   `OSError: [WinError 6] The handle is invalid` 解决方案：\n   {% codeblock Data/Packages/SublimeREPL/repls/subprocess_repl.py lang:python %}\n   def is_alive(self):\n       return True\n   {% endcodeblock %}\n1. Sublime Text 开启 Debug 模式：`sublime.log_commands(True)`\n1. 华丽的提示符：添加环境变量 `PROMPT`，比如 `[ $e[35;40mNasty-Newbie$e[0m $b $e[1;33;40m$d $t$e[0m $b $e[1;31m$p$e[0m ]$_$e[1;33mλ$e[0m `，显示成：\n   {% codeblock %}\n   [ Nasty-Newbie | Sun 09/09/2018 21:52:58.55 | C:\\Users\\Heller ]\n   λ \n   {% endcodeblock %}\n1. `MSYS2` 中自动挂载文件：`/etc/fstab`，比如：\n   {% codeblock %}\n   # For a description of the file format, see the Users Guide\n   # http://cygwin.com/cygwin-ug-net/using.html#mount-table\n\n   # DO NOT REMOVE NEXT LINE. It remove cygdrive prefix from path\n   none / cygdrive binary,posix=0,noacl,user 0 0\n   C:\\Users\\Michael\\Desktop /desktop\n   D:\\MSYS2\\home\\Michael\\Notes /notes\n   F:\\WorkingDirectory\\Work\\__current /current\n   {% endcodeblock %}\n1. Chrome 浏览器在高分屏幕下的快捷方式：\n   {% codeblock %}\n   \"\\chrome.exe\" /high-dpi-support=1 /force-device-scale-factor=1\n   {% endcodeblock %}\n1. 为 [SourceForge](https://sourceforge.net) 加速：\n   [http://sourceforge.mirrorservice.org](http://sourceforge.mirrorservice.org)\n1. Sublime Text 插件 LaTeXTools 关于 PDF 阅读器 SumaptraPDF 反向搜索的设置：\n   {% codeblock lang:dos %}\n   sumatrapdf.exe -inverse-search \"\\\"C:\\Program Files\\Sublime Text 3\\sublime_text.exe\\\" \\\"%f:%l\\\"\"\n   {% endcodeblock %}\n   关于公式不能预览的问题：手动从 [Ghostscript 官网](https://ghostscript.com)\n   安装，并将环境路径添加至 `TexLive` 路径前面; 添加 ImageMagick 的环境路径\n1. Mathtype 的官方安装包名为 `InstallMTW6.9b.exe`\n1. Avast 杀毒软件的安装需要取消勾选 `Real Site`（中文名可能为 `DNS` 相关），否则网速奇慢！顺便，防火墙也别装了，简直神坑！\n1. Avast 添加排除目录（添加信任）：`Settings` - `Components` - `File Shield` && `Behavior Shield` - `Customize` - `Exclusions`，否则某些程序会无端卡死（比如赖以生存的 `ConEmu`）\n1. 用 UltraISO 刻录的 Windows 10 系统 U 盘无法创建分区（提示为 MBR / GPT\n   分区）解决方案：删除 U 盘中文件夹 `efi/` 以及文件 `bootmgr.efi`\n1. TeamViewer(TV) 提示\n\n   > The screen cannot be captured at the moment.\n   > This is probably due to fast user switching or a disconnected/minimized\n   > Remote Desktop session.\n\n   且场景为：被连接的机器为笔记本，盒上盖子，已打开 tv 服务。\n   解决方案：\n   - 打开笔记本盖子\n   - 或将一根 HDMI 线连接至显示器\n1. Sublime Text 插件 Anaconda 显示类似如下错误且伴有切换至 `python` 文件卡顿：\n   {% codeblock %}\n   <Anaconda.anaconda_lib.workers.local_worker.LocalWorker object at 0x000001EA4B464FD0> initial check failed because:\n   connection to localhost:51568 timed out after 0.2s. tried to connect 7 times during 2 seconds\n   check that there is Python process executing the anaconda jsonserver.py script running in your system. If there is, check that you can connect to your localhost writing the following script in your Sublime Text 3 console:\n   import socket; socket.socket(socket.AF_INET, socket.SOCK_STREAM).connect((\"localhost\", 51568))\n   {% endcodeblock %}\n   场景：MSYS2 环境变量 `/usr/bin`，`/mingw64/bin`；Anaconda 没有加入环境变量。\n   解决方案：将 `\"python_interpreter\": \"/path/to/python_exe\"` 加入**用户配置文件** `Preferences.sublime-settings`\n1. Xshell 5 中 `Shift-Tab` 效果却为切换标签处理办法：设置一次针对 `Shift-Tab` 的快捷键，再取消设置这个快捷键\n1. Word 里面用 Mathtype 编辑的公式用默认的方法导出 PDF 文件时出现各类显示问题：改用 [doPDF](http://www.dopdf.com)\n1. Sublime Text 插件 Clang Format 令其对全文件格式化： [Format whole file if nothing selected](https://github.com/rosshemsley/SublimeClangFormat/pull/10/commits/ea22686f40009104935a0378b7c4fd387121c8a1)\n1. Sublime Text 插件 LaTeXTools 中公式渲染/预览不全解决方案：\n   配置文件中为 `preview_math_template_preamble` 添加 `\\usepackage[margin=2cm]{geometry}`\n1. Windows 批处理在后台运行程序：`start /b xxx`，输出会在当前窗口（当然可以通过 `>nul 2>&1` 抑制输出），但是可以进行其他操作（有点类似于 *nix 中的 `&`）。或者 `start /min \"\" program params`，会在最小化的新窗口中运行程序，同时控制权交给当前终端\n1. Potplayer 关闭左上角的进度显示：基本 -> 消息 -> 取消勾选「在屏幕上显示播放信息」\n1. 自动锁屏可在屏幕保护程序中进行设置，即便是空的锁屏样式\n1. MSYS2 中安装 `watch`：`pacman -S procps-ng`\n1. GNU 工具源码镜像：[http://mirrors.ustc.edu.cn/gnu](http://mirrors.ustc.edu.cn/gnu)\n1. Ghost 系统桌面出现顽固图标注册表：\n   {% codeblock %}\n   HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Desktop\\NameSpace\n   {% endcodeblock %}\n1. 列出所有 Windows 服务状态: `sc queryex type= service state= all | find /i \"NATION\"`\n1. 删除 Outlook 所有账户。Outlook 删除到最后一个账户不给删除了，解决方案如下：\n   1. Close Outlook.\n   2. Run Windows Control Panel.\n   3. Open the \"Mail（Microsoft Outlook 2016）\" applet and click the \"Show Profiles...\" button.\n   4. Remove the existing \"Outlook\" profile.\n   5. Add a new profile, name it \"Outlook\" and create a new account as needed.\n1. Clion 中遇到输入时结果显现两次处理方案：`C-S-a`，输入 `registry`，取消勾选 `run.processes.with.pty`\n   （参考 [User input appears twice in output window in CLion under MinGW](https://youtrack.jetbrains.com/issue/CPP-2580)）\n1. Windows 10 彻底禁用自动更新方案：\n   1. `services.msc` 中设置 `Windows Update` 服务为禁用，并在 `Recovery` 中设置为不恢复\n   1. `gpedit.msc` 中: `Computer Configuration` - `Administrative Templates` -\n      `Windows Components` - `Windows Update` - `Specify intranet ...`，启用此策略，并将 3 个服务器地址设为 `127.0.0.1`\n1. 解决 Microsoft Word 打开时自动切换输入法问题: 选项 - 高级 - 编辑选项 -\n   取消勾选「输入法控制处于活动状态」\n1. Word 2016 中设置正文分栏而脚注不分栏：脚注区右键菜单 - 便笺选项 - 列 - 1 列。\n   **注：** Word 2003 及之前版本如此设置无效\n1. 安装完 Mathtype 后 PowerPoint 2016 打开报错「无法加载 ...ppam 加载项」，所以干脆不用，在 Windows 10 (1709) 注册表中的位置为  \n   {% codeblock %}\n   Computer\\HKEY_LOCAL_MACHINE\\SOFTWARE\\WOW6432Node\\Microsoft\\Office\\16.0\\PowerPoint\\AddIns\\MathType AddIn (PowerPoint 2016)\n   {% endcodeblock %}\n   删除即可\n1. 右键打开方式中程序列表所在注册表路径：\n   {% codeblock %}\n   HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\n   {% endcodeblock %}\n1. Microsoft Word 中设置边框时要记得重新应用边框，否则应用无效\n1. 往 Microsoft Word 里面插入矢量图时建议使用 `.wmf` 类型文件，`.emf` 文件在另存为 PDF 文件时可能导致图片严重失真\n1. Windows 下给快捷方式指派的快捷键有明显延迟解决方案：[slow windows desktop keyboard shortcuts](https://superuser.com/questions/426947/slow-windows-desktop-keyboard-shortcuts)\n1. 修改 Windows 用户名：\n   1. 以其它管理员用户 B 身份登录系统，并注销需要改名的用户 A（如果这个用户已经登录的话）。如仅有一个用户，可考虑新建管理员账户，或开启默认被禁止的 Administrator 账户（计算机管理 - 系统工具 - 本地用户和组 - 用户 - Administrator - 取消勾选账户已禁用）\n   1. 直接修改用户 A 的用户目录名（「运行」输入 `..`，将文件夹 A 改名为 C）\n   1. 找到注册表项\n      ```\n      HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\ProfileList\\<User SID>\\\n      ```\n      并将其改为 `C:\\Users\\C`。  \n      「注」如何定位到 `<User SID>`：每个 `<User SID>` 的子键 `ProfileImagePath` 即为此用户的 `Profile` 目录，找到用户目录为 A 的键即可\n   1. 「运行」中键入 `netplwiz`，双击用户 A 将用户名修改为 C，重启\n1. NVIDIA 显卡搭载部分显示器屏幕发白 / 虚，可通过自定义 NVIDIA 色彩设定：\n   - Desktop Color Depth: `Highest (32-bit)`\n   - Output Color Depth: `8 bpc`\n   - Output Color format: `YCbCr444`\n   - Output dynamic range: `Limited`\n1. 更改右键菜单相对于鼠标点击处的位置：运行中键入\n   ```\n   shell:::{80F3F1D5-FECA-45F3-BC32-752C152E456E}\n   ```\n   在弹出对话框 `Tablet PC Settings` 中切换用手习惯 `Handedness`\n1. Chrome 浏览器默认支持 Flash 需更改注册表项：\n   {% codeblock chrome_flash.reg %}\n   Windows Registry Editor Version 5.00\n   [HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Google\\Chrome]\n   \"AllowOutdatedPlugins\"=dword:00000001\n   \"RunAllFlashInAllowMode\"=dword:00000001\n   \"DefaultPluginsSetting\"=dword:00000001\n   \"HardwareAccelerationModeEnabled\"=dword:00000001\n   [HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Google\\Chrome\\PluginsAllowedForUrls]\n   \"1\"=\"https://*\"\n   \"2\"=\"http://*\"\n   {% endcodeblock %}\n1. Windows 10 蓝牙耳机 / 音箱连接后无法通过系统音量调节解决方案：将注册表项\n   ```\n   HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\Control\\Bluetooth\\Audio\\AVRCP\\CT\n   ```\n   中的 `DisableAbsoluteVolume` 值（DWORD32）改为 `1`\n","slug":"problems-tricks-and-memo-on-windows","published":1,"updated":"2023-03-12T05:39:07.737Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u336v002qp4x0ntsyse8d","content":"<p>记录 Windows <i class=\"fa fa-windows fa-fw\"></i> 下遇到的问题、技巧与备忘。</p>\r\n<a id=\"more\"></a>\r\n<ol type=\"1\">\r\n<li><p>JetBrains 的 Vim 插件配置文件放在 <code>~/.ideavimrc</code></p></li>\r\n<li><p>MS Access 自动切换输入法修复方法： Options -&gt; Client Settings -&gt; Datasheet IME control</p></li>\r\n<li><p>关闭恼人的 <code>Connected User Experiences and Telemetry</code> 服务：</p>\r\n<ol type=\"1\">\r\n<li>打开计划任务程序，定位到 Microsoft - Windows - Application Experience，禁用 Microsoft Compatibility Appraiser</li>\r\n<li>打开服务，禁用 Connected User Experiences and Telemetry</li>\r\n<li>打开组策略，依次定位 Computer Configuration - Administrative Templates - Windows Components - Data Collection and Preview Builds - Allow Telemetry，设为 Disabled</li>\r\n</ol></li>\r\n<li><p>卸载 OneDrive：</p>\r\n<ol type=\"1\">\r\n<li>不让 OneDrive 弹出： <code>Win-X-A</code> - <code>taskkill /f /im OneDrive.exe</code></li>\r\n<li><code>%SystemRoot%\\SysWOW64\\OneDriveSetup.exe /uninstall</code>（注意系统位）</li>\r\n</ol></li>\r\n<li><p>Mobaxterm 中设置 Cygwin 的源：</p>\r\n<ul>\r\n<li><code>apt-cyg -m http://mirrors.neusoft.edu.cn/cygwin/ install/remove. ...</code></li>\r\n<li><code>apt-cyg -m http://mirrors.ustc.edu.cn/cygwin/ install/remove ...</code></li>\r\n<li><code>apt-cyg -m http://mirrors.aliyun.com/cygwin/ install/remove ...</code></li>\r\n<li><code>apt-cyg -m http://mirrors.163.com/cygwin/ install/remove ...</code></li>\r\n</ul></li>\r\n<li><p>MobaXterm 中的 Cygwin 如有命令出错，有可能是版本过低</p></li>\r\n<li><p>MobaXterm 中如果无法安装包（一般出现校验值错误的情况），可手动下载 <code>setup.ini</code>，注意版本为 <code>x86</code></p></li>\r\n<li><p>Sublime Text 插件 SFTP 注册码：（在 <code>Settings-User</code> 中加入） <figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"email\"</span>:<span class=\"string\">\"Rimke@163.com\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"product_key\"</span>:<span class=\"string\">\"e83eda-38644b-43c828-e3669b-cd8a85\"</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>Sublime Text 插件 AStyleFormatter 报错：安装 Microsoft Visual C++ 2010 SP1 Redistributable Package (x64)</p></li>\r\n<li><p>Sublime Text 主题插件 Boxy 深度定制：</p>\r\n<ul>\r\n<li><code>Boxy</code> 侧边栏背景色：<code>Sidebar Tree Defaults - \"sidebar_tree\"</code></li>\r\n<li><code>Boxy</code> 侧边栏分隔：<code>\"class\": sidebar_container\"，\"layer0.tint\"</code></li>\r\n</ul></li>\r\n<li><p>Potplayer 遇到「单声道」的情况，将声音 - 环绕置 0 即可</p></li>\r\n<li><p>任务栏透明: <a href=\"http://www.zdfans.com/5573.html\" target=\"_blank\" rel=\"noopener\">StartIsBack</a></p></li>\r\n<li><p>win 7 下一些控件、动态链接库无法注册问题的终极解决办法（<strong>不推荐</strong>）: 激活并登陆 <code>Administrator</code> 账户（一定必须为该名称， 即使为管理员账户也不能行使此账户的一些职权）</p></li>\r\n<li><p>清除各种显卡右键菜单：</p>\r\n<ul>\r\n<li>Nvidia：\r\n<ul>\r\n<li>清除：<code>regsvr32 /u nvcpl.dll</code></li>\r\n<li>显示：<code>regsvr32 nvcpl.dll</code></li>\r\n</ul></li>\r\n<li>Intel：\r\n<ul>\r\n<li>清除：<code>regsvr32 /u igfxsrvc.dll</code></li>\r\n<li>显示：<code>regsvr32 igfxsrvc.dll</code></li>\r\n</ul></li>\r\n<li>Ati：\r\n<ul>\r\n<li>清除：<code>regsvr32 /u atiacmxx.dll</code></li>\r\n<li>显示：<code>regsvr32 atiacmxx.dll</code></li>\r\n</ul></li>\r\n<li>Intel集成：\r\n<ul>\r\n<li>清除：<code>regsvr32 /u igfxpph.dll</code></li>\r\n<li>显示：<code>regsvr32 igfxpph.dll</code></li>\r\n</ul></li>\r\n</ul></li>\r\n<li><p>修复 vbs 默认打开方式：<code>cmd /c cscript/h:wscript</code></p></li>\r\n<li><p>无法附着到任务栏： <figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cmd</span> /k reg add \"HKEY_CLASSES_ROOT\\lnkfile\" /v IsShortcut /f</span><br><span class=\"line\"><span class=\"built_in\">cmd</span> /k reg add \"HKEY_CLASSES_ROOT\\piffile\" /v IsShortcut /f</span><br><span class=\"line\"><span class=\"built_in\">cmd</span> /k <span class=\"built_in\">taskkill</span> /f /im explorer.exe &amp; explorer.exe</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>启动项文件夹：<code>shell:Startup</code></p></li>\r\n<li><p>Cygwin 中 Mintty 快捷方式：<code>mintty.exe -i /Cygwin-Terminal.ico -</code></p></li>\r\n<li><p>npm 路径：<code>C:\\Users\\xxx\\AppData\\Roaming\\npm</code></p></li>\r\n<li><p>tlmgr 更换 repository： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tlmgr option repository http://mirrors.aliyun.com/CTAN/systems/texlive/tlnet</span><br><span class=\"line\">tlmgr option repository http://mirrors.ustc.edu.cn/CTAN/systems/texlive/tlnet</span><br></pre></td></tr></table></figure> CLI 下更新： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tlmgr update --self --repository http://mirrors.aliyun.com/CTAN/systems/texlive/tlnet/</span><br><span class=\"line\">tlmgr update --all --repository http://mirrors.aliyun.com/CTAN/systems/texlive/tlnet/</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>Sublime Text 插件 SublimeREPL 出现 <code>OSError: [WinError 6] The handle is invalid</code> 解决方案： <figure class=\"highlight python\"><figcaption><span>Data/Packages/SublimeREPL/repls/subprocess_repl.py</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">is_alive</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">True</span></span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>Sublime Text 开启 Debug 模式：<code>sublime.log_commands(True)</code></p></li>\r\n<li><p>华丽的提示符：添加环境变量 <code>PROMPT</code>，比如 <code>[ $e[35;40mNasty-Newbie$e[0m $b $e[1;33;40m$d $t$e[0m $b $e[1;31m$p$e[0m ]$_$e[1;33mλ$e[0m</code>，显示成： <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ Nasty-Newbie | Sun 09/09/2018 21:52:58.55 | C:\\Users\\Heller ]</span><br><span class=\"line\">λ </span><br></pre></td></tr></table></figure></p></li>\r\n<li><p><code>MSYS2</code> 中自动挂载文件：<code>/etc/fstab</code>，比如： <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># For a description of the file format, see the Users Guide</span><br><span class=\"line\"># http://cygwin.com/cygwin-ug-net/using.html#mount-table</span><br><span class=\"line\"></span><br><span class=\"line\"># DO NOT REMOVE NEXT LINE. It remove cygdrive prefix from path</span><br><span class=\"line\">none / cygdrive binary,posix=0,noacl,user 0 0</span><br><span class=\"line\">C:\\Users\\Michael\\Desktop /desktop</span><br><span class=\"line\">D:\\MSYS2\\home\\Michael\\Notes /notes</span><br><span class=\"line\">F:\\WorkingDirectory\\Work\\__current /current</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>Chrome 浏览器在高分屏幕下的快捷方式： <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;\\chrome.exe&quot; /high-dpi-support=1 /force-device-scale-factor=1</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>为 <a href=\"https://sourceforge.net\" target=\"_blank\" rel=\"noopener\">SourceForge</a> 加速： <a href=\"http://sourceforge.mirrorservice.org\" target=\"_blank\" rel=\"noopener\">http://sourceforge.mirrorservice.org</a></p></li>\r\n<li><p>Sublime Text 插件 LaTeXTools 关于 PDF 阅读器 SumaptraPDF 反向搜索的设置： <figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sumatrapdf.exe -inverse-search \"\\\"C:\\Program Files\\Sublime Text <span class=\"number\">3</span>\\sublime_text.exe\\\" \\\"<span class=\"variable\">%f:%</span>l\\\"\"</span><br></pre></td></tr></table></figure> 关于公式不能预览的问题：手动从 <a href=\"https://ghostscript.com\" target=\"_blank\" rel=\"noopener\">Ghostscript 官网</a> 安装，并将环境路径添加至 <code>TexLive</code> 路径前面; 添加 ImageMagick 的环境路径</p></li>\r\n<li><p>Mathtype 的官方安装包名为 <code>InstallMTW6.9b.exe</code></p></li>\r\n<li><p>Avast 杀毒软件的安装需要取消勾选 <code>Real Site</code>（中文名可能为 <code>DNS</code> 相关），否则网速奇慢！顺便，防火墙也别装了，简直神坑！</p></li>\r\n<li><p>Avast 添加排除目录（添加信任）：<code>Settings</code> - <code>Components</code> - <code>File Shield</code> &amp;&amp; <code>Behavior Shield</code> - <code>Customize</code> - <code>Exclusions</code>，否则某些程序会无端卡死（比如赖以生存的 <code>ConEmu</code>）</p></li>\r\n<li><p>用 UltraISO 刻录的 Windows 10 系统 U 盘无法创建分区（提示为 MBR / GPT 分区）解决方案：删除 U 盘中文件夹 <code>efi/</code> 以及文件 <code>bootmgr.efi</code></p></li>\r\n<li><p>TeamViewer(TV) 提示</p>\r\n<blockquote>\r\n<p>The screen cannot be captured at the moment. This is probably due to fast user switching or a disconnected/minimized Remote Desktop session.</p>\r\n</blockquote>\r\n<p>且场景为：被连接的机器为笔记本，盒上盖子，已打开 tv 服务。 解决方案：</p>\r\n<ul>\r\n<li>打开笔记本盖子</li>\r\n<li>或将一根 HDMI 线连接至显示器</li>\r\n</ul></li>\r\n<li><p>Sublime Text 插件 Anaconda 显示类似如下错误且伴有切换至 <code>python</code> 文件卡顿： <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;Anaconda.anaconda_lib.workers.local_worker.LocalWorker object at 0x000001EA4B464FD0&gt; initial check failed because:</span><br><span class=\"line\">connection to localhost:51568 timed out after 0.2s. tried to connect 7 times during 2 seconds</span><br><span class=\"line\">check that there is Python process executing the anaconda jsonserver.py script running in your system. If there is, check that you can connect to your localhost writing the following script in your Sublime Text 3 console:</span><br><span class=\"line\">import socket; socket.socket(socket.AF_INET, socket.SOCK_STREAM).connect((&quot;localhost&quot;, 51568))</span><br></pre></td></tr></table></figure> 场景：MSYS2 环境变量 <code>/usr/bin</code>，<code>/mingw64/bin</code>；Anaconda 没有加入环境变量。 解决方案：将 <code>\"python_interpreter\": \"/path/to/python_exe\"</code> 加入<strong>用户配置文件</strong> <code>Preferences.sublime-settings</code></p></li>\r\n<li><p>Xshell 5 中 <code>Shift-Tab</code> 效果却为切换标签处理办法：设置一次针对 <code>Shift-Tab</code> 的快捷键，再取消设置这个快捷键</p></li>\r\n<li><p>Word 里面用 Mathtype 编辑的公式用默认的方法导出 PDF 文件时出现各类显示问题：改用 <a href=\"http://www.dopdf.com\" target=\"_blank\" rel=\"noopener\">doPDF</a></p></li>\r\n<li><p>Sublime Text 插件 Clang Format 令其对全文件格式化： <a href=\"https://github.com/rosshemsley/SublimeClangFormat/pull/10/commits/ea22686f40009104935a0378b7c4fd387121c8a1\" target=\"_blank\" rel=\"noopener\">Format whole file if nothing selected</a></p></li>\r\n<li><p>Sublime Text 插件 LaTeXTools 中公式渲染/预览不全解决方案： 配置文件中为 <code>preview_math_template_preamble</code> 添加 <code>\\usepackage[margin=2cm]{geometry}</code></p></li>\r\n<li><p>Windows 批处理在后台运行程序：<code>start /b xxx</code>，输出会在当前窗口（当然可以通过 <code>&gt;nul 2&gt;&amp;1</code> 抑制输出），但是可以进行其他操作（有点类似于 *nix 中的 <code>&amp;</code>）。或者 <code>start /min \"\" program params</code>，会在最小化的新窗口中运行程序，同时控制权交给当前终端</p></li>\r\n<li><p>Potplayer 关闭左上角的进度显示：基本 -&gt; 消息 -&gt; 取消勾选「在屏幕上显示播放信息」</p></li>\r\n<li><p>自动锁屏可在屏幕保护程序中进行设置，即便是空的锁屏样式</p></li>\r\n<li><p>MSYS2 中安装 <code>watch</code>：<code>pacman -S procps-ng</code></p></li>\r\n<li><p>GNU 工具源码镜像：<a href=\"http://mirrors.ustc.edu.cn/gnu\" target=\"_blank\" rel=\"noopener\">http://mirrors.ustc.edu.cn/gnu</a></p></li>\r\n<li><p>Ghost 系统桌面出现顽固图标注册表： <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Desktop\\NameSpace</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>列出所有 Windows 服务状态: <code>sc queryex type= service state= all | find /i \"NATION\"</code></p></li>\r\n<li><p>删除 Outlook 所有账户。Outlook 删除到最后一个账户不给删除了，解决方案如下：</p>\r\n<ol type=\"1\">\r\n<li>Close Outlook.</li>\r\n<li>Run Windows Control Panel.</li>\r\n<li>Open the “Mail（Microsoft Outlook 2016）” applet and click the “Show Profiles…” button.</li>\r\n<li>Remove the existing “Outlook” profile.</li>\r\n<li>Add a new profile, name it “Outlook” and create a new account as needed.</li>\r\n</ol></li>\r\n<li><p>Clion 中遇到输入时结果显现两次处理方案：<code>C-S-a</code>，输入 <code>registry</code>，取消勾选 <code>run.processes.with.pty</code> （参考 <a href=\"https://youtrack.jetbrains.com/issue/CPP-2580\" target=\"_blank\" rel=\"noopener\">User input appears twice in output window in CLion under MinGW</a>）</p></li>\r\n<li><p>Windows 10 彻底禁用自动更新方案：</p>\r\n<ol type=\"1\">\r\n<li><code>services.msc</code> 中设置 <code>Windows Update</code> 服务为禁用，并在 <code>Recovery</code> 中设置为不恢复</li>\r\n<li><code>gpedit.msc</code> 中: <code>Computer Configuration</code> - <code>Administrative Templates</code> - <code>Windows Components</code> - <code>Windows Update</code> - <code>Specify intranet ...</code>，启用此策略，并将 3 个服务器地址设为 <code>127.0.0.1</code></li>\r\n</ol></li>\r\n<li><p>解决 Microsoft Word 打开时自动切换输入法问题: 选项 - 高级 - 编辑选项 - 取消勾选「输入法控制处于活动状态」</p></li>\r\n<li><p>Word 2016 中设置正文分栏而脚注不分栏：脚注区右键菜单 - 便笺选项 - 列 - 1 列。 <strong>注：</strong> Word 2003 及之前版本如此设置无效</p></li>\r\n<li><p>安装完 Mathtype 后 PowerPoint 2016 打开报错「无法加载 …ppam 加载项」，所以干脆不用，在 Windows 10 (1709) 注册表中的位置为<br>\r\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Computer\\HKEY_LOCAL_MACHINE\\SOFTWARE\\WOW6432Node\\Microsoft\\Office\\16.0\\PowerPoint\\AddIns\\MathType AddIn (PowerPoint 2016)</span><br></pre></td></tr></table></figure> 删除即可</p></li>\r\n<li><p>右键打开方式中程序列表所在注册表路径： <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>Microsoft Word 中设置边框时要记得重新应用边框，否则应用无效</p></li>\r\n<li><p>往 Microsoft Word 里面插入矢量图时建议使用 <code>.wmf</code> 类型文件，<code>.emf</code> 文件在另存为 PDF 文件时可能导致图片严重失真</p></li>\r\n<li><p>Windows 下给快捷方式指派的快捷键有明显延迟解决方案：<a href=\"https://superuser.com/questions/426947/slow-windows-desktop-keyboard-shortcuts\" target=\"_blank\" rel=\"noopener\">slow windows desktop keyboard shortcuts</a></p></li>\r\n<li><p>修改 Windows 用户名：</p>\r\n<ol type=\"1\">\r\n<li><p>以其它管理员用户 B 身份登录系统，并注销需要改名的用户 A（如果这个用户已经登录的话）。如仅有一个用户，可考虑新建管理员账户，或开启默认被禁止的 Administrator 账户（计算机管理 - 系统工具 - 本地用户和组 - 用户 - Administrator - 取消勾选账户已禁用）</p></li>\r\n<li><p>直接修改用户 A 的用户目录名（「运行」输入 <code>..</code>，将文件夹 A 改名为 C）</p></li>\r\n<li><p>找到注册表项 <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\ProfileList\\&lt;User SID&gt;\\</span><br></pre></td></tr></table></figure></p>\r\n<p>并将其改为 <code>C:\\Users\\C</code>。<br>\r\n「注」如何定位到 <code>&lt;User SID&gt;</code>：每个 <code>&lt;User SID&gt;</code> 的子键 <code>ProfileImagePath</code> 即为此用户的 <code>Profile</code> 目录，找到用户目录为 A 的键即可</p></li>\r\n<li><p>「运行」中键入 <code>netplwiz</code>，双击用户 A 将用户名修改为 C，重启</p></li>\r\n</ol></li>\r\n<li><p>NVIDIA 显卡搭载部分显示器屏幕发白 / 虚，可通过自定义 NVIDIA 色彩设定：</p>\r\n<ul>\r\n<li>Desktop Color Depth: <code>Highest (32-bit)</code></li>\r\n<li>Output Color Depth: <code>8 bpc</code></li>\r\n<li>Output Color format: <code>YCbCr444</code></li>\r\n<li>Output dynamic range: <code>Limited</code></li>\r\n</ul></li>\r\n<li><p>更改右键菜单相对于鼠标点击处的位置：运行中键入 <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell:::&#123;80F3F1D5-FECA-45F3-BC32-752C152E456E&#125;</span><br></pre></td></tr></table></figure></p>\r\n<p>在弹出对话框 <code>Tablet PC Settings</code> 中切换用手习惯 <code>Handedness</code></p></li>\r\n<li><p>Chrome 浏览器默认支持 Flash 需更改注册表项： <figure class=\"highlight plain\"><figcaption><span>chrome_flash.reg</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Windows Registry Editor Version 5.00</span><br><span class=\"line\">[HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Google\\Chrome]</span><br><span class=\"line\">&quot;AllowOutdatedPlugins&quot;=dword:00000001</span><br><span class=\"line\">&quot;RunAllFlashInAllowMode&quot;=dword:00000001</span><br><span class=\"line\">&quot;DefaultPluginsSetting&quot;=dword:00000001</span><br><span class=\"line\">&quot;HardwareAccelerationModeEnabled&quot;=dword:00000001</span><br><span class=\"line\">[HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Google\\Chrome\\PluginsAllowedForUrls]</span><br><span class=\"line\">&quot;1&quot;=&quot;https://*&quot;</span><br><span class=\"line\">&quot;2&quot;=&quot;http://*&quot;</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>Windows 10 蓝牙耳机 / 音箱连接后无法通过系统音量调节解决方案：将注册表项 <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\Control\\Bluetooth\\Audio\\AVRCP\\CT</span><br></pre></td></tr></table></figure></p>\r\n<p>中的 <code>DisableAbsoluteVolume</code> 值（DWORD32）改为 <code>1</code></p></li>\r\n</ol>\r\n","site":{"data":{}},"excerpt":"<p>记录 Windows <i class=\"fa fa-windows fa-fw\"></i> 下遇到的问题、技巧与备忘。</p>","more":"<ol type=\"1\">\r\n<li><p>JetBrains 的 Vim 插件配置文件放在 <code>~/.ideavimrc</code></p></li>\r\n<li><p>MS Access 自动切换输入法修复方法： Options -&gt; Client Settings -&gt; Datasheet IME control</p></li>\r\n<li><p>关闭恼人的 <code>Connected User Experiences and Telemetry</code> 服务：</p>\r\n<ol type=\"1\">\r\n<li>打开计划任务程序，定位到 Microsoft - Windows - Application Experience，禁用 Microsoft Compatibility Appraiser</li>\r\n<li>打开服务，禁用 Connected User Experiences and Telemetry</li>\r\n<li>打开组策略，依次定位 Computer Configuration - Administrative Templates - Windows Components - Data Collection and Preview Builds - Allow Telemetry，设为 Disabled</li>\r\n</ol></li>\r\n<li><p>卸载 OneDrive：</p>\r\n<ol type=\"1\">\r\n<li>不让 OneDrive 弹出： <code>Win-X-A</code> - <code>taskkill /f /im OneDrive.exe</code></li>\r\n<li><code>%SystemRoot%\\SysWOW64\\OneDriveSetup.exe /uninstall</code>（注意系统位）</li>\r\n</ol></li>\r\n<li><p>Mobaxterm 中设置 Cygwin 的源：</p>\r\n<ul>\r\n<li><code>apt-cyg -m http://mirrors.neusoft.edu.cn/cygwin/ install/remove. ...</code></li>\r\n<li><code>apt-cyg -m http://mirrors.ustc.edu.cn/cygwin/ install/remove ...</code></li>\r\n<li><code>apt-cyg -m http://mirrors.aliyun.com/cygwin/ install/remove ...</code></li>\r\n<li><code>apt-cyg -m http://mirrors.163.com/cygwin/ install/remove ...</code></li>\r\n</ul></li>\r\n<li><p>MobaXterm 中的 Cygwin 如有命令出错，有可能是版本过低</p></li>\r\n<li><p>MobaXterm 中如果无法安装包（一般出现校验值错误的情况），可手动下载 <code>setup.ini</code>，注意版本为 <code>x86</code></p></li>\r\n<li><p>Sublime Text 插件 SFTP 注册码：（在 <code>Settings-User</code> 中加入） <figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"email\"</span>:<span class=\"string\">\"Rimke@163.com\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"product_key\"</span>:<span class=\"string\">\"e83eda-38644b-43c828-e3669b-cd8a85\"</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>Sublime Text 插件 AStyleFormatter 报错：安装 Microsoft Visual C++ 2010 SP1 Redistributable Package (x64)</p></li>\r\n<li><p>Sublime Text 主题插件 Boxy 深度定制：</p>\r\n<ul>\r\n<li><code>Boxy</code> 侧边栏背景色：<code>Sidebar Tree Defaults - \"sidebar_tree\"</code></li>\r\n<li><code>Boxy</code> 侧边栏分隔：<code>\"class\": sidebar_container\"，\"layer0.tint\"</code></li>\r\n</ul></li>\r\n<li><p>Potplayer 遇到「单声道」的情况，将声音 - 环绕置 0 即可</p></li>\r\n<li><p>任务栏透明: <a href=\"http://www.zdfans.com/5573.html\" target=\"_blank\" rel=\"noopener\">StartIsBack</a></p></li>\r\n<li><p>win 7 下一些控件、动态链接库无法注册问题的终极解决办法（<strong>不推荐</strong>）: 激活并登陆 <code>Administrator</code> 账户（一定必须为该名称， 即使为管理员账户也不能行使此账户的一些职权）</p></li>\r\n<li><p>清除各种显卡右键菜单：</p>\r\n<ul>\r\n<li>Nvidia：\r\n<ul>\r\n<li>清除：<code>regsvr32 /u nvcpl.dll</code></li>\r\n<li>显示：<code>regsvr32 nvcpl.dll</code></li>\r\n</ul></li>\r\n<li>Intel：\r\n<ul>\r\n<li>清除：<code>regsvr32 /u igfxsrvc.dll</code></li>\r\n<li>显示：<code>regsvr32 igfxsrvc.dll</code></li>\r\n</ul></li>\r\n<li>Ati：\r\n<ul>\r\n<li>清除：<code>regsvr32 /u atiacmxx.dll</code></li>\r\n<li>显示：<code>regsvr32 atiacmxx.dll</code></li>\r\n</ul></li>\r\n<li>Intel集成：\r\n<ul>\r\n<li>清除：<code>regsvr32 /u igfxpph.dll</code></li>\r\n<li>显示：<code>regsvr32 igfxpph.dll</code></li>\r\n</ul></li>\r\n</ul></li>\r\n<li><p>修复 vbs 默认打开方式：<code>cmd /c cscript/h:wscript</code></p></li>\r\n<li><p>无法附着到任务栏： <figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cmd</span> /k reg add \"HKEY_CLASSES_ROOT\\lnkfile\" /v IsShortcut /f</span><br><span class=\"line\"><span class=\"built_in\">cmd</span> /k reg add \"HKEY_CLASSES_ROOT\\piffile\" /v IsShortcut /f</span><br><span class=\"line\"><span class=\"built_in\">cmd</span> /k <span class=\"built_in\">taskkill</span> /f /im explorer.exe &amp; explorer.exe</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>启动项文件夹：<code>shell:Startup</code></p></li>\r\n<li><p>Cygwin 中 Mintty 快捷方式：<code>mintty.exe -i /Cygwin-Terminal.ico -</code></p></li>\r\n<li><p>npm 路径：<code>C:\\Users\\xxx\\AppData\\Roaming\\npm</code></p></li>\r\n<li><p>tlmgr 更换 repository： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tlmgr option repository http://mirrors.aliyun.com/CTAN/systems/texlive/tlnet</span><br><span class=\"line\">tlmgr option repository http://mirrors.ustc.edu.cn/CTAN/systems/texlive/tlnet</span><br></pre></td></tr></table></figure> CLI 下更新： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tlmgr update --self --repository http://mirrors.aliyun.com/CTAN/systems/texlive/tlnet/</span><br><span class=\"line\">tlmgr update --all --repository http://mirrors.aliyun.com/CTAN/systems/texlive/tlnet/</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>Sublime Text 插件 SublimeREPL 出现 <code>OSError: [WinError 6] The handle is invalid</code> 解决方案： <figure class=\"highlight python\"><figcaption><span>Data/Packages/SublimeREPL/repls/subprocess_repl.py</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">is_alive</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">True</span></span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>Sublime Text 开启 Debug 模式：<code>sublime.log_commands(True)</code></p></li>\r\n<li><p>华丽的提示符：添加环境变量 <code>PROMPT</code>，比如 <code>[ $e[35;40mNasty-Newbie$e[0m $b $e[1;33;40m$d $t$e[0m $b $e[1;31m$p$e[0m ]$_$e[1;33mλ$e[0m</code>，显示成： <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ Nasty-Newbie | Sun 09/09/2018 21:52:58.55 | C:\\Users\\Heller ]</span><br><span class=\"line\">λ </span><br></pre></td></tr></table></figure></p></li>\r\n<li><p><code>MSYS2</code> 中自动挂载文件：<code>/etc/fstab</code>，比如： <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># For a description of the file format, see the Users Guide</span><br><span class=\"line\"># http://cygwin.com/cygwin-ug-net/using.html#mount-table</span><br><span class=\"line\"></span><br><span class=\"line\"># DO NOT REMOVE NEXT LINE. It remove cygdrive prefix from path</span><br><span class=\"line\">none / cygdrive binary,posix=0,noacl,user 0 0</span><br><span class=\"line\">C:\\Users\\Michael\\Desktop /desktop</span><br><span class=\"line\">D:\\MSYS2\\home\\Michael\\Notes /notes</span><br><span class=\"line\">F:\\WorkingDirectory\\Work\\__current /current</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>Chrome 浏览器在高分屏幕下的快捷方式： <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;\\chrome.exe&quot; /high-dpi-support=1 /force-device-scale-factor=1</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>为 <a href=\"https://sourceforge.net\" target=\"_blank\" rel=\"noopener\">SourceForge</a> 加速： <a href=\"http://sourceforge.mirrorservice.org\" target=\"_blank\" rel=\"noopener\">http://sourceforge.mirrorservice.org</a></p></li>\r\n<li><p>Sublime Text 插件 LaTeXTools 关于 PDF 阅读器 SumaptraPDF 反向搜索的设置： <figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sumatrapdf.exe -inverse-search \"\\\"C:\\Program Files\\Sublime Text <span class=\"number\">3</span>\\sublime_text.exe\\\" \\\"<span class=\"variable\">%f:%</span>l\\\"\"</span><br></pre></td></tr></table></figure> 关于公式不能预览的问题：手动从 <a href=\"https://ghostscript.com\" target=\"_blank\" rel=\"noopener\">Ghostscript 官网</a> 安装，并将环境路径添加至 <code>TexLive</code> 路径前面; 添加 ImageMagick 的环境路径</p></li>\r\n<li><p>Mathtype 的官方安装包名为 <code>InstallMTW6.9b.exe</code></p></li>\r\n<li><p>Avast 杀毒软件的安装需要取消勾选 <code>Real Site</code>（中文名可能为 <code>DNS</code> 相关），否则网速奇慢！顺便，防火墙也别装了，简直神坑！</p></li>\r\n<li><p>Avast 添加排除目录（添加信任）：<code>Settings</code> - <code>Components</code> - <code>File Shield</code> &amp;&amp; <code>Behavior Shield</code> - <code>Customize</code> - <code>Exclusions</code>，否则某些程序会无端卡死（比如赖以生存的 <code>ConEmu</code>）</p></li>\r\n<li><p>用 UltraISO 刻录的 Windows 10 系统 U 盘无法创建分区（提示为 MBR / GPT 分区）解决方案：删除 U 盘中文件夹 <code>efi/</code> 以及文件 <code>bootmgr.efi</code></p></li>\r\n<li><p>TeamViewer(TV) 提示</p>\r\n<blockquote>\r\n<p>The screen cannot be captured at the moment. This is probably due to fast user switching or a disconnected/minimized Remote Desktop session.</p>\r\n</blockquote>\r\n<p>且场景为：被连接的机器为笔记本，盒上盖子，已打开 tv 服务。 解决方案：</p>\r\n<ul>\r\n<li>打开笔记本盖子</li>\r\n<li>或将一根 HDMI 线连接至显示器</li>\r\n</ul></li>\r\n<li><p>Sublime Text 插件 Anaconda 显示类似如下错误且伴有切换至 <code>python</code> 文件卡顿： <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;Anaconda.anaconda_lib.workers.local_worker.LocalWorker object at 0x000001EA4B464FD0&gt; initial check failed because:</span><br><span class=\"line\">connection to localhost:51568 timed out after 0.2s. tried to connect 7 times during 2 seconds</span><br><span class=\"line\">check that there is Python process executing the anaconda jsonserver.py script running in your system. If there is, check that you can connect to your localhost writing the following script in your Sublime Text 3 console:</span><br><span class=\"line\">import socket; socket.socket(socket.AF_INET, socket.SOCK_STREAM).connect((&quot;localhost&quot;, 51568))</span><br></pre></td></tr></table></figure> 场景：MSYS2 环境变量 <code>/usr/bin</code>，<code>/mingw64/bin</code>；Anaconda 没有加入环境变量。 解决方案：将 <code>\"python_interpreter\": \"/path/to/python_exe\"</code> 加入<strong>用户配置文件</strong> <code>Preferences.sublime-settings</code></p></li>\r\n<li><p>Xshell 5 中 <code>Shift-Tab</code> 效果却为切换标签处理办法：设置一次针对 <code>Shift-Tab</code> 的快捷键，再取消设置这个快捷键</p></li>\r\n<li><p>Word 里面用 Mathtype 编辑的公式用默认的方法导出 PDF 文件时出现各类显示问题：改用 <a href=\"http://www.dopdf.com\" target=\"_blank\" rel=\"noopener\">doPDF</a></p></li>\r\n<li><p>Sublime Text 插件 Clang Format 令其对全文件格式化： <a href=\"https://github.com/rosshemsley/SublimeClangFormat/pull/10/commits/ea22686f40009104935a0378b7c4fd387121c8a1\" target=\"_blank\" rel=\"noopener\">Format whole file if nothing selected</a></p></li>\r\n<li><p>Sublime Text 插件 LaTeXTools 中公式渲染/预览不全解决方案： 配置文件中为 <code>preview_math_template_preamble</code> 添加 <code>\\usepackage[margin=2cm]{geometry}</code></p></li>\r\n<li><p>Windows 批处理在后台运行程序：<code>start /b xxx</code>，输出会在当前窗口（当然可以通过 <code>&gt;nul 2&gt;&amp;1</code> 抑制输出），但是可以进行其他操作（有点类似于 *nix 中的 <code>&amp;</code>）。或者 <code>start /min \"\" program params</code>，会在最小化的新窗口中运行程序，同时控制权交给当前终端</p></li>\r\n<li><p>Potplayer 关闭左上角的进度显示：基本 -&gt; 消息 -&gt; 取消勾选「在屏幕上显示播放信息」</p></li>\r\n<li><p>自动锁屏可在屏幕保护程序中进行设置，即便是空的锁屏样式</p></li>\r\n<li><p>MSYS2 中安装 <code>watch</code>：<code>pacman -S procps-ng</code></p></li>\r\n<li><p>GNU 工具源码镜像：<a href=\"http://mirrors.ustc.edu.cn/gnu\" target=\"_blank\" rel=\"noopener\">http://mirrors.ustc.edu.cn/gnu</a></p></li>\r\n<li><p>Ghost 系统桌面出现顽固图标注册表： <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Desktop\\NameSpace</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>列出所有 Windows 服务状态: <code>sc queryex type= service state= all | find /i \"NATION\"</code></p></li>\r\n<li><p>删除 Outlook 所有账户。Outlook 删除到最后一个账户不给删除了，解决方案如下：</p>\r\n<ol type=\"1\">\r\n<li>Close Outlook.</li>\r\n<li>Run Windows Control Panel.</li>\r\n<li>Open the “Mail（Microsoft Outlook 2016）” applet and click the “Show Profiles…” button.</li>\r\n<li>Remove the existing “Outlook” profile.</li>\r\n<li>Add a new profile, name it “Outlook” and create a new account as needed.</li>\r\n</ol></li>\r\n<li><p>Clion 中遇到输入时结果显现两次处理方案：<code>C-S-a</code>，输入 <code>registry</code>，取消勾选 <code>run.processes.with.pty</code> （参考 <a href=\"https://youtrack.jetbrains.com/issue/CPP-2580\" target=\"_blank\" rel=\"noopener\">User input appears twice in output window in CLion under MinGW</a>）</p></li>\r\n<li><p>Windows 10 彻底禁用自动更新方案：</p>\r\n<ol type=\"1\">\r\n<li><code>services.msc</code> 中设置 <code>Windows Update</code> 服务为禁用，并在 <code>Recovery</code> 中设置为不恢复</li>\r\n<li><code>gpedit.msc</code> 中: <code>Computer Configuration</code> - <code>Administrative Templates</code> - <code>Windows Components</code> - <code>Windows Update</code> - <code>Specify intranet ...</code>，启用此策略，并将 3 个服务器地址设为 <code>127.0.0.1</code></li>\r\n</ol></li>\r\n<li><p>解决 Microsoft Word 打开时自动切换输入法问题: 选项 - 高级 - 编辑选项 - 取消勾选「输入法控制处于活动状态」</p></li>\r\n<li><p>Word 2016 中设置正文分栏而脚注不分栏：脚注区右键菜单 - 便笺选项 - 列 - 1 列。 <strong>注：</strong> Word 2003 及之前版本如此设置无效</p></li>\r\n<li><p>安装完 Mathtype 后 PowerPoint 2016 打开报错「无法加载 …ppam 加载项」，所以干脆不用，在 Windows 10 (1709) 注册表中的位置为<br>\r\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Computer\\HKEY_LOCAL_MACHINE\\SOFTWARE\\WOW6432Node\\Microsoft\\Office\\16.0\\PowerPoint\\AddIns\\MathType AddIn (PowerPoint 2016)</span><br></pre></td></tr></table></figure> 删除即可</p></li>\r\n<li><p>右键打开方式中程序列表所在注册表路径： <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>Microsoft Word 中设置边框时要记得重新应用边框，否则应用无效</p></li>\r\n<li><p>往 Microsoft Word 里面插入矢量图时建议使用 <code>.wmf</code> 类型文件，<code>.emf</code> 文件在另存为 PDF 文件时可能导致图片严重失真</p></li>\r\n<li><p>Windows 下给快捷方式指派的快捷键有明显延迟解决方案：<a href=\"https://superuser.com/questions/426947/slow-windows-desktop-keyboard-shortcuts\" target=\"_blank\" rel=\"noopener\">slow windows desktop keyboard shortcuts</a></p></li>\r\n<li><p>修改 Windows 用户名：</p>\r\n<ol type=\"1\">\r\n<li><p>以其它管理员用户 B 身份登录系统，并注销需要改名的用户 A（如果这个用户已经登录的话）。如仅有一个用户，可考虑新建管理员账户，或开启默认被禁止的 Administrator 账户（计算机管理 - 系统工具 - 本地用户和组 - 用户 - Administrator - 取消勾选账户已禁用）</p></li>\r\n<li><p>直接修改用户 A 的用户目录名（「运行」输入 <code>..</code>，将文件夹 A 改名为 C）</p></li>\r\n<li><p>找到注册表项 <!--�124--></p>\r\n<p>并将其改为 <code>C:\\Users\\C</code>。<br>\r\n「注」如何定位到 <code>&lt;User SID&gt;</code>：每个 <code>&lt;User SID&gt;</code> 的子键 <code>ProfileImagePath</code> 即为此用户的 <code>Profile</code> 目录，找到用户目录为 A 的键即可</p></li>\r\n<li><p>「运行」中键入 <code>netplwiz</code>，双击用户 A 将用户名修改为 C，重启</p></li>\r\n</ol></li>\r\n<li><p>NVIDIA 显卡搭载部分显示器屏幕发白 / 虚，可通过自定义 NVIDIA 色彩设定：</p>\r\n<ul>\r\n<li>Desktop Color Depth: <code>Highest (32-bit)</code></li>\r\n<li>Output Color Depth: <code>8 bpc</code></li>\r\n<li>Output Color format: <code>YCbCr444</code></li>\r\n<li>Output dynamic range: <code>Limited</code></li>\r\n</ul></li>\r\n<li><p>更改右键菜单相对于鼠标点击处的位置：运行中键入 <!--�125--></p>\r\n<p>在弹出对话框 <code>Tablet PC Settings</code> 中切换用手习惯 <code>Handedness</code></p></li>\r\n<li><p>Chrome 浏览器默认支持 Flash 需更改注册表项： <figure class=\"highlight plain\"><figcaption><span>chrome_flash.reg</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Windows Registry Editor Version 5.00</span><br><span class=\"line\">[HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Google\\Chrome]</span><br><span class=\"line\">&quot;AllowOutdatedPlugins&quot;=dword:00000001</span><br><span class=\"line\">&quot;RunAllFlashInAllowMode&quot;=dword:00000001</span><br><span class=\"line\">&quot;DefaultPluginsSetting&quot;=dword:00000001</span><br><span class=\"line\">&quot;HardwareAccelerationModeEnabled&quot;=dword:00000001</span><br><span class=\"line\">[HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Google\\Chrome\\PluginsAllowedForUrls]</span><br><span class=\"line\">&quot;1&quot;=&quot;https://*&quot;</span><br><span class=\"line\">&quot;2&quot;=&quot;http://*&quot;</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>Windows 10 蓝牙耳机 / 音箱连接后无法通过系统音量调节解决方案：将注册表项 <!--�126--></p>\r\n<p>中的 <code>DisableAbsoluteVolume</code> 值（DWORD32）改为 <code>1</code></p></li>\r\n</ol>"},{"title":"「转」Perl 语言学习书籍","date":"2017-11-08T02:36:47.000Z","nocopyright":true,"_content":"\n> 作者: [衡杰Jay][author]  \n> 链接: [Perl语言学习书籍（持续整理）][link]  \n> 来源: [CSDN 博客][source]\n\n建议最佳阅读顺序：小骆驼 -> 羊驼 -> 大骆驼 -> 小羊驼母亲和孩子 -> 高效黑客 -> 猎鹿犬 -> 黑豹。\n\n<!-- more -->\n\n1. 「**小骆驼**」\n   - 英：「Learning Perl」，Randal L.Schwartz，brian d foy，Tom Phoenix 著\n   - 中：「Perl语言入门」，盛春 译\n\n   简介：O'Reilly 出版社联合 3 位 Perl 社区极负盛名的人出品的 Perl 系列教程的第一本书，初学者入门首选书籍，主要介绍 Perl 基础语法，书中内容包括 Perl 程序员必须知道的，写单文件脚本程序所需要的，适合 Perl 大量应用的知识。\n1. 「**大骆驼**」\n   - 英：「Programming Perl」，Larry Wall，Tom Christiansen 等 著\n   - 中：「Perl语言编程」，何伟平 译\n\n   简介：这不仅仅是一本 Perl 书籍，更是一本独一无二的开发者自己介绍 Perl 语言及其文化的书籍。此书作者 Larry Wall 是Perl最初设计者，   Tom Christiansen 是最早的几个拥护者之一，也是少数几个在错综复杂的中游刃有余的人之一。Jon Orwant 是「Perl Journal」的主编，该杂志把 Perl 社区组合成了一个共同的论坛，以进行 Perl 新的开发。\n1. 「**草泥马**」\n   - 英：「Intermediate Perl」，Randal L.Schwartz，Tom Phoenix，brian d foy 著\n\n   简介：O'Reilly 出版社联合 3 位 Perl 社区极负盛名的人出品的 Perl 系列教程的第二本书，主要介绍如何构造 Perl 复杂数据结构和对象的知识，以及如何组织团队工作（模块、测试和发布），编写可重用的 Perl 程序。\n1. 「**小羊驼母亲和她的孩子**」\n   - 英：「Mastering Perl」，brian d foy 著\n   - 中：「精通Perl」，韩殿飞 译\n\n   简介：O'Reilly 出版社联合 3 位 Perl 社区极负盛名的人出品的 Perl\n   系列教程的第三本书，该书综合运用了该系列前二本书中的知识，   给出了很多有趣的话题并围绕它们列举了大量例子，通过这些话题和例子教会你 Perl 编程的思维方式.\n1. 「**美洲猎鹿犬**」\n   - 英：「Perl Best Practices」，Damian Conway 著\n   - 中：「Perl最佳实践」，O'Reilly Taiwan公司 译\n\n   简介：该书为 Perl 编程人员提供了关于编程艺术的 256 条规则，这些规则能帮助你编写出更好的 Perl 代码。这些规则涵盖了代码布局和命名规则，数据和控制结构的选择，程序解构和模块化，接口的设计和实现，面向对象设计，错误处理，程序测试和调试。所有的规则都是为了写出清晰，健壮，高效，   可维护和简洁的程序而设计。\n1. 「**高效黑客**」\n   - 英：「Effective Perl Programming」，Joseph N.Hall，Joshua A.McAdams，brian d foy 著\n   - 中：「Perl高效编程」，盛春，王晖 等 译\n\n   简介：Perl 语言作为最成功的模块化编程语言，具有「软件芯片」的美誉，该书深入挖掘了 Perl 语言高效简洁的特点，为 Perl 爱好者提供了面向高效应用的指南。书中内容包括对各种测试提出的建议。   最新的正则表达式以及各种实用模块的习惯用法并逐一展现 120 个实用而精炼的案例。\n1. 「**黑豹**」\n   - 英：「Advanced Perl Programming」，Simon Cozens 著\n   - 中：「高级Perl编程」，Perlisb 译\n\n   简介：该书作为 O'Reilly 出版社 Perl 系列图书中的最高级教程，清晰地解释了许多 Perl 的概念，譬如内省、重载内建函数、基于面向对象模型的\n   Perl 扩展和如何对 Perl 程序的稳定性进行测试等诸多方面，此书汇集了 Perl 社区最优秀的成员辛苦积累的许多经验。\n\n[author]: http://my.csdn.net/Henjay724\n[link]: http://blog.csdn.net/henjay724/article/details/8437748\n[source]: http://blog.csdn.net/\n","source":"_posts/reading-list-of-perl.md","raw":"---\ntitle: 「转」Perl 语言学习书籍\ndate: 2017-11-08 10:36:47\ntags:\n    - Perl\ncategories: Book List\nnocopyright: true\n---\n\n> 作者: [衡杰Jay][author]  \n> 链接: [Perl语言学习书籍（持续整理）][link]  \n> 来源: [CSDN 博客][source]\n\n建议最佳阅读顺序：小骆驼 -> 羊驼 -> 大骆驼 -> 小羊驼母亲和孩子 -> 高效黑客 -> 猎鹿犬 -> 黑豹。\n\n<!-- more -->\n\n1. 「**小骆驼**」\n   - 英：「Learning Perl」，Randal L.Schwartz，brian d foy，Tom Phoenix 著\n   - 中：「Perl语言入门」，盛春 译\n\n   简介：O'Reilly 出版社联合 3 位 Perl 社区极负盛名的人出品的 Perl 系列教程的第一本书，初学者入门首选书籍，主要介绍 Perl 基础语法，书中内容包括 Perl 程序员必须知道的，写单文件脚本程序所需要的，适合 Perl 大量应用的知识。\n1. 「**大骆驼**」\n   - 英：「Programming Perl」，Larry Wall，Tom Christiansen 等 著\n   - 中：「Perl语言编程」，何伟平 译\n\n   简介：这不仅仅是一本 Perl 书籍，更是一本独一无二的开发者自己介绍 Perl 语言及其文化的书籍。此书作者 Larry Wall 是Perl最初设计者，   Tom Christiansen 是最早的几个拥护者之一，也是少数几个在错综复杂的中游刃有余的人之一。Jon Orwant 是「Perl Journal」的主编，该杂志把 Perl 社区组合成了一个共同的论坛，以进行 Perl 新的开发。\n1. 「**草泥马**」\n   - 英：「Intermediate Perl」，Randal L.Schwartz，Tom Phoenix，brian d foy 著\n\n   简介：O'Reilly 出版社联合 3 位 Perl 社区极负盛名的人出品的 Perl 系列教程的第二本书，主要介绍如何构造 Perl 复杂数据结构和对象的知识，以及如何组织团队工作（模块、测试和发布），编写可重用的 Perl 程序。\n1. 「**小羊驼母亲和她的孩子**」\n   - 英：「Mastering Perl」，brian d foy 著\n   - 中：「精通Perl」，韩殿飞 译\n\n   简介：O'Reilly 出版社联合 3 位 Perl 社区极负盛名的人出品的 Perl\n   系列教程的第三本书，该书综合运用了该系列前二本书中的知识，   给出了很多有趣的话题并围绕它们列举了大量例子，通过这些话题和例子教会你 Perl 编程的思维方式.\n1. 「**美洲猎鹿犬**」\n   - 英：「Perl Best Practices」，Damian Conway 著\n   - 中：「Perl最佳实践」，O'Reilly Taiwan公司 译\n\n   简介：该书为 Perl 编程人员提供了关于编程艺术的 256 条规则，这些规则能帮助你编写出更好的 Perl 代码。这些规则涵盖了代码布局和命名规则，数据和控制结构的选择，程序解构和模块化，接口的设计和实现，面向对象设计，错误处理，程序测试和调试。所有的规则都是为了写出清晰，健壮，高效，   可维护和简洁的程序而设计。\n1. 「**高效黑客**」\n   - 英：「Effective Perl Programming」，Joseph N.Hall，Joshua A.McAdams，brian d foy 著\n   - 中：「Perl高效编程」，盛春，王晖 等 译\n\n   简介：Perl 语言作为最成功的模块化编程语言，具有「软件芯片」的美誉，该书深入挖掘了 Perl 语言高效简洁的特点，为 Perl 爱好者提供了面向高效应用的指南。书中内容包括对各种测试提出的建议。   最新的正则表达式以及各种实用模块的习惯用法并逐一展现 120 个实用而精炼的案例。\n1. 「**黑豹**」\n   - 英：「Advanced Perl Programming」，Simon Cozens 著\n   - 中：「高级Perl编程」，Perlisb 译\n\n   简介：该书作为 O'Reilly 出版社 Perl 系列图书中的最高级教程，清晰地解释了许多 Perl 的概念，譬如内省、重载内建函数、基于面向对象模型的\n   Perl 扩展和如何对 Perl 程序的稳定性进行测试等诸多方面，此书汇集了 Perl 社区最优秀的成员辛苦积累的许多经验。\n\n[author]: http://my.csdn.net/Henjay724\n[link]: http://blog.csdn.net/henjay724/article/details/8437748\n[source]: http://blog.csdn.net/\n","slug":"reading-list-of-perl","published":1,"updated":"2023-03-09T16:09:38.274Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u336x002up4x0jojla0x5","content":"<blockquote>\r\n<p>作者: <a href=\"http://my.csdn.net/Henjay724\" target=\"_blank\" rel=\"noopener\">衡杰Jay</a><br>\r\n链接: <a href=\"http://blog.csdn.net/henjay724/article/details/8437748\" target=\"_blank\" rel=\"noopener\">Perl语言学习书籍（持续整理）</a><br>\r\n来源: <a href=\"http://blog.csdn.net/\" target=\"_blank\" rel=\"noopener\">CSDN 博客</a></p>\r\n</blockquote>\r\n<p>建议最佳阅读顺序：小骆驼 -&gt; 羊驼 -&gt; 大骆驼 -&gt; 小羊驼母亲和孩子 -&gt; 高效黑客 -&gt; 猎鹿犬 -&gt; 黑豹。</p>\r\n<a id=\"more\"></a>\r\n<ol type=\"1\">\r\n<li>「<strong>小骆驼</strong>」\r\n<ul>\r\n<li>英：「Learning Perl」，Randal L.Schwartz，brian d foy，Tom Phoenix 著</li>\r\n<li>中：「Perl语言入门」，盛春 译</li>\r\n</ul>\r\n简介：O’Reilly 出版社联合 3 位 Perl 社区极负盛名的人出品的 Perl 系列教程的第一本书，初学者入门首选书籍，主要介绍 Perl 基础语法，书中内容包括 Perl 程序员必须知道的，写单文件脚本程序所需要的，适合 Perl 大量应用的知识。</li>\r\n<li>「<strong>大骆驼</strong>」\r\n<ul>\r\n<li>英：「Programming Perl」，Larry Wall，Tom Christiansen 等 著</li>\r\n<li>中：「Perl语言编程」，何伟平 译</li>\r\n</ul>\r\n简介：这不仅仅是一本 Perl 书籍，更是一本独一无二的开发者自己介绍 Perl 语言及其文化的书籍。此书作者 Larry Wall 是Perl最初设计者， Tom Christiansen 是最早的几个拥护者之一，也是少数几个在错综复杂的中游刃有余的人之一。Jon Orwant 是「Perl Journal」的主编，该杂志把 Perl 社区组合成了一个共同的论坛，以进行 Perl 新的开发。</li>\r\n<li>「<strong>草泥马</strong>」\r\n<ul>\r\n<li>英：「Intermediate Perl」，Randal L.Schwartz，Tom Phoenix，brian d foy 著</li>\r\n</ul>\r\n简介：O’Reilly 出版社联合 3 位 Perl 社区极负盛名的人出品的 Perl 系列教程的第二本书，主要介绍如何构造 Perl 复杂数据结构和对象的知识，以及如何组织团队工作（模块、测试和发布），编写可重用的 Perl 程序。</li>\r\n<li>「<strong>小羊驼母亲和她的孩子</strong>」\r\n<ul>\r\n<li>英：「Mastering Perl」，brian d foy 著</li>\r\n<li>中：「精通Perl」，韩殿飞 译</li>\r\n</ul>\r\n简介：O’Reilly 出版社联合 3 位 Perl 社区极负盛名的人出品的 Perl 系列教程的第三本书，该书综合运用了该系列前二本书中的知识， 给出了很多有趣的话题并围绕它们列举了大量例子，通过这些话题和例子教会你 Perl 编程的思维方式.</li>\r\n<li>「<strong>美洲猎鹿犬</strong>」\r\n<ul>\r\n<li>英：「Perl Best Practices」，Damian Conway 著</li>\r\n<li>中：「Perl最佳实践」，O’Reilly Taiwan公司 译</li>\r\n</ul>\r\n简介：该书为 Perl 编程人员提供了关于编程艺术的 256 条规则，这些规则能帮助你编写出更好的 Perl 代码。这些规则涵盖了代码布局和命名规则，数据和控制结构的选择，程序解构和模块化，接口的设计和实现，面向对象设计，错误处理，程序测试和调试。所有的规则都是为了写出清晰，健壮，高效， 可维护和简洁的程序而设计。</li>\r\n<li>「<strong>高效黑客</strong>」\r\n<ul>\r\n<li>英：「Effective Perl Programming」，Joseph N.Hall，Joshua A.McAdams，brian d foy 著</li>\r\n<li>中：「Perl高效编程」，盛春，王晖 等 译</li>\r\n</ul>\r\n简介：Perl 语言作为最成功的模块化编程语言，具有「软件芯片」的美誉，该书深入挖掘了 Perl 语言高效简洁的特点，为 Perl 爱好者提供了面向高效应用的指南。书中内容包括对各种测试提出的建议。 最新的正则表达式以及各种实用模块的习惯用法并逐一展现 120 个实用而精炼的案例。</li>\r\n<li>「<strong>黑豹</strong>」\r\n<ul>\r\n<li>英：「Advanced Perl Programming」，Simon Cozens 著</li>\r\n<li>中：「高级Perl编程」，Perlisb 译</li>\r\n</ul>\r\n简介：该书作为 O’Reilly 出版社 Perl 系列图书中的最高级教程，清晰地解释了许多 Perl 的概念，譬如内省、重载内建函数、基于面向对象模型的 Perl 扩展和如何对 Perl 程序的稳定性进行测试等诸多方面，此书汇集了 Perl 社区最优秀的成员辛苦积累的许多经验。</li>\r\n</ol>\r\n","site":{"data":{}},"excerpt":"<blockquote>\r\n<p>作者: <a href=\"http://my.csdn.net/Henjay724\" target=\"_blank\" rel=\"noopener\">衡杰Jay</a><br>\r\n链接: <a href=\"http://blog.csdn.net/henjay724/article/details/8437748\" target=\"_blank\" rel=\"noopener\">Perl语言学习书籍（持续整理）</a><br>\r\n来源: <a href=\"http://blog.csdn.net/\" target=\"_blank\" rel=\"noopener\">CSDN 博客</a></p>\r\n</blockquote>\r\n<p>建议最佳阅读顺序：小骆驼 -&gt; 羊驼 -&gt; 大骆驼 -&gt; 小羊驼母亲和孩子 -&gt; 高效黑客 -&gt; 猎鹿犬 -&gt; 黑豹。</p>","more":"<ol type=\"1\">\r\n<li>「<strong>小骆驼</strong>」\r\n<ul>\r\n<li>英：「Learning Perl」，Randal L.Schwartz，brian d foy，Tom Phoenix 著</li>\r\n<li>中：「Perl语言入门」，盛春 译</li>\r\n</ul>\r\n简介：O’Reilly 出版社联合 3 位 Perl 社区极负盛名的人出品的 Perl 系列教程的第一本书，初学者入门首选书籍，主要介绍 Perl 基础语法，书中内容包括 Perl 程序员必须知道的，写单文件脚本程序所需要的，适合 Perl 大量应用的知识。</li>\r\n<li>「<strong>大骆驼</strong>」\r\n<ul>\r\n<li>英：「Programming Perl」，Larry Wall，Tom Christiansen 等 著</li>\r\n<li>中：「Perl语言编程」，何伟平 译</li>\r\n</ul>\r\n简介：这不仅仅是一本 Perl 书籍，更是一本独一无二的开发者自己介绍 Perl 语言及其文化的书籍。此书作者 Larry Wall 是Perl最初设计者， Tom Christiansen 是最早的几个拥护者之一，也是少数几个在错综复杂的中游刃有余的人之一。Jon Orwant 是「Perl Journal」的主编，该杂志把 Perl 社区组合成了一个共同的论坛，以进行 Perl 新的开发。</li>\r\n<li>「<strong>草泥马</strong>」\r\n<ul>\r\n<li>英：「Intermediate Perl」，Randal L.Schwartz，Tom Phoenix，brian d foy 著</li>\r\n</ul>\r\n简介：O’Reilly 出版社联合 3 位 Perl 社区极负盛名的人出品的 Perl 系列教程的第二本书，主要介绍如何构造 Perl 复杂数据结构和对象的知识，以及如何组织团队工作（模块、测试和发布），编写可重用的 Perl 程序。</li>\r\n<li>「<strong>小羊驼母亲和她的孩子</strong>」\r\n<ul>\r\n<li>英：「Mastering Perl」，brian d foy 著</li>\r\n<li>中：「精通Perl」，韩殿飞 译</li>\r\n</ul>\r\n简介：O’Reilly 出版社联合 3 位 Perl 社区极负盛名的人出品的 Perl 系列教程的第三本书，该书综合运用了该系列前二本书中的知识， 给出了很多有趣的话题并围绕它们列举了大量例子，通过这些话题和例子教会你 Perl 编程的思维方式.</li>\r\n<li>「<strong>美洲猎鹿犬</strong>」\r\n<ul>\r\n<li>英：「Perl Best Practices」，Damian Conway 著</li>\r\n<li>中：「Perl最佳实践」，O’Reilly Taiwan公司 译</li>\r\n</ul>\r\n简介：该书为 Perl 编程人员提供了关于编程艺术的 256 条规则，这些规则能帮助你编写出更好的 Perl 代码。这些规则涵盖了代码布局和命名规则，数据和控制结构的选择，程序解构和模块化，接口的设计和实现，面向对象设计，错误处理，程序测试和调试。所有的规则都是为了写出清晰，健壮，高效， 可维护和简洁的程序而设计。</li>\r\n<li>「<strong>高效黑客</strong>」\r\n<ul>\r\n<li>英：「Effective Perl Programming」，Joseph N.Hall，Joshua A.McAdams，brian d foy 著</li>\r\n<li>中：「Perl高效编程」，盛春，王晖 等 译</li>\r\n</ul>\r\n简介：Perl 语言作为最成功的模块化编程语言，具有「软件芯片」的美誉，该书深入挖掘了 Perl 语言高效简洁的特点，为 Perl 爱好者提供了面向高效应用的指南。书中内容包括对各种测试提出的建议。 最新的正则表达式以及各种实用模块的习惯用法并逐一展现 120 个实用而精炼的案例。</li>\r\n<li>「<strong>黑豹</strong>」\r\n<ul>\r\n<li>英：「Advanced Perl Programming」，Simon Cozens 著</li>\r\n<li>中：「高级Perl编程」，Perlisb 译</li>\r\n</ul>\r\n简介：该书作为 O’Reilly 出版社 Perl 系列图书中的最高级教程，清晰地解释了许多 Perl 的概念，譬如内省、重载内建函数、基于面向对象模型的 Perl 扩展和如何对 Perl 程序的稳定性进行测试等诸多方面，此书汇集了 Perl 社区最优秀的成员辛苦积累的许多经验。</li>\r\n</ol>"},{"title":"Windows 下 Haskell-stack 开发环境搭建","date":"2018-08-11T08:59:52.000Z","_content":"\n{% centerquote %}\n   <img src=\"/img/haskell-logo.svg\" width=\"45%\"> <br>\n   An advanced, purely functional programming language\n{% endcenterquote %}\n\n抛却「Haskell 语言能装逼」这一光环，笔者认为学习 Haskell 的另一主要动机在于尝试体验另一种编程思维，即「做什么」而非「怎么做」，Haskell 写出的程序更像是人脑的思维而不是机器的思维。当然了，装 x 也 hin 重要。\n\n目前 [Haskell 官方下载页][haskell-downloads] 推荐三种下载方案：\n\n- [最小安装程序][minimal-installers]\n- [stack][stack]\n- [Haskell 平台][haskell-platform]\n\n总体而言，Haskell 在 *nix / OS X 操作系统下的生态优于 Windows 环境，但对于熟悉 Windows 操作、醉心于各类工具流的笔者而言，必须要在 Windows 系统下完成环境搭建。为方便后续各类包的安装更新等操作，这里采用 [Cabal][cabal] 的替代品 -- stack。以下诸多关键操作均参考 [Arvind Devarajan 的博客][arvind-devarajan-blog]。\n\n<!-- more -->\n\n### 预热\n\n在 Windows 操作系统环境中，如果没有设定环境变量 `STACK_ROOT`，则通过 stack 下载的程序文件以及包快照会被存放在 `%LOCALAPPDATA%\\Programs\\stack` 以及 `%APPDATA%\\stack` 目录下。经常变动的包安放在系统盘总会令人不安，也不便于管理。所以在首次使用 stack 之前，应设定环境变量 `STACK_ROOT`，这里笔者将其设为 `F:\\HaskellStack`。另外推荐设定编译器 GHC 的下载安装目录，见后文 `config.yaml` 文件的配置。（[stack 帮助文档关于此问题的说明][stack-change-temp-dir]）\n\n### 配置\n\n这里有几点关于我个人在开发过程中的习惯配置。\n\n- 提前安装好 [MSYS2][msys2] 作为 C/C++ 等工具的开发环境，并添加至环境变量 `PATH`。详细配置过程见 [MSYS2 的日常操作][daily-operations-of-msys2]\n- 将一个包含常用可执行文件的目录加入环境变量 `PATH`，如 `F:\\WorkingDirectory\\Bin`\n\nstack 默认使用的软件源在国外，这里换上国内的清华大学开源网站镜像。由于之前已设定了 `STACK_ROOT` 环境变量，首次运行 stack 会在此目录下生成一些文件，修改 `config.yaml` 文件：\n\n```yaml %STACK_ROOT%\\config.yaml\nsetup-info: \"http://mirrors.tuna.tsinghua.edu.cn/stackage/stack-setup.yaml\"\n\nurls:\n  latest-snapshot: http://mirrors.tuna.tsinghua.edu.cn/stackage/snapshots.json\n  lts-build-plans: http://mirrors.tuna.tsinghua.edu.cn/stackage/lts-haskell/\n  nightly-build-plans: http://mirrors.tuna.tsinghua.edu.cn/stackage/stackage-nightly/\n\npackage-indices:\n  - name: Tsinghua\n    download-prefix: http://mirrors.tuna.tsinghua.edu.cn/hackage/package/\n    http: http://mirrors.tuna.tsinghua.edu.cn/hackage/00-index.tar.gz\n\nskip-msys: true\nlocal-programs-path: F:\\HaskellStack\\programs\nlocal-bin-path: F:\\WorkingDirectory\\Bin\n```\n\n以上参考 [stackage 镜像使用帮助][stackage-help] 以及 [hackage 镜像使用帮助][hackage-help]。另作几点说明：\n\n- Windows 下的 stack 会自动安装 MSYS2，由于之前已在机器中安装过，故在配置中跳过 MSYS 的安装\n- 通过 `stack install` 生成的可执行文件默认在 `%APPDATA%` 目录下，这里统一放置于之前提到的可执行文件合集目录中\n\n执行 `stack setup` 下载最新版的 GHC，目前版本为 8.4.3。\n\n如一切顺利，`stack path` 输出如下：\n\n```plain\nstack-root: F:\\HaskellStack\nproject-root: F:\\HaskellStack\\global-project\nconfig-location: F:\\HaskellStack\\global-project\\stack.yaml\nbin-path: .;F:\\HaskellStack\\snapshots\\55eb7f36\\bin;F:\\HaskellStack\\compiler-tools\\x86_64-windows\\ghc-8.4.3\\bin;F:\\HaskellStack\\programs\\x86_64-windows\\ghc-8.4.3\\bin;F:\\HaskellStack\\programs\\x86_64-windows\\ghc-8.4.3\\mingw\\bin;C:\\Windows\\system32;...\nprograms: F:\\HaskellStack\\programs\\x86_64-windows\ncompiler-exe: F:\\HaskellStack\\programs\\x86_64-windows\\ghc-8.4.3\\bin\\ghc.EXE\ncompiler-bin: F:\\HaskellStack\\programs\\x86_64-windows\\ghc-8.4.3\\bin\ncompiler-tools-bin: F:\\HaskellStack\\compiler-tools\\x86_64-windows\\ghc-8.4.3\\bin\nlocal-bin: F:\\WorkingDirectory\\Bin\nextra-include-dirs:\nextra-library-dirs:\nsnapshot-pkg-db: F:\\HaskellStack\\snapshots\\55eb7f36\\pkgdb\nlocal-pkg-db: F:\\HaskellStack\\global-project\\.stack-work\\install\\620260b6\\pkgdb\nglobal-pkg-db: F:\\HaskellStack\\programs\\x86_64-windows\\ghc-8.4.3\\lib\\package.conf.d\nghc-package-path: F:\\HaskellStack\\global-project\\.stack-work\\install\\620260b6\\pkgdb;F:\\HaskellStack\\snapshots\\55eb7f36\\pkgdb;F:\\HaskellStack\\programs\\x86_64-windows\\ghc-8.4.3\\lib\\package.conf.d\nsnapshot-install-root: F:\\HaskellStack\\snapshots\\55eb7f36\nlocal-install-root: F:\\HaskellStack\\global-project\\.stack-work\\install\\620260b6\nsnapshot-doc-root: F:\\HaskellStack\\snapshots\\55eb7f36\\doc\nlocal-doc-root: F:\\HaskellStack\\global-project\\.stack-work\\install\\620260b6\\doc\ndist-dir: .stack-work\\dist\\7d103d30\nlocal-hpc-root: F:\\HaskellStack\\global-project\\.stack-work\\install\\620260b6\\hpc\nlocal-bin-path: F:\\WorkingDirectory\\Bin\nghc-paths: F:\\HaskellStack\\programs\\x86_64-windows\n```\n\n最后，如要修改 GHCi 的命令行提示符或在启动时加载某些包，可通过添加 / 修改 `%APPDATA%\\ghc\\ghci.conf` 文件为以下内容：\n\n```conf ghci.conf\nimport Text.Show.Pretty (ppShow, pPrint)\n\n:set -interactive-print pPrint\n:set prompt \"|> \"\n```\n\n\n### 编辑器\n\n考虑编辑效率和插件生态，推荐使用 VSCode 作为主力编辑器。安装插件：\n\n- [Haskell Syntax Highlight][vsc-haskell-syntax-highlight]\n- [Haskelly][vsc-haskelly]\n- [hindent-format][vsc-hindent-format]\n- [brittany][vsc-brittany]\n\n后两者为代码格式化插件，任选一即可。\n\n`hindent-format` 貌似不能正确读取配置文件，故手动修改之（当前版本 0.0.8）\n\n{% fold \"hindent-format 插件修改后代码\" %}\n```javascript extension.js\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst vscode = require(\"vscode\");\nconst child_process = require(\"child_process\");\nconst path = require(\"path\");\nclass HindentFormatEditsProvider {\n    constructor() {\n        this.hindentAvailable = false;\n        this.enable = true;\n        this.command = \"hindent\";\n        this.arguments = [];\n        this.configure();\n    }\n    configure() {\n        const config = vscode.workspace.getConfiguration('hindent-format');\n        this.enable = config.get('enable', true);\n        this.command = config.get('command', 'hindent');\n        this.arguments = [\n            \"--indent-size\", \"4\",\n            \"--line-length\", 100\n        ];\n        if (this.enable) {\n            let result = child_process.spawnSync(this.command, ['--version']);\n            if (!result.status) {\n                this.hindentAvailable = true;\n                console.log(\"hindent-format: using executable: \" + this.command);\n            }\n            else {\n                this.hindentAvailable = false;\n                vscode.window.showWarningMessage(\"hindent-format: cannot execute hindent command: \" + this.command);\n            }\n        }\n    }\n    formatHindent(text) {\n        let cwd = '.';\n        // May this helps hindent pick up the .hindent.yaml file\n        if (vscode.window.activeTextEditor) {\n            let documentPath = vscode.window.activeTextEditor.document.uri.fsPath;\n            cwd = path.dirname(documentPath);\n        }\n        let result = child_process.spawnSync(this.command, this.arguments, {\n            'cwd': cwd,\n            'input': text\n        });\n        if (!result.status) {\n            return result.stdout.toString();\n        }\n        else {\n            vscode.window.showWarningMessage(result.stderr.toString().split('\\n')[0]);\n            return '';\n        }\n    }\n    provideDocumentFormattingEdits(document, options, token) {\n        let formatted = this.formatHindent(document.getText());\n        if (formatted !== '') {\n            let range = document.validateRange(new vscode.Range(0, 0, Number.MAX_VALUE, Number.MAX_VALUE));\n            return [vscode.TextEdit.replace(range, formatted)];\n        }\n        else {\n            return [];\n        }\n    }\n    provideDocumentRangeFormattingEdits(document, range, options, token) {\n        let formatted = this.formatHindent(document.getText(range));\n        if (formatted !== '') {\n            return [vscode.TextEdit.replace(range, formatted)];\n        }\n        else {\n            return [];\n        }\n    }\n}\nfunction activate(context) {\n    console.log(\"hindent-format: active!\");\n    let hindentFormatProvider = new HindentFormatEditsProvider();\n    if (hindentFormatProvider.hindentAvailable) {\n        vscode.languages.registerDocumentFormattingEditProvider('haskell', hindentFormatProvider);\n        console.log(\"hindent-format: registered document formatting provider\");\n        vscode.languages.registerDocumentRangeFormattingEditProvider('haskell', hindentFormatProvider);\n        console.log(\"hindent-format: registered selection formatting provider\");\n        vscode.commands.registerTextEditorCommand('hindent-format.format', (textEditor, edit, args) => {\n            let range = textEditor.selection.with();\n            if (range.isEmpty) {\n                range = textEditor.document.validateRange(new vscode.Range(0, 0, Number.MAX_VALUE, Number.MAX_VALUE));\n            }\n            let formatted = hindentFormatProvider.formatHindent(textEditor.document.getText(range));\n            if (formatted !== '') {\n                edit.replace(range, formatted);\n            }\n        });\n        console.log(\"hindent-format: registered palette command\");\n    }\n}\nexports.activate = activate;\nfunction deactivate() { }\nexports.deactivate = deactivate;\n//# sourceMappingURL=extension.js.map\n```\n{% endfold %}\n\n个人更青睐 `brittany` 格式化的效果。 但目前 VSCode 插件 `brittany` 对未保存文档不能正确执行格式化，同样需要修改插件源代码（当前版本 0.0.1）\n\n{% fold \"brittany 插件修改后代码\" %}\n```javascript extension.js\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst vscode = require(\"vscode\");\nconst proc = require(\"child_process\");\nconst path = require(\"path\");\nconst tmp = require(\"tmp\");\nconst fs = require(\"fs\");\nfunction activate(context) {\n    // Use the console to output diagnostic information (console.log) and errors (console.error)\n    // This line of code will only be executed once when your extension is activated\n    if (isEnabled() === false) {\n        console.log(\"brittany extension disabled; not registering it.\");\n        return;\n    }\n    else {\n        console.log(\"Registering brittany extension\");\n    }\n    context.subscriptions.push(vscode.languages.registerDocumentRangeFormattingEditProvider('haskell', {\n        provideDocumentRangeFormattingEdits(document, range) {\n            if (isEnabled() === false) {\n                return new Promise((resolve, reject) => {\n                    return reject([]);\n                });\n            }\n            console.log('brittany asked to format');\n            // If we're formatting the whole document\n            // Brittany operates on files only, so we need to \n            // Improvement TODO: Instead of making a tmp file, pass the source code into STDIN.\n            // Could also potentially unify this approach with the full-file approach.\n            let substring = document.getText(range);\n            let tmpobj = tmp.fileSync();\n            console.log('brittany: Temporary file: ', tmpobj.name);\n            return new Promise((resolve, reject) => {\n                fs.write(tmpobj.fd, substring, (err, written, str) => {\n                    if (err) {\n                        return reject(err);\n                    }\n                    else {\n                        return resolve(runBrittany(document, range, tmpobj.name, tmpobj));\n                    }\n                });\n            });\n        }\n    }));\n}\nexports.activate = activate;\nfunction runBrittany(document, range, inputFilename, tmpobj) {\n    return new Promise((resolve, reject) => {\n        const file = document.uri.fsPath;\n        var cmd = brittanyCmd() + \" \\\"\" + inputFilename + \"\\\"\"\n        +\" \" + additionalFlags();\n        var maybeWorkspaceFolder = vscode.workspace.getWorkspaceFolder(document.uri);\n        var dir = maybeWorkspaceFolder !== undefined ? maybeWorkspaceFolder.uri.fsPath : path.dirname(document.uri.fsPath);\n        console.log(\"brittany command is: \" + cmd);\n        console.log(\"brittany folder is: \" + dir);\n        var options = {\n            encoding: 'utf8',\n            // timeout: 0,\n            // maxBuffer: 200 * 1024, // ?\n            // killSignal: 'SIGTERM',\n            cwd: dir,\n        };\n        proc.exec(cmd, options, (error, stdout, stderr) => {\n            if (error) {\n                if (tmpobj) {\n                    tmpobj.removeCallback();\n                }\n                console.error(\"Error running brittany:\");\n                console.error(error);\n                console.error(stdout);\n                console.error(stderr);\n                vscode.window.showErrorMessage(\"Failed to run brittany; see the developer tools console for details. \" + error);\n                return reject([]);\n            }\n            else {\n                if (tmpobj) {\n                    tmpobj.removeCallback();\n                }\n                return resolve([vscode.TextEdit.replace(range, stdout)]);\n            }\n        });\n    });\n}\n// this method is called when your extension is deactivated\nfunction deactivate() {\n}\nexports.deactivate = deactivate;\nfunction brittanyCmd() {\n    return vscode.workspace.getConfiguration(\"brittany\")[\"path\"];\n}\nfunction additionalFlags() {\n    return vscode.workspace.getConfiguration(\"brittany\")[\"additional-flags\"];\n}\nfunction isEnabled() {\n    return vscode.workspace.getConfiguration(\"brittany\")[\"enable\"];\n}\nfunction fullDocumentRange(document) {\n    const lastLineId = document.lineCount - 1;\n    return new vscode.Range(0, 0, lastLineId, document.lineAt(lastLineId).text.length);\n}\n//# sourceMappingURL=extension.js.map\n```\n{% endfold %}\n\n另外，建议利用 `config.yaml` 文件搭配 `brittany` 进行深度配置。在控制台执行一次 `brittany` 命令，生成的配置文件位置为 `%APPDATA%\\brittany\\config.yaml`，示例配置如下。\n\n{% fold \"brittany 配置文件\" %}\n```yaml %APPDATA%\\brittany\\config.yaml\nconf_debug:\n  dconf_roundtrip_exactprint_only: false\n  dconf_dump_bridoc_simpl_par: false\n  dconf_dump_ast_unknown: false\n  dconf_dump_bridoc_simpl_floating: false\n  dconf_dump_config: false\n  dconf_dump_bridoc_raw: false\n  dconf_dump_bridoc_final: false\n  dconf_dump_bridoc_simpl_alt: false\n  dconf_dump_bridoc_simpl_indent: false\n  dconf_dump_annotations: false\n  dconf_dump_bridoc_simpl_columns: false\n  dconf_dump_ast_full: false\nconf_forward:\n  options_ghc:\n    - -XLambdaCase\n    - -XMultiWayIf\n    - -XGADTs\n    - -XPatternGuards\n    - -XViewPatterns\n    - -XRecursiveDo\n    - -XTupleSections\n    - -XExplicitForAll\n    - -XImplicitParams\n    - -XQuasiQuotes\n    - -XTemplateHaskell\n    - -XBangPatterns\nconf_errorHandling:\n  econf_ExactPrintFallback: ExactPrintFallbackModeInline\n  econf_Werror: false\n  econf_omit_output_valid_check: false\n  econf_produceOutputOnErrors: false\nconf_preprocessor:\n  ppconf_CPPMode: CPPModeAbort\n  ppconf_hackAroundIncludes: false\nconf_obfuscate: false\nconf_roundtrip_exactprint_only: false\nconf_version: 1\nconf_layout:\n  lconfig_reformatModulePreamble: true\n  lconfig_altChooser:\n    tag: AltChooserBoundedSearch\n    contents: 3\n  lconfig_allowSingleLineExportList: false\n  lconfig_importColumn: 50\n  lconfig_hangingTypeSignature: false\n  lconfig_importAsColumn: 50\n  lconfig_alignmentLimit: 30\n  lconfig_indentListSpecial: true\n  lconfig_indentAmount: 4\n  lconfig_alignmentBreakOnMultiline: true\n  lconfig_cols: 80\n  lconfig_indentPolicy: IndentPolicyFree\n  lconfig_indentWhereSpecial: true\n  lconfig_columnAlignMode:\n    tag: ColumnAlignModeMajority\n    contents: 0.7\n```\n{% endfold %}\n\n\n### 参考\n\n- [Installing Haskell stack (in Windows)](https://blog.ramdoot.in/installing-haskell-stack-in-windows-7c8fd2c79f)\n- [重拾Haskell](https://www.zybuluo.com/delight/note/503796)\n\n\n[haskell-downloads]: https://www.haskell.org/downloads\n[minimal-installers]: https://www.haskell.org/downloads#minimal\n[stack]: http://docs.haskellstack.org\n[haskell-platform]: https://www.haskell.org/downloads#platform\n[cabal]: https://www.haskell.org/cabal\n[arvind-devarajan-blog]: https://blog.ramdoot.in\n[msys2]: https://www.msys2.org\n[daily-operations-of-msys2]: /daily-operations-of-msys2\n[stackage-help]: https://mirrors.tuna.tsinghua.edu.cn/help/stackage\n[hackage-help]: https://mirrors.tuna.tsinghua.edu.cn/help/hackage\n[stack-change-temp-dir]: https://docs.haskellstack.org/en/stable/faq/#can-i-change-stacks-default-temporary-directory\n[vsc-haskell-syntax-highlight]: https://marketplace.visualstudio.com/items?itemName=justusadam.language-haskell\n[vsc-haskelly]: https://marketplace.visualstudio.com/items?itemName=UCL.haskelly\n[vsc-hindent-format]: https://marketplace.visualstudio.com/items?itemName=monofon.hindent-format\n[vsc-brittany]: https://marketplace.visualstudio.com/items?itemName=MaxGabriel.brittany\n","source":"_posts/setting-up-haskell-stack-development-environment.md","raw":"---\ntitle: Windows 下 Haskell-stack 开发环境搭建\ndate: 2018-08-11 16:59:52\ntags:\n    - Haskell\n    - Stack\n    - Windows\ncategories: Development\n---\n\n{% centerquote %}\n   <img src=\"/img/haskell-logo.svg\" width=\"45%\"> <br>\n   An advanced, purely functional programming language\n{% endcenterquote %}\n\n抛却「Haskell 语言能装逼」这一光环，笔者认为学习 Haskell 的另一主要动机在于尝试体验另一种编程思维，即「做什么」而非「怎么做」，Haskell 写出的程序更像是人脑的思维而不是机器的思维。当然了，装 x 也 hin 重要。\n\n目前 [Haskell 官方下载页][haskell-downloads] 推荐三种下载方案：\n\n- [最小安装程序][minimal-installers]\n- [stack][stack]\n- [Haskell 平台][haskell-platform]\n\n总体而言，Haskell 在 *nix / OS X 操作系统下的生态优于 Windows 环境，但对于熟悉 Windows 操作、醉心于各类工具流的笔者而言，必须要在 Windows 系统下完成环境搭建。为方便后续各类包的安装更新等操作，这里采用 [Cabal][cabal] 的替代品 -- stack。以下诸多关键操作均参考 [Arvind Devarajan 的博客][arvind-devarajan-blog]。\n\n<!-- more -->\n\n### 预热\n\n在 Windows 操作系统环境中，如果没有设定环境变量 `STACK_ROOT`，则通过 stack 下载的程序文件以及包快照会被存放在 `%LOCALAPPDATA%\\Programs\\stack` 以及 `%APPDATA%\\stack` 目录下。经常变动的包安放在系统盘总会令人不安，也不便于管理。所以在首次使用 stack 之前，应设定环境变量 `STACK_ROOT`，这里笔者将其设为 `F:\\HaskellStack`。另外推荐设定编译器 GHC 的下载安装目录，见后文 `config.yaml` 文件的配置。（[stack 帮助文档关于此问题的说明][stack-change-temp-dir]）\n\n### 配置\n\n这里有几点关于我个人在开发过程中的习惯配置。\n\n- 提前安装好 [MSYS2][msys2] 作为 C/C++ 等工具的开发环境，并添加至环境变量 `PATH`。详细配置过程见 [MSYS2 的日常操作][daily-operations-of-msys2]\n- 将一个包含常用可执行文件的目录加入环境变量 `PATH`，如 `F:\\WorkingDirectory\\Bin`\n\nstack 默认使用的软件源在国外，这里换上国内的清华大学开源网站镜像。由于之前已设定了 `STACK_ROOT` 环境变量，首次运行 stack 会在此目录下生成一些文件，修改 `config.yaml` 文件：\n\n```yaml %STACK_ROOT%\\config.yaml\nsetup-info: \"http://mirrors.tuna.tsinghua.edu.cn/stackage/stack-setup.yaml\"\n\nurls:\n  latest-snapshot: http://mirrors.tuna.tsinghua.edu.cn/stackage/snapshots.json\n  lts-build-plans: http://mirrors.tuna.tsinghua.edu.cn/stackage/lts-haskell/\n  nightly-build-plans: http://mirrors.tuna.tsinghua.edu.cn/stackage/stackage-nightly/\n\npackage-indices:\n  - name: Tsinghua\n    download-prefix: http://mirrors.tuna.tsinghua.edu.cn/hackage/package/\n    http: http://mirrors.tuna.tsinghua.edu.cn/hackage/00-index.tar.gz\n\nskip-msys: true\nlocal-programs-path: F:\\HaskellStack\\programs\nlocal-bin-path: F:\\WorkingDirectory\\Bin\n```\n\n以上参考 [stackage 镜像使用帮助][stackage-help] 以及 [hackage 镜像使用帮助][hackage-help]。另作几点说明：\n\n- Windows 下的 stack 会自动安装 MSYS2，由于之前已在机器中安装过，故在配置中跳过 MSYS 的安装\n- 通过 `stack install` 生成的可执行文件默认在 `%APPDATA%` 目录下，这里统一放置于之前提到的可执行文件合集目录中\n\n执行 `stack setup` 下载最新版的 GHC，目前版本为 8.4.3。\n\n如一切顺利，`stack path` 输出如下：\n\n```plain\nstack-root: F:\\HaskellStack\nproject-root: F:\\HaskellStack\\global-project\nconfig-location: F:\\HaskellStack\\global-project\\stack.yaml\nbin-path: .;F:\\HaskellStack\\snapshots\\55eb7f36\\bin;F:\\HaskellStack\\compiler-tools\\x86_64-windows\\ghc-8.4.3\\bin;F:\\HaskellStack\\programs\\x86_64-windows\\ghc-8.4.3\\bin;F:\\HaskellStack\\programs\\x86_64-windows\\ghc-8.4.3\\mingw\\bin;C:\\Windows\\system32;...\nprograms: F:\\HaskellStack\\programs\\x86_64-windows\ncompiler-exe: F:\\HaskellStack\\programs\\x86_64-windows\\ghc-8.4.3\\bin\\ghc.EXE\ncompiler-bin: F:\\HaskellStack\\programs\\x86_64-windows\\ghc-8.4.3\\bin\ncompiler-tools-bin: F:\\HaskellStack\\compiler-tools\\x86_64-windows\\ghc-8.4.3\\bin\nlocal-bin: F:\\WorkingDirectory\\Bin\nextra-include-dirs:\nextra-library-dirs:\nsnapshot-pkg-db: F:\\HaskellStack\\snapshots\\55eb7f36\\pkgdb\nlocal-pkg-db: F:\\HaskellStack\\global-project\\.stack-work\\install\\620260b6\\pkgdb\nglobal-pkg-db: F:\\HaskellStack\\programs\\x86_64-windows\\ghc-8.4.3\\lib\\package.conf.d\nghc-package-path: F:\\HaskellStack\\global-project\\.stack-work\\install\\620260b6\\pkgdb;F:\\HaskellStack\\snapshots\\55eb7f36\\pkgdb;F:\\HaskellStack\\programs\\x86_64-windows\\ghc-8.4.3\\lib\\package.conf.d\nsnapshot-install-root: F:\\HaskellStack\\snapshots\\55eb7f36\nlocal-install-root: F:\\HaskellStack\\global-project\\.stack-work\\install\\620260b6\nsnapshot-doc-root: F:\\HaskellStack\\snapshots\\55eb7f36\\doc\nlocal-doc-root: F:\\HaskellStack\\global-project\\.stack-work\\install\\620260b6\\doc\ndist-dir: .stack-work\\dist\\7d103d30\nlocal-hpc-root: F:\\HaskellStack\\global-project\\.stack-work\\install\\620260b6\\hpc\nlocal-bin-path: F:\\WorkingDirectory\\Bin\nghc-paths: F:\\HaskellStack\\programs\\x86_64-windows\n```\n\n最后，如要修改 GHCi 的命令行提示符或在启动时加载某些包，可通过添加 / 修改 `%APPDATA%\\ghc\\ghci.conf` 文件为以下内容：\n\n```conf ghci.conf\nimport Text.Show.Pretty (ppShow, pPrint)\n\n:set -interactive-print pPrint\n:set prompt \"|> \"\n```\n\n\n### 编辑器\n\n考虑编辑效率和插件生态，推荐使用 VSCode 作为主力编辑器。安装插件：\n\n- [Haskell Syntax Highlight][vsc-haskell-syntax-highlight]\n- [Haskelly][vsc-haskelly]\n- [hindent-format][vsc-hindent-format]\n- [brittany][vsc-brittany]\n\n后两者为代码格式化插件，任选一即可。\n\n`hindent-format` 貌似不能正确读取配置文件，故手动修改之（当前版本 0.0.8）\n\n{% fold \"hindent-format 插件修改后代码\" %}\n```javascript extension.js\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst vscode = require(\"vscode\");\nconst child_process = require(\"child_process\");\nconst path = require(\"path\");\nclass HindentFormatEditsProvider {\n    constructor() {\n        this.hindentAvailable = false;\n        this.enable = true;\n        this.command = \"hindent\";\n        this.arguments = [];\n        this.configure();\n    }\n    configure() {\n        const config = vscode.workspace.getConfiguration('hindent-format');\n        this.enable = config.get('enable', true);\n        this.command = config.get('command', 'hindent');\n        this.arguments = [\n            \"--indent-size\", \"4\",\n            \"--line-length\", 100\n        ];\n        if (this.enable) {\n            let result = child_process.spawnSync(this.command, ['--version']);\n            if (!result.status) {\n                this.hindentAvailable = true;\n                console.log(\"hindent-format: using executable: \" + this.command);\n            }\n            else {\n                this.hindentAvailable = false;\n                vscode.window.showWarningMessage(\"hindent-format: cannot execute hindent command: \" + this.command);\n            }\n        }\n    }\n    formatHindent(text) {\n        let cwd = '.';\n        // May this helps hindent pick up the .hindent.yaml file\n        if (vscode.window.activeTextEditor) {\n            let documentPath = vscode.window.activeTextEditor.document.uri.fsPath;\n            cwd = path.dirname(documentPath);\n        }\n        let result = child_process.spawnSync(this.command, this.arguments, {\n            'cwd': cwd,\n            'input': text\n        });\n        if (!result.status) {\n            return result.stdout.toString();\n        }\n        else {\n            vscode.window.showWarningMessage(result.stderr.toString().split('\\n')[0]);\n            return '';\n        }\n    }\n    provideDocumentFormattingEdits(document, options, token) {\n        let formatted = this.formatHindent(document.getText());\n        if (formatted !== '') {\n            let range = document.validateRange(new vscode.Range(0, 0, Number.MAX_VALUE, Number.MAX_VALUE));\n            return [vscode.TextEdit.replace(range, formatted)];\n        }\n        else {\n            return [];\n        }\n    }\n    provideDocumentRangeFormattingEdits(document, range, options, token) {\n        let formatted = this.formatHindent(document.getText(range));\n        if (formatted !== '') {\n            return [vscode.TextEdit.replace(range, formatted)];\n        }\n        else {\n            return [];\n        }\n    }\n}\nfunction activate(context) {\n    console.log(\"hindent-format: active!\");\n    let hindentFormatProvider = new HindentFormatEditsProvider();\n    if (hindentFormatProvider.hindentAvailable) {\n        vscode.languages.registerDocumentFormattingEditProvider('haskell', hindentFormatProvider);\n        console.log(\"hindent-format: registered document formatting provider\");\n        vscode.languages.registerDocumentRangeFormattingEditProvider('haskell', hindentFormatProvider);\n        console.log(\"hindent-format: registered selection formatting provider\");\n        vscode.commands.registerTextEditorCommand('hindent-format.format', (textEditor, edit, args) => {\n            let range = textEditor.selection.with();\n            if (range.isEmpty) {\n                range = textEditor.document.validateRange(new vscode.Range(0, 0, Number.MAX_VALUE, Number.MAX_VALUE));\n            }\n            let formatted = hindentFormatProvider.formatHindent(textEditor.document.getText(range));\n            if (formatted !== '') {\n                edit.replace(range, formatted);\n            }\n        });\n        console.log(\"hindent-format: registered palette command\");\n    }\n}\nexports.activate = activate;\nfunction deactivate() { }\nexports.deactivate = deactivate;\n//# sourceMappingURL=extension.js.map\n```\n{% endfold %}\n\n个人更青睐 `brittany` 格式化的效果。 但目前 VSCode 插件 `brittany` 对未保存文档不能正确执行格式化，同样需要修改插件源代码（当前版本 0.0.1）\n\n{% fold \"brittany 插件修改后代码\" %}\n```javascript extension.js\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst vscode = require(\"vscode\");\nconst proc = require(\"child_process\");\nconst path = require(\"path\");\nconst tmp = require(\"tmp\");\nconst fs = require(\"fs\");\nfunction activate(context) {\n    // Use the console to output diagnostic information (console.log) and errors (console.error)\n    // This line of code will only be executed once when your extension is activated\n    if (isEnabled() === false) {\n        console.log(\"brittany extension disabled; not registering it.\");\n        return;\n    }\n    else {\n        console.log(\"Registering brittany extension\");\n    }\n    context.subscriptions.push(vscode.languages.registerDocumentRangeFormattingEditProvider('haskell', {\n        provideDocumentRangeFormattingEdits(document, range) {\n            if (isEnabled() === false) {\n                return new Promise((resolve, reject) => {\n                    return reject([]);\n                });\n            }\n            console.log('brittany asked to format');\n            // If we're formatting the whole document\n            // Brittany operates on files only, so we need to \n            // Improvement TODO: Instead of making a tmp file, pass the source code into STDIN.\n            // Could also potentially unify this approach with the full-file approach.\n            let substring = document.getText(range);\n            let tmpobj = tmp.fileSync();\n            console.log('brittany: Temporary file: ', tmpobj.name);\n            return new Promise((resolve, reject) => {\n                fs.write(tmpobj.fd, substring, (err, written, str) => {\n                    if (err) {\n                        return reject(err);\n                    }\n                    else {\n                        return resolve(runBrittany(document, range, tmpobj.name, tmpobj));\n                    }\n                });\n            });\n        }\n    }));\n}\nexports.activate = activate;\nfunction runBrittany(document, range, inputFilename, tmpobj) {\n    return new Promise((resolve, reject) => {\n        const file = document.uri.fsPath;\n        var cmd = brittanyCmd() + \" \\\"\" + inputFilename + \"\\\"\"\n        +\" \" + additionalFlags();\n        var maybeWorkspaceFolder = vscode.workspace.getWorkspaceFolder(document.uri);\n        var dir = maybeWorkspaceFolder !== undefined ? maybeWorkspaceFolder.uri.fsPath : path.dirname(document.uri.fsPath);\n        console.log(\"brittany command is: \" + cmd);\n        console.log(\"brittany folder is: \" + dir);\n        var options = {\n            encoding: 'utf8',\n            // timeout: 0,\n            // maxBuffer: 200 * 1024, // ?\n            // killSignal: 'SIGTERM',\n            cwd: dir,\n        };\n        proc.exec(cmd, options, (error, stdout, stderr) => {\n            if (error) {\n                if (tmpobj) {\n                    tmpobj.removeCallback();\n                }\n                console.error(\"Error running brittany:\");\n                console.error(error);\n                console.error(stdout);\n                console.error(stderr);\n                vscode.window.showErrorMessage(\"Failed to run brittany; see the developer tools console for details. \" + error);\n                return reject([]);\n            }\n            else {\n                if (tmpobj) {\n                    tmpobj.removeCallback();\n                }\n                return resolve([vscode.TextEdit.replace(range, stdout)]);\n            }\n        });\n    });\n}\n// this method is called when your extension is deactivated\nfunction deactivate() {\n}\nexports.deactivate = deactivate;\nfunction brittanyCmd() {\n    return vscode.workspace.getConfiguration(\"brittany\")[\"path\"];\n}\nfunction additionalFlags() {\n    return vscode.workspace.getConfiguration(\"brittany\")[\"additional-flags\"];\n}\nfunction isEnabled() {\n    return vscode.workspace.getConfiguration(\"brittany\")[\"enable\"];\n}\nfunction fullDocumentRange(document) {\n    const lastLineId = document.lineCount - 1;\n    return new vscode.Range(0, 0, lastLineId, document.lineAt(lastLineId).text.length);\n}\n//# sourceMappingURL=extension.js.map\n```\n{% endfold %}\n\n另外，建议利用 `config.yaml` 文件搭配 `brittany` 进行深度配置。在控制台执行一次 `brittany` 命令，生成的配置文件位置为 `%APPDATA%\\brittany\\config.yaml`，示例配置如下。\n\n{% fold \"brittany 配置文件\" %}\n```yaml %APPDATA%\\brittany\\config.yaml\nconf_debug:\n  dconf_roundtrip_exactprint_only: false\n  dconf_dump_bridoc_simpl_par: false\n  dconf_dump_ast_unknown: false\n  dconf_dump_bridoc_simpl_floating: false\n  dconf_dump_config: false\n  dconf_dump_bridoc_raw: false\n  dconf_dump_bridoc_final: false\n  dconf_dump_bridoc_simpl_alt: false\n  dconf_dump_bridoc_simpl_indent: false\n  dconf_dump_annotations: false\n  dconf_dump_bridoc_simpl_columns: false\n  dconf_dump_ast_full: false\nconf_forward:\n  options_ghc:\n    - -XLambdaCase\n    - -XMultiWayIf\n    - -XGADTs\n    - -XPatternGuards\n    - -XViewPatterns\n    - -XRecursiveDo\n    - -XTupleSections\n    - -XExplicitForAll\n    - -XImplicitParams\n    - -XQuasiQuotes\n    - -XTemplateHaskell\n    - -XBangPatterns\nconf_errorHandling:\n  econf_ExactPrintFallback: ExactPrintFallbackModeInline\n  econf_Werror: false\n  econf_omit_output_valid_check: false\n  econf_produceOutputOnErrors: false\nconf_preprocessor:\n  ppconf_CPPMode: CPPModeAbort\n  ppconf_hackAroundIncludes: false\nconf_obfuscate: false\nconf_roundtrip_exactprint_only: false\nconf_version: 1\nconf_layout:\n  lconfig_reformatModulePreamble: true\n  lconfig_altChooser:\n    tag: AltChooserBoundedSearch\n    contents: 3\n  lconfig_allowSingleLineExportList: false\n  lconfig_importColumn: 50\n  lconfig_hangingTypeSignature: false\n  lconfig_importAsColumn: 50\n  lconfig_alignmentLimit: 30\n  lconfig_indentListSpecial: true\n  lconfig_indentAmount: 4\n  lconfig_alignmentBreakOnMultiline: true\n  lconfig_cols: 80\n  lconfig_indentPolicy: IndentPolicyFree\n  lconfig_indentWhereSpecial: true\n  lconfig_columnAlignMode:\n    tag: ColumnAlignModeMajority\n    contents: 0.7\n```\n{% endfold %}\n\n\n### 参考\n\n- [Installing Haskell stack (in Windows)](https://blog.ramdoot.in/installing-haskell-stack-in-windows-7c8fd2c79f)\n- [重拾Haskell](https://www.zybuluo.com/delight/note/503796)\n\n\n[haskell-downloads]: https://www.haskell.org/downloads\n[minimal-installers]: https://www.haskell.org/downloads#minimal\n[stack]: http://docs.haskellstack.org\n[haskell-platform]: https://www.haskell.org/downloads#platform\n[cabal]: https://www.haskell.org/cabal\n[arvind-devarajan-blog]: https://blog.ramdoot.in\n[msys2]: https://www.msys2.org\n[daily-operations-of-msys2]: /daily-operations-of-msys2\n[stackage-help]: https://mirrors.tuna.tsinghua.edu.cn/help/stackage\n[hackage-help]: https://mirrors.tuna.tsinghua.edu.cn/help/hackage\n[stack-change-temp-dir]: https://docs.haskellstack.org/en/stable/faq/#can-i-change-stacks-default-temporary-directory\n[vsc-haskell-syntax-highlight]: https://marketplace.visualstudio.com/items?itemName=justusadam.language-haskell\n[vsc-haskelly]: https://marketplace.visualstudio.com/items?itemName=UCL.haskelly\n[vsc-hindent-format]: https://marketplace.visualstudio.com/items?itemName=monofon.hindent-format\n[vsc-brittany]: https://marketplace.visualstudio.com/items?itemName=MaxGabriel.brittany\n","slug":"setting-up-haskell-stack-development-environment","published":1,"updated":"2023-03-09T16:09:38.278Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u336y002xp4x0e44w36pj","content":"<blockquote class=\"blockquote-center\"><img src=\"/img/haskell-logo.svg\" width=\"45%\"> <br>\nAn advanced, purely functional programming language</blockquote>\r\n<p>抛却「Haskell 语言能装逼」这一光环，笔者认为学习 Haskell 的另一主要动机在于尝试体验另一种编程思维，即「做什么」而非「怎么做」，Haskell 写出的程序更像是人脑的思维而不是机器的思维。当然了，装 x 也 hin 重要。</p>\r\n<p>目前 <a href=\"https://www.haskell.org/downloads\" target=\"_blank\" rel=\"noopener\">Haskell 官方下载页</a> 推荐三种下载方案：</p>\r\n<ul>\r\n<li><a href=\"https://www.haskell.org/downloads#minimal\" target=\"_blank\" rel=\"noopener\">最小安装程序</a></li>\r\n<li><a href=\"http://docs.haskellstack.org\" target=\"_blank\" rel=\"noopener\">stack</a></li>\r\n<li><a href=\"https://www.haskell.org/downloads#platform\" target=\"_blank\" rel=\"noopener\">Haskell 平台</a></li>\r\n</ul>\r\n<p>总体而言，Haskell 在 *nix / OS X 操作系统下的生态优于 Windows 环境，但对于熟悉 Windows 操作、醉心于各类工具流的笔者而言，必须要在 Windows 系统下完成环境搭建。为方便后续各类包的安装更新等操作，这里采用 <a href=\"https://www.haskell.org/cabal\" target=\"_blank\" rel=\"noopener\">Cabal</a> 的替代品 – stack。以下诸多关键操作均参考 <a href=\"https://blog.ramdoot.in\" target=\"_blank\" rel=\"noopener\">Arvind Devarajan 的博客</a>。</p>\r\n<a id=\"more\"></a>\r\n<h3 id=\"预热\">预热</h3>\r\n<p>在 Windows 操作系统环境中，如果没有设定环境变量 <code>STACK_ROOT</code>，则通过 stack 下载的程序文件以及包快照会被存放在 <code>%LOCALAPPDATA%\\Programs\\stack</code> 以及 <code>%APPDATA%\\stack</code> 目录下。经常变动的包安放在系统盘总会令人不安，也不便于管理。所以在首次使用 stack 之前，应设定环境变量 <code>STACK_ROOT</code>，这里笔者将其设为 <code>F:\\HaskellStack</code>。另外推荐设定编译器 GHC 的下载安装目录，见后文 <code>config.yaml</code> 文件的配置。（<a href=\"https://docs.haskellstack.org/en/stable/faq/#can-i-change-stacks-default-temporary-directory\" target=\"_blank\" rel=\"noopener\">stack 帮助文档关于此问题的说明</a>）</p>\r\n<h3 id=\"配置\">配置</h3>\r\n<p>这里有几点关于我个人在开发过程中的习惯配置。</p>\r\n<ul>\r\n<li>提前安装好 <a href=\"https://www.msys2.org\" target=\"_blank\" rel=\"noopener\">MSYS2</a> 作为 C/C++ 等工具的开发环境，并添加至环境变量 <code>PATH</code>。详细配置过程见 <a href=\"/daily-operations-of-msys2\">MSYS2 的日常操作</a></li>\r\n<li>将一个包含常用可执行文件的目录加入环境变量 <code>PATH</code>，如 <code>F:\\WorkingDirectory\\Bin</code></li>\r\n</ul>\r\n<p>stack 默认使用的软件源在国外，这里换上国内的清华大学开源网站镜像。由于之前已设定了 <code>STACK_ROOT</code> 环境变量，首次运行 stack 会在此目录下生成一些文件，修改 <code>config.yaml</code> 文件：</p>\r\n<figure class=\"highlight yaml\"><figcaption><span>%STACK_ROOT%\\config.yaml</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">setup-info:</span> <span class=\"string\">\"http://mirrors.tuna.tsinghua.edu.cn/stackage/stack-setup.yaml\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">urls:</span></span><br><span class=\"line\"><span class=\"attr\">  latest-snapshot:</span> <span class=\"attr\">http://mirrors.tuna.tsinghua.edu.cn/stackage/snapshots.json</span></span><br><span class=\"line\"><span class=\"attr\">  lts-build-plans:</span> <span class=\"attr\">http://mirrors.tuna.tsinghua.edu.cn/stackage/lts-haskell/</span></span><br><span class=\"line\"><span class=\"attr\">  nightly-build-plans:</span> <span class=\"attr\">http://mirrors.tuna.tsinghua.edu.cn/stackage/stackage-nightly/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">package-indices:</span></span><br><span class=\"line\"><span class=\"attr\">  - name:</span> <span class=\"string\">Tsinghua</span></span><br><span class=\"line\"><span class=\"attr\">    download-prefix:</span> <span class=\"attr\">http://mirrors.tuna.tsinghua.edu.cn/hackage/package/</span></span><br><span class=\"line\"><span class=\"attr\">    http:</span> <span class=\"attr\">http://mirrors.tuna.tsinghua.edu.cn/hackage/00-index.tar.gz</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">skip-msys:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">local-programs-path:</span> <span class=\"attr\">F:\\HaskellStack\\programs</span></span><br><span class=\"line\"><span class=\"attr\">local-bin-path:</span> <span class=\"attr\">F:\\WorkingDirectory\\Bin</span></span><br></pre></td></tr></table></figure>\r\n<p>以上参考 <a href=\"https://mirrors.tuna.tsinghua.edu.cn/help/stackage\" target=\"_blank\" rel=\"noopener\">stackage 镜像使用帮助</a> 以及 <a href=\"https://mirrors.tuna.tsinghua.edu.cn/help/hackage\" target=\"_blank\" rel=\"noopener\">hackage 镜像使用帮助</a>。另作几点说明：</p>\r\n<ul>\r\n<li>Windows 下的 stack 会自动安装 MSYS2，由于之前已在机器中安装过，故在配置中跳过 MSYS 的安装</li>\r\n<li>通过 <code>stack install</code> 生成的可执行文件默认在 <code>%APPDATA%</code> 目录下，这里统一放置于之前提到的可执行文件合集目录中</li>\r\n</ul>\r\n<p>执行 <code>stack setup</code> 下载最新版的 GHC，目前版本为 8.4.3。</p>\r\n<p>如一切顺利，<code>stack path</code> 输出如下：</p>\r\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">stack-root: F:\\HaskellStack</span><br><span class=\"line\">project-root: F:\\HaskellStack\\global-project</span><br><span class=\"line\">config-location: F:\\HaskellStack\\global-project\\stack.yaml</span><br><span class=\"line\">bin-path: .;F:\\HaskellStack\\snapshots\\55eb7f36\\bin;F:\\HaskellStack\\compiler-tools\\x86_64-windows\\ghc-8.4.3\\bin;F:\\HaskellStack\\programs\\x86_64-windows\\ghc-8.4.3\\bin;F:\\HaskellStack\\programs\\x86_64-windows\\ghc-8.4.3\\mingw\\bin;C:\\Windows\\system32;...</span><br><span class=\"line\">programs: F:\\HaskellStack\\programs\\x86_64-windows</span><br><span class=\"line\">compiler-exe: F:\\HaskellStack\\programs\\x86_64-windows\\ghc-8.4.3\\bin\\ghc.EXE</span><br><span class=\"line\">compiler-bin: F:\\HaskellStack\\programs\\x86_64-windows\\ghc-8.4.3\\bin</span><br><span class=\"line\">compiler-tools-bin: F:\\HaskellStack\\compiler-tools\\x86_64-windows\\ghc-8.4.3\\bin</span><br><span class=\"line\">local-bin: F:\\WorkingDirectory\\Bin</span><br><span class=\"line\">extra-include-dirs:</span><br><span class=\"line\">extra-library-dirs:</span><br><span class=\"line\">snapshot-pkg-db: F:\\HaskellStack\\snapshots\\55eb7f36\\pkgdb</span><br><span class=\"line\">local-pkg-db: F:\\HaskellStack\\global-project\\.stack-work\\install\\620260b6\\pkgdb</span><br><span class=\"line\">global-pkg-db: F:\\HaskellStack\\programs\\x86_64-windows\\ghc-8.4.3\\lib\\package.conf.d</span><br><span class=\"line\">ghc-package-path: F:\\HaskellStack\\global-project\\.stack-work\\install\\620260b6\\pkgdb;F:\\HaskellStack\\snapshots\\55eb7f36\\pkgdb;F:\\HaskellStack\\programs\\x86_64-windows\\ghc-8.4.3\\lib\\package.conf.d</span><br><span class=\"line\">snapshot-install-root: F:\\HaskellStack\\snapshots\\55eb7f36</span><br><span class=\"line\">local-install-root: F:\\HaskellStack\\global-project\\.stack-work\\install\\620260b6</span><br><span class=\"line\">snapshot-doc-root: F:\\HaskellStack\\snapshots\\55eb7f36\\doc</span><br><span class=\"line\">local-doc-root: F:\\HaskellStack\\global-project\\.stack-work\\install\\620260b6\\doc</span><br><span class=\"line\">dist-dir: .stack-work\\dist\\7d103d30</span><br><span class=\"line\">local-hpc-root: F:\\HaskellStack\\global-project\\.stack-work\\install\\620260b6\\hpc</span><br><span class=\"line\">local-bin-path: F:\\WorkingDirectory\\Bin</span><br><span class=\"line\">ghc-paths: F:\\HaskellStack\\programs\\x86_64-windows</span><br></pre></td></tr></table></figure>\r\n<p>最后，如要修改 GHCi 的命令行提示符或在启动时加载某些包，可通过添加 / 修改 <code>%APPDATA%\\ghc\\ghci.conf</code> 文件为以下内容：</p>\r\n<figure class=\"highlight plain\"><figcaption><span>ghci.conf</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import Text.Show.Pretty (ppShow, pPrint)</span><br><span class=\"line\"></span><br><span class=\"line\">:set -interactive-print pPrint</span><br><span class=\"line\">:set prompt &quot;|&gt; &quot;</span><br></pre></td></tr></table></figure>\r\n<h3 id=\"编辑器\">编辑器</h3>\r\n<p>考虑编辑效率和插件生态，推荐使用 VSCode 作为主力编辑器。安装插件：</p>\r\n<ul>\r\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=justusadam.language-haskell\" target=\"_blank\" rel=\"noopener\">Haskell Syntax Highlight</a></li>\r\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=UCL.haskelly\" target=\"_blank\" rel=\"noopener\">Haskelly</a></li>\r\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=monofon.hindent-format\" target=\"_blank\" rel=\"noopener\">hindent-format</a></li>\r\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=MaxGabriel.brittany\" target=\"_blank\" rel=\"noopener\">brittany</a></li>\r\n</ul>\r\n<p>后两者为代码格式化插件，任选一即可。</p>\r\n<p><code>hindent-format</code> 貌似不能正确读取配置文件，故手动修改之（当前版本 0.0.8）</p>\r\n<div><div class=\"fold_hider\"><div class=\"close hider_title\">hindent-format 插件修改后代码</div></div><div class=\"fold\">\n<figure class=\"highlight javascript\"><figcaption><span>extension.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span>;</span><br><span class=\"line\"><span class=\"built_in\">Object</span>.defineProperty(exports, <span class=\"string\">\"__esModule\"</span>, &#123; <span class=\"attr\">value</span>: <span class=\"literal\">true</span> &#125;);</span><br><span class=\"line\"><span class=\"keyword\">const</span> vscode = <span class=\"built_in\">require</span>(<span class=\"string\">\"vscode\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> child_process = <span class=\"built_in\">require</span>(<span class=\"string\">\"child_process\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">\"path\"</span>);</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HindentFormatEditsProvider</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">constructor</span>() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.hindentAvailable = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.enable = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.command = <span class=\"string\">\"hindent\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.arguments = [];</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.configure();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    configure() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> config = vscode.workspace.getConfiguration(<span class=\"string\">'hindent-format'</span>);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.enable = config.get(<span class=\"string\">'enable'</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.command = config.get(<span class=\"string\">'command'</span>, <span class=\"string\">'hindent'</span>);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.arguments = [</span><br><span class=\"line\">            <span class=\"string\">\"--indent-size\"</span>, <span class=\"string\">\"4\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"--line-length\"</span>, <span class=\"number\">100</span></span><br><span class=\"line\">        ];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.enable) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> result = child_process.spawnSync(<span class=\"keyword\">this</span>.command, [<span class=\"string\">'--version'</span>]);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!result.status) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.hindentAvailable = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(<span class=\"string\">\"hindent-format: using executable: \"</span> + <span class=\"keyword\">this</span>.command);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.hindentAvailable = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                vscode.window.showWarningMessage(<span class=\"string\">\"hindent-format: cannot execute hindent command: \"</span> + <span class=\"keyword\">this</span>.command);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    formatHindent(text) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> cwd = <span class=\"string\">'.'</span>;</span><br><span class=\"line\">        <span class=\"comment\">// May this helps hindent pick up the .hindent.yaml file</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (vscode.window.activeTextEditor) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> documentPath = vscode.window.activeTextEditor.document.uri.fsPath;</span><br><span class=\"line\">            cwd = path.dirname(documentPath);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> result = child_process.spawnSync(<span class=\"keyword\">this</span>.command, <span class=\"keyword\">this</span>.arguments, &#123;</span><br><span class=\"line\">            <span class=\"string\">'cwd'</span>: cwd,</span><br><span class=\"line\">            <span class=\"string\">'input'</span>: text</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!result.status) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> result.stdout.toString();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            vscode.window.showWarningMessage(result.stderr.toString().split(<span class=\"string\">'\\n'</span>)[<span class=\"number\">0</span>]);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">''</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    provideDocumentFormattingEdits(<span class=\"built_in\">document</span>, options, token) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> formatted = <span class=\"keyword\">this</span>.formatHindent(<span class=\"built_in\">document</span>.getText());</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (formatted !== <span class=\"string\">''</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> range = <span class=\"built_in\">document</span>.validateRange(<span class=\"keyword\">new</span> vscode.Range(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"built_in\">Number</span>.MAX_VALUE, <span class=\"built_in\">Number</span>.MAX_VALUE));</span><br><span class=\"line\">            <span class=\"keyword\">return</span> [vscode.TextEdit.replace(range, formatted)];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> [];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    provideDocumentRangeFormattingEdits(<span class=\"built_in\">document</span>, range, options, token) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> formatted = <span class=\"keyword\">this</span>.formatHindent(<span class=\"built_in\">document</span>.getText(range));</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (formatted !== <span class=\"string\">''</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> [vscode.TextEdit.replace(range, formatted)];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> [];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">activate</span>(<span class=\"params\">context</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"hindent-format: active!\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> hindentFormatProvider = <span class=\"keyword\">new</span> HindentFormatEditsProvider();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (hindentFormatProvider.hindentAvailable) &#123;</span><br><span class=\"line\">        vscode.languages.registerDocumentFormattingEditProvider(<span class=\"string\">'haskell'</span>, hindentFormatProvider);</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">\"hindent-format: registered document formatting provider\"</span>);</span><br><span class=\"line\">        vscode.languages.registerDocumentRangeFormattingEditProvider(<span class=\"string\">'haskell'</span>, hindentFormatProvider);</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">\"hindent-format: registered selection formatting provider\"</span>);</span><br><span class=\"line\">        vscode.commands.registerTextEditorCommand(<span class=\"string\">'hindent-format.format'</span>, (textEditor, edit, args) =&gt; &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> range = textEditor.selection.with();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (range.isEmpty) &#123;</span><br><span class=\"line\">                range = textEditor.document.validateRange(<span class=\"keyword\">new</span> vscode.Range(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"built_in\">Number</span>.MAX_VALUE, <span class=\"built_in\">Number</span>.MAX_VALUE));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> formatted = hindentFormatProvider.formatHindent(textEditor.document.getText(range));</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (formatted !== <span class=\"string\">''</span>) &#123;</span><br><span class=\"line\">                edit.replace(range, formatted);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">\"hindent-format: registered palette command\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">exports.activate = activate;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">deactivate</span>(<span class=\"params\"></span>) </span>&#123; &#125;</span><br><span class=\"line\">exports.deactivate = deactivate;</span><br><span class=\"line\"><span class=\"comment\">//# sourceMappingURL=extension.js.map</span></span><br></pre></td></tr></table></figure>\n\n</div></div>\r\n<p>个人更青睐 <code>brittany</code> 格式化的效果。 但目前 VSCode 插件 <code>brittany</code> 对未保存文档不能正确执行格式化，同样需要修改插件源代码（当前版本 0.0.1）</p>\r\n<div><div class=\"fold_hider\"><div class=\"close hider_title\">brittany 插件修改后代码</div></div><div class=\"fold\">\n<figure class=\"highlight javascript\"><figcaption><span>extension.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span>;</span><br><span class=\"line\"><span class=\"built_in\">Object</span>.defineProperty(exports, <span class=\"string\">\"__esModule\"</span>, &#123; <span class=\"attr\">value</span>: <span class=\"literal\">true</span> &#125;);</span><br><span class=\"line\"><span class=\"keyword\">const</span> vscode = <span class=\"built_in\">require</span>(<span class=\"string\">\"vscode\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> proc = <span class=\"built_in\">require</span>(<span class=\"string\">\"child_process\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">\"path\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> tmp = <span class=\"built_in\">require</span>(<span class=\"string\">\"tmp\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">\"fs\"</span>);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">activate</span>(<span class=\"params\">context</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// Use the console to output diagnostic information (console.log) and errors (console.error)</span></span><br><span class=\"line\">    <span class=\"comment\">// This line of code will only be executed once when your extension is activated</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (isEnabled() === <span class=\"literal\">false</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">\"brittany extension disabled; not registering it.\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">\"Registering brittany extension\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    context.subscriptions.push(vscode.languages.registerDocumentRangeFormattingEditProvider(<span class=\"string\">'haskell'</span>, &#123;</span><br><span class=\"line\">        provideDocumentRangeFormattingEdits(<span class=\"built_in\">document</span>, range) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (isEnabled() === <span class=\"literal\">false</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> reject([]);</span><br><span class=\"line\">                &#125;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">'brittany asked to format'</span>);</span><br><span class=\"line\">            <span class=\"comment\">// If we're formatting the whole document</span></span><br><span class=\"line\">            <span class=\"comment\">// Brittany operates on files only, so we need to </span></span><br><span class=\"line\">            <span class=\"comment\">// Improvement <span class=\"doctag\">TODO:</span> Instead of making a tmp file, pass the source code into STDIN.</span></span><br><span class=\"line\">            <span class=\"comment\">// Could also potentially unify this approach with the full-file approach.</span></span><br><span class=\"line\">            <span class=\"keyword\">let</span> substring = <span class=\"built_in\">document</span>.getText(range);</span><br><span class=\"line\">            <span class=\"keyword\">let</span> tmpobj = tmp.fileSync();</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">'brittany: Temporary file: '</span>, tmpobj.name);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">                fs.write(tmpobj.fd, substring, (err, written, str) =&gt; &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> reject(err);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> resolve(runBrittany(<span class=\"built_in\">document</span>, range, tmpobj.name, tmpobj));</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;);</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">exports.activate = activate;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">runBrittany</span>(<span class=\"params\">document, range, inputFilename, tmpobj</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> file = <span class=\"built_in\">document</span>.uri.fsPath;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> cmd = brittanyCmd() + <span class=\"string\">\" \\\"\"</span> + inputFilename + <span class=\"string\">\"\\\"\"</span></span><br><span class=\"line\">        +<span class=\"string\">\" \"</span> + additionalFlags();</span><br><span class=\"line\">        <span class=\"keyword\">var</span> maybeWorkspaceFolder = vscode.workspace.getWorkspaceFolder(<span class=\"built_in\">document</span>.uri);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> dir = maybeWorkspaceFolder !== <span class=\"literal\">undefined</span> ? maybeWorkspaceFolder.uri.fsPath : path.dirname(<span class=\"built_in\">document</span>.uri.fsPath);</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">\"brittany command is: \"</span> + cmd);</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">\"brittany folder is: \"</span> + dir);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> options = &#123;</span><br><span class=\"line\">            encoding: <span class=\"string\">'utf8'</span>,</span><br><span class=\"line\">            <span class=\"comment\">// timeout: 0,</span></span><br><span class=\"line\">            <span class=\"comment\">// maxBuffer: 200 * 1024, // ?</span></span><br><span class=\"line\">            <span class=\"comment\">// killSignal: 'SIGTERM',</span></span><br><span class=\"line\">            cwd: dir,</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        proc.exec(cmd, options, (error, stdout, stderr) =&gt; &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (error) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (tmpobj) &#123;</span><br><span class=\"line\">                    tmpobj.removeCallback();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.error(<span class=\"string\">\"Error running brittany:\"</span>);</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.error(error);</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.error(stdout);</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.error(stderr);</span><br><span class=\"line\">                vscode.window.showErrorMessage(<span class=\"string\">\"Failed to run brittany; see the developer tools console for details. \"</span> + error);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> reject([]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (tmpobj) &#123;</span><br><span class=\"line\">                    tmpobj.removeCallback();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> resolve([vscode.TextEdit.replace(range, stdout)]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// this method is called when your extension is deactivated</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">deactivate</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">exports.deactivate = deactivate;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">brittanyCmd</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> vscode.workspace.getConfiguration(<span class=\"string\">\"brittany\"</span>)[<span class=\"string\">\"path\"</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">additionalFlags</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> vscode.workspace.getConfiguration(<span class=\"string\">\"brittany\"</span>)[<span class=\"string\">\"additional-flags\"</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isEnabled</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> vscode.workspace.getConfiguration(<span class=\"string\">\"brittany\"</span>)[<span class=\"string\">\"enable\"</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fullDocumentRange</span>(<span class=\"params\">document</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> lastLineId = <span class=\"built_in\">document</span>.lineCount - <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> vscode.Range(<span class=\"number\">0</span>, <span class=\"number\">0</span>, lastLineId, <span class=\"built_in\">document</span>.lineAt(lastLineId).text.length);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//# sourceMappingURL=extension.js.map</span></span><br></pre></td></tr></table></figure>\n\n</div></div>\r\n<p>另外，建议利用 <code>config.yaml</code> 文件搭配 <code>brittany</code> 进行深度配置。在控制台执行一次 <code>brittany</code> 命令，生成的配置文件位置为 <code>%APPDATA%\\brittany\\config.yaml</code>，示例配置如下。</p>\r\n<div><div class=\"fold_hider\"><div class=\"close hider_title\">brittany 配置文件</div></div><div class=\"fold\">\n<figure class=\"highlight yaml\"><figcaption><span>%APPDATA%\\brittany\\config.yaml</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">conf_debug:</span></span><br><span class=\"line\"><span class=\"attr\">  dconf_roundtrip_exactprint_only:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">  dconf_dump_bridoc_simpl_par:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">  dconf_dump_ast_unknown:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">  dconf_dump_bridoc_simpl_floating:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">  dconf_dump_config:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">  dconf_dump_bridoc_raw:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">  dconf_dump_bridoc_final:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">  dconf_dump_bridoc_simpl_alt:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">  dconf_dump_bridoc_simpl_indent:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">  dconf_dump_annotations:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">  dconf_dump_bridoc_simpl_columns:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">  dconf_dump_ast_full:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">conf_forward:</span></span><br><span class=\"line\"><span class=\"attr\">  options_ghc:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"bullet\">-XLambdaCase</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"bullet\">-XMultiWayIf</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"bullet\">-XGADTs</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"bullet\">-XPatternGuards</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"bullet\">-XViewPatterns</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"bullet\">-XRecursiveDo</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"bullet\">-XTupleSections</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"bullet\">-XExplicitForAll</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"bullet\">-XImplicitParams</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"bullet\">-XQuasiQuotes</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"bullet\">-XTemplateHaskell</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"bullet\">-XBangPatterns</span></span><br><span class=\"line\"><span class=\"attr\">conf_errorHandling:</span></span><br><span class=\"line\"><span class=\"attr\">  econf_ExactPrintFallback:</span> <span class=\"string\">ExactPrintFallbackModeInline</span></span><br><span class=\"line\"><span class=\"attr\">  econf_Werror:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">  econf_omit_output_valid_check:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">  econf_produceOutputOnErrors:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">conf_preprocessor:</span></span><br><span class=\"line\"><span class=\"attr\">  ppconf_CPPMode:</span> <span class=\"string\">CPPModeAbort</span></span><br><span class=\"line\"><span class=\"attr\">  ppconf_hackAroundIncludes:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">conf_obfuscate:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">conf_roundtrip_exactprint_only:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">conf_version:</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">conf_layout:</span></span><br><span class=\"line\"><span class=\"attr\">  lconfig_reformatModulePreamble:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  lconfig_altChooser:</span></span><br><span class=\"line\"><span class=\"attr\">    tag:</span> <span class=\"string\">AltChooserBoundedSearch</span></span><br><span class=\"line\"><span class=\"attr\">    contents:</span> <span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"attr\">  lconfig_allowSingleLineExportList:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">  lconfig_importColumn:</span> <span class=\"number\">50</span></span><br><span class=\"line\"><span class=\"attr\">  lconfig_hangingTypeSignature:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">  lconfig_importAsColumn:</span> <span class=\"number\">50</span></span><br><span class=\"line\"><span class=\"attr\">  lconfig_alignmentLimit:</span> <span class=\"number\">30</span></span><br><span class=\"line\"><span class=\"attr\">  lconfig_indentListSpecial:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  lconfig_indentAmount:</span> <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"attr\">  lconfig_alignmentBreakOnMultiline:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  lconfig_cols:</span> <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"attr\">  lconfig_indentPolicy:</span> <span class=\"string\">IndentPolicyFree</span></span><br><span class=\"line\"><span class=\"attr\">  lconfig_indentWhereSpecial:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  lconfig_columnAlignMode:</span></span><br><span class=\"line\"><span class=\"attr\">    tag:</span> <span class=\"string\">ColumnAlignModeMajority</span></span><br><span class=\"line\"><span class=\"attr\">    contents:</span> <span class=\"number\">0.7</span></span><br></pre></td></tr></table></figure>\n\n</div></div>\r\n<h3 id=\"参考\">参考</h3>\r\n<ul>\r\n<li><a href=\"https://blog.ramdoot.in/installing-haskell-stack-in-windows-7c8fd2c79f\" target=\"_blank\" rel=\"noopener\">Installing Haskell stack (in Windows)</a></li>\r\n<li><a href=\"https://www.zybuluo.com/delight/note/503796\" target=\"_blank\" rel=\"noopener\">重拾Haskell</a></li>\r\n</ul>\r\n","site":{"data":{}},"excerpt":"<blockquote class=\"blockquote-center\"><img src=\"/img/haskell-logo.svg\" width=\"45%\"> <br>\nAn advanced, purely functional programming language</blockquote>\r\n<p>抛却「Haskell 语言能装逼」这一光环，笔者认为学习 Haskell 的另一主要动机在于尝试体验另一种编程思维，即「做什么」而非「怎么做」，Haskell 写出的程序更像是人脑的思维而不是机器的思维。当然了，装 x 也 hin 重要。</p>\r\n<p>目前 <a href=\"https://www.haskell.org/downloads\" target=\"_blank\" rel=\"noopener\">Haskell 官方下载页</a> 推荐三种下载方案：</p>\r\n<ul>\r\n<li><a href=\"https://www.haskell.org/downloads#minimal\" target=\"_blank\" rel=\"noopener\">最小安装程序</a></li>\r\n<li><a href=\"http://docs.haskellstack.org\" target=\"_blank\" rel=\"noopener\">stack</a></li>\r\n<li><a href=\"https://www.haskell.org/downloads#platform\" target=\"_blank\" rel=\"noopener\">Haskell 平台</a></li>\r\n</ul>\r\n<p>总体而言，Haskell 在 *nix / OS X 操作系统下的生态优于 Windows 环境，但对于熟悉 Windows 操作、醉心于各类工具流的笔者而言，必须要在 Windows 系统下完成环境搭建。为方便后续各类包的安装更新等操作，这里采用 <a href=\"https://www.haskell.org/cabal\" target=\"_blank\" rel=\"noopener\">Cabal</a> 的替代品 – stack。以下诸多关键操作均参考 <a href=\"https://blog.ramdoot.in\" target=\"_blank\" rel=\"noopener\">Arvind Devarajan 的博客</a>。</p>","more":"<h3 id=\"预热\">预热</h3>\r\n<p>在 Windows 操作系统环境中，如果没有设定环境变量 <code>STACK_ROOT</code>，则通过 stack 下载的程序文件以及包快照会被存放在 <code>%LOCALAPPDATA%\\Programs\\stack</code> 以及 <code>%APPDATA%\\stack</code> 目录下。经常变动的包安放在系统盘总会令人不安，也不便于管理。所以在首次使用 stack 之前，应设定环境变量 <code>STACK_ROOT</code>，这里笔者将其设为 <code>F:\\HaskellStack</code>。另外推荐设定编译器 GHC 的下载安装目录，见后文 <code>config.yaml</code> 文件的配置。（<a href=\"https://docs.haskellstack.org/en/stable/faq/#can-i-change-stacks-default-temporary-directory\" target=\"_blank\" rel=\"noopener\">stack 帮助文档关于此问题的说明</a>）</p>\r\n<h3 id=\"配置\">配置</h3>\r\n<p>这里有几点关于我个人在开发过程中的习惯配置。</p>\r\n<ul>\r\n<li>提前安装好 <a href=\"https://www.msys2.org\" target=\"_blank\" rel=\"noopener\">MSYS2</a> 作为 C/C++ 等工具的开发环境，并添加至环境变量 <code>PATH</code>。详细配置过程见 <a href=\"/daily-operations-of-msys2\">MSYS2 的日常操作</a></li>\r\n<li>将一个包含常用可执行文件的目录加入环境变量 <code>PATH</code>，如 <code>F:\\WorkingDirectory\\Bin</code></li>\r\n</ul>\r\n<p>stack 默认使用的软件源在国外，这里换上国内的清华大学开源网站镜像。由于之前已设定了 <code>STACK_ROOT</code> 环境变量，首次运行 stack 会在此目录下生成一些文件，修改 <code>config.yaml</code> 文件：</p>\r\n<!--�127-->\r\n<p>以上参考 <a href=\"https://mirrors.tuna.tsinghua.edu.cn/help/stackage\" target=\"_blank\" rel=\"noopener\">stackage 镜像使用帮助</a> 以及 <a href=\"https://mirrors.tuna.tsinghua.edu.cn/help/hackage\" target=\"_blank\" rel=\"noopener\">hackage 镜像使用帮助</a>。另作几点说明：</p>\r\n<ul>\r\n<li>Windows 下的 stack 会自动安装 MSYS2，由于之前已在机器中安装过，故在配置中跳过 MSYS 的安装</li>\r\n<li>通过 <code>stack install</code> 生成的可执行文件默认在 <code>%APPDATA%</code> 目录下，这里统一放置于之前提到的可执行文件合集目录中</li>\r\n</ul>\r\n<p>执行 <code>stack setup</code> 下载最新版的 GHC，目前版本为 8.4.3。</p>\r\n<p>如一切顺利，<code>stack path</code> 输出如下：</p>\r\n<!--�128-->\r\n<p>最后，如要修改 GHCi 的命令行提示符或在启动时加载某些包，可通过添加 / 修改 <code>%APPDATA%\\ghc\\ghci.conf</code> 文件为以下内容：</p>\r\n<!--�129-->\r\n<h3 id=\"编辑器\">编辑器</h3>\r\n<p>考虑编辑效率和插件生态，推荐使用 VSCode 作为主力编辑器。安装插件：</p>\r\n<ul>\r\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=justusadam.language-haskell\" target=\"_blank\" rel=\"noopener\">Haskell Syntax Highlight</a></li>\r\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=UCL.haskelly\" target=\"_blank\" rel=\"noopener\">Haskelly</a></li>\r\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=monofon.hindent-format\" target=\"_blank\" rel=\"noopener\">hindent-format</a></li>\r\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=MaxGabriel.brittany\" target=\"_blank\" rel=\"noopener\">brittany</a></li>\r\n</ul>\r\n<p>后两者为代码格式化插件，任选一即可。</p>\r\n<p><code>hindent-format</code> 貌似不能正确读取配置文件，故手动修改之（当前版本 0.0.8）</p>\r\n<div><div class=\"fold_hider\"><div class=\"close hider_title\">hindent-format 插件修改后代码</div></div><div class=\"fold\">\n<!--�130-->\n\n</div></div>\r\n<p>个人更青睐 <code>brittany</code> 格式化的效果。 但目前 VSCode 插件 <code>brittany</code> 对未保存文档不能正确执行格式化，同样需要修改插件源代码（当前版本 0.0.1）</p>\r\n<div><div class=\"fold_hider\"><div class=\"close hider_title\">brittany 插件修改后代码</div></div><div class=\"fold\">\n<!--�131-->\n\n</div></div>\r\n<p>另外，建议利用 <code>config.yaml</code> 文件搭配 <code>brittany</code> 进行深度配置。在控制台执行一次 <code>brittany</code> 命令，生成的配置文件位置为 <code>%APPDATA%\\brittany\\config.yaml</code>，示例配置如下。</p>\r\n<div><div class=\"fold_hider\"><div class=\"close hider_title\">brittany 配置文件</div></div><div class=\"fold\">\n<!--�132-->\n\n</div></div>\r\n<h3 id=\"参考\">参考</h3>\r\n<ul>\r\n<li><a href=\"https://blog.ramdoot.in/installing-haskell-stack-in-windows-7c8fd2c79f\" target=\"_blank\" rel=\"noopener\">Installing Haskell stack (in Windows)</a></li>\r\n<li><a href=\"https://www.zybuluo.com/delight/note/503796\" target=\"_blank\" rel=\"noopener\">重拾Haskell</a></li>\r\n</ul>"},{"title":"单用户 Jupyter Notebook 服务器环境搭建","date":"2017-08-06T03:42:41.000Z","_content":"\n被朋友强烈安利入坑 [TensorFlow][tensorflow]，于是着手搭建 Python 的工作环境。之前在 Windows 下使用过 [Anaconda][anaconda]，不仅能愉快地切换 Python 2.x 与 3.x 环境，还能像应用容器一样安装其他软件（RStudio，Spyder）等。但如此一来自身体积逐渐增大，于是考虑在装载 CentOS 7.3 系统的老爷机上搭建 Anaconda 环境，并部署 Jupyter Notebook 服务器。本文搭建的环境仅允许单用户访问，如需要多用户，需使用 [JupyterHub][jupyterhub]。这里的初始参考来源是 Jupyter Notebook\n的[官方文档][jupyter-book-official-running-a-notebook-server]。\n\n<!-- more -->\n\n## 安装 Anaconda\n\n {% fa info-circle fw %} 建议以非 root 权限安装、运行 Anaconda，每个用户可以在自己独立的环境 `/home/<user>/anaconda` 中操作。\n\n直接下载 [Anaconda x.x.x For Linux Installer][anaconda-download-linux]，\n\n```bash\nbash ~/Downloads/Anaconda3-4.4.0-Linux-x86_64.sh\n```\n\n安装过程中的安装目录可进行自定义。通常由于喜闻乐见的原因，在 Conda 中下载包是速度是喜(gan)人的，所以需添加国内镜像：\n\n```bash\nconda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/\nconda config --set show_channel_urls yes\n```\n\n可查看 `~/.condarc` 文件确认其配置，同时可配置代理（`proxy_servers` 项）：\n\n```plain .condarc\nchannels:\n  - https://mirrors.ustc.edu.cn/anaconda/pkgs/main/\n  - https://mirrors.ustc.edu.cn/anaconda/pkgs/free/\n  - https://mirrors.ustc.edu.cn/anaconda/cloud/conda-forge/\n  - defaults\nproxy_servers:\n  http: http://localhost:1080\n  https: https://localhost:1080\nshow_channel_urls: true\nssl_verify: true\n```\n\n## 安装 TensorFlow\n\n虽然此步骤不影响 Jupyter Notebook 服务器的搭建，不过既然此次折腾的初衷就是为了用上 TensorFlow，所以顺便记录下安装过程。根据 TensorFlow 官方指南 [Installing with Anaconda][tensorflow-official-install-with-anaconda]，进行如下一通操作即可：\n\n```bash\nconda create -n tensorflow\nsource activate tensorflow\n# (tensorflow)$  # Your prompt should change\npip install --ignore-installed --upgrade <tfBinaryURL>\n```\n\n其中的 `<tfBinaryURL>` 即为 [URL of the TensorFlow Python package][url-tensorflow-python-package]，选择适配的版本进行安装即可，安装过程可能由于强大的网(Fang)络(Huo)环(Chang)境(Cheng)而中断。这里稍微提下 Conda 这个包管理系统。它不仅是一般意义上对各类包进行管理的工具，更重要的是可以创造出独立的环境，比如上述 `conda create -n` 就新建了一个新的环境，默认环境为 `root`，可通过 `conda info --envs` 查看当前用户下所有的环境，标注 `*` 的表示当前环境，所以为版本切换提供了十分便捷的途径。\n\n### 测试\n\n新建 `test.py`：\n\n```python test.py\nimport os\nimport tensorflow as tf\nos.environ['TF_CPP_MIN_LOG_LEVEL']='2'\nhello = tf.constant('Hello,Tensorflow!')\nsess = tf.Session()\nprint(sess.run(hello))\na = tf.constant(10)\nb = tf.constant(32)\nprint(sess.run(a + b))\n```\n\n运行结果如下：\n\n```bash\npython test.py\n# b'Hello,Tensorflow!'\n# 42\n```\n\n## 配置 Jupyter Notebook\n\n安装完 Anaconda 之后，默认的 `root` 环境已经自带一个 `jupyter`，可通过 `conda info --envs` 来查询已有环境。所以如果直接在终端键入 `jupyter notebook`，打开的是默认环境下的 `jupyter`，所以需要在当前环境 `tensorflow` 中也安装一个 `jupyter`。\n\n1. 生成配置文件\n   {% codeblock lang:bash %}\n   conda install --name tensorflow jupyter\n   jupyter notebook --generate-config\n   {% endcodeblock %}\n1. 创建「伪」SSL证书。参考[如何在云端服务器运行Jupyter Notebook？][zhihu-20226040]。\n   {% codeblock lang:bash %}\n   openssl req -x509 -nodes -days 365 -newkey rsa:1024 -keyout mycert.pem -out mycert.pem\n   {% endcodeblock %}\n   便会在当前路径生成 `mycert.pem` 私钥文件\n1. 生成密码哈希值。打开 `ipython`：\n   {% codeblock lang:python %}\n   In [1]: from notebook.auth import passwd\n   In [2]: passwd()\n   Enter password:\n   Verify password:\n   Out[2]: 'sha1:xxxxxxxxxxxxxxxxxxxxx'\n   {% endcodeblock %}\n   或者单行：\n   {% codeblock lang:python %}\n   python -c \"from notebook.auth import passwd; print(passwd())\"\n   {% endcodeblock %}\n1. 修改配置文件 `~/.jupyter/jupyter_notebook_config.py`。\n   {% codeblock jupyter_notebook_config.py lang:python %}\n   c.NotebookApp.certfile = u'path/to/mycert.pem'\n   c.NotebookApp.ip = '*'\n   c.NotebookApp.password = u'sha1:xxxxxxxxxxxxxxxxxxxxx'\n   c.NotebookApp.open_browser = False\n   c.NotebookApp.port = 8889\n   {% endcodeblock %}\n1. 开启端口。（参考[Centos防火墙设置与端口开放的方法][blog-csdn-54707864]）\n\n   > Centos 升级到 7 之后，内置的防火墙已经从 iptables 变成了 firewalld。\n\n   罗列 `firewalld` 常用命令：\n\n   - 启动 / 关闭防火墙：`systemctl start/stop firewalld`\n   - 启用 / 停止服务：`systemctl enable/disable firewalld`\n   - 查看状态：`systemctl status firewalld` 或 `firewall-cmd --state`\n   - 更新防火墙规则\n     - 无需断开连接：`firewall-cmd --reload`\n     - 需要断开连接，类似重启：`firewall-cmd --complete-reload`\n   - 查看指定区域所有打开的端口：`firewall-cmd --zone=public --list-ports`\n   - 在指定区域打开端口（记得重启防火墙）：\n     {% codeblock lang:bash %}\n     firewall-cmd --zone=public --add-port=80/tcp [--permanent]\n     {% endcodeblock %}\n     说明:\n     - `zone` 作用域\n     - `add-port=80/tcp` 添加端口，格式为：端口 / 通讯协议\n     - `permanent` 永久生效，没有此参数重启后失效\n\n   所以需要开放 8889 端口：\n   {% codeblock lang:bash %}\n   firewall-cmd --zone=public --add-port=8889/tcp --permanent\n   firewall-cmd --complete-reload\n   {% endcodeblock %}\n1. 启动 Jupyter Notebook：\n   {% codeblock lang:bash %}\n   jupyter notebook\n   {% endcodeblock %}\n1. 浏览器输入 `https://<ip>:8889` 访问即可。\n\n## 补充\n\n### 折腾必备 — 改主题\n\n利用 `pip` 安装 [`jupyter-themes`][github-dunovank/jupyter-themes]：\n\n```bash\npip install jupyterthemes\npip install --upgrade jupyterthemes\n```\n\n如需永久更改 `pip` 源，修改 `~/.pip/pip.conf`（Windows 下为 `%userprofile%\\pip\\pip.ini`）：\n\n```ini pip.conf\n[global]\nindex-url = https://mirrors.ustc.edu.cn/pypi/web/simple\n# index-url = https://pypi.tuna.tsinghua.edu.cn/simple\n# index-url = https://pypi.douban.com/simple\n```\n\n修改 Jupyter Notebook 主题并开启服务端：\n\n```bash\njt -f code -fs 12 -tf ptsans -tfs 13 -dfs 11 -ofs 12 -lineh 125 -cellw 1000 -t solarizedl -T -vim\njupyter notebook\n```\n\n主题效果如下：\n\n![](/img/jupyter-notebook-server.png)\n\n### 多核环境以及 Jupyter Notebook 插件\n\n- Jupyter Notebook 插件集 [`jupyter_contrib_nbextensions`][github-ipython-contrib/jupyter_contrib_nbextensions]，貌似在多环境中，该插件应该最先被安装\n- 从 **Anaconda 4.1.0** 开始，一个特别的包 [`nb_conda_kernels`][nb-conda-kernels]\n  能够自动检测 Conda 的所有环境并注册这些核到 Jupyter Notebook 中\n\n\n[tensorflow]:                                          https://www.tensorflow.org\n[anaconda]:                                            https://www.continuum.io\n[jupyterhub]:                                          https://jupyterhub.readthedocs.io/en/latest\n[jupyter-book-official-running-a-notebook-server]:     http://jupyter-notebook.readthedocs.io/en/latest/public_server.html#running-a-notebook-server\n[anaconda-download-linux]:                             https://www.continuum.io/downloads#linux\n[tensorflow-official-install-with-anaconda]:           https://www.tensorflow.org/install/install_linux#installing_with_anaconda\n[url-tensorflow-python-package]:                       https://www.tensorflow.org/install/install_linux#the_url_of_the_tensorflow_python_package\n[zhihu-20226040]:                                      https://zhuanlan.zhihu.com/p/20226040\n[blog-csdn-54707864]:                                  http://blog.csdn.net/u011846257/article/details/54707864\n[github-dunovank/jupyter-themes]:                      https://github.com/dunovank/jupyter-themes\n[nb-conda-kernels]:                                    https://github.com/Anaconda-Platform/nb_conda_kernels\n[github-ipython-contrib/jupyter_contrib_nbextensions]: https://github.com/ipython-contrib/jupyter_contrib_nbextensions\n","source":"_posts/setting-up-local-jupyter-notebook-server-environment.md","raw":"---\ntitle: 单用户 Jupyter Notebook 服务器环境搭建\ndate: 2017-08-06 11:42:41\ntags:\n    - Server\n    - Anaconda\n    - Python\n    - Jupyter\n    - TensorFlow\ncategories: Development\n---\n\n被朋友强烈安利入坑 [TensorFlow][tensorflow]，于是着手搭建 Python 的工作环境。之前在 Windows 下使用过 [Anaconda][anaconda]，不仅能愉快地切换 Python 2.x 与 3.x 环境，还能像应用容器一样安装其他软件（RStudio，Spyder）等。但如此一来自身体积逐渐增大，于是考虑在装载 CentOS 7.3 系统的老爷机上搭建 Anaconda 环境，并部署 Jupyter Notebook 服务器。本文搭建的环境仅允许单用户访问，如需要多用户，需使用 [JupyterHub][jupyterhub]。这里的初始参考来源是 Jupyter Notebook\n的[官方文档][jupyter-book-official-running-a-notebook-server]。\n\n<!-- more -->\n\n## 安装 Anaconda\n\n {% fa info-circle fw %} 建议以非 root 权限安装、运行 Anaconda，每个用户可以在自己独立的环境 `/home/<user>/anaconda` 中操作。\n\n直接下载 [Anaconda x.x.x For Linux Installer][anaconda-download-linux]，\n\n```bash\nbash ~/Downloads/Anaconda3-4.4.0-Linux-x86_64.sh\n```\n\n安装过程中的安装目录可进行自定义。通常由于喜闻乐见的原因，在 Conda 中下载包是速度是喜(gan)人的，所以需添加国内镜像：\n\n```bash\nconda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/\nconda config --set show_channel_urls yes\n```\n\n可查看 `~/.condarc` 文件确认其配置，同时可配置代理（`proxy_servers` 项）：\n\n```plain .condarc\nchannels:\n  - https://mirrors.ustc.edu.cn/anaconda/pkgs/main/\n  - https://mirrors.ustc.edu.cn/anaconda/pkgs/free/\n  - https://mirrors.ustc.edu.cn/anaconda/cloud/conda-forge/\n  - defaults\nproxy_servers:\n  http: http://localhost:1080\n  https: https://localhost:1080\nshow_channel_urls: true\nssl_verify: true\n```\n\n## 安装 TensorFlow\n\n虽然此步骤不影响 Jupyter Notebook 服务器的搭建，不过既然此次折腾的初衷就是为了用上 TensorFlow，所以顺便记录下安装过程。根据 TensorFlow 官方指南 [Installing with Anaconda][tensorflow-official-install-with-anaconda]，进行如下一通操作即可：\n\n```bash\nconda create -n tensorflow\nsource activate tensorflow\n# (tensorflow)$  # Your prompt should change\npip install --ignore-installed --upgrade <tfBinaryURL>\n```\n\n其中的 `<tfBinaryURL>` 即为 [URL of the TensorFlow Python package][url-tensorflow-python-package]，选择适配的版本进行安装即可，安装过程可能由于强大的网(Fang)络(Huo)环(Chang)境(Cheng)而中断。这里稍微提下 Conda 这个包管理系统。它不仅是一般意义上对各类包进行管理的工具，更重要的是可以创造出独立的环境，比如上述 `conda create -n` 就新建了一个新的环境，默认环境为 `root`，可通过 `conda info --envs` 查看当前用户下所有的环境，标注 `*` 的表示当前环境，所以为版本切换提供了十分便捷的途径。\n\n### 测试\n\n新建 `test.py`：\n\n```python test.py\nimport os\nimport tensorflow as tf\nos.environ['TF_CPP_MIN_LOG_LEVEL']='2'\nhello = tf.constant('Hello,Tensorflow!')\nsess = tf.Session()\nprint(sess.run(hello))\na = tf.constant(10)\nb = tf.constant(32)\nprint(sess.run(a + b))\n```\n\n运行结果如下：\n\n```bash\npython test.py\n# b'Hello,Tensorflow!'\n# 42\n```\n\n## 配置 Jupyter Notebook\n\n安装完 Anaconda 之后，默认的 `root` 环境已经自带一个 `jupyter`，可通过 `conda info --envs` 来查询已有环境。所以如果直接在终端键入 `jupyter notebook`，打开的是默认环境下的 `jupyter`，所以需要在当前环境 `tensorflow` 中也安装一个 `jupyter`。\n\n1. 生成配置文件\n   {% codeblock lang:bash %}\n   conda install --name tensorflow jupyter\n   jupyter notebook --generate-config\n   {% endcodeblock %}\n1. 创建「伪」SSL证书。参考[如何在云端服务器运行Jupyter Notebook？][zhihu-20226040]。\n   {% codeblock lang:bash %}\n   openssl req -x509 -nodes -days 365 -newkey rsa:1024 -keyout mycert.pem -out mycert.pem\n   {% endcodeblock %}\n   便会在当前路径生成 `mycert.pem` 私钥文件\n1. 生成密码哈希值。打开 `ipython`：\n   {% codeblock lang:python %}\n   In [1]: from notebook.auth import passwd\n   In [2]: passwd()\n   Enter password:\n   Verify password:\n   Out[2]: 'sha1:xxxxxxxxxxxxxxxxxxxxx'\n   {% endcodeblock %}\n   或者单行：\n   {% codeblock lang:python %}\n   python -c \"from notebook.auth import passwd; print(passwd())\"\n   {% endcodeblock %}\n1. 修改配置文件 `~/.jupyter/jupyter_notebook_config.py`。\n   {% codeblock jupyter_notebook_config.py lang:python %}\n   c.NotebookApp.certfile = u'path/to/mycert.pem'\n   c.NotebookApp.ip = '*'\n   c.NotebookApp.password = u'sha1:xxxxxxxxxxxxxxxxxxxxx'\n   c.NotebookApp.open_browser = False\n   c.NotebookApp.port = 8889\n   {% endcodeblock %}\n1. 开启端口。（参考[Centos防火墙设置与端口开放的方法][blog-csdn-54707864]）\n\n   > Centos 升级到 7 之后，内置的防火墙已经从 iptables 变成了 firewalld。\n\n   罗列 `firewalld` 常用命令：\n\n   - 启动 / 关闭防火墙：`systemctl start/stop firewalld`\n   - 启用 / 停止服务：`systemctl enable/disable firewalld`\n   - 查看状态：`systemctl status firewalld` 或 `firewall-cmd --state`\n   - 更新防火墙规则\n     - 无需断开连接：`firewall-cmd --reload`\n     - 需要断开连接，类似重启：`firewall-cmd --complete-reload`\n   - 查看指定区域所有打开的端口：`firewall-cmd --zone=public --list-ports`\n   - 在指定区域打开端口（记得重启防火墙）：\n     {% codeblock lang:bash %}\n     firewall-cmd --zone=public --add-port=80/tcp [--permanent]\n     {% endcodeblock %}\n     说明:\n     - `zone` 作用域\n     - `add-port=80/tcp` 添加端口，格式为：端口 / 通讯协议\n     - `permanent` 永久生效，没有此参数重启后失效\n\n   所以需要开放 8889 端口：\n   {% codeblock lang:bash %}\n   firewall-cmd --zone=public --add-port=8889/tcp --permanent\n   firewall-cmd --complete-reload\n   {% endcodeblock %}\n1. 启动 Jupyter Notebook：\n   {% codeblock lang:bash %}\n   jupyter notebook\n   {% endcodeblock %}\n1. 浏览器输入 `https://<ip>:8889` 访问即可。\n\n## 补充\n\n### 折腾必备 — 改主题\n\n利用 `pip` 安装 [`jupyter-themes`][github-dunovank/jupyter-themes]：\n\n```bash\npip install jupyterthemes\npip install --upgrade jupyterthemes\n```\n\n如需永久更改 `pip` 源，修改 `~/.pip/pip.conf`（Windows 下为 `%userprofile%\\pip\\pip.ini`）：\n\n```ini pip.conf\n[global]\nindex-url = https://mirrors.ustc.edu.cn/pypi/web/simple\n# index-url = https://pypi.tuna.tsinghua.edu.cn/simple\n# index-url = https://pypi.douban.com/simple\n```\n\n修改 Jupyter Notebook 主题并开启服务端：\n\n```bash\njt -f code -fs 12 -tf ptsans -tfs 13 -dfs 11 -ofs 12 -lineh 125 -cellw 1000 -t solarizedl -T -vim\njupyter notebook\n```\n\n主题效果如下：\n\n![](/img/jupyter-notebook-server.png)\n\n### 多核环境以及 Jupyter Notebook 插件\n\n- Jupyter Notebook 插件集 [`jupyter_contrib_nbextensions`][github-ipython-contrib/jupyter_contrib_nbextensions]，貌似在多环境中，该插件应该最先被安装\n- 从 **Anaconda 4.1.0** 开始，一个特别的包 [`nb_conda_kernels`][nb-conda-kernels]\n  能够自动检测 Conda 的所有环境并注册这些核到 Jupyter Notebook 中\n\n\n[tensorflow]:                                          https://www.tensorflow.org\n[anaconda]:                                            https://www.continuum.io\n[jupyterhub]:                                          https://jupyterhub.readthedocs.io/en/latest\n[jupyter-book-official-running-a-notebook-server]:     http://jupyter-notebook.readthedocs.io/en/latest/public_server.html#running-a-notebook-server\n[anaconda-download-linux]:                             https://www.continuum.io/downloads#linux\n[tensorflow-official-install-with-anaconda]:           https://www.tensorflow.org/install/install_linux#installing_with_anaconda\n[url-tensorflow-python-package]:                       https://www.tensorflow.org/install/install_linux#the_url_of_the_tensorflow_python_package\n[zhihu-20226040]:                                      https://zhuanlan.zhihu.com/p/20226040\n[blog-csdn-54707864]:                                  http://blog.csdn.net/u011846257/article/details/54707864\n[github-dunovank/jupyter-themes]:                      https://github.com/dunovank/jupyter-themes\n[nb-conda-kernels]:                                    https://github.com/Anaconda-Platform/nb_conda_kernels\n[github-ipython-contrib/jupyter_contrib_nbextensions]: https://github.com/ipython-contrib/jupyter_contrib_nbextensions\n","slug":"setting-up-local-jupyter-notebook-server-environment","published":1,"updated":"2023-03-09T16:09:38.280Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u336z0031p4x04s35vah5","content":"<p>被朋友强烈安利入坑 <a href=\"https://www.tensorflow.org\" target=\"_blank\" rel=\"noopener\">TensorFlow</a>，于是着手搭建 Python 的工作环境。之前在 Windows 下使用过 <a href=\"https://www.continuum.io\" target=\"_blank\" rel=\"noopener\">Anaconda</a>，不仅能愉快地切换 Python 2.x 与 3.x 环境，还能像应用容器一样安装其他软件（RStudio，Spyder）等。但如此一来自身体积逐渐增大，于是考虑在装载 CentOS 7.3 系统的老爷机上搭建 Anaconda 环境，并部署 Jupyter Notebook 服务器。本文搭建的环境仅允许单用户访问，如需要多用户，需使用 <a href=\"https://jupyterhub.readthedocs.io/en/latest\" target=\"_blank\" rel=\"noopener\">JupyterHub</a>。这里的初始参考来源是 Jupyter Notebook 的<a href=\"http://jupyter-notebook.readthedocs.io/en/latest/public_server.html#running-a-notebook-server\" target=\"_blank\" rel=\"noopener\">官方文档</a>。</p>\r\n<a id=\"more\"></a>\r\n<h2 id=\"安装-anaconda\">安装 Anaconda</h2>\r\n<p><i class=\"fa fa-info-circle fa-fw\"></i> 建议以非 root 权限安装、运行 Anaconda，每个用户可以在自己独立的环境 <code>/home/&lt;user&gt;/anaconda</code> 中操作。</p>\r\n<p>直接下载 <a href=\"https://www.continuum.io/downloads#linux\" target=\"_blank\" rel=\"noopener\">Anaconda x.x.x For Linux Installer</a>，</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash ~/Downloads/Anaconda3-4.4.0-Linux-x86_64.sh</span><br></pre></td></tr></table></figure>\r\n<p>安装过程中的安装目录可进行自定义。通常由于喜闻乐见的原因，在 Conda 中下载包是速度是喜(gan)人的，所以需添加国内镜像：</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class=\"line\">conda config --<span class=\"built_in\">set</span> show_channel_urls yes</span><br></pre></td></tr></table></figure>\r\n<p>可查看 <code>~/.condarc</code> 文件确认其配置，同时可配置代理（<code>proxy_servers</code> 项）：</p>\r\n<figure class=\"highlight plain\"><figcaption><span>.condarc</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">channels:</span><br><span class=\"line\">  - https://mirrors.ustc.edu.cn/anaconda/pkgs/main/</span><br><span class=\"line\">  - https://mirrors.ustc.edu.cn/anaconda/pkgs/free/</span><br><span class=\"line\">  - https://mirrors.ustc.edu.cn/anaconda/cloud/conda-forge/</span><br><span class=\"line\">  - defaults</span><br><span class=\"line\">proxy_servers:</span><br><span class=\"line\">  http: http://localhost:1080</span><br><span class=\"line\">  https: https://localhost:1080</span><br><span class=\"line\">show_channel_urls: true</span><br><span class=\"line\">ssl_verify: true</span><br></pre></td></tr></table></figure>\r\n<h2 id=\"安装-tensorflow\">安装 TensorFlow</h2>\r\n<p>虽然此步骤不影响 Jupyter Notebook 服务器的搭建，不过既然此次折腾的初衷就是为了用上 TensorFlow，所以顺便记录下安装过程。根据 TensorFlow 官方指南 <a href=\"https://www.tensorflow.org/install/install_linux#installing_with_anaconda\" target=\"_blank\" rel=\"noopener\">Installing with Anaconda</a>，进行如下一通操作即可：</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda create -n tensorflow</span><br><span class=\"line\"><span class=\"built_in\">source</span> activate tensorflow</span><br><span class=\"line\"><span class=\"comment\"># (tensorflow)$  # Your prompt should change</span></span><br><span class=\"line\">pip install --ignore-installed --upgrade &lt;tfBinaryURL&gt;</span><br></pre></td></tr></table></figure>\r\n<p>其中的 <code>&lt;tfBinaryURL&gt;</code> 即为 <a href=\"https://www.tensorflow.org/install/install_linux#the_url_of_the_tensorflow_python_package\" target=\"_blank\" rel=\"noopener\">URL of the TensorFlow Python package</a>，选择适配的版本进行安装即可，安装过程可能由于强大的网(Fang)络(Huo)环(Chang)境(Cheng)而中断。这里稍微提下 Conda 这个包管理系统。它不仅是一般意义上对各类包进行管理的工具，更重要的是可以创造出独立的环境，比如上述 <code>conda create -n</code> 就新建了一个新的环境，默认环境为 <code>root</code>，可通过 <code>conda info --envs</code> 查看当前用户下所有的环境，标注 <code>*</code> 的表示当前环境，所以为版本切换提供了十分便捷的途径。</p>\r\n<h3 id=\"测试\">测试</h3>\r\n<p>新建 <code>test.py</code>：</p>\r\n<figure class=\"highlight python\"><figcaption><span>test.py</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> tensorflow <span class=\"keyword\">as</span> tf</span><br><span class=\"line\">os.environ[<span class=\"string\">'TF_CPP_MIN_LOG_LEVEL'</span>]=<span class=\"string\">'2'</span></span><br><span class=\"line\">hello = tf.constant(<span class=\"string\">'Hello,Tensorflow!'</span>)</span><br><span class=\"line\">sess = tf.Session()</span><br><span class=\"line\">print(sess.run(hello))</span><br><span class=\"line\">a = tf.constant(<span class=\"number\">10</span>)</span><br><span class=\"line\">b = tf.constant(<span class=\"number\">32</span>)</span><br><span class=\"line\">print(sess.run(a + b))</span><br></pre></td></tr></table></figure>\r\n<p>运行结果如下：</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python test.py</span><br><span class=\"line\"><span class=\"comment\"># b'Hello,Tensorflow!'</span></span><br><span class=\"line\"><span class=\"comment\"># 42</span></span><br></pre></td></tr></table></figure>\r\n<h2 id=\"配置-jupyter-notebook\">配置 Jupyter Notebook</h2>\r\n<p>安装完 Anaconda 之后，默认的 <code>root</code> 环境已经自带一个 <code>jupyter</code>，可通过 <code>conda info --envs</code> 来查询已有环境。所以如果直接在终端键入 <code>jupyter notebook</code>，打开的是默认环境下的 <code>jupyter</code>，所以需要在当前环境 <code>tensorflow</code> 中也安装一个 <code>jupyter</code>。</p>\r\n<ol type=\"1\">\r\n<li><p>生成配置文件 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda install --name tensorflow jupyter</span><br><span class=\"line\">jupyter notebook --generate-config</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>创建「伪」SSL证书。参考<a href=\"https://zhuanlan.zhihu.com/p/20226040\" target=\"_blank\" rel=\"noopener\">如何在云端服务器运行Jupyter Notebook？</a>。 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">openssl req -x509 -nodes -days 365 -newkey rsa:1024 -keyout mycert.pem -out mycert.pem</span><br></pre></td></tr></table></figure> 便会在当前路径生成 <code>mycert.pem</code> 私钥文件</p></li>\r\n<li><p>生成密码哈希值。打开 <code>ipython</code>： <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">In [<span class=\"number\">1</span>]: <span class=\"keyword\">from</span> notebook.auth <span class=\"keyword\">import</span> passwd</span><br><span class=\"line\">In [<span class=\"number\">2</span>]: passwd()</span><br><span class=\"line\">Enter password:</span><br><span class=\"line\">Verify password:</span><br><span class=\"line\">Out[<span class=\"number\">2</span>]: <span class=\"string\">'sha1:xxxxxxxxxxxxxxxxxxxxx'</span></span><br></pre></td></tr></table></figure> 或者单行： <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python -c <span class=\"string\">\"from notebook.auth import passwd; print(passwd())\"</span></span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>修改配置文件 <code>~/.jupyter/jupyter_notebook_config.py</code>。 <figure class=\"highlight python\"><figcaption><span>jupyter_notebook_config.py</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c.NotebookApp.certfile = <span class=\"string\">u'path/to/mycert.pem'</span></span><br><span class=\"line\">c.NotebookApp.ip = <span class=\"string\">'*'</span></span><br><span class=\"line\">c.NotebookApp.password = <span class=\"string\">u'sha1:xxxxxxxxxxxxxxxxxxxxx'</span></span><br><span class=\"line\">c.NotebookApp.open_browser = <span class=\"keyword\">False</span></span><br><span class=\"line\">c.NotebookApp.port = <span class=\"number\">8889</span></span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>开启端口。（参考<a href=\"http://blog.csdn.net/u011846257/article/details/54707864\" target=\"_blank\" rel=\"noopener\">Centos防火墙设置与端口开放的方法</a>）</p>\r\n<blockquote>\r\n<p>Centos 升级到 7 之后，内置的防火墙已经从 iptables 变成了 firewalld。</p>\r\n</blockquote>\r\n<p>罗列 <code>firewalld</code> 常用命令：</p>\r\n<ul>\r\n<li>启动 / 关闭防火墙：<code>systemctl start/stop firewalld</code></li>\r\n<li>启用 / 停止服务：<code>systemctl enable/disable firewalld</code></li>\r\n<li>查看状态：<code>systemctl status firewalld</code> 或 <code>firewall-cmd --state</code></li>\r\n<li>更新防火墙规则\r\n<ul>\r\n<li>无需断开连接：<code>firewall-cmd --reload</code></li>\r\n<li>需要断开连接，类似重启：<code>firewall-cmd --complete-reload</code></li>\r\n</ul></li>\r\n<li>查看指定区域所有打开的端口：<code>firewall-cmd --zone=public --list-ports</code></li>\r\n<li>在指定区域打开端口（记得重启防火墙）： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd --zone=public --add-port=80/tcp [--permanent]</span><br></pre></td></tr></table></figure> 说明:\r\n<ul>\r\n<li><code>zone</code> 作用域</li>\r\n<li><code>add-port=80/tcp</code> 添加端口，格式为：端口 / 通讯协议</li>\r\n<li><code>permanent</code> 永久生效，没有此参数重启后失效</li>\r\n</ul></li>\r\n</ul>\r\n<p>所以需要开放 8889 端口： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd --zone=public --add-port=8889/tcp --permanent</span><br><span class=\"line\">firewall-cmd --complete-reload</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>启动 Jupyter Notebook： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jupyter notebook</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>浏览器输入 <code>https://&lt;ip&gt;:8889</code> 访问即可。</p></li>\r\n</ol>\r\n<h2 id=\"补充\">补充</h2>\r\n<h3 id=\"折腾必备-改主题\">折腾必备 — 改主题</h3>\r\n<p>利用 <code>pip</code> 安装 <a href=\"https://github.com/dunovank/jupyter-themes\" target=\"_blank\" rel=\"noopener\"><code>jupyter-themes</code></a>：</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install jupyterthemes</span><br><span class=\"line\">pip install --upgrade jupyterthemes</span><br></pre></td></tr></table></figure>\r\n<p>如需永久更改 <code>pip</code> 源，修改 <code>~/.pip/pip.conf</code>（Windows 下为 <code>%userprofile%\\pip\\pip.ini</code>）：</p>\r\n<figure class=\"highlight ini\"><figcaption><span>pip.conf</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[global]</span></span><br><span class=\"line\"><span class=\"attr\">index-url</span> = https://mirrors.ustc.edu.cn/pypi/web/simple</span><br><span class=\"line\"><span class=\"comment\"># index-url = https://pypi.tuna.tsinghua.edu.cn/simple</span></span><br><span class=\"line\"><span class=\"comment\"># index-url = https://pypi.douban.com/simple</span></span><br></pre></td></tr></table></figure>\r\n<p>修改 Jupyter Notebook 主题并开启服务端：</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jt -f code -fs 12 -tf ptsans -tfs 13 -dfs 11 -ofs 12 -lineh 125 -cellw 1000 -t solarizedl -T -vim</span><br><span class=\"line\">jupyter notebook</span><br></pre></td></tr></table></figure>\r\n<p>主题效果如下：</p>\r\n<p><img src=\"/img/jupyter-notebook-server.png\"></p>\r\n<h3 id=\"多核环境以及-jupyter-notebook-插件\">多核环境以及 Jupyter Notebook 插件</h3>\r\n<ul>\r\n<li>Jupyter Notebook 插件集 <a href=\"https://github.com/ipython-contrib/jupyter_contrib_nbextensions\" target=\"_blank\" rel=\"noopener\"><code>jupyter_contrib_nbextensions</code></a>，貌似在多环境中，该插件应该最先被安装</li>\r\n<li>从 <strong>Anaconda 4.1.0</strong> 开始，一个特别的包 <a href=\"https://github.com/Anaconda-Platform/nb_conda_kernels\" target=\"_blank\" rel=\"noopener\"><code>nb_conda_kernels</code></a> 能够自动检测 Conda 的所有环境并注册这些核到 Jupyter Notebook 中</li>\r\n</ul>\r\n","site":{"data":{}},"excerpt":"<p>被朋友强烈安利入坑 <a href=\"https://www.tensorflow.org\" target=\"_blank\" rel=\"noopener\">TensorFlow</a>，于是着手搭建 Python 的工作环境。之前在 Windows 下使用过 <a href=\"https://www.continuum.io\" target=\"_blank\" rel=\"noopener\">Anaconda</a>，不仅能愉快地切换 Python 2.x 与 3.x 环境，还能像应用容器一样安装其他软件（RStudio，Spyder）等。但如此一来自身体积逐渐增大，于是考虑在装载 CentOS 7.3 系统的老爷机上搭建 Anaconda 环境，并部署 Jupyter Notebook 服务器。本文搭建的环境仅允许单用户访问，如需要多用户，需使用 <a href=\"https://jupyterhub.readthedocs.io/en/latest\" target=\"_blank\" rel=\"noopener\">JupyterHub</a>。这里的初始参考来源是 Jupyter Notebook 的<a href=\"http://jupyter-notebook.readthedocs.io/en/latest/public_server.html#running-a-notebook-server\" target=\"_blank\" rel=\"noopener\">官方文档</a>。</p>","more":"<h2 id=\"安装-anaconda\">安装 Anaconda</h2>\r\n<p><i class=\"fa fa-info-circle fa-fw\"></i> 建议以非 root 权限安装、运行 Anaconda，每个用户可以在自己独立的环境 <code>/home/&lt;user&gt;/anaconda</code> 中操作。</p>\r\n<p>直接下载 <a href=\"https://www.continuum.io/downloads#linux\" target=\"_blank\" rel=\"noopener\">Anaconda x.x.x For Linux Installer</a>，</p>\r\n<!--�133-->\r\n<p>安装过程中的安装目录可进行自定义。通常由于喜闻乐见的原因，在 Conda 中下载包是速度是喜(gan)人的，所以需添加国内镜像：</p>\r\n<!--�134-->\r\n<p>可查看 <code>~/.condarc</code> 文件确认其配置，同时可配置代理（<code>proxy_servers</code> 项）：</p>\r\n<!--�135-->\r\n<h2 id=\"安装-tensorflow\">安装 TensorFlow</h2>\r\n<p>虽然此步骤不影响 Jupyter Notebook 服务器的搭建，不过既然此次折腾的初衷就是为了用上 TensorFlow，所以顺便记录下安装过程。根据 TensorFlow 官方指南 <a href=\"https://www.tensorflow.org/install/install_linux#installing_with_anaconda\" target=\"_blank\" rel=\"noopener\">Installing with Anaconda</a>，进行如下一通操作即可：</p>\r\n<!--�136-->\r\n<p>其中的 <code>&lt;tfBinaryURL&gt;</code> 即为 <a href=\"https://www.tensorflow.org/install/install_linux#the_url_of_the_tensorflow_python_package\" target=\"_blank\" rel=\"noopener\">URL of the TensorFlow Python package</a>，选择适配的版本进行安装即可，安装过程可能由于强大的网(Fang)络(Huo)环(Chang)境(Cheng)而中断。这里稍微提下 Conda 这个包管理系统。它不仅是一般意义上对各类包进行管理的工具，更重要的是可以创造出独立的环境，比如上述 <code>conda create -n</code> 就新建了一个新的环境，默认环境为 <code>root</code>，可通过 <code>conda info --envs</code> 查看当前用户下所有的环境，标注 <code>*</code> 的表示当前环境，所以为版本切换提供了十分便捷的途径。</p>\r\n<h3 id=\"测试\">测试</h3>\r\n<p>新建 <code>test.py</code>：</p>\r\n<!--�137-->\r\n<p>运行结果如下：</p>\r\n<!--�138-->\r\n<h2 id=\"配置-jupyter-notebook\">配置 Jupyter Notebook</h2>\r\n<p>安装完 Anaconda 之后，默认的 <code>root</code> 环境已经自带一个 <code>jupyter</code>，可通过 <code>conda info --envs</code> 来查询已有环境。所以如果直接在终端键入 <code>jupyter notebook</code>，打开的是默认环境下的 <code>jupyter</code>，所以需要在当前环境 <code>tensorflow</code> 中也安装一个 <code>jupyter</code>。</p>\r\n<ol type=\"1\">\r\n<li><p>生成配置文件 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda install --name tensorflow jupyter</span><br><span class=\"line\">jupyter notebook --generate-config</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>创建「伪」SSL证书。参考<a href=\"https://zhuanlan.zhihu.com/p/20226040\" target=\"_blank\" rel=\"noopener\">如何在云端服务器运行Jupyter Notebook？</a>。 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">openssl req -x509 -nodes -days 365 -newkey rsa:1024 -keyout mycert.pem -out mycert.pem</span><br></pre></td></tr></table></figure> 便会在当前路径生成 <code>mycert.pem</code> 私钥文件</p></li>\r\n<li><p>生成密码哈希值。打开 <code>ipython</code>： <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">In [<span class=\"number\">1</span>]: <span class=\"keyword\">from</span> notebook.auth <span class=\"keyword\">import</span> passwd</span><br><span class=\"line\">In [<span class=\"number\">2</span>]: passwd()</span><br><span class=\"line\">Enter password:</span><br><span class=\"line\">Verify password:</span><br><span class=\"line\">Out[<span class=\"number\">2</span>]: <span class=\"string\">'sha1:xxxxxxxxxxxxxxxxxxxxx'</span></span><br></pre></td></tr></table></figure> 或者单行： <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python -c <span class=\"string\">\"from notebook.auth import passwd; print(passwd())\"</span></span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>修改配置文件 <code>~/.jupyter/jupyter_notebook_config.py</code>。 <figure class=\"highlight python\"><figcaption><span>jupyter_notebook_config.py</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c.NotebookApp.certfile = <span class=\"string\">u'path/to/mycert.pem'</span></span><br><span class=\"line\">c.NotebookApp.ip = <span class=\"string\">'*'</span></span><br><span class=\"line\">c.NotebookApp.password = <span class=\"string\">u'sha1:xxxxxxxxxxxxxxxxxxxxx'</span></span><br><span class=\"line\">c.NotebookApp.open_browser = <span class=\"keyword\">False</span></span><br><span class=\"line\">c.NotebookApp.port = <span class=\"number\">8889</span></span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>开启端口。（参考<a href=\"http://blog.csdn.net/u011846257/article/details/54707864\" target=\"_blank\" rel=\"noopener\">Centos防火墙设置与端口开放的方法</a>）</p>\r\n<blockquote>\r\n<p>Centos 升级到 7 之后，内置的防火墙已经从 iptables 变成了 firewalld。</p>\r\n</blockquote>\r\n<p>罗列 <code>firewalld</code> 常用命令：</p>\r\n<ul>\r\n<li>启动 / 关闭防火墙：<code>systemctl start/stop firewalld</code></li>\r\n<li>启用 / 停止服务：<code>systemctl enable/disable firewalld</code></li>\r\n<li>查看状态：<code>systemctl status firewalld</code> 或 <code>firewall-cmd --state</code></li>\r\n<li>更新防火墙规则\r\n<ul>\r\n<li>无需断开连接：<code>firewall-cmd --reload</code></li>\r\n<li>需要断开连接，类似重启：<code>firewall-cmd --complete-reload</code></li>\r\n</ul></li>\r\n<li>查看指定区域所有打开的端口：<code>firewall-cmd --zone=public --list-ports</code></li>\r\n<li>在指定区域打开端口（记得重启防火墙）： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd --zone=public --add-port=80/tcp [--permanent]</span><br></pre></td></tr></table></figure> 说明:\r\n<ul>\r\n<li><code>zone</code> 作用域</li>\r\n<li><code>add-port=80/tcp</code> 添加端口，格式为：端口 / 通讯协议</li>\r\n<li><code>permanent</code> 永久生效，没有此参数重启后失效</li>\r\n</ul></li>\r\n</ul>\r\n<p>所以需要开放 8889 端口： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd --zone=public --add-port=8889/tcp --permanent</span><br><span class=\"line\">firewall-cmd --complete-reload</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>启动 Jupyter Notebook： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jupyter notebook</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>浏览器输入 <code>https://&lt;ip&gt;:8889</code> 访问即可。</p></li>\r\n</ol>\r\n<h2 id=\"补充\">补充</h2>\r\n<h3 id=\"折腾必备-改主题\">折腾必备 — 改主题</h3>\r\n<p>利用 <code>pip</code> 安装 <a href=\"https://github.com/dunovank/jupyter-themes\" target=\"_blank\" rel=\"noopener\"><code>jupyter-themes</code></a>：</p>\r\n<!--�139-->\r\n<p>如需永久更改 <code>pip</code> 源，修改 <code>~/.pip/pip.conf</code>（Windows 下为 <code>%userprofile%\\pip\\pip.ini</code>）：</p>\r\n<!--�140-->\r\n<p>修改 Jupyter Notebook 主题并开启服务端：</p>\r\n<!--�141-->\r\n<p>主题效果如下：</p>\r\n<p><img src=\"/img/jupyter-notebook-server.png\"></p>\r\n<h3 id=\"多核环境以及-jupyter-notebook-插件\">多核环境以及 Jupyter Notebook 插件</h3>\r\n<ul>\r\n<li>Jupyter Notebook 插件集 <a href=\"https://github.com/ipython-contrib/jupyter_contrib_nbextensions\" target=\"_blank\" rel=\"noopener\"><code>jupyter_contrib_nbextensions</code></a>，貌似在多环境中，该插件应该最先被安装</li>\r\n<li>从 <strong>Anaconda 4.1.0</strong> 开始，一个特别的包 <a href=\"https://github.com/Anaconda-Platform/nb_conda_kernels\" target=\"_blank\" rel=\"noopener\"><code>nb_conda_kernels</code></a> 能够自动检测 Conda 的所有环境并注册这些核到 Jupyter Notebook 中</li>\r\n</ul>"},{"title":"使用 ZFile 搭建自己的文件分享站（Linux & Windows）","date":"2021-02-28T03:21:10.000Z","_content":"\n网盘目录程序各式各样，这里分享一个页面简洁大方的在线网盘项目 [Z-File][zfile-project]。\n\n> 此项目是一个在线文件目录的程序，支持各种对象存储和本地存储，使用定位是个人放常用工具下载，或做公共的文件库。不会向多账户方向开发。\n> 前端基于 [h5ai][h5ai-project] 的原有功能使用 Vue 重新开发了一遍。后端采用 SpringBoot，数据库采用内嵌数据库。\n\n<!-- more -->\n\n为适应不同场景下需求，分别在 Linux 以及 Windows 中进行测试。\n\n## 准备工作\n\n### FTP 服务器\n\nWindows 自带的的 Internet Information Services (IIS) 搭建 FTP 服务器会出现中文文件名乱码、认证错误等问题，于是转向开源的 [FileZilla Server][filezilla-server-download] 搭建 FTP 服务器。\n\n## Linux 部署 ZFile\n\n### 安装依赖\n\n```bash\n# CentOS系统\nyum install -y java-1.8.0-openjdk unzip\n\n# Debian/Ubuntu系统\napt update\napt install -y openjdk-8-jre-headless unzip\n```\n\n### 下载项目\n\n```bash\nwget -P https://c.jun6.net/ZFILE/zfile-release.war\nmkdir zfile && unzip zfile-release.war -d zfile\nchmod +x zfile/bin/*.sh\n```\n\n### 常用命令\n\n```bash\n ~/zfile/bin/start.sh       # 启动项目\n ~/zfile/bin/stop.sh        # 停止项目\n ~/zfile/bin/restart.sh     # 重启项目\n```\n\n### 后台配置\n\n运行 `start.sh` 启动程序，进入网页端 `http://<ip:port>` 设置后台管理账密（前端端口在 `zfile/WEB-INF/classes/application.xml` 中配置，默认为 8080），后台管理界面网址为：`http://<ip:port>/#/admin`。通过「驱动器列表」页面新增驱动器并进行必要配置，即可在前端显示目录内容。\n\n### 挂载 FTP 驱动器\n\n默认情况下挂载的 FTP 驱动器在前端下载协议为 `ftp://` ，部分客户端浏览器不支持 ftp 协议下载，且 ftp 协议下载链接会暴露用户名密码，故 Zfile 提供「加速域名」的方式，即事先实现以 HTTP 方式访问 FTP 目录，用户通过 HTTP 进行下载从而隐藏敏感信息。而实际情况中 FTP 服务器可能无法搭建 HTTP 服务，故考虑将远程 FTP 挂载到本地目录，在 Zfile 管理界面新增本地存储的方式进行展示。\n\n下面利用 curlftpfs 挂载 FTP 服务器：\n\n```bash\n# 在线安装\nyum install -y epel-release\nyum install -y curlftpfs\n# 离线安装\n# yum install --downloadonly curlftpfs --downloaddir=.\n\n# 挂载 FTP 目录\nmkdir -p $MOUNTPOINT\ncurlftpfs $IP:$PORT $MOUNTPOINT -o user=$USERNAME:$PASSWORD,codepage=utf8\n# 取消挂载\nfusermount -u $MOUNTPOINT\n```\n\n## Windows 部署 ZFile\n\n```bat\njava -Dfile.encoding=utf-8 -jar -Dserver.port=8080 .\\zfile-release.jar\n# 如需要修改配置文件, 可去 Github 复制一份配置文件, 放到 jar 文件同路径即可.\n```\n\n### 挂载 FTP 驱动器\n\n与 Linux 下同理，相应需安装 [Rclone][rclone-project] 及 [WinFsp][winfsp-project]，配置过程不再赘述。\n\n\n[zfile-project]: https://github.com/zhaojun1998/zfile\n[h5ai-project]: https://larsjung.de/h5ai\n[filezilla-server-download]: https://filezilla-project.org/download.php?type=server\n[rclone-project]: https://github.com/rclone/rclone\n[winfsp-project]: https://github.com/billziss-gh/winfsp\n","source":"_posts/setting-up-your-own-netdisk-by-zfile-on-windows-and-linux.md","raw":"---\ntitle: 使用 ZFile 搭建自己的文件分享站（Linux & Windows）\ndate: 2021-02-28 11:21:10\ntags:\n    - ZFile\n    - FTP\n    - Fuse\n    - NetDisk\n    - FileZilla\ncategories: Handy Utilities\n---\n\n网盘目录程序各式各样，这里分享一个页面简洁大方的在线网盘项目 [Z-File][zfile-project]。\n\n> 此项目是一个在线文件目录的程序，支持各种对象存储和本地存储，使用定位是个人放常用工具下载，或做公共的文件库。不会向多账户方向开发。\n> 前端基于 [h5ai][h5ai-project] 的原有功能使用 Vue 重新开发了一遍。后端采用 SpringBoot，数据库采用内嵌数据库。\n\n<!-- more -->\n\n为适应不同场景下需求，分别在 Linux 以及 Windows 中进行测试。\n\n## 准备工作\n\n### FTP 服务器\n\nWindows 自带的的 Internet Information Services (IIS) 搭建 FTP 服务器会出现中文文件名乱码、认证错误等问题，于是转向开源的 [FileZilla Server][filezilla-server-download] 搭建 FTP 服务器。\n\n## Linux 部署 ZFile\n\n### 安装依赖\n\n```bash\n# CentOS系统\nyum install -y java-1.8.0-openjdk unzip\n\n# Debian/Ubuntu系统\napt update\napt install -y openjdk-8-jre-headless unzip\n```\n\n### 下载项目\n\n```bash\nwget -P https://c.jun6.net/ZFILE/zfile-release.war\nmkdir zfile && unzip zfile-release.war -d zfile\nchmod +x zfile/bin/*.sh\n```\n\n### 常用命令\n\n```bash\n ~/zfile/bin/start.sh       # 启动项目\n ~/zfile/bin/stop.sh        # 停止项目\n ~/zfile/bin/restart.sh     # 重启项目\n```\n\n### 后台配置\n\n运行 `start.sh` 启动程序，进入网页端 `http://<ip:port>` 设置后台管理账密（前端端口在 `zfile/WEB-INF/classes/application.xml` 中配置，默认为 8080），后台管理界面网址为：`http://<ip:port>/#/admin`。通过「驱动器列表」页面新增驱动器并进行必要配置，即可在前端显示目录内容。\n\n### 挂载 FTP 驱动器\n\n默认情况下挂载的 FTP 驱动器在前端下载协议为 `ftp://` ，部分客户端浏览器不支持 ftp 协议下载，且 ftp 协议下载链接会暴露用户名密码，故 Zfile 提供「加速域名」的方式，即事先实现以 HTTP 方式访问 FTP 目录，用户通过 HTTP 进行下载从而隐藏敏感信息。而实际情况中 FTP 服务器可能无法搭建 HTTP 服务，故考虑将远程 FTP 挂载到本地目录，在 Zfile 管理界面新增本地存储的方式进行展示。\n\n下面利用 curlftpfs 挂载 FTP 服务器：\n\n```bash\n# 在线安装\nyum install -y epel-release\nyum install -y curlftpfs\n# 离线安装\n# yum install --downloadonly curlftpfs --downloaddir=.\n\n# 挂载 FTP 目录\nmkdir -p $MOUNTPOINT\ncurlftpfs $IP:$PORT $MOUNTPOINT -o user=$USERNAME:$PASSWORD,codepage=utf8\n# 取消挂载\nfusermount -u $MOUNTPOINT\n```\n\n## Windows 部署 ZFile\n\n```bat\njava -Dfile.encoding=utf-8 -jar -Dserver.port=8080 .\\zfile-release.jar\n# 如需要修改配置文件, 可去 Github 复制一份配置文件, 放到 jar 文件同路径即可.\n```\n\n### 挂载 FTP 驱动器\n\n与 Linux 下同理，相应需安装 [Rclone][rclone-project] 及 [WinFsp][winfsp-project]，配置过程不再赘述。\n\n\n[zfile-project]: https://github.com/zhaojun1998/zfile\n[h5ai-project]: https://larsjung.de/h5ai\n[filezilla-server-download]: https://filezilla-project.org/download.php?type=server\n[rclone-project]: https://github.com/rclone/rclone\n[winfsp-project]: https://github.com/billziss-gh/winfsp\n","slug":"setting-up-your-own-netdisk-by-zfile-on-windows-and-linux","published":1,"updated":"2023-03-09T16:09:38.282Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u33700034p4x0cq85koxf","content":"<p>网盘目录程序各式各样，这里分享一个页面简洁大方的在线网盘项目 <a href=\"https://github.com/zhaojun1998/zfile\" target=\"_blank\" rel=\"noopener\">Z-File</a>。</p>\r\n<blockquote>\r\n<p>此项目是一个在线文件目录的程序，支持各种对象存储和本地存储，使用定位是个人放常用工具下载，或做公共的文件库。不会向多账户方向开发。 前端基于 <a href=\"https://larsjung.de/h5ai\" target=\"_blank\" rel=\"noopener\">h5ai</a> 的原有功能使用 Vue 重新开发了一遍。后端采用 SpringBoot，数据库采用内嵌数据库。</p>\r\n</blockquote>\r\n<a id=\"more\"></a>\r\n<p>为适应不同场景下需求，分别在 Linux 以及 Windows 中进行测试。</p>\r\n<h2 id=\"准备工作\">准备工作</h2>\r\n<h3 id=\"ftp-服务器\">FTP 服务器</h3>\r\n<p>Windows 自带的的 Internet Information Services (IIS) 搭建 FTP 服务器会出现中文文件名乱码、认证错误等问题，于是转向开源的 <a href=\"https://filezilla-project.org/download.php?type=server\" target=\"_blank\" rel=\"noopener\">FileZilla Server</a> 搭建 FTP 服务器。</p>\r\n<h2 id=\"linux-部署-zfile\">Linux 部署 ZFile</h2>\r\n<h3 id=\"安装依赖\">安装依赖</h3>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># CentOS系统</span></span><br><span class=\"line\">yum install -y java-1.8.0-openjdk unzip</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Debian/Ubuntu系统</span></span><br><span class=\"line\">apt update</span><br><span class=\"line\">apt install -y openjdk-8-jre-headless unzip</span><br></pre></td></tr></table></figure>\r\n<h3 id=\"下载项目\">下载项目</h3>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -P https://c.jun6.net/ZFILE/zfile-release.war</span><br><span class=\"line\">mkdir zfile &amp;&amp; unzip zfile-release.war -d zfile</span><br><span class=\"line\">chmod +x zfile/bin/*.sh</span><br></pre></td></tr></table></figure>\r\n<h3 id=\"常用命令\">常用命令</h3>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~/zfile/bin/start.sh       <span class=\"comment\"># 启动项目</span></span><br><span class=\"line\">~/zfile/bin/stop.sh        <span class=\"comment\"># 停止项目</span></span><br><span class=\"line\">~/zfile/bin/restart.sh     <span class=\"comment\"># 重启项目</span></span><br></pre></td></tr></table></figure>\r\n<h3 id=\"后台配置\">后台配置</h3>\r\n<p>运行 <code>start.sh</code> 启动程序，进入网页端 <code>http://&lt;ip:port&gt;</code> 设置后台管理账密（前端端口在 <code>zfile/WEB-INF/classes/application.xml</code> 中配置，默认为 8080），后台管理界面网址为：<code>http://&lt;ip:port&gt;/#/admin</code>。通过「驱动器列表」页面新增驱动器并进行必要配置，即可在前端显示目录内容。</p>\r\n<h3 id=\"挂载-ftp-驱动器\">挂载 FTP 驱动器</h3>\r\n<p>默认情况下挂载的 FTP 驱动器在前端下载协议为 <code>ftp://</code> ，部分客户端浏览器不支持 ftp 协议下载，且 ftp 协议下载链接会暴露用户名密码，故 Zfile 提供「加速域名」的方式，即事先实现以 HTTP 方式访问 FTP 目录，用户通过 HTTP 进行下载从而隐藏敏感信息。而实际情况中 FTP 服务器可能无法搭建 HTTP 服务，故考虑将远程 FTP 挂载到本地目录，在 Zfile 管理界面新增本地存储的方式进行展示。</p>\r\n<p>下面利用 curlftpfs 挂载 FTP 服务器：</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 在线安装</span></span><br><span class=\"line\">yum install -y epel-release</span><br><span class=\"line\">yum install -y curlftpfs</span><br><span class=\"line\"><span class=\"comment\"># 离线安装</span></span><br><span class=\"line\"><span class=\"comment\"># yum install --downloadonly curlftpfs --downloaddir=.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 挂载 FTP 目录</span></span><br><span class=\"line\">mkdir -p <span class=\"variable\">$MOUNTPOINT</span></span><br><span class=\"line\">curlftpfs <span class=\"variable\">$IP</span>:<span class=\"variable\">$PORT</span> <span class=\"variable\">$MOUNTPOINT</span> -o user=<span class=\"variable\">$USERNAME</span>:<span class=\"variable\">$PASSWORD</span>,codepage=utf8</span><br><span class=\"line\"><span class=\"comment\"># 取消挂载</span></span><br><span class=\"line\">fusermount -u <span class=\"variable\">$MOUNTPOINT</span></span><br></pre></td></tr></table></figure>\r\n<h2 id=\"windows-部署-zfile\">Windows 部署 ZFile</h2>\r\n<figure class=\"highlight bat\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -Dfile.encoding=utf-<span class=\"number\">8</span> -jar -Dserver.port=<span class=\"number\">8080</span> .\\zfile-release.jar</span><br><span class=\"line\"># 如需要修改配置文件, 可去 Github 复制一份配置文件, 放到 jar 文件同路径即可.</span><br></pre></td></tr></table></figure>\r\n<h3 id=\"挂载-ftp-驱动器-1\">挂载 FTP 驱动器</h3>\r\n<p>与 Linux 下同理，相应需安装 <a href=\"https://github.com/rclone/rclone\" target=\"_blank\" rel=\"noopener\">Rclone</a> 及 <a href=\"https://github.com/billziss-gh/winfsp\" target=\"_blank\" rel=\"noopener\">WinFsp</a>，配置过程不再赘述。</p>\r\n","site":{"data":{}},"excerpt":"<p>网盘目录程序各式各样，这里分享一个页面简洁大方的在线网盘项目 <a href=\"https://github.com/zhaojun1998/zfile\" target=\"_blank\" rel=\"noopener\">Z-File</a>。</p>\r\n<blockquote>\r\n<p>此项目是一个在线文件目录的程序，支持各种对象存储和本地存储，使用定位是个人放常用工具下载，或做公共的文件库。不会向多账户方向开发。 前端基于 <a href=\"https://larsjung.de/h5ai\" target=\"_blank\" rel=\"noopener\">h5ai</a> 的原有功能使用 Vue 重新开发了一遍。后端采用 SpringBoot，数据库采用内嵌数据库。</p>\r\n</blockquote>","more":"<p>为适应不同场景下需求，分别在 Linux 以及 Windows 中进行测试。</p>\r\n<h2 id=\"准备工作\">准备工作</h2>\r\n<h3 id=\"ftp-服务器\">FTP 服务器</h3>\r\n<p>Windows 自带的的 Internet Information Services (IIS) 搭建 FTP 服务器会出现中文文件名乱码、认证错误等问题，于是转向开源的 <a href=\"https://filezilla-project.org/download.php?type=server\" target=\"_blank\" rel=\"noopener\">FileZilla Server</a> 搭建 FTP 服务器。</p>\r\n<h2 id=\"linux-部署-zfile\">Linux 部署 ZFile</h2>\r\n<h3 id=\"安装依赖\">安装依赖</h3>\r\n<!--�142-->\r\n<h3 id=\"下载项目\">下载项目</h3>\r\n<!--�143-->\r\n<h3 id=\"常用命令\">常用命令</h3>\r\n<!--�144-->\r\n<h3 id=\"后台配置\">后台配置</h3>\r\n<p>运行 <code>start.sh</code> 启动程序，进入网页端 <code>http://&lt;ip:port&gt;</code> 设置后台管理账密（前端端口在 <code>zfile/WEB-INF/classes/application.xml</code> 中配置，默认为 8080），后台管理界面网址为：<code>http://&lt;ip:port&gt;/#/admin</code>。通过「驱动器列表」页面新增驱动器并进行必要配置，即可在前端显示目录内容。</p>\r\n<h3 id=\"挂载-ftp-驱动器\">挂载 FTP 驱动器</h3>\r\n<p>默认情况下挂载的 FTP 驱动器在前端下载协议为 <code>ftp://</code> ，部分客户端浏览器不支持 ftp 协议下载，且 ftp 协议下载链接会暴露用户名密码，故 Zfile 提供「加速域名」的方式，即事先实现以 HTTP 方式访问 FTP 目录，用户通过 HTTP 进行下载从而隐藏敏感信息。而实际情况中 FTP 服务器可能无法搭建 HTTP 服务，故考虑将远程 FTP 挂载到本地目录，在 Zfile 管理界面新增本地存储的方式进行展示。</p>\r\n<p>下面利用 curlftpfs 挂载 FTP 服务器：</p>\r\n<!--�145-->\r\n<h2 id=\"windows-部署-zfile\">Windows 部署 ZFile</h2>\r\n<!--�146-->\r\n<h3 id=\"挂载-ftp-驱动器-1\">挂载 FTP 驱动器</h3>\r\n<p>与 Linux 下同理，相应需安装 <a href=\"https://github.com/rclone/rclone\" target=\"_blank\" rel=\"noopener\">Rclone</a> 及 <a href=\"https://github.com/billziss-gh/winfsp\" target=\"_blank\" rel=\"noopener\">WinFsp</a>，配置过程不再赘述。</p>"},{"title":"Windows 下多网卡路由表设置","date":"2020-10-11T00:53:00.000Z","toc":true,"_content":"\n经常遇到这样的情形：办公网与外网不通，办公时如需连外网查资料，不得不来回切换网络或通过其他设备上外网再回到办公电脑前，来回折腾苦不堪言。自然产生需求：同一台设备如何同时连接办公内网及外网？\n\n<!-- more -->\n\n## 实验配置\n\n- 内网端：办公网口 / 可分享网络的办公用电脑\n- 外网端：连通外网的路由器 / 热点 / 移动设备 USB 分享 / 其他可连至外网的设备或信号\n- 多网卡计算机\n\n其中**内网端**可为办公网口，通过网线接入目标笔记本；但一般情况下公司会提供办公专用笔记本，通过网络共享技术，可将办公网络共享给通过网线与之相连的设备。**外网端**顾名思义，可使目标笔记本上外网的设备或手段。多网卡设备中的「多网卡」可以认为是以太网（Ethernet）及无线网（Wi-Fi）或其他计算机中的网络设备。\n\n## 实验场景一：个人电脑通过办公电脑上公司内网\n\n> 首先从简单的场景实验开始：办公电脑 A 通过 Wi-Fi 连接公司内网，并通过网线与个人电脑 B 相连。\n\n将办公电脑 A 中网络适配器设置的 Wi-Fi 适配器（设备名可能不同）共享打开：属性 - 共享 - 勾选允许网络用户通过该电脑连接至网络。此时电脑 A 的以太网适配器会将 IP 设置为 `192.168.137.1`。\n\n在电脑 B 中的以太网设置中：\n\n- 自动获取 IP 地址 / DNS 服务器地址\n- 如需固定 IP 地址，则需将默认网关及 DNS 服务器设置为 `192.168.137.1`\n\n## 实验场景二：设置个人电脑内网外网均可访问\n\n> 有了实验一的经验，可否简单地将外网网线接入个人电脑，并成功访问外网及内网？\n\n此时打开个人电脑 Wi-Fi，发现外网可访问，但实验一中的内网网址无法访问了。**管理员**权限下在 `cmd` 中输入\n\n```Bat\nroute print -4\n```\n\n可获取路由表信息（IPv4）：\n\n```\n===========================================================================\nInterface List\n 15...xx xx xx xx xx xx ......Realtek PCIe GbE Family Controller\n 32...xx xx xx xx xx xx ......Microsoft Wi-Fi Direct Virtual Adapter\n 16...xx xx xx xx xx xx ......Realtek 8821CE Wireless LAN 802.11ac PCI-E NIC\n  1...........................Software Loopback Interface 1\n===========================================================================\n\nIPv4 Route Table\n===========================================================================\nActive Routes:\nNetwork Destination        Netmask          Gateway       Interface  Metric\n          0.0.0.0          0.0.0.0    192.168.137.1  192.168.137.101    281\n          0.0.0.0          0.0.0.0      192.168.8.1    192.168.8.101     50\n        127.0.0.0        255.0.0.0         On-link         127.0.0.1    331\n        127.0.0.1  255.255.255.255         On-link         127.0.0.1    331\n  127.255.255.255  255.255.255.255         On-link         127.0.0.1    331\n      192.168.8.0    255.255.255.0         On-link     192.168.8.101    306\n    192.168.8.101  255.255.255.255         On-link     192.168.8.101    306\n    192.168.8.255  255.255.255.255         On-link     192.168.8.101    306\n    192.168.137.0    255.255.255.0         On-link   192.168.137.101    281\n  192.168.137.101  255.255.255.255         On-link   192.168.137.101    281\n  192.168.137.255  255.255.255.255         On-link   192.168.137.101    281\n        224.0.0.0        240.0.0.0         On-link         127.0.0.1    331\n        224.0.0.0        240.0.0.0         On-link     192.168.8.101    306\n        224.0.0.0        240.0.0.0         On-link   192.168.137.101    281\n  255.255.255.255  255.255.255.255         On-link         127.0.0.1    331\n  255.255.255.255  255.255.255.255         On-link     192.168.8.101    306\n  255.255.255.255  255.255.255.255         On-link   192.168.137.101    281\n===========================================================================\nPersistent Routes:\n  Network Address          Netmask  Gateway Address  Metric\n          0.0.0.0          0.0.0.0    192.168.137.1  Default\n===========================================================================\n```\n\n可以看到针对目的网段 `0.0.0.0`，活动路由中存在 2 条路由设定。Windows 下默认网关是指发往 `0.0.0.0` 缺省网段的地址，其目的地为所有未知路由的网段，所以设置了 2 个默认网关之后，其中的一个网关将被启用，而另外一个将作为冗余。所以在浏览器中试图访问内网时，例如访问 IP 为 `10.30.10.101`，系统在 2 条路由中挑选一条进行访问，系统会偏向跳数（Metric）较小的路由进行访问，在测试中的情况即为网关为外网的这条路由，导致内网无法访问。\n\n**解决方案**\n\n- 针对 `0.0.0.0` 网段进行针对性设置，如默认网段走外网 `192.168.8.1`，而内网网段走内网 `192.168.137.1`\n- 针对内网网段，设定网关为内网 `192.168.137.1`\n\n例如，公司内网网段为 `10.30.*.*`，首先删除路由为 `0.0.0.0` 的 2 条记录，并添加默认网段的路由网关为 `192.168.8.1`，内网网段的路由网关为 `192.168.137.1`。需要注意的是命令中的**接口号**是否与实际情况相对应。\n\n```Bat\nroute delete          0.0.0.0\nroute add -p          0.0.0.0  mask        0.0.0.0      192.168.8.1   IF 16\nroute add -p        10.30.0.0  mask    255.255.0.0    192.168.137.1   IF 15\nroute add -p    192.168.137.0  mask  255.255.255.0    192.168.137.1   IF 15\n```\n\n设定后的路由表：\n\n```\nIPv4 Route Table\n===========================================================================\nActive Routes:\nNetwork Destination        Netmask          Gateway       Interface  Metric\n          0.0.0.0          0.0.0.0      192.168.8.1    192.168.8.101     51\n        10.30.0.0      255.255.0.0    192.168.137.1  192.168.137.101     26\n        127.0.0.0        255.0.0.0         On-link         127.0.0.1    331\n        127.0.0.1  255.255.255.255         On-link         127.0.0.1    331\n  127.255.255.255  255.255.255.255         On-link         127.0.0.1    331\n      192.168.8.0    255.255.255.0         On-link     192.168.8.101    306\n    192.168.8.101  255.255.255.255         On-link     192.168.8.101    306\n    192.168.8.255  255.255.255.255         On-link     192.168.8.101    306\n    192.168.137.0    255.255.255.0    192.168.137.1  192.168.137.101     26\n  192.168.137.101  255.255.255.255         On-link   192.168.137.101    281\n        224.0.0.0        240.0.0.0         On-link         127.0.0.1    331\n        224.0.0.0        240.0.0.0         On-link     192.168.8.101    306\n        224.0.0.0        240.0.0.0         On-link   192.168.137.101    281\n  255.255.255.255  255.255.255.255         On-link         127.0.0.1    331\n  255.255.255.255  255.255.255.255         On-link     192.168.8.101    306\n  255.255.255.255  255.255.255.255         On-link   192.168.137.101    281\n===========================================================================\nPersistent Routes:\n  Network Address          Netmask  Gateway Address  Metric\n    192.168.137.0    255.255.255.0    192.168.137.1       1\n        10.30.0.0      255.255.0.0    192.168.137.1       1\n          0.0.0.0          0.0.0.0      192.168.8.1       1\n```\n\n## GUI 程序设定路由表\n\n> [NetRouteView - Network Route Utility for Windows][NetRouteView]\n\n[NetRouteView]: https://www.nirsoft.net/utils/network_route_view.html\n","source":"_posts/settings-of-multi-nic-and-routing-table-on-windows.md","raw":"---\ntitle: Windows 下多网卡路由表设置\ndate: 2020-10-11 08:53:00\ncategories: Research\ntoc: true\ntags:\n  - Windows\n  - Routing\n  - NetMask\n---\n\n经常遇到这样的情形：办公网与外网不通，办公时如需连外网查资料，不得不来回切换网络或通过其他设备上外网再回到办公电脑前，来回折腾苦不堪言。自然产生需求：同一台设备如何同时连接办公内网及外网？\n\n<!-- more -->\n\n## 实验配置\n\n- 内网端：办公网口 / 可分享网络的办公用电脑\n- 外网端：连通外网的路由器 / 热点 / 移动设备 USB 分享 / 其他可连至外网的设备或信号\n- 多网卡计算机\n\n其中**内网端**可为办公网口，通过网线接入目标笔记本；但一般情况下公司会提供办公专用笔记本，通过网络共享技术，可将办公网络共享给通过网线与之相连的设备。**外网端**顾名思义，可使目标笔记本上外网的设备或手段。多网卡设备中的「多网卡」可以认为是以太网（Ethernet）及无线网（Wi-Fi）或其他计算机中的网络设备。\n\n## 实验场景一：个人电脑通过办公电脑上公司内网\n\n> 首先从简单的场景实验开始：办公电脑 A 通过 Wi-Fi 连接公司内网，并通过网线与个人电脑 B 相连。\n\n将办公电脑 A 中网络适配器设置的 Wi-Fi 适配器（设备名可能不同）共享打开：属性 - 共享 - 勾选允许网络用户通过该电脑连接至网络。此时电脑 A 的以太网适配器会将 IP 设置为 `192.168.137.1`。\n\n在电脑 B 中的以太网设置中：\n\n- 自动获取 IP 地址 / DNS 服务器地址\n- 如需固定 IP 地址，则需将默认网关及 DNS 服务器设置为 `192.168.137.1`\n\n## 实验场景二：设置个人电脑内网外网均可访问\n\n> 有了实验一的经验，可否简单地将外网网线接入个人电脑，并成功访问外网及内网？\n\n此时打开个人电脑 Wi-Fi，发现外网可访问，但实验一中的内网网址无法访问了。**管理员**权限下在 `cmd` 中输入\n\n```Bat\nroute print -4\n```\n\n可获取路由表信息（IPv4）：\n\n```\n===========================================================================\nInterface List\n 15...xx xx xx xx xx xx ......Realtek PCIe GbE Family Controller\n 32...xx xx xx xx xx xx ......Microsoft Wi-Fi Direct Virtual Adapter\n 16...xx xx xx xx xx xx ......Realtek 8821CE Wireless LAN 802.11ac PCI-E NIC\n  1...........................Software Loopback Interface 1\n===========================================================================\n\nIPv4 Route Table\n===========================================================================\nActive Routes:\nNetwork Destination        Netmask          Gateway       Interface  Metric\n          0.0.0.0          0.0.0.0    192.168.137.1  192.168.137.101    281\n          0.0.0.0          0.0.0.0      192.168.8.1    192.168.8.101     50\n        127.0.0.0        255.0.0.0         On-link         127.0.0.1    331\n        127.0.0.1  255.255.255.255         On-link         127.0.0.1    331\n  127.255.255.255  255.255.255.255         On-link         127.0.0.1    331\n      192.168.8.0    255.255.255.0         On-link     192.168.8.101    306\n    192.168.8.101  255.255.255.255         On-link     192.168.8.101    306\n    192.168.8.255  255.255.255.255         On-link     192.168.8.101    306\n    192.168.137.0    255.255.255.0         On-link   192.168.137.101    281\n  192.168.137.101  255.255.255.255         On-link   192.168.137.101    281\n  192.168.137.255  255.255.255.255         On-link   192.168.137.101    281\n        224.0.0.0        240.0.0.0         On-link         127.0.0.1    331\n        224.0.0.0        240.0.0.0         On-link     192.168.8.101    306\n        224.0.0.0        240.0.0.0         On-link   192.168.137.101    281\n  255.255.255.255  255.255.255.255         On-link         127.0.0.1    331\n  255.255.255.255  255.255.255.255         On-link     192.168.8.101    306\n  255.255.255.255  255.255.255.255         On-link   192.168.137.101    281\n===========================================================================\nPersistent Routes:\n  Network Address          Netmask  Gateway Address  Metric\n          0.0.0.0          0.0.0.0    192.168.137.1  Default\n===========================================================================\n```\n\n可以看到针对目的网段 `0.0.0.0`，活动路由中存在 2 条路由设定。Windows 下默认网关是指发往 `0.0.0.0` 缺省网段的地址，其目的地为所有未知路由的网段，所以设置了 2 个默认网关之后，其中的一个网关将被启用，而另外一个将作为冗余。所以在浏览器中试图访问内网时，例如访问 IP 为 `10.30.10.101`，系统在 2 条路由中挑选一条进行访问，系统会偏向跳数（Metric）较小的路由进行访问，在测试中的情况即为网关为外网的这条路由，导致内网无法访问。\n\n**解决方案**\n\n- 针对 `0.0.0.0` 网段进行针对性设置，如默认网段走外网 `192.168.8.1`，而内网网段走内网 `192.168.137.1`\n- 针对内网网段，设定网关为内网 `192.168.137.1`\n\n例如，公司内网网段为 `10.30.*.*`，首先删除路由为 `0.0.0.0` 的 2 条记录，并添加默认网段的路由网关为 `192.168.8.1`，内网网段的路由网关为 `192.168.137.1`。需要注意的是命令中的**接口号**是否与实际情况相对应。\n\n```Bat\nroute delete          0.0.0.0\nroute add -p          0.0.0.0  mask        0.0.0.0      192.168.8.1   IF 16\nroute add -p        10.30.0.0  mask    255.255.0.0    192.168.137.1   IF 15\nroute add -p    192.168.137.0  mask  255.255.255.0    192.168.137.1   IF 15\n```\n\n设定后的路由表：\n\n```\nIPv4 Route Table\n===========================================================================\nActive Routes:\nNetwork Destination        Netmask          Gateway       Interface  Metric\n          0.0.0.0          0.0.0.0      192.168.8.1    192.168.8.101     51\n        10.30.0.0      255.255.0.0    192.168.137.1  192.168.137.101     26\n        127.0.0.0        255.0.0.0         On-link         127.0.0.1    331\n        127.0.0.1  255.255.255.255         On-link         127.0.0.1    331\n  127.255.255.255  255.255.255.255         On-link         127.0.0.1    331\n      192.168.8.0    255.255.255.0         On-link     192.168.8.101    306\n    192.168.8.101  255.255.255.255         On-link     192.168.8.101    306\n    192.168.8.255  255.255.255.255         On-link     192.168.8.101    306\n    192.168.137.0    255.255.255.0    192.168.137.1  192.168.137.101     26\n  192.168.137.101  255.255.255.255         On-link   192.168.137.101    281\n        224.0.0.0        240.0.0.0         On-link         127.0.0.1    331\n        224.0.0.0        240.0.0.0         On-link     192.168.8.101    306\n        224.0.0.0        240.0.0.0         On-link   192.168.137.101    281\n  255.255.255.255  255.255.255.255         On-link         127.0.0.1    331\n  255.255.255.255  255.255.255.255         On-link     192.168.8.101    306\n  255.255.255.255  255.255.255.255         On-link   192.168.137.101    281\n===========================================================================\nPersistent Routes:\n  Network Address          Netmask  Gateway Address  Metric\n    192.168.137.0    255.255.255.0    192.168.137.1       1\n        10.30.0.0      255.255.0.0    192.168.137.1       1\n          0.0.0.0          0.0.0.0      192.168.8.1       1\n```\n\n## GUI 程序设定路由表\n\n> [NetRouteView - Network Route Utility for Windows][NetRouteView]\n\n[NetRouteView]: https://www.nirsoft.net/utils/network_route_view.html\n","slug":"settings-of-multi-nic-and-routing-table-on-windows","published":1,"updated":"2023-03-09T16:09:38.276Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u33710037p4x00ea0pmz1","content":"<p>经常遇到这样的情形：办公网与外网不通，办公时如需连外网查资料，不得不来回切换网络或通过其他设备上外网再回到办公电脑前，来回折腾苦不堪言。自然产生需求：同一台设备如何同时连接办公内网及外网？</p>\r\n<a id=\"more\"></a>\r\n<h2 id=\"实验配置\">实验配置</h2>\r\n<ul>\r\n<li>内网端：办公网口 / 可分享网络的办公用电脑</li>\r\n<li>外网端：连通外网的路由器 / 热点 / 移动设备 USB 分享 / 其他可连至外网的设备或信号</li>\r\n<li>多网卡计算机</li>\r\n</ul>\r\n<p>其中<strong>内网端</strong>可为办公网口，通过网线接入目标笔记本；但一般情况下公司会提供办公专用笔记本，通过网络共享技术，可将办公网络共享给通过网线与之相连的设备。<strong>外网端</strong>顾名思义，可使目标笔记本上外网的设备或手段。多网卡设备中的「多网卡」可以认为是以太网（Ethernet）及无线网（Wi-Fi）或其他计算机中的网络设备。</p>\r\n<h2 id=\"实验场景一个人电脑通过办公电脑上公司内网\">实验场景一：个人电脑通过办公电脑上公司内网</h2>\r\n<blockquote>\r\n<p>首先从简单的场景实验开始：办公电脑 A 通过 Wi-Fi 连接公司内网，并通过网线与个人电脑 B 相连。</p>\r\n</blockquote>\r\n<p>将办公电脑 A 中网络适配器设置的 Wi-Fi 适配器（设备名可能不同）共享打开：属性 - 共享 - 勾选允许网络用户通过该电脑连接至网络。此时电脑 A 的以太网适配器会将 IP 设置为 <code>192.168.137.1</code>。</p>\r\n<p>在电脑 B 中的以太网设置中：</p>\r\n<ul>\r\n<li>自动获取 IP 地址 / DNS 服务器地址</li>\r\n<li>如需固定 IP 地址，则需将默认网关及 DNS 服务器设置为 <code>192.168.137.1</code></li>\r\n</ul>\r\n<h2 id=\"实验场景二设置个人电脑内网外网均可访问\">实验场景二：设置个人电脑内网外网均可访问</h2>\r\n<blockquote>\r\n<p>有了实验一的经验，可否简单地将外网网线接入个人电脑，并成功访问外网及内网？</p>\r\n</blockquote>\r\n<p>此时打开个人电脑 Wi-Fi，发现外网可访问，但实验一中的内网网址无法访问了。<strong>管理员</strong>权限下在 <code>cmd</code> 中输入</p>\r\n<figure class=\"highlight bat\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">route <span class=\"built_in\">print</span> -<span class=\"number\">4</span></span><br></pre></td></tr></table></figure>\r\n<p>可获取路由表信息（IPv4）：</p>\r\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">===========================================================================</span><br><span class=\"line\">Interface List</span><br><span class=\"line\"> 15...xx xx xx xx xx xx ......Realtek PCIe GbE Family Controller</span><br><span class=\"line\"> 32...xx xx xx xx xx xx ......Microsoft Wi-Fi Direct Virtual Adapter</span><br><span class=\"line\"> 16...xx xx xx xx xx xx ......Realtek 8821CE Wireless LAN 802.11ac PCI-E NIC</span><br><span class=\"line\">  1...........................Software Loopback Interface 1</span><br><span class=\"line\">===========================================================================</span><br><span class=\"line\"></span><br><span class=\"line\">IPv4 Route Table</span><br><span class=\"line\">===========================================================================</span><br><span class=\"line\">Active Routes:</span><br><span class=\"line\">Network Destination        Netmask          Gateway       Interface  Metric</span><br><span class=\"line\">          0.0.0.0          0.0.0.0    192.168.137.1  192.168.137.101    281</span><br><span class=\"line\">          0.0.0.0          0.0.0.0      192.168.8.1    192.168.8.101     50</span><br><span class=\"line\">        127.0.0.0        255.0.0.0         On-link         127.0.0.1    331</span><br><span class=\"line\">        127.0.0.1  255.255.255.255         On-link         127.0.0.1    331</span><br><span class=\"line\">  127.255.255.255  255.255.255.255         On-link         127.0.0.1    331</span><br><span class=\"line\">      192.168.8.0    255.255.255.0         On-link     192.168.8.101    306</span><br><span class=\"line\">    192.168.8.101  255.255.255.255         On-link     192.168.8.101    306</span><br><span class=\"line\">    192.168.8.255  255.255.255.255         On-link     192.168.8.101    306</span><br><span class=\"line\">    192.168.137.0    255.255.255.0         On-link   192.168.137.101    281</span><br><span class=\"line\">  192.168.137.101  255.255.255.255         On-link   192.168.137.101    281</span><br><span class=\"line\">  192.168.137.255  255.255.255.255         On-link   192.168.137.101    281</span><br><span class=\"line\">        224.0.0.0        240.0.0.0         On-link         127.0.0.1    331</span><br><span class=\"line\">        224.0.0.0        240.0.0.0         On-link     192.168.8.101    306</span><br><span class=\"line\">        224.0.0.0        240.0.0.0         On-link   192.168.137.101    281</span><br><span class=\"line\">  255.255.255.255  255.255.255.255         On-link         127.0.0.1    331</span><br><span class=\"line\">  255.255.255.255  255.255.255.255         On-link     192.168.8.101    306</span><br><span class=\"line\">  255.255.255.255  255.255.255.255         On-link   192.168.137.101    281</span><br><span class=\"line\">===========================================================================</span><br><span class=\"line\">Persistent Routes:</span><br><span class=\"line\">  Network Address          Netmask  Gateway Address  Metric</span><br><span class=\"line\">          0.0.0.0          0.0.0.0    192.168.137.1  Default</span><br><span class=\"line\">===========================================================================</span><br></pre></td></tr></table></figure>\r\n<p>可以看到针对目的网段 <code>0.0.0.0</code>，活动路由中存在 2 条路由设定。Windows 下默认网关是指发往 <code>0.0.0.0</code> 缺省网段的地址，其目的地为所有未知路由的网段，所以设置了 2 个默认网关之后，其中的一个网关将被启用，而另外一个将作为冗余。所以在浏览器中试图访问内网时，例如访问 IP 为 <code>10.30.10.101</code>，系统在 2 条路由中挑选一条进行访问，系统会偏向跳数（Metric）较小的路由进行访问，在测试中的情况即为网关为外网的这条路由，导致内网无法访问。</p>\r\n<p><strong>解决方案</strong></p>\r\n<ul>\r\n<li>针对 <code>0.0.0.0</code> 网段进行针对性设置，如默认网段走外网 <code>192.168.8.1</code>，而内网网段走内网 <code>192.168.137.1</code></li>\r\n<li>针对内网网段，设定网关为内网 <code>192.168.137.1</code></li>\r\n</ul>\r\n<p>例如，公司内网网段为 <code>10.30.*.*</code>，首先删除路由为 <code>0.0.0.0</code> 的 2 条记录，并添加默认网段的路由网关为 <code>192.168.8.1</code>，内网网段的路由网关为 <code>192.168.137.1</code>。需要注意的是命令中的<strong>接口号</strong>是否与实际情况相对应。</p>\r\n<figure class=\"highlight bat\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">route delete          <span class=\"number\">0</span>.<span class=\"number\">0</span>.<span class=\"number\">0</span>.<span class=\"number\">0</span></span><br><span class=\"line\">route add -p          <span class=\"number\">0</span>.<span class=\"number\">0</span>.<span class=\"number\">0</span>.<span class=\"number\">0</span>  mask        <span class=\"number\">0</span>.<span class=\"number\">0</span>.<span class=\"number\">0</span>.<span class=\"number\">0</span>      <span class=\"number\">192</span>.<span class=\"number\">168</span>.<span class=\"number\">8</span>.<span class=\"number\">1</span>   <span class=\"keyword\">IF</span> <span class=\"number\">16</span></span><br><span class=\"line\">route add -p        <span class=\"number\">10</span>.<span class=\"number\">30</span>.<span class=\"number\">0</span>.<span class=\"number\">0</span>  mask    <span class=\"number\">255</span>.<span class=\"number\">255</span>.<span class=\"number\">0</span>.<span class=\"number\">0</span>    <span class=\"number\">192</span>.<span class=\"number\">168</span>.<span class=\"number\">137</span>.<span class=\"number\">1</span>   <span class=\"keyword\">IF</span> <span class=\"number\">15</span></span><br><span class=\"line\">route add -p    <span class=\"number\">192</span>.<span class=\"number\">168</span>.<span class=\"number\">137</span>.<span class=\"number\">0</span>  mask  <span class=\"number\">255</span>.<span class=\"number\">255</span>.<span class=\"number\">255</span>.<span class=\"number\">0</span>    <span class=\"number\">192</span>.<span class=\"number\">168</span>.<span class=\"number\">137</span>.<span class=\"number\">1</span>   <span class=\"keyword\">IF</span> <span class=\"number\">15</span></span><br></pre></td></tr></table></figure>\r\n<p>设定后的路由表：</p>\r\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">IPv4 Route Table</span><br><span class=\"line\">===========================================================================</span><br><span class=\"line\">Active Routes:</span><br><span class=\"line\">Network Destination        Netmask          Gateway       Interface  Metric</span><br><span class=\"line\">          0.0.0.0          0.0.0.0      192.168.8.1    192.168.8.101     51</span><br><span class=\"line\">        10.30.0.0      255.255.0.0    192.168.137.1  192.168.137.101     26</span><br><span class=\"line\">        127.0.0.0        255.0.0.0         On-link         127.0.0.1    331</span><br><span class=\"line\">        127.0.0.1  255.255.255.255         On-link         127.0.0.1    331</span><br><span class=\"line\">  127.255.255.255  255.255.255.255         On-link         127.0.0.1    331</span><br><span class=\"line\">      192.168.8.0    255.255.255.0         On-link     192.168.8.101    306</span><br><span class=\"line\">    192.168.8.101  255.255.255.255         On-link     192.168.8.101    306</span><br><span class=\"line\">    192.168.8.255  255.255.255.255         On-link     192.168.8.101    306</span><br><span class=\"line\">    192.168.137.0    255.255.255.0    192.168.137.1  192.168.137.101     26</span><br><span class=\"line\">  192.168.137.101  255.255.255.255         On-link   192.168.137.101    281</span><br><span class=\"line\">        224.0.0.0        240.0.0.0         On-link         127.0.0.1    331</span><br><span class=\"line\">        224.0.0.0        240.0.0.0         On-link     192.168.8.101    306</span><br><span class=\"line\">        224.0.0.0        240.0.0.0         On-link   192.168.137.101    281</span><br><span class=\"line\">  255.255.255.255  255.255.255.255         On-link         127.0.0.1    331</span><br><span class=\"line\">  255.255.255.255  255.255.255.255         On-link     192.168.8.101    306</span><br><span class=\"line\">  255.255.255.255  255.255.255.255         On-link   192.168.137.101    281</span><br><span class=\"line\">===========================================================================</span><br><span class=\"line\">Persistent Routes:</span><br><span class=\"line\">  Network Address          Netmask  Gateway Address  Metric</span><br><span class=\"line\">    192.168.137.0    255.255.255.0    192.168.137.1       1</span><br><span class=\"line\">        10.30.0.0      255.255.0.0    192.168.137.1       1</span><br><span class=\"line\">          0.0.0.0          0.0.0.0      192.168.8.1       1</span><br></pre></td></tr></table></figure>\r\n<h2 id=\"gui-程序设定路由表\">GUI 程序设定路由表</h2>\r\n<blockquote>\r\n<p><a href=\"https://www.nirsoft.net/utils/network_route_view.html\" target=\"_blank\" rel=\"noopener\">NetRouteView - Network Route Utility for Windows</a></p>\r\n</blockquote>\r\n","site":{"data":{}},"excerpt":"<p>经常遇到这样的情形：办公网与外网不通，办公时如需连外网查资料，不得不来回切换网络或通过其他设备上外网再回到办公电脑前，来回折腾苦不堪言。自然产生需求：同一台设备如何同时连接办公内网及外网？</p>","more":"<h2 id=\"实验配置\">实验配置</h2>\r\n<ul>\r\n<li>内网端：办公网口 / 可分享网络的办公用电脑</li>\r\n<li>外网端：连通外网的路由器 / 热点 / 移动设备 USB 分享 / 其他可连至外网的设备或信号</li>\r\n<li>多网卡计算机</li>\r\n</ul>\r\n<p>其中<strong>内网端</strong>可为办公网口，通过网线接入目标笔记本；但一般情况下公司会提供办公专用笔记本，通过网络共享技术，可将办公网络共享给通过网线与之相连的设备。<strong>外网端</strong>顾名思义，可使目标笔记本上外网的设备或手段。多网卡设备中的「多网卡」可以认为是以太网（Ethernet）及无线网（Wi-Fi）或其他计算机中的网络设备。</p>\r\n<h2 id=\"实验场景一个人电脑通过办公电脑上公司内网\">实验场景一：个人电脑通过办公电脑上公司内网</h2>\r\n<blockquote>\r\n<p>首先从简单的场景实验开始：办公电脑 A 通过 Wi-Fi 连接公司内网，并通过网线与个人电脑 B 相连。</p>\r\n</blockquote>\r\n<p>将办公电脑 A 中网络适配器设置的 Wi-Fi 适配器（设备名可能不同）共享打开：属性 - 共享 - 勾选允许网络用户通过该电脑连接至网络。此时电脑 A 的以太网适配器会将 IP 设置为 <code>192.168.137.1</code>。</p>\r\n<p>在电脑 B 中的以太网设置中：</p>\r\n<ul>\r\n<li>自动获取 IP 地址 / DNS 服务器地址</li>\r\n<li>如需固定 IP 地址，则需将默认网关及 DNS 服务器设置为 <code>192.168.137.1</code></li>\r\n</ul>\r\n<h2 id=\"实验场景二设置个人电脑内网外网均可访问\">实验场景二：设置个人电脑内网外网均可访问</h2>\r\n<blockquote>\r\n<p>有了实验一的经验，可否简单地将外网网线接入个人电脑，并成功访问外网及内网？</p>\r\n</blockquote>\r\n<p>此时打开个人电脑 Wi-Fi，发现外网可访问，但实验一中的内网网址无法访问了。<strong>管理员</strong>权限下在 <code>cmd</code> 中输入</p>\r\n<!--�147-->\r\n<p>可获取路由表信息（IPv4）：</p>\r\n<!--�148-->\r\n<p>可以看到针对目的网段 <code>0.0.0.0</code>，活动路由中存在 2 条路由设定。Windows 下默认网关是指发往 <code>0.0.0.0</code> 缺省网段的地址，其目的地为所有未知路由的网段，所以设置了 2 个默认网关之后，其中的一个网关将被启用，而另外一个将作为冗余。所以在浏览器中试图访问内网时，例如访问 IP 为 <code>10.30.10.101</code>，系统在 2 条路由中挑选一条进行访问，系统会偏向跳数（Metric）较小的路由进行访问，在测试中的情况即为网关为外网的这条路由，导致内网无法访问。</p>\r\n<p><strong>解决方案</strong></p>\r\n<ul>\r\n<li>针对 <code>0.0.0.0</code> 网段进行针对性设置，如默认网段走外网 <code>192.168.8.1</code>，而内网网段走内网 <code>192.168.137.1</code></li>\r\n<li>针对内网网段，设定网关为内网 <code>192.168.137.1</code></li>\r\n</ul>\r\n<p>例如，公司内网网段为 <code>10.30.*.*</code>，首先删除路由为 <code>0.0.0.0</code> 的 2 条记录，并添加默认网段的路由网关为 <code>192.168.8.1</code>，内网网段的路由网关为 <code>192.168.137.1</code>。需要注意的是命令中的<strong>接口号</strong>是否与实际情况相对应。</p>\r\n<!--�149-->\r\n<p>设定后的路由表：</p>\r\n<!--�150-->\r\n<h2 id=\"gui-程序设定路由表\">GUI 程序设定路由表</h2>\r\n<blockquote>\r\n<p><a href=\"https://www.nirsoft.net/utils/network_route_view.html\" target=\"_blank\" rel=\"noopener\">NetRouteView - Network Route Utility for Windows</a></p>\r\n</blockquote>"},{"title":"「转」Shell 脚本中的颜色","date":"2017-08-24T02:47:03.000Z","nocopyright":true,"_content":"\n\n> 链接: [Shell Colors: colorizing shell scripts][link]\n\nShell scripts commonly used ANSI escape codes for color output.\nFollowing table shows Numbers representing colors in Escape Sequences.\n\n<!-- more -->\n\n| Color   | Foreground | Background |\n| :---:   | :--------: | :--------: |\n| Black   | 30         | 40         |\n| Red     | 31         | 41         |\n| Green   | 32         | 42         |\n| Yellow  | 33         | 43         |\n| Blue    | 34         | 44         |\n| Magenta | 35         | 45         |\n| Cyan    | 36         | 46         |\n| White   | 37         | 47         |\n\nThe numbers in the above table work for xterm terminal.Result may vary\nfor other terminal emulators.\n\nUse the following template for writing colored text.\n\n```bash\necho -e \"\\033[COLORm Sample text\"\n```\n\nThe `\\033[` begins the escape sequence. You can also use `\\e[` instead\nof `\\033[`. COLOR specifies a foreground color, according to the table\nabove.The `m` terminates escape sequence, and text begins immediately\nafter that.\n\n> **Note**: With an echo, the -e option enables the escape sequences. You can\n> also use printf instead of echo.\n\n```bash\nprintf \"\\e[COLORm sample text\\n\"\n```\n\nTo print Green text\n\n```bash\necho -e \"\\033[32m Hello World\"\n```\n\nor\n\n```bash\nprintf \"\\e[32m Hello World\"\n```\n\nThe problem with above statement is that the blue color that starts\nwith the 32 color code is never switched back to the regular color, so\nany text you type after the prompt and even prompt also is still in the\nGreen color.\n\nTo return to the plain, normal mode, we have yet another sequence.\n\n```bash\necho -e \"\\033[0m\"\n```\n\nNow you won't see anything new on the screen, as this echo statement\nwas not passed any string to display. But it has done its job, which\nwas to restore the normal viewing mode. Whatever yor type now will be\navoid of any fancy effects.\n\nEscape sequence also allow you to control the manner in which\ncharacters are displayed on the screen.\n\nThe following table summarizes numbers representing text attributes\nin Escape Sequences.\n\n| ANSI CODE | Meaning                  |\n| :-------: | :-----:                  |\n| 0         | Normal Characters        |\n| 1         | Bold Characters          |\n| 4         | Underlined Characters    |\n| 5         | Blinking Characters      |\n| 7         | Reverse video Characters |\n\n> **Note**: Blink attribute doesn't work in any terminal emulator, but it\n> will work on the console.\n\nCombining all these Escape Sequences, you can get more fancy effect.\nUse the following template for writing colored text on a colored\nbackground.\n\n```bash\necho -e \"\\033[COLOR1;COLOR2m sample text\\033[0m\"\n```\n\nThe semicolon separated numbers \"COLOR1\" and \"COLOR2\" specify a\nforeground and a background color.The order of the numbers does not\nmatter, since the foreground and background numbers fall in non-\noverlapping ranges. `m` terminates the escape sequence, and the text\nbegins immediately after that.Although setting the colors separately\nalso work (i.e. `\\033[44m\\033[32m`).\n\nThere are some differences between colors when combining colors with\nbold text attribute.\n\nThe following table summarises these differences.\n\n| Bold off | color      | Bold on | color        |\n| :------: | :---:      | :-----: | :---:        |\n| 0;30     | Balck      | 1;30    | Dark Gray    |\n| 0;31     | Red        | 1;31    | Dark Red     |\n| 0;32     | Green      | 1;32    | Dark Green   |\n| 0;33     | Brown      | 1;33    | Yellow       |\n| 0;34     | Blue       | 1;34    | Dark Blue    |\n| 0;35     | Magenta    | 1;35    | Dark Magenta |\n| 0;36     | Cyan       | 1;30    | Dark Cyan    |\n| 0;37     | Light Gray | 1;30    | White        |\n\nThe following shell script prints all the colors and codes on the screen.\n\n```bash\n#!/bin/bash\n# This script echoes colors and codes\n\necho -e \"\\n\\033[4;31mLight Colors\\033[0m  \\t\\t\\033[1;4;31mDark Colors\\033[0m\"\necho -e \"\\e[0;30;47m Black    \\e[0m 0;30m \\t\\e[1;30;40m Dark Gray  \\e[0m 1;30m\"\necho -e \"\\e[0;31;47m Red      \\e[0m 0;31m \\t\\e[1;31;40m Dark Red   \\e[0m 1;31m\"\necho -e \"\\e[0;32;47m Green    \\e[0m 0;32m \\t\\e[1;32;40m Dark Green \\e[0m 1;32m\"\necho -e \"\\e[0;33;47m Brown    \\e[0m 0;33m \\t\\e[1;33;40m Yellow     \\e[0m 1;33m\"\necho -e \"\\e[0;34;47m Blue     \\e[0m 0;34m \\t\\e[1;34;40m Dark Blue  \\e[0m 1;34m\"\necho -e \"\\e[0;35;47m Magenta  \\e[0m 0;35m \\t\\e[1;35;40m DarkMagenta\\e[0m 1;35m\"\necho -e \"\\e[0;36;47m Cyan     \\e[0m 0;36m \\t\\e[1;36;40m Dark Cyan  \\e[0m 1;36m\"\necho -e \"\\e[0;37;47m LightGray\\e[0m 0;37m \\t\\e[1;37;40m White      \\e[0m 1;37m\"\n```\n\nOUTPUT:\n\n![](/img/shell-colors.png)\n\n### Some examples\n\nBlock background and white text\n\n```bash\necho -e \"\\033[40;37m Hello World\\033[0m\"\n```\n\nReverse video text attribute option interchanges fg and bg colors.\nBellow statement prints block on white\n\n```bash\necho -e \"\\033[40;37;7m Hello World\\033[0m\"\necho -e \"\\033[33;44m Yellow text on blue background\\033[0m\"\necho -e \"\\033[1;33;44m Bold yellow text on blue background\\033[0m\"\necho -e \"\\033[1;4;33;44mBold yellow underlined text on blue background\\033[0m\"\n```\n\nThe `tput` command:\n\n> Other than echo there is a command called tput using which we\n> can control the way the output is displayed on the screen.But it is\n> less flexible than ANSI escape sequences.\n\n### 补充控制选项说明\n\n```\n\\033[0m            关闭所有属性\n\\033[1m            设置高亮度\n\\033[4m            下划线\n\\033[5m            闪烁\n\\033[7m            反显\n\\033[8m            消隐\n\\033[30m - \\33[37m 设置前景色\n\\033[40m - \\33[47m 设置背景色\n\\033[nA            光标上移n行\n\\033[nB            光标下移n行\n\\033[nC            光标右移n行\n\\033[nD            光标左移n行\n\\033[y;xH          设置光标位置\n\\033[2J            清屏\n\\033[K             清除从光标到行尾的内容\n\\033[s             保存光标位置\n\\033[u             恢复光标位置\n\\033[?25l          隐藏光标\n\\033[?25h          显示光标\n```\n\n[link]: http://www.bashguru.com/2010/01/shell-colors-colorizing-shell-scripts.html\n","source":"_posts/shell-colors-colorizing-shell-scripts.md","raw":"---\ntitle: 「转」Shell 脚本中的颜色\ndate: 2017-8-24 10:47:03\ntags:\n    - Shell\ncategories: Memos\nnocopyright: true\n---\n\n\n> 链接: [Shell Colors: colorizing shell scripts][link]\n\nShell scripts commonly used ANSI escape codes for color output.\nFollowing table shows Numbers representing colors in Escape Sequences.\n\n<!-- more -->\n\n| Color   | Foreground | Background |\n| :---:   | :--------: | :--------: |\n| Black   | 30         | 40         |\n| Red     | 31         | 41         |\n| Green   | 32         | 42         |\n| Yellow  | 33         | 43         |\n| Blue    | 34         | 44         |\n| Magenta | 35         | 45         |\n| Cyan    | 36         | 46         |\n| White   | 37         | 47         |\n\nThe numbers in the above table work for xterm terminal.Result may vary\nfor other terminal emulators.\n\nUse the following template for writing colored text.\n\n```bash\necho -e \"\\033[COLORm Sample text\"\n```\n\nThe `\\033[` begins the escape sequence. You can also use `\\e[` instead\nof `\\033[`. COLOR specifies a foreground color, according to the table\nabove.The `m` terminates escape sequence, and text begins immediately\nafter that.\n\n> **Note**: With an echo, the -e option enables the escape sequences. You can\n> also use printf instead of echo.\n\n```bash\nprintf \"\\e[COLORm sample text\\n\"\n```\n\nTo print Green text\n\n```bash\necho -e \"\\033[32m Hello World\"\n```\n\nor\n\n```bash\nprintf \"\\e[32m Hello World\"\n```\n\nThe problem with above statement is that the blue color that starts\nwith the 32 color code is never switched back to the regular color, so\nany text you type after the prompt and even prompt also is still in the\nGreen color.\n\nTo return to the plain, normal mode, we have yet another sequence.\n\n```bash\necho -e \"\\033[0m\"\n```\n\nNow you won't see anything new on the screen, as this echo statement\nwas not passed any string to display. But it has done its job, which\nwas to restore the normal viewing mode. Whatever yor type now will be\navoid of any fancy effects.\n\nEscape sequence also allow you to control the manner in which\ncharacters are displayed on the screen.\n\nThe following table summarizes numbers representing text attributes\nin Escape Sequences.\n\n| ANSI CODE | Meaning                  |\n| :-------: | :-----:                  |\n| 0         | Normal Characters        |\n| 1         | Bold Characters          |\n| 4         | Underlined Characters    |\n| 5         | Blinking Characters      |\n| 7         | Reverse video Characters |\n\n> **Note**: Blink attribute doesn't work in any terminal emulator, but it\n> will work on the console.\n\nCombining all these Escape Sequences, you can get more fancy effect.\nUse the following template for writing colored text on a colored\nbackground.\n\n```bash\necho -e \"\\033[COLOR1;COLOR2m sample text\\033[0m\"\n```\n\nThe semicolon separated numbers \"COLOR1\" and \"COLOR2\" specify a\nforeground and a background color.The order of the numbers does not\nmatter, since the foreground and background numbers fall in non-\noverlapping ranges. `m` terminates the escape sequence, and the text\nbegins immediately after that.Although setting the colors separately\nalso work (i.e. `\\033[44m\\033[32m`).\n\nThere are some differences between colors when combining colors with\nbold text attribute.\n\nThe following table summarises these differences.\n\n| Bold off | color      | Bold on | color        |\n| :------: | :---:      | :-----: | :---:        |\n| 0;30     | Balck      | 1;30    | Dark Gray    |\n| 0;31     | Red        | 1;31    | Dark Red     |\n| 0;32     | Green      | 1;32    | Dark Green   |\n| 0;33     | Brown      | 1;33    | Yellow       |\n| 0;34     | Blue       | 1;34    | Dark Blue    |\n| 0;35     | Magenta    | 1;35    | Dark Magenta |\n| 0;36     | Cyan       | 1;30    | Dark Cyan    |\n| 0;37     | Light Gray | 1;30    | White        |\n\nThe following shell script prints all the colors and codes on the screen.\n\n```bash\n#!/bin/bash\n# This script echoes colors and codes\n\necho -e \"\\n\\033[4;31mLight Colors\\033[0m  \\t\\t\\033[1;4;31mDark Colors\\033[0m\"\necho -e \"\\e[0;30;47m Black    \\e[0m 0;30m \\t\\e[1;30;40m Dark Gray  \\e[0m 1;30m\"\necho -e \"\\e[0;31;47m Red      \\e[0m 0;31m \\t\\e[1;31;40m Dark Red   \\e[0m 1;31m\"\necho -e \"\\e[0;32;47m Green    \\e[0m 0;32m \\t\\e[1;32;40m Dark Green \\e[0m 1;32m\"\necho -e \"\\e[0;33;47m Brown    \\e[0m 0;33m \\t\\e[1;33;40m Yellow     \\e[0m 1;33m\"\necho -e \"\\e[0;34;47m Blue     \\e[0m 0;34m \\t\\e[1;34;40m Dark Blue  \\e[0m 1;34m\"\necho -e \"\\e[0;35;47m Magenta  \\e[0m 0;35m \\t\\e[1;35;40m DarkMagenta\\e[0m 1;35m\"\necho -e \"\\e[0;36;47m Cyan     \\e[0m 0;36m \\t\\e[1;36;40m Dark Cyan  \\e[0m 1;36m\"\necho -e \"\\e[0;37;47m LightGray\\e[0m 0;37m \\t\\e[1;37;40m White      \\e[0m 1;37m\"\n```\n\nOUTPUT:\n\n![](/img/shell-colors.png)\n\n### Some examples\n\nBlock background and white text\n\n```bash\necho -e \"\\033[40;37m Hello World\\033[0m\"\n```\n\nReverse video text attribute option interchanges fg and bg colors.\nBellow statement prints block on white\n\n```bash\necho -e \"\\033[40;37;7m Hello World\\033[0m\"\necho -e \"\\033[33;44m Yellow text on blue background\\033[0m\"\necho -e \"\\033[1;33;44m Bold yellow text on blue background\\033[0m\"\necho -e \"\\033[1;4;33;44mBold yellow underlined text on blue background\\033[0m\"\n```\n\nThe `tput` command:\n\n> Other than echo there is a command called tput using which we\n> can control the way the output is displayed on the screen.But it is\n> less flexible than ANSI escape sequences.\n\n### 补充控制选项说明\n\n```\n\\033[0m            关闭所有属性\n\\033[1m            设置高亮度\n\\033[4m            下划线\n\\033[5m            闪烁\n\\033[7m            反显\n\\033[8m            消隐\n\\033[30m - \\33[37m 设置前景色\n\\033[40m - \\33[47m 设置背景色\n\\033[nA            光标上移n行\n\\033[nB            光标下移n行\n\\033[nC            光标右移n行\n\\033[nD            光标左移n行\n\\033[y;xH          设置光标位置\n\\033[2J            清屏\n\\033[K             清除从光标到行尾的内容\n\\033[s             保存光标位置\n\\033[u             恢复光标位置\n\\033[?25l          隐藏光标\n\\033[?25h          显示光标\n```\n\n[link]: http://www.bashguru.com/2010/01/shell-colors-colorizing-shell-scripts.html\n","slug":"shell-colors-colorizing-shell-scripts","published":1,"updated":"2023-03-09T16:09:38.284Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u3372003bp4x045hyehx9","content":"<blockquote>\r\n<p>链接: <a href=\"http://www.bashguru.com/2010/01/shell-colors-colorizing-shell-scripts.html\" target=\"_blank\" rel=\"noopener\">Shell Colors: colorizing shell scripts</a></p>\r\n</blockquote>\r\n<p>Shell scripts commonly used ANSI escape codes for color output. Following table shows Numbers representing colors in Escape Sequences.</p>\r\n<a id=\"more\"></a>\r\n<table>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: center;\">Color</th>\r\n<th style=\"text-align: center;\">Foreground</th>\r\n<th style=\"text-align: center;\">Background</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">Black</td>\r\n<td style=\"text-align: center;\">30</td>\r\n<td style=\"text-align: center;\">40</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\">Red</td>\r\n<td style=\"text-align: center;\">31</td>\r\n<td style=\"text-align: center;\">41</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">Green</td>\r\n<td style=\"text-align: center;\">32</td>\r\n<td style=\"text-align: center;\">42</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\">Yellow</td>\r\n<td style=\"text-align: center;\">33</td>\r\n<td style=\"text-align: center;\">43</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">Blue</td>\r\n<td style=\"text-align: center;\">34</td>\r\n<td style=\"text-align: center;\">44</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\">Magenta</td>\r\n<td style=\"text-align: center;\">35</td>\r\n<td style=\"text-align: center;\">45</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">Cyan</td>\r\n<td style=\"text-align: center;\">36</td>\r\n<td style=\"text-align: center;\">46</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\">White</td>\r\n<td style=\"text-align: center;\">37</td>\r\n<td style=\"text-align: center;\">47</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p>The numbers in the above table work for xterm terminal.Result may vary for other terminal emulators.</p>\r\n<p>Use the following template for writing colored text.</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"\\033[COLORm Sample text\"</span></span><br></pre></td></tr></table></figure>\r\n<p>The <code>\\033[</code> begins the escape sequence. You can also use <code>\\e[</code> instead of <code>\\033[</code>. COLOR specifies a foreground color, according to the table above.The <code>m</code> terminates escape sequence, and text begins immediately after that.</p>\r\n<blockquote>\r\n<p><strong>Note</strong>: With an echo, the -e option enables the escape sequences. You can also use printf instead of echo.</p>\r\n</blockquote>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">printf</span> <span class=\"string\">\"\\e[COLORm sample text\\n\"</span></span><br></pre></td></tr></table></figure>\r\n<p>To print Green text</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"\\033[32m Hello World\"</span></span><br></pre></td></tr></table></figure>\r\n<p>or</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">printf</span> <span class=\"string\">\"\\e[32m Hello World\"</span></span><br></pre></td></tr></table></figure>\r\n<p>The problem with above statement is that the blue color that starts with the 32 color code is never switched back to the regular color, so any text you type after the prompt and even prompt also is still in the Green color.</p>\r\n<p>To return to the plain, normal mode, we have yet another sequence.</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"\\033[0m\"</span></span><br></pre></td></tr></table></figure>\r\n<p>Now you won’t see anything new on the screen, as this echo statement was not passed any string to display. But it has done its job, which was to restore the normal viewing mode. Whatever yor type now will be avoid of any fancy effects.</p>\r\n<p>Escape sequence also allow you to control the manner in which characters are displayed on the screen.</p>\r\n<p>The following table summarizes numbers representing text attributes in Escape Sequences.</p>\r\n<table>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: center;\">ANSI CODE</th>\r\n<th style=\"text-align: center;\">Meaning</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">Normal Characters</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\">1</td>\r\n<td style=\"text-align: center;\">Bold Characters</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">4</td>\r\n<td style=\"text-align: center;\">Underlined Characters</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\">5</td>\r\n<td style=\"text-align: center;\">Blinking Characters</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">7</td>\r\n<td style=\"text-align: center;\">Reverse video Characters</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<blockquote>\r\n<p><strong>Note</strong>: Blink attribute doesn’t work in any terminal emulator, but it will work on the console.</p>\r\n</blockquote>\r\n<p>Combining all these Escape Sequences, you can get more fancy effect. Use the following template for writing colored text on a colored background.</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"\\033[COLOR1;COLOR2m sample text\\033[0m\"</span></span><br></pre></td></tr></table></figure>\r\n<p>The semicolon separated numbers “COLOR1” and “COLOR2” specify a foreground and a background color.The order of the numbers does not matter, since the foreground and background numbers fall in non- overlapping ranges. <code>m</code> terminates the escape sequence, and the text begins immediately after that.Although setting the colors separately also work (i.e. <code>\\033[44m\\033[32m</code>).</p>\r\n<p>There are some differences between colors when combining colors with bold text attribute.</p>\r\n<p>The following table summarises these differences.</p>\r\n<table>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: center;\">Bold off</th>\r\n<th style=\"text-align: center;\">color</th>\r\n<th style=\"text-align: center;\">Bold on</th>\r\n<th style=\"text-align: center;\">color</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">0;30</td>\r\n<td style=\"text-align: center;\">Balck</td>\r\n<td style=\"text-align: center;\">1;30</td>\r\n<td style=\"text-align: center;\">Dark Gray</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\">0;31</td>\r\n<td style=\"text-align: center;\">Red</td>\r\n<td style=\"text-align: center;\">1;31</td>\r\n<td style=\"text-align: center;\">Dark Red</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">0;32</td>\r\n<td style=\"text-align: center;\">Green</td>\r\n<td style=\"text-align: center;\">1;32</td>\r\n<td style=\"text-align: center;\">Dark Green</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\">0;33</td>\r\n<td style=\"text-align: center;\">Brown</td>\r\n<td style=\"text-align: center;\">1;33</td>\r\n<td style=\"text-align: center;\">Yellow</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">0;34</td>\r\n<td style=\"text-align: center;\">Blue</td>\r\n<td style=\"text-align: center;\">1;34</td>\r\n<td style=\"text-align: center;\">Dark Blue</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\">0;35</td>\r\n<td style=\"text-align: center;\">Magenta</td>\r\n<td style=\"text-align: center;\">1;35</td>\r\n<td style=\"text-align: center;\">Dark Magenta</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">0;36</td>\r\n<td style=\"text-align: center;\">Cyan</td>\r\n<td style=\"text-align: center;\">1;30</td>\r\n<td style=\"text-align: center;\">Dark Cyan</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\">0;37</td>\r\n<td style=\"text-align: center;\">Light Gray</td>\r\n<td style=\"text-align: center;\">1;30</td>\r\n<td style=\"text-align: center;\">White</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p>The following shell script prints all the colors and codes on the screen.</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\"># This script echoes colors and codes</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"\\n\\033[4;31mLight Colors\\033[0m  \\t\\t\\033[1;4;31mDark Colors\\033[0m\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"\\e[0;30;47m Black    \\e[0m 0;30m \\t\\e[1;30;40m Dark Gray  \\e[0m 1;30m\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"\\e[0;31;47m Red      \\e[0m 0;31m \\t\\e[1;31;40m Dark Red   \\e[0m 1;31m\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"\\e[0;32;47m Green    \\e[0m 0;32m \\t\\e[1;32;40m Dark Green \\e[0m 1;32m\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"\\e[0;33;47m Brown    \\e[0m 0;33m \\t\\e[1;33;40m Yellow     \\e[0m 1;33m\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"\\e[0;34;47m Blue     \\e[0m 0;34m \\t\\e[1;34;40m Dark Blue  \\e[0m 1;34m\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"\\e[0;35;47m Magenta  \\e[0m 0;35m \\t\\e[1;35;40m DarkMagenta\\e[0m 1;35m\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"\\e[0;36;47m Cyan     \\e[0m 0;36m \\t\\e[1;36;40m Dark Cyan  \\e[0m 1;36m\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"\\e[0;37;47m LightGray\\e[0m 0;37m \\t\\e[1;37;40m White      \\e[0m 1;37m\"</span></span><br></pre></td></tr></table></figure>\r\n<p>OUTPUT:</p>\r\n<p><img src=\"/img/shell-colors.png\"></p>\r\n<h3 id=\"some-examples\">Some examples</h3>\r\n<p>Block background and white text</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"\\033[40;37m Hello World\\033[0m\"</span></span><br></pre></td></tr></table></figure>\r\n<p>Reverse video text attribute option interchanges fg and bg colors. Bellow statement prints block on white</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"\\033[40;37;7m Hello World\\033[0m\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"\\033[33;44m Yellow text on blue background\\033[0m\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"\\033[1;33;44m Bold yellow text on blue background\\033[0m\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"\\033[1;4;33;44mBold yellow underlined text on blue background\\033[0m\"</span></span><br></pre></td></tr></table></figure>\r\n<p>The <code>tput</code> command:</p>\r\n<blockquote>\r\n<p>Other than echo there is a command called tput using which we can control the way the output is displayed on the screen.But it is less flexible than ANSI escape sequences.</p>\r\n</blockquote>\r\n<h3 id=\"补充控制选项说明\">补充控制选项说明</h3>\r\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\033[0m            关闭所有属性</span><br><span class=\"line\">\\033[1m            设置高亮度</span><br><span class=\"line\">\\033[4m            下划线</span><br><span class=\"line\">\\033[5m            闪烁</span><br><span class=\"line\">\\033[7m            反显</span><br><span class=\"line\">\\033[8m            消隐</span><br><span class=\"line\">\\033[30m - \\33[37m 设置前景色</span><br><span class=\"line\">\\033[40m - \\33[47m 设置背景色</span><br><span class=\"line\">\\033[nA            光标上移n行</span><br><span class=\"line\">\\033[nB            光标下移n行</span><br><span class=\"line\">\\033[nC            光标右移n行</span><br><span class=\"line\">\\033[nD            光标左移n行</span><br><span class=\"line\">\\033[y;xH          设置光标位置</span><br><span class=\"line\">\\033[2J            清屏</span><br><span class=\"line\">\\033[K             清除从光标到行尾的内容</span><br><span class=\"line\">\\033[s             保存光标位置</span><br><span class=\"line\">\\033[u             恢复光标位置</span><br><span class=\"line\">\\033[?25l          隐藏光标</span><br><span class=\"line\">\\033[?25h          显示光标</span><br></pre></td></tr></table></figure>\r\n","site":{"data":{}},"excerpt":"<blockquote>\r\n<p>链接: <a href=\"http://www.bashguru.com/2010/01/shell-colors-colorizing-shell-scripts.html\" target=\"_blank\" rel=\"noopener\">Shell Colors: colorizing shell scripts</a></p>\r\n</blockquote>\r\n<p>Shell scripts commonly used ANSI escape codes for color output. Following table shows Numbers representing colors in Escape Sequences.</p>","more":"<table>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: center;\">Color</th>\r\n<th style=\"text-align: center;\">Foreground</th>\r\n<th style=\"text-align: center;\">Background</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">Black</td>\r\n<td style=\"text-align: center;\">30</td>\r\n<td style=\"text-align: center;\">40</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\">Red</td>\r\n<td style=\"text-align: center;\">31</td>\r\n<td style=\"text-align: center;\">41</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">Green</td>\r\n<td style=\"text-align: center;\">32</td>\r\n<td style=\"text-align: center;\">42</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\">Yellow</td>\r\n<td style=\"text-align: center;\">33</td>\r\n<td style=\"text-align: center;\">43</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">Blue</td>\r\n<td style=\"text-align: center;\">34</td>\r\n<td style=\"text-align: center;\">44</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\">Magenta</td>\r\n<td style=\"text-align: center;\">35</td>\r\n<td style=\"text-align: center;\">45</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">Cyan</td>\r\n<td style=\"text-align: center;\">36</td>\r\n<td style=\"text-align: center;\">46</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\">White</td>\r\n<td style=\"text-align: center;\">37</td>\r\n<td style=\"text-align: center;\">47</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p>The numbers in the above table work for xterm terminal.Result may vary for other terminal emulators.</p>\r\n<p>Use the following template for writing colored text.</p>\r\n<!--�151-->\r\n<p>The <code>\\033[</code> begins the escape sequence. You can also use <code>\\e[</code> instead of <code>\\033[</code>. COLOR specifies a foreground color, according to the table above.The <code>m</code> terminates escape sequence, and text begins immediately after that.</p>\r\n<blockquote>\r\n<p><strong>Note</strong>: With an echo, the -e option enables the escape sequences. You can also use printf instead of echo.</p>\r\n</blockquote>\r\n<!--�152-->\r\n<p>To print Green text</p>\r\n<!--�153-->\r\n<p>or</p>\r\n<!--�154-->\r\n<p>The problem with above statement is that the blue color that starts with the 32 color code is never switched back to the regular color, so any text you type after the prompt and even prompt also is still in the Green color.</p>\r\n<p>To return to the plain, normal mode, we have yet another sequence.</p>\r\n<!--�155-->\r\n<p>Now you won’t see anything new on the screen, as this echo statement was not passed any string to display. But it has done its job, which was to restore the normal viewing mode. Whatever yor type now will be avoid of any fancy effects.</p>\r\n<p>Escape sequence also allow you to control the manner in which characters are displayed on the screen.</p>\r\n<p>The following table summarizes numbers representing text attributes in Escape Sequences.</p>\r\n<table>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: center;\">ANSI CODE</th>\r\n<th style=\"text-align: center;\">Meaning</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">0</td>\r\n<td style=\"text-align: center;\">Normal Characters</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\">1</td>\r\n<td style=\"text-align: center;\">Bold Characters</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">4</td>\r\n<td style=\"text-align: center;\">Underlined Characters</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\">5</td>\r\n<td style=\"text-align: center;\">Blinking Characters</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">7</td>\r\n<td style=\"text-align: center;\">Reverse video Characters</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<blockquote>\r\n<p><strong>Note</strong>: Blink attribute doesn’t work in any terminal emulator, but it will work on the console.</p>\r\n</blockquote>\r\n<p>Combining all these Escape Sequences, you can get more fancy effect. Use the following template for writing colored text on a colored background.</p>\r\n<!--�156-->\r\n<p>The semicolon separated numbers “COLOR1” and “COLOR2” specify a foreground and a background color.The order of the numbers does not matter, since the foreground and background numbers fall in non- overlapping ranges. <code>m</code> terminates the escape sequence, and the text begins immediately after that.Although setting the colors separately also work (i.e. <code>\\033[44m\\033[32m</code>).</p>\r\n<p>There are some differences between colors when combining colors with bold text attribute.</p>\r\n<p>The following table summarises these differences.</p>\r\n<table>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: center;\">Bold off</th>\r\n<th style=\"text-align: center;\">color</th>\r\n<th style=\"text-align: center;\">Bold on</th>\r\n<th style=\"text-align: center;\">color</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">0;30</td>\r\n<td style=\"text-align: center;\">Balck</td>\r\n<td style=\"text-align: center;\">1;30</td>\r\n<td style=\"text-align: center;\">Dark Gray</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\">0;31</td>\r\n<td style=\"text-align: center;\">Red</td>\r\n<td style=\"text-align: center;\">1;31</td>\r\n<td style=\"text-align: center;\">Dark Red</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">0;32</td>\r\n<td style=\"text-align: center;\">Green</td>\r\n<td style=\"text-align: center;\">1;32</td>\r\n<td style=\"text-align: center;\">Dark Green</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\">0;33</td>\r\n<td style=\"text-align: center;\">Brown</td>\r\n<td style=\"text-align: center;\">1;33</td>\r\n<td style=\"text-align: center;\">Yellow</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">0;34</td>\r\n<td style=\"text-align: center;\">Blue</td>\r\n<td style=\"text-align: center;\">1;34</td>\r\n<td style=\"text-align: center;\">Dark Blue</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\">0;35</td>\r\n<td style=\"text-align: center;\">Magenta</td>\r\n<td style=\"text-align: center;\">1;35</td>\r\n<td style=\"text-align: center;\">Dark Magenta</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">0;36</td>\r\n<td style=\"text-align: center;\">Cyan</td>\r\n<td style=\"text-align: center;\">1;30</td>\r\n<td style=\"text-align: center;\">Dark Cyan</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\">0;37</td>\r\n<td style=\"text-align: center;\">Light Gray</td>\r\n<td style=\"text-align: center;\">1;30</td>\r\n<td style=\"text-align: center;\">White</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p>The following shell script prints all the colors and codes on the screen.</p>\r\n<!--�157-->\r\n<p>OUTPUT:</p>\r\n<p><img src=\"/img/shell-colors.png\"></p>\r\n<h3 id=\"some-examples\">Some examples</h3>\r\n<p>Block background and white text</p>\r\n<!--�158-->\r\n<p>Reverse video text attribute option interchanges fg and bg colors. Bellow statement prints block on white</p>\r\n<!--�159-->\r\n<p>The <code>tput</code> command:</p>\r\n<blockquote>\r\n<p>Other than echo there is a command called tput using which we can control the way the output is displayed on the screen.But it is less flexible than ANSI escape sequences.</p>\r\n</blockquote>\r\n<h3 id=\"补充控制选项说明\">补充控制选项说明</h3>\r\n<!--�160-->"},{"title":"Windows 下安装 Anaconda3 产生的快捷方式","date":"2017-09-03T04:59:11.000Z","_content":"\n部分情况下，一些 Windows 机器安装完 Anaconda 之后不会出现快捷方式，而其快捷方式较为复杂，故记录之。\n\n {% fa warning fw %} 用户名为 `Michael`，Anaconda3 安装目录为 `D:\\Anaconda3`，若安装于其它目录，作相应修改即可。\n\n<!-- more -->\n\n## root / base 环境\n\n| Shortcuts             | Commands                                                                                                                                             | Start in                                    |\n| :----                 | :----                                                                                                                                                | :----                                         |\n| Anaconda Cloud        | `D:\\Anaconda3\\pythonw.exe -m webbrowser -t \"https://anaconda.org/\"`                                                                                  | `C:\\Users\\Michael`                            |\n| Anaconda Navigator    | `D:\\Anaconda3\\pythonw.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3 \"D:/Anaconda3/pythonw.exe\" \"D:/Anaconda3/Scripts/anaconda-navigator-script.py\"`           | `C:\\Users\\Michael\\Documents`                  |\n| Anaconda Prompt       | `%windir%\\system32\\cmd.exe \"/K\" D:\\Anaconda3\\Scripts\\activate.bat D:\\Anaconda3`                                                                      | `C:\\Users\\Michael`                            |\n| IPython               | `D:\\Anaconda3\\python.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3 \"D:/Anaconda3/python.exe\" \"D:/Anaconda3/Scripts/ipython-script.py\"`                        | `C:\\Users\\Michael`                            |\n| Jupyter Notebook      | `D:\\Anaconda3\\python.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3 \"D:/Anaconda3/python.exe\" \"D:/Anaconda3/Scripts/jupyter-notebook-script.py\" %USERPROFILE%` | `C:\\Users\\Michael`                            |\n| Jupyter QTConsole     | `D:\\Anaconda3\\pythonw.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3 \"D:/Anaconda3/pythonw.exe\" \"D:/Anaconda3/Scripts/jupyter-qtconsole-script.py\"`            | `C:\\Users\\Michael`                            |\n| Reset Spyder Settings | `D:\\Anaconda3\\python.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3 \"D:/Anaconda3/python.exe\" \"D:/Anaconda3/Scripts/spyder-script.py\" --reset`                 | `C:\\Users\\Michael`                            |\n| Spyder                | `D:\\Anaconda3\\pythonw.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3 \"D:/Anaconda3/pythonw.exe\" \"D:/Anaconda3/Scripts/spyder-script.py\"`                       | `\"C:\\Users\\Michael\\Documents\\Python Scripts\"` |\n\n## 其他环境（环境名：workspace）\n\n| Shortcuts             | Commands                                                                                                                                                                                                         | Start in                                    |\n| :----                 | :----                                                                                                                                                                                                            | :----                                         |\n| Anaconda Cloud        | `D:\\Anaconda3\\pythonw.exe -m webbrowser -t \"https://anaconda.org/\"`                                                                                                                                              | `C:\\Users\\Michael`                            |\n| Anaconda Navigator    | `D:\\Anaconda3\\envs\\workspace\\pythonw.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3\\envs\\workspace \"D:/Anaconda3/envs/workspace/pythonw.exe\" \"D:/Anaconda3/envs/workspace/Scripts/anaconda-navigator-script.py\"`           | `C:\\Users\\Michael\\Documents`                  |\n| Anaconda Prompt       | `%windir%\\system32\\cmd.exe \"/K\" D:\\Anaconda3\\Scripts\\activate.bat D:\\Anaconda3\\envs\\workspace`                                                                                                                   | `C:\\Users\\Michael`                            |\n| IPython               | `D:\\Anaconda3\\envs\\workspace\\python.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3\\envs\\workspace \"D:/Anaconda3/envs/workspace/python.exe\" \"D:/Anaconda3/envs/workspace/Scripts/ipython-script.py\"`                        | `C:\\Users\\Michael`                            |\n| Jupyter Notebook      | `D:\\Anaconda3\\envs\\workspace\\python.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3\\envs\\workspace \"D:/Anaconda3/envs/workspace/python.exe\" \"D:/Anaconda3/envs/workspace/Scripts/jupyter-notebook-script.py\" %USERPROFILE%` | `C:\\Users\\Michael`                            |\n| Jupyter QTConsole     | `D:\\Anaconda3\\envs\\workspace\\pythonw.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3\\envs\\workspace \"D:/Anaconda3/envs/workspace/pythonw.exe\" \"D:/Anaconda3/envs/workspace/Scripts/jupyter-qtconsole-script.py\"`            | `C:\\Users\\Michael`                            |\n| Reset Spyder Settings | `D:\\Anaconda3\\envs\\workspace\\python.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3\\envs\\workspace \"D:/Anaconda3/envs/workspace/python.exe\" \"D:/Anaconda3/envs/workspace/Scripts/spyder-script.py\" --reset`                 | `C:\\Users\\Michael`                            |\n| Spyder                | `D:\\Anaconda3\\envs\\workspace\\pythonw.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3\\envs\\workspace \"D:/Anaconda3/envs/workspace/pythonw.exe\" \"D:/Anaconda3/envs/workspace/Scripts/spyder-script.py\"`                       | `\"C:\\Users\\Michael\\Documents\\Python Scripts\"` |\n\n\n","source":"_posts/shortcuts-of-anaconda-on-windows.md","raw":"---\ntitle: Windows 下安装 Anaconda3 产生的快捷方式\ndate: 2017-08-34 12:59:11\ntags:\n    - Anaconda\n    - Windows\ncategories: Memos\n---\n\n部分情况下，一些 Windows 机器安装完 Anaconda 之后不会出现快捷方式，而其快捷方式较为复杂，故记录之。\n\n {% fa warning fw %} 用户名为 `Michael`，Anaconda3 安装目录为 `D:\\Anaconda3`，若安装于其它目录，作相应修改即可。\n\n<!-- more -->\n\n## root / base 环境\n\n| Shortcuts             | Commands                                                                                                                                             | Start in                                    |\n| :----                 | :----                                                                                                                                                | :----                                         |\n| Anaconda Cloud        | `D:\\Anaconda3\\pythonw.exe -m webbrowser -t \"https://anaconda.org/\"`                                                                                  | `C:\\Users\\Michael`                            |\n| Anaconda Navigator    | `D:\\Anaconda3\\pythonw.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3 \"D:/Anaconda3/pythonw.exe\" \"D:/Anaconda3/Scripts/anaconda-navigator-script.py\"`           | `C:\\Users\\Michael\\Documents`                  |\n| Anaconda Prompt       | `%windir%\\system32\\cmd.exe \"/K\" D:\\Anaconda3\\Scripts\\activate.bat D:\\Anaconda3`                                                                      | `C:\\Users\\Michael`                            |\n| IPython               | `D:\\Anaconda3\\python.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3 \"D:/Anaconda3/python.exe\" \"D:/Anaconda3/Scripts/ipython-script.py\"`                        | `C:\\Users\\Michael`                            |\n| Jupyter Notebook      | `D:\\Anaconda3\\python.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3 \"D:/Anaconda3/python.exe\" \"D:/Anaconda3/Scripts/jupyter-notebook-script.py\" %USERPROFILE%` | `C:\\Users\\Michael`                            |\n| Jupyter QTConsole     | `D:\\Anaconda3\\pythonw.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3 \"D:/Anaconda3/pythonw.exe\" \"D:/Anaconda3/Scripts/jupyter-qtconsole-script.py\"`            | `C:\\Users\\Michael`                            |\n| Reset Spyder Settings | `D:\\Anaconda3\\python.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3 \"D:/Anaconda3/python.exe\" \"D:/Anaconda3/Scripts/spyder-script.py\" --reset`                 | `C:\\Users\\Michael`                            |\n| Spyder                | `D:\\Anaconda3\\pythonw.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3 \"D:/Anaconda3/pythonw.exe\" \"D:/Anaconda3/Scripts/spyder-script.py\"`                       | `\"C:\\Users\\Michael\\Documents\\Python Scripts\"` |\n\n## 其他环境（环境名：workspace）\n\n| Shortcuts             | Commands                                                                                                                                                                                                         | Start in                                    |\n| :----                 | :----                                                                                                                                                                                                            | :----                                         |\n| Anaconda Cloud        | `D:\\Anaconda3\\pythonw.exe -m webbrowser -t \"https://anaconda.org/\"`                                                                                                                                              | `C:\\Users\\Michael`                            |\n| Anaconda Navigator    | `D:\\Anaconda3\\envs\\workspace\\pythonw.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3\\envs\\workspace \"D:/Anaconda3/envs/workspace/pythonw.exe\" \"D:/Anaconda3/envs/workspace/Scripts/anaconda-navigator-script.py\"`           | `C:\\Users\\Michael\\Documents`                  |\n| Anaconda Prompt       | `%windir%\\system32\\cmd.exe \"/K\" D:\\Anaconda3\\Scripts\\activate.bat D:\\Anaconda3\\envs\\workspace`                                                                                                                   | `C:\\Users\\Michael`                            |\n| IPython               | `D:\\Anaconda3\\envs\\workspace\\python.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3\\envs\\workspace \"D:/Anaconda3/envs/workspace/python.exe\" \"D:/Anaconda3/envs/workspace/Scripts/ipython-script.py\"`                        | `C:\\Users\\Michael`                            |\n| Jupyter Notebook      | `D:\\Anaconda3\\envs\\workspace\\python.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3\\envs\\workspace \"D:/Anaconda3/envs/workspace/python.exe\" \"D:/Anaconda3/envs/workspace/Scripts/jupyter-notebook-script.py\" %USERPROFILE%` | `C:\\Users\\Michael`                            |\n| Jupyter QTConsole     | `D:\\Anaconda3\\envs\\workspace\\pythonw.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3\\envs\\workspace \"D:/Anaconda3/envs/workspace/pythonw.exe\" \"D:/Anaconda3/envs/workspace/Scripts/jupyter-qtconsole-script.py\"`            | `C:\\Users\\Michael`                            |\n| Reset Spyder Settings | `D:\\Anaconda3\\envs\\workspace\\python.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3\\envs\\workspace \"D:/Anaconda3/envs/workspace/python.exe\" \"D:/Anaconda3/envs/workspace/Scripts/spyder-script.py\" --reset`                 | `C:\\Users\\Michael`                            |\n| Spyder                | `D:\\Anaconda3\\envs\\workspace\\pythonw.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3\\envs\\workspace \"D:/Anaconda3/envs/workspace/pythonw.exe\" \"D:/Anaconda3/envs/workspace/Scripts/spyder-script.py\"`                       | `\"C:\\Users\\Michael\\Documents\\Python Scripts\"` |\n\n\n","slug":"shortcuts-of-anaconda-on-windows","published":1,"updated":"2023-03-09T16:09:38.287Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u3373003fp4x0z1oezk20","content":"<p>部分情况下，一些 Windows 机器安装完 Anaconda 之后不会出现快捷方式，而其快捷方式较为复杂，故记录之。</p>\r\n<p><i class=\"fa fa-warning fa-fw\"></i> 用户名为 <code>Michael</code>，Anaconda3 安装目录为 <code>D:\\Anaconda3</code>，若安装于其它目录，作相应修改即可。</p>\r\n<a id=\"more\"></a>\r\n<h2 id=\"root-base-环境\">root / base 环境</h2>\r\n<table>\r\n<colgroup>\r\n<col style=\"width: 33%\">\r\n<col style=\"width: 33%\">\r\n<col style=\"width: 33%\">\r\n</colgroup>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: left;\">Shortcuts</th>\r\n<th style=\"text-align: left;\">Commands</th>\r\n<th style=\"text-align: left;\">Start in</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\">Anaconda Cloud</td>\r\n<td style=\"text-align: left;\"><code>D:\\Anaconda3\\pythonw.exe -m webbrowser -t \"https://anaconda.org/\"</code></td>\r\n<td style=\"text-align: left;\"><code>C:\\Users\\Michael</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\">Anaconda Navigator</td>\r\n<td style=\"text-align: left;\"><code>D:\\Anaconda3\\pythonw.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3 \"D:/Anaconda3/pythonw.exe\" \"D:/Anaconda3/Scripts/anaconda-navigator-script.py\"</code></td>\r\n<td style=\"text-align: left;\"><code>C:\\Users\\Michael\\Documents</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\">Anaconda Prompt</td>\r\n<td style=\"text-align: left;\"><code>%windir%\\system32\\cmd.exe \"/K\" D:\\Anaconda3\\Scripts\\activate.bat D:\\Anaconda3</code></td>\r\n<td style=\"text-align: left;\"><code>C:\\Users\\Michael</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\">IPython</td>\r\n<td style=\"text-align: left;\"><code>D:\\Anaconda3\\python.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3 \"D:/Anaconda3/python.exe\" \"D:/Anaconda3/Scripts/ipython-script.py\"</code></td>\r\n<td style=\"text-align: left;\"><code>C:\\Users\\Michael</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\">Jupyter Notebook</td>\r\n<td style=\"text-align: left;\"><code>D:\\Anaconda3\\python.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3 \"D:/Anaconda3/python.exe\" \"D:/Anaconda3/Scripts/jupyter-notebook-script.py\" %USERPROFILE%</code></td>\r\n<td style=\"text-align: left;\"><code>C:\\Users\\Michael</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\">Jupyter QTConsole</td>\r\n<td style=\"text-align: left;\"><code>D:\\Anaconda3\\pythonw.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3 \"D:/Anaconda3/pythonw.exe\" \"D:/Anaconda3/Scripts/jupyter-qtconsole-script.py\"</code></td>\r\n<td style=\"text-align: left;\"><code>C:\\Users\\Michael</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\">Reset Spyder Settings</td>\r\n<td style=\"text-align: left;\"><code>D:\\Anaconda3\\python.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3 \"D:/Anaconda3/python.exe\" \"D:/Anaconda3/Scripts/spyder-script.py\" --reset</code></td>\r\n<td style=\"text-align: left;\"><code>C:\\Users\\Michael</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\">Spyder</td>\r\n<td style=\"text-align: left;\"><code>D:\\Anaconda3\\pythonw.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3 \"D:/Anaconda3/pythonw.exe\" \"D:/Anaconda3/Scripts/spyder-script.py\"</code></td>\r\n<td style=\"text-align: left;\"><code>\"C:\\Users\\Michael\\Documents\\Python Scripts\"</code></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h2 id=\"其他环境环境名workspace\">其他环境（环境名：workspace）</h2>\r\n<table>\r\n<colgroup>\r\n<col style=\"width: 33%\">\r\n<col style=\"width: 33%\">\r\n<col style=\"width: 33%\">\r\n</colgroup>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: left;\">Shortcuts</th>\r\n<th style=\"text-align: left;\">Commands</th>\r\n<th style=\"text-align: left;\">Start in</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\">Anaconda Cloud</td>\r\n<td style=\"text-align: left;\"><code>D:\\Anaconda3\\pythonw.exe -m webbrowser -t \"https://anaconda.org/\"</code></td>\r\n<td style=\"text-align: left;\"><code>C:\\Users\\Michael</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\">Anaconda Navigator</td>\r\n<td style=\"text-align: left;\"><code>D:\\Anaconda3\\envs\\workspace\\pythonw.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3\\envs\\workspace \"D:/Anaconda3/envs/workspace/pythonw.exe\" \"D:/Anaconda3/envs/workspace/Scripts/anaconda-navigator-script.py\"</code></td>\r\n<td style=\"text-align: left;\"><code>C:\\Users\\Michael\\Documents</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\">Anaconda Prompt</td>\r\n<td style=\"text-align: left;\"><code>%windir%\\system32\\cmd.exe \"/K\" D:\\Anaconda3\\Scripts\\activate.bat D:\\Anaconda3\\envs\\workspace</code></td>\r\n<td style=\"text-align: left;\"><code>C:\\Users\\Michael</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\">IPython</td>\r\n<td style=\"text-align: left;\"><code>D:\\Anaconda3\\envs\\workspace\\python.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3\\envs\\workspace \"D:/Anaconda3/envs/workspace/python.exe\" \"D:/Anaconda3/envs/workspace/Scripts/ipython-script.py\"</code></td>\r\n<td style=\"text-align: left;\"><code>C:\\Users\\Michael</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\">Jupyter Notebook</td>\r\n<td style=\"text-align: left;\"><code>D:\\Anaconda3\\envs\\workspace\\python.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3\\envs\\workspace \"D:/Anaconda3/envs/workspace/python.exe\" \"D:/Anaconda3/envs/workspace/Scripts/jupyter-notebook-script.py\" %USERPROFILE%</code></td>\r\n<td style=\"text-align: left;\"><code>C:\\Users\\Michael</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\">Jupyter QTConsole</td>\r\n<td style=\"text-align: left;\"><code>D:\\Anaconda3\\envs\\workspace\\pythonw.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3\\envs\\workspace \"D:/Anaconda3/envs/workspace/pythonw.exe\" \"D:/Anaconda3/envs/workspace/Scripts/jupyter-qtconsole-script.py\"</code></td>\r\n<td style=\"text-align: left;\"><code>C:\\Users\\Michael</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\">Reset Spyder Settings</td>\r\n<td style=\"text-align: left;\"><code>D:\\Anaconda3\\envs\\workspace\\python.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3\\envs\\workspace \"D:/Anaconda3/envs/workspace/python.exe\" \"D:/Anaconda3/envs/workspace/Scripts/spyder-script.py\" --reset</code></td>\r\n<td style=\"text-align: left;\"><code>C:\\Users\\Michael</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\">Spyder</td>\r\n<td style=\"text-align: left;\"><code>D:\\Anaconda3\\envs\\workspace\\pythonw.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3\\envs\\workspace \"D:/Anaconda3/envs/workspace/pythonw.exe\" \"D:/Anaconda3/envs/workspace/Scripts/spyder-script.py\"</code></td>\r\n<td style=\"text-align: left;\"><code>\"C:\\Users\\Michael\\Documents\\Python Scripts\"</code></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n","site":{"data":{}},"excerpt":"<p>部分情况下，一些 Windows 机器安装完 Anaconda 之后不会出现快捷方式，而其快捷方式较为复杂，故记录之。</p>\r\n<p><i class=\"fa fa-warning fa-fw\"></i> 用户名为 <code>Michael</code>，Anaconda3 安装目录为 <code>D:\\Anaconda3</code>，若安装于其它目录，作相应修改即可。</p>","more":"<h2 id=\"root-base-环境\">root / base 环境</h2>\r\n<table>\r\n<colgroup>\r\n<col style=\"width: 33%\">\r\n<col style=\"width: 33%\">\r\n<col style=\"width: 33%\">\r\n</colgroup>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: left;\">Shortcuts</th>\r\n<th style=\"text-align: left;\">Commands</th>\r\n<th style=\"text-align: left;\">Start in</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\">Anaconda Cloud</td>\r\n<td style=\"text-align: left;\"><code>D:\\Anaconda3\\pythonw.exe -m webbrowser -t \"https://anaconda.org/\"</code></td>\r\n<td style=\"text-align: left;\"><code>C:\\Users\\Michael</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\">Anaconda Navigator</td>\r\n<td style=\"text-align: left;\"><code>D:\\Anaconda3\\pythonw.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3 \"D:/Anaconda3/pythonw.exe\" \"D:/Anaconda3/Scripts/anaconda-navigator-script.py\"</code></td>\r\n<td style=\"text-align: left;\"><code>C:\\Users\\Michael\\Documents</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\">Anaconda Prompt</td>\r\n<td style=\"text-align: left;\"><code>%windir%\\system32\\cmd.exe \"/K\" D:\\Anaconda3\\Scripts\\activate.bat D:\\Anaconda3</code></td>\r\n<td style=\"text-align: left;\"><code>C:\\Users\\Michael</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\">IPython</td>\r\n<td style=\"text-align: left;\"><code>D:\\Anaconda3\\python.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3 \"D:/Anaconda3/python.exe\" \"D:/Anaconda3/Scripts/ipython-script.py\"</code></td>\r\n<td style=\"text-align: left;\"><code>C:\\Users\\Michael</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\">Jupyter Notebook</td>\r\n<td style=\"text-align: left;\"><code>D:\\Anaconda3\\python.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3 \"D:/Anaconda3/python.exe\" \"D:/Anaconda3/Scripts/jupyter-notebook-script.py\" %USERPROFILE%</code></td>\r\n<td style=\"text-align: left;\"><code>C:\\Users\\Michael</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\">Jupyter QTConsole</td>\r\n<td style=\"text-align: left;\"><code>D:\\Anaconda3\\pythonw.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3 \"D:/Anaconda3/pythonw.exe\" \"D:/Anaconda3/Scripts/jupyter-qtconsole-script.py\"</code></td>\r\n<td style=\"text-align: left;\"><code>C:\\Users\\Michael</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\">Reset Spyder Settings</td>\r\n<td style=\"text-align: left;\"><code>D:\\Anaconda3\\python.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3 \"D:/Anaconda3/python.exe\" \"D:/Anaconda3/Scripts/spyder-script.py\" --reset</code></td>\r\n<td style=\"text-align: left;\"><code>C:\\Users\\Michael</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\">Spyder</td>\r\n<td style=\"text-align: left;\"><code>D:\\Anaconda3\\pythonw.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3 \"D:/Anaconda3/pythonw.exe\" \"D:/Anaconda3/Scripts/spyder-script.py\"</code></td>\r\n<td style=\"text-align: left;\"><code>\"C:\\Users\\Michael\\Documents\\Python Scripts\"</code></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h2 id=\"其他环境环境名workspace\">其他环境（环境名：workspace）</h2>\r\n<table>\r\n<colgroup>\r\n<col style=\"width: 33%\">\r\n<col style=\"width: 33%\">\r\n<col style=\"width: 33%\">\r\n</colgroup>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: left;\">Shortcuts</th>\r\n<th style=\"text-align: left;\">Commands</th>\r\n<th style=\"text-align: left;\">Start in</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\">Anaconda Cloud</td>\r\n<td style=\"text-align: left;\"><code>D:\\Anaconda3\\pythonw.exe -m webbrowser -t \"https://anaconda.org/\"</code></td>\r\n<td style=\"text-align: left;\"><code>C:\\Users\\Michael</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\">Anaconda Navigator</td>\r\n<td style=\"text-align: left;\"><code>D:\\Anaconda3\\envs\\workspace\\pythonw.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3\\envs\\workspace \"D:/Anaconda3/envs/workspace/pythonw.exe\" \"D:/Anaconda3/envs/workspace/Scripts/anaconda-navigator-script.py\"</code></td>\r\n<td style=\"text-align: left;\"><code>C:\\Users\\Michael\\Documents</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\">Anaconda Prompt</td>\r\n<td style=\"text-align: left;\"><code>%windir%\\system32\\cmd.exe \"/K\" D:\\Anaconda3\\Scripts\\activate.bat D:\\Anaconda3\\envs\\workspace</code></td>\r\n<td style=\"text-align: left;\"><code>C:\\Users\\Michael</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\">IPython</td>\r\n<td style=\"text-align: left;\"><code>D:\\Anaconda3\\envs\\workspace\\python.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3\\envs\\workspace \"D:/Anaconda3/envs/workspace/python.exe\" \"D:/Anaconda3/envs/workspace/Scripts/ipython-script.py\"</code></td>\r\n<td style=\"text-align: left;\"><code>C:\\Users\\Michael</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\">Jupyter Notebook</td>\r\n<td style=\"text-align: left;\"><code>D:\\Anaconda3\\envs\\workspace\\python.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3\\envs\\workspace \"D:/Anaconda3/envs/workspace/python.exe\" \"D:/Anaconda3/envs/workspace/Scripts/jupyter-notebook-script.py\" %USERPROFILE%</code></td>\r\n<td style=\"text-align: left;\"><code>C:\\Users\\Michael</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\">Jupyter QTConsole</td>\r\n<td style=\"text-align: left;\"><code>D:\\Anaconda3\\envs\\workspace\\pythonw.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3\\envs\\workspace \"D:/Anaconda3/envs/workspace/pythonw.exe\" \"D:/Anaconda3/envs/workspace/Scripts/jupyter-qtconsole-script.py\"</code></td>\r\n<td style=\"text-align: left;\"><code>C:\\Users\\Michael</code></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\">Reset Spyder Settings</td>\r\n<td style=\"text-align: left;\"><code>D:\\Anaconda3\\envs\\workspace\\python.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3\\envs\\workspace \"D:/Anaconda3/envs/workspace/python.exe\" \"D:/Anaconda3/envs/workspace/Scripts/spyder-script.py\" --reset</code></td>\r\n<td style=\"text-align: left;\"><code>C:\\Users\\Michael</code></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\">Spyder</td>\r\n<td style=\"text-align: left;\"><code>D:\\Anaconda3\\envs\\workspace\\pythonw.exe D:\\Anaconda3\\cwp.py D:\\Anaconda3\\envs\\workspace \"D:/Anaconda3/envs/workspace/pythonw.exe\" \"D:/Anaconda3/envs/workspace/Scripts/spyder-script.py\"</code></td>\r\n<td style=\"text-align: left;\"><code>\"C:\\Users\\Michael\\Documents\\Python Scripts\"</code></td>\r\n</tr>\r\n</tbody>\r\n</table>"},{"title":"Java 关于栈的简单应用","date":"2018-07-08T14:59:46.000Z","_content":"\n\n此篇为「[算法][algorithms]」一书 §1.3 中关于栈的应用部分的学习记录。\n<!-- more -->\n\n这本算法书在很多例子中使用作者开发的库 [algs4.jar][algs4.jar]。目前以 [Idea][idea] 作为 Java 开发环境，那么为什么不用 Eclipse？IDE 颜值 + [Vim 插件][ideavim] 是王道。这里提下将 `algs4.jar` 加入 `classpath` 的操作：`C-S-A-s` 或选中工程目录按 `F4`，在弹出的项目结构 (Project Structure) 中依次定位：`Modules` -`xxx`（需要操作的项目）- `Dependencies` - `{% fa plus fw %}` - `JARs or directories...`，定位至 `algs4.jar` 即可。这样就可以直接在 Java 代码中引入 jar 包了，调试运行时的命令显示如下：\n\n```plain\nD:\\Java\\jdk-10\\bin\\java -javaagent:D:\\Idea\\lib\\idea_rt.jar=xxxxx:D:\\Idea\\bin \\\n-Dfile.encoding=UTF-8 \\\n-classpath E:\\WorkingDirectory\\Projects\\Java\\Algorithms\\out\\production\\Algorithms;\\\nE:\\WorkingDirectory\\Projects\\Java\\Algorithms\\lib\\algs4.jar ch_01.Test\n```\n\n### Dijkstra 双栈算术表达式求值算法\n\n这里的代码适用范围较窄，仅支持如下格式的算术表达式：\n\n```plain\n( 1 + ( 2 + 3 ) * ( 4 * 5 ) ) )\n( ( 1 + sqrt ( 5.0 ) ) / 2.0 )\n```\n\n即运算符、左右括号、操作数之间必须存在空格，且每个 `+-*/` 需要一对括号，即类似 `( 2 + 5 ) / ( 4 * 7 )` 这种情况是会出错的，且不能有多余的括号。对于符合条件的算式，想法和采取的手段很简单：逐个读取字符，读到数字或运算符，则将其压入相应的操作数栈或运算符栈；读到右括号，则说明与其最近配对的左括号内的算式结果可以算出来，并将结果压入操作数栈，继续读取后面的字符。\n\n由于符合条件的算式中的括号是成对出现的，于是右括号就相当于一个「弹栈」的标志；而 `+-*/` 对应两个操作数，所以弹栈时若从运算符栈弹出一个运算符，则需从操作数栈弹出两个操作数，并将运算的结果压入操作数栈；遇到 `sqrt` 这种「单目」操作符（这里姑且称之为操作符），则两个栈各弹一个，运算结果压入操作数栈。下面为具体实现。（将原书中的 `if-else` 分支语句改为了 `switch-case` 语句以提高可读性）\n\n```java\nimport edu.princeton.cs.algs4.*;\n\npublic class DijkstraExpressionValue {\n    public static void main(String[] args) {\n        Stack<String> ops = new Stack<>();\n        Stack<Double> val = new Stack<>();\n        while (!StdIn.isEmpty()) {\n            String s = StdIn.readString();\n            switch (s) {\n                case \"(\": break;\n                case \"+\": case \"-\": case \"*\": case \"/\": case \"sqrt\":\n                    ops.push(s); break;\n                case \")\": {\n                    String op = ops.pop();\n                    double v = val.pop();\n                    switch (op) {\n                        case \"+\": v = val.pop() + v; break;\n                        case \"-\": v = val.pop() - v; break;\n                        case \"*\": v = val.pop() * v; break;\n                        case \"/\": v = val.pop() / v; break;\n                        case \"sqrt\": v = Math.sqrt(v); break;\n                    }\n                    val.push(v);\n                    break;\n                }\n                default:\n                    val.push(Double.parseDouble(s));\n                    break;\n            }\n        }\n        System.out.printf(\"%.6f\\n\", val.pop());\n    }\n}\n```\n\n测试：\n\n```plain\n( 1 + ( 2 + 3 ) * ( 4 * 5 ) ) )                    : 101.000000\n( ( 1 + sqrt ( 5.0 ) ) / 2.0 )                     : 1.618034\nsqrt ( ( 1 * ( 2 * ( 3 * ( 4 * ( 5 * 6 ) ) ) ) ) ) : 26.832816\n```\n\n----------------\n\n如果这个例子高级了点，下这个手动实现栈的例子就比较简单而有趣了。\n\n- **TODO**\n\n[algorithms]: https://algs4.cs.princeton.edu\n[algs4.jar]: https://algs4.cs.princeton.edu/code/algs4.jar\n[idea]: https://www.jetbrains.com/idea\n[ideavim]: https://github.com/JetBrains/ideavim\n","source":"_posts/simple-example-of-stack-in-java.md","raw":"---\ntitle: Java 关于栈的简单应用\ndate: 2018-07-08 22:59:46\ncategories: Algorithms\ntags:\n    - Java\n    - Stack\n---\n\n\n此篇为「[算法][algorithms]」一书 §1.3 中关于栈的应用部分的学习记录。\n<!-- more -->\n\n这本算法书在很多例子中使用作者开发的库 [algs4.jar][algs4.jar]。目前以 [Idea][idea] 作为 Java 开发环境，那么为什么不用 Eclipse？IDE 颜值 + [Vim 插件][ideavim] 是王道。这里提下将 `algs4.jar` 加入 `classpath` 的操作：`C-S-A-s` 或选中工程目录按 `F4`，在弹出的项目结构 (Project Structure) 中依次定位：`Modules` -`xxx`（需要操作的项目）- `Dependencies` - `{% fa plus fw %}` - `JARs or directories...`，定位至 `algs4.jar` 即可。这样就可以直接在 Java 代码中引入 jar 包了，调试运行时的命令显示如下：\n\n```plain\nD:\\Java\\jdk-10\\bin\\java -javaagent:D:\\Idea\\lib\\idea_rt.jar=xxxxx:D:\\Idea\\bin \\\n-Dfile.encoding=UTF-8 \\\n-classpath E:\\WorkingDirectory\\Projects\\Java\\Algorithms\\out\\production\\Algorithms;\\\nE:\\WorkingDirectory\\Projects\\Java\\Algorithms\\lib\\algs4.jar ch_01.Test\n```\n\n### Dijkstra 双栈算术表达式求值算法\n\n这里的代码适用范围较窄，仅支持如下格式的算术表达式：\n\n```plain\n( 1 + ( 2 + 3 ) * ( 4 * 5 ) ) )\n( ( 1 + sqrt ( 5.0 ) ) / 2.0 )\n```\n\n即运算符、左右括号、操作数之间必须存在空格，且每个 `+-*/` 需要一对括号，即类似 `( 2 + 5 ) / ( 4 * 7 )` 这种情况是会出错的，且不能有多余的括号。对于符合条件的算式，想法和采取的手段很简单：逐个读取字符，读到数字或运算符，则将其压入相应的操作数栈或运算符栈；读到右括号，则说明与其最近配对的左括号内的算式结果可以算出来，并将结果压入操作数栈，继续读取后面的字符。\n\n由于符合条件的算式中的括号是成对出现的，于是右括号就相当于一个「弹栈」的标志；而 `+-*/` 对应两个操作数，所以弹栈时若从运算符栈弹出一个运算符，则需从操作数栈弹出两个操作数，并将运算的结果压入操作数栈；遇到 `sqrt` 这种「单目」操作符（这里姑且称之为操作符），则两个栈各弹一个，运算结果压入操作数栈。下面为具体实现。（将原书中的 `if-else` 分支语句改为了 `switch-case` 语句以提高可读性）\n\n```java\nimport edu.princeton.cs.algs4.*;\n\npublic class DijkstraExpressionValue {\n    public static void main(String[] args) {\n        Stack<String> ops = new Stack<>();\n        Stack<Double> val = new Stack<>();\n        while (!StdIn.isEmpty()) {\n            String s = StdIn.readString();\n            switch (s) {\n                case \"(\": break;\n                case \"+\": case \"-\": case \"*\": case \"/\": case \"sqrt\":\n                    ops.push(s); break;\n                case \")\": {\n                    String op = ops.pop();\n                    double v = val.pop();\n                    switch (op) {\n                        case \"+\": v = val.pop() + v; break;\n                        case \"-\": v = val.pop() - v; break;\n                        case \"*\": v = val.pop() * v; break;\n                        case \"/\": v = val.pop() / v; break;\n                        case \"sqrt\": v = Math.sqrt(v); break;\n                    }\n                    val.push(v);\n                    break;\n                }\n                default:\n                    val.push(Double.parseDouble(s));\n                    break;\n            }\n        }\n        System.out.printf(\"%.6f\\n\", val.pop());\n    }\n}\n```\n\n测试：\n\n```plain\n( 1 + ( 2 + 3 ) * ( 4 * 5 ) ) )                    : 101.000000\n( ( 1 + sqrt ( 5.0 ) ) / 2.0 )                     : 1.618034\nsqrt ( ( 1 * ( 2 * ( 3 * ( 4 * ( 5 * 6 ) ) ) ) ) ) : 26.832816\n```\n\n----------------\n\n如果这个例子高级了点，下这个手动实现栈的例子就比较简单而有趣了。\n\n- **TODO**\n\n[algorithms]: https://algs4.cs.princeton.edu\n[algs4.jar]: https://algs4.cs.princeton.edu/code/algs4.jar\n[idea]: https://www.jetbrains.com/idea\n[ideavim]: https://github.com/JetBrains/ideavim\n","slug":"simple-example-of-stack-in-java","published":1,"updated":"2023-03-09T16:09:38.289Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u3374003ip4x0fk0dm37s","content":"<p>此篇为「<a href=\"https://algs4.cs.princeton.edu\" target=\"_blank\" rel=\"noopener\">算法</a>」一书 §1.3 中关于栈的应用部分的学习记录。 <a id=\"more\"></a></p>\r\n<p>这本算法书在很多例子中使用作者开发的库 <a href=\"https://algs4.cs.princeton.edu/code/algs4.jar\" target=\"_blank\" rel=\"noopener\">algs4.jar</a>。目前以 <a href=\"https://www.jetbrains.com/idea\" target=\"_blank\" rel=\"noopener\">Idea</a> 作为 Java 开发环境，那么为什么不用 Eclipse？IDE 颜值 + <a href=\"https://github.com/JetBrains/ideavim\" target=\"_blank\" rel=\"noopener\">Vim 插件</a> 是王道。这里提下将 <code>algs4.jar</code> 加入 <code>classpath</code> 的操作：<code>C-S-A-s</code> 或选中工程目录按 <code>F4</code>，在弹出的项目结构 (Project Structure) 中依次定位：<code>Modules</code> -<code>xxx</code>（需要操作的项目）- <code>Dependencies</code> - <code><i class=\"fa fa-plus fa-fw\"></i></code> - <code>JARs or directories...</code>，定位至 <code>algs4.jar</code> 即可。这样就可以直接在 Java 代码中引入 jar 包了，调试运行时的命令显示如下：</p>\r\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">D:\\Java\\jdk-10\\bin\\java -javaagent:D:\\Idea\\lib\\idea_rt.jar=xxxxx:D:\\Idea\\bin \\</span><br><span class=\"line\">-Dfile.encoding=UTF-8 \\</span><br><span class=\"line\">-classpath E:\\WorkingDirectory\\Projects\\Java\\Algorithms\\out\\production\\Algorithms;\\</span><br><span class=\"line\">E:\\WorkingDirectory\\Projects\\Java\\Algorithms\\lib\\algs4.jar ch_01.Test</span><br></pre></td></tr></table></figure>\r\n<h3 id=\"dijkstra-双栈算术表达式求值算法\">Dijkstra 双栈算术表达式求值算法</h3>\r\n<p>这里的代码适用范围较窄，仅支持如下格式的算术表达式：</p>\r\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">( 1 + ( 2 + 3 ) * ( 4 * 5 ) ) )</span><br><span class=\"line\">( ( 1 + sqrt ( 5.0 ) ) / 2.0 )</span><br></pre></td></tr></table></figure>\r\n<p>即运算符、左右括号、操作数之间必须存在空格，且每个 <code>+-*/</code> 需要一对括号，即类似 <code>( 2 + 5 ) / ( 4 * 7 )</code> 这种情况是会出错的，且不能有多余的括号。对于符合条件的算式，想法和采取的手段很简单：逐个读取字符，读到数字或运算符，则将其压入相应的操作数栈或运算符栈；读到右括号，则说明与其最近配对的左括号内的算式结果可以算出来，并将结果压入操作数栈，继续读取后面的字符。</p>\r\n<p>由于符合条件的算式中的括号是成对出现的，于是右括号就相当于一个「弹栈」的标志；而 <code>+-*/</code> 对应两个操作数，所以弹栈时若从运算符栈弹出一个运算符，则需从操作数栈弹出两个操作数，并将运算的结果压入操作数栈；遇到 <code>sqrt</code> 这种「单目」操作符（这里姑且称之为操作符），则两个栈各弹一个，运算结果压入操作数栈。下面为具体实现。（将原书中的 <code>if-else</code> 分支语句改为了 <code>switch-case</code> 语句以提高可读性）</p>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> edu.princeton.cs.algs4.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DijkstraExpressionValue</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Stack&lt;String&gt; ops = <span class=\"keyword\">new</span> Stack&lt;&gt;();</span><br><span class=\"line\">        Stack&lt;Double&gt; val = <span class=\"keyword\">new</span> Stack&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (!StdIn.isEmpty()) &#123;</span><br><span class=\"line\">            String s = StdIn.readString();</span><br><span class=\"line\">            <span class=\"keyword\">switch</span> (s) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">\"(\"</span>: <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">\"+\"</span>: <span class=\"keyword\">case</span> <span class=\"string\">\"-\"</span>: <span class=\"keyword\">case</span> <span class=\"string\">\"*\"</span>: <span class=\"keyword\">case</span> <span class=\"string\">\"/\"</span>: <span class=\"keyword\">case</span> <span class=\"string\">\"sqrt\"</span>:</span><br><span class=\"line\">                    ops.push(s); <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">\")\"</span>: &#123;</span><br><span class=\"line\">                    String op = ops.pop();</span><br><span class=\"line\">                    <span class=\"keyword\">double</span> v = val.pop();</span><br><span class=\"line\">                    <span class=\"keyword\">switch</span> (op) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"string\">\"+\"</span>: v = val.pop() + v; <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"string\">\"-\"</span>: v = val.pop() - v; <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"string\">\"*\"</span>: v = val.pop() * v; <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"string\">\"/\"</span>: v = val.pop() / v; <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"string\">\"sqrt\"</span>: v = Math.sqrt(v); <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    val.push(v);</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">default</span>:</span><br><span class=\"line\">                    val.push(Double.parseDouble(s));</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.printf(<span class=\"string\">\"%.6f\\n\"</span>, val.pop());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<p>测试：</p>\r\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">( 1 + ( 2 + 3 ) * ( 4 * 5 ) ) )                    : 101.000000</span><br><span class=\"line\">( ( 1 + sqrt ( 5.0 ) ) / 2.0 )                     : 1.618034</span><br><span class=\"line\">sqrt ( ( 1 * ( 2 * ( 3 * ( 4 * ( 5 * 6 ) ) ) ) ) ) : 26.832816</span><br></pre></td></tr></table></figure>\r\n<hr>\r\n<p>如果这个例子高级了点，下这个手动实现栈的例子就比较简单而有趣了。</p>\r\n<ul>\r\n<li><strong>TODO</strong></li>\r\n</ul>\r\n","site":{"data":{}},"excerpt":"<p>此篇为「<a href=\"https://algs4.cs.princeton.edu\" target=\"_blank\" rel=\"noopener\">算法</a>」一书 §1.3 中关于栈的应用部分的学习记录。","more":"</p>\r\n<p>这本算法书在很多例子中使用作者开发的库 <a href=\"https://algs4.cs.princeton.edu/code/algs4.jar\" target=\"_blank\" rel=\"noopener\">algs4.jar</a>。目前以 <a href=\"https://www.jetbrains.com/idea\" target=\"_blank\" rel=\"noopener\">Idea</a> 作为 Java 开发环境，那么为什么不用 Eclipse？IDE 颜值 + <a href=\"https://github.com/JetBrains/ideavim\" target=\"_blank\" rel=\"noopener\">Vim 插件</a> 是王道。这里提下将 <code>algs4.jar</code> 加入 <code>classpath</code> 的操作：<code>C-S-A-s</code> 或选中工程目录按 <code>F4</code>，在弹出的项目结构 (Project Structure) 中依次定位：<code>Modules</code> -<code>xxx</code>（需要操作的项目）- <code>Dependencies</code> - <code><i class=\"fa fa-plus fa-fw\"></i></code> - <code>JARs or directories...</code>，定位至 <code>algs4.jar</code> 即可。这样就可以直接在 Java 代码中引入 jar 包了，调试运行时的命令显示如下：</p>\r\n<!--�161-->\r\n<h3 id=\"dijkstra-双栈算术表达式求值算法\">Dijkstra 双栈算术表达式求值算法</h3>\r\n<p>这里的代码适用范围较窄，仅支持如下格式的算术表达式：</p>\r\n<!--�162-->\r\n<p>即运算符、左右括号、操作数之间必须存在空格，且每个 <code>+-*/</code> 需要一对括号，即类似 <code>( 2 + 5 ) / ( 4 * 7 )</code> 这种情况是会出错的，且不能有多余的括号。对于符合条件的算式，想法和采取的手段很简单：逐个读取字符，读到数字或运算符，则将其压入相应的操作数栈或运算符栈；读到右括号，则说明与其最近配对的左括号内的算式结果可以算出来，并将结果压入操作数栈，继续读取后面的字符。</p>\r\n<p>由于符合条件的算式中的括号是成对出现的，于是右括号就相当于一个「弹栈」的标志；而 <code>+-*/</code> 对应两个操作数，所以弹栈时若从运算符栈弹出一个运算符，则需从操作数栈弹出两个操作数，并将运算的结果压入操作数栈；遇到 <code>sqrt</code> 这种「单目」操作符（这里姑且称之为操作符），则两个栈各弹一个，运算结果压入操作数栈。下面为具体实现。（将原书中的 <code>if-else</code> 分支语句改为了 <code>switch-case</code> 语句以提高可读性）</p>\r\n<!--�163-->\r\n<p>测试：</p>\r\n<!--�164-->\r\n<hr>\r\n<p>如果这个例子高级了点，下这个手动实现栈的例子就比较简单而有趣了。</p>\r\n<ul>\r\n<li><strong>TODO</strong></li>\r\n</ul>"},{"title":"gawk 重定向源码研究","date":"2022-03-29T16:20:04.000Z","_content":"\n`gawk5.1.1` 源码的 `awk.h` 文件定义了 `redirect` 这个「重定向」结构体，里面有个 `redirect_flags` 标记枚举，有这几个值：\n\n{% codeblock lang:c %}\n    RED_NONE    = 0,\n    RED_FILE    = 1,\n    RED_PIPE    = 2,\n    RED_READ    = 4,\n    RED_WRITE   = 8,\n    RED_APPEND  = 16,\n    RED_USED    = 64,   /* closed temporarily to reuse fd */\n{% endcodeblock %}\n\n后面主要关注 `RED_FILE`、`RED_WRITE`、`RED_USED` 这 3 个 flag。\n\n<!-- more -->\n\nawk 可开启 Lint 执行，会输出一些类似 DEBUG 的警告提示或错误提示：`l--lint=invalid`。当进程所用到的 `fd` 超过 `ulimit` 的时候，标准错误会输出：\n```\nwarning: reached system limit for open files: starting to multiplex file descriptors\n```\n源文件 io.c:1208-1210：\n```\nif (do_lint && ! warned) {\n    warned = true;\n    lintwarn(_(\"reached system limit for open files: starting to multiplex file descriptors\"));\n}\n```\n这个与 awk info 里面所述一致，然后 Lint 会报\n```\nwarning: unnecessary mixing of `>' and `>>' for file\n```\n这个警告提示，说明 awk 内部已经把 `>` 换成了 `>>` 在执行，在执行层面上来看符合猜想，具体代码参考 `io.c:819-826`：\n```c\ncase redirect_output:\n    outflag = (RED_FILE|RED_WRITE);\n    tflag |= outflag;\n    if (redirtype == redirect_output)\n        what = \">\";\n    else\n        what = \">>\";\n```\n至于 awk 如何判断这个文件是新打开的还是已有的文件，参考 `gawkapi.c:1334-1423` 的 `api_get_file` 函数。\n\n最重要的就是解释如何「复用」数量有限的文件描述符（`fd`），主要逻辑集中在 `io.c` 的 `redirect_string` 以及 `close_one` 函数。`close_one` 函数较为容易理解（`io.c:1200-1235`），根据注释：临时关闭并打开文件进而复用文件描述符，具体逻辑为定位到「`fd` 使用热度链表」中最不常用的那个 `fd` 开始，依次往常用的 `fd` 遍历，如果能关闭则关闭之（当然像标准输入、标准输出及标准错误这三个 `fd` 是不能关闭的）。回到调用 `close_one` 函数的 `redirect_string` 函数（`io.c:1070-1073`）后 931 行的 while 循环继续执行：\n```c\nwhile (rp->output.fp == NULL && rp->iop == NULL) {\n    if (! new_rp && (rp->flag & RED_EOF) != 0) {\n        save_rp = NULL;\n        return rp;\n    }\n    mode = NULL;\n    errno = 0;\n    switch (redirtype) {\n    case redirect_output:\n        mode = binmode(\"w\");\n        if ((rp->flag & RED_USED) != 0)\n            mode = (rp->mode[1] == 'b') ? \"ab\" : \"a\";\n        break;\n    case redirect_append:\n        ...\n    case redirect_pipe:\n        ...\n```\n由于使用 `print >` 进行重定向，所以上述 `switch(redirtype)` 会走 `redirect_output` 分支，并重新使文件描述符与文件绑定（io.c:1026-1029）：\n```c\nif (mode != NULL) {\n    errno = 0;\n    rp->output.mode = mode;\n    fd = (extfd >= 0) ? extfd : devopen(str, mode);\n```\n\n---\n\n以上解释了 awk 如何在有限的系统 `ulimit -n` 设定下 `print >` 的表现如同 `>>` 且能正常处理文本。\n\n## 附录\n\n`awk --lint=invalid` 标准错误信息（节选）：\n\n```\nawk: cmd. line:1: (FILENAME=seq.txt FNR=97) warning: reached system limit for open files: starting to multiplex file descriptors\nawk: cmd. line:1: (FILENAME=seq.txt FNR=1001) warning: unnecessary mixing of `>' and `>>' for file `output/0.txt'\nawk: cmd. line:1: (FILENAME=seq.txt FNR=1002) warning: unnecessary mixing of `>' and `>>' for file `output/1.txt'\nawk: cmd. line:1: (FILENAME=seq.txt FNR=1003) warning: unnecessary mixing of `>' and `>>' for file `output/2.txt'\n......\nawk: (FILENAME=seq.txt FNR=100000) warning: no explicit close of file `output/2.txt' provided\nawk: (FILENAME=seq.txt FNR=100000) warning: no explicit close of file `output/1.txt' provided\nawk: (FILENAME=seq.txt FNR=100000) warning: no explicit close of file `output/0.txt' provided\n```\n","source":"_posts/source-code-of-redirection-on-gawk.md","raw":"---\ntitle: gawk 重定向源码研究\ndate: 2022-03-30 00:20:04\ntags:\n    - Gawk\n    - Source Code\ncategories: Research\n---\n\n`gawk5.1.1` 源码的 `awk.h` 文件定义了 `redirect` 这个「重定向」结构体，里面有个 `redirect_flags` 标记枚举，有这几个值：\n\n{% codeblock lang:c %}\n    RED_NONE    = 0,\n    RED_FILE    = 1,\n    RED_PIPE    = 2,\n    RED_READ    = 4,\n    RED_WRITE   = 8,\n    RED_APPEND  = 16,\n    RED_USED    = 64,   /* closed temporarily to reuse fd */\n{% endcodeblock %}\n\n后面主要关注 `RED_FILE`、`RED_WRITE`、`RED_USED` 这 3 个 flag。\n\n<!-- more -->\n\nawk 可开启 Lint 执行，会输出一些类似 DEBUG 的警告提示或错误提示：`l--lint=invalid`。当进程所用到的 `fd` 超过 `ulimit` 的时候，标准错误会输出：\n```\nwarning: reached system limit for open files: starting to multiplex file descriptors\n```\n源文件 io.c:1208-1210：\n```\nif (do_lint && ! warned) {\n    warned = true;\n    lintwarn(_(\"reached system limit for open files: starting to multiplex file descriptors\"));\n}\n```\n这个与 awk info 里面所述一致，然后 Lint 会报\n```\nwarning: unnecessary mixing of `>' and `>>' for file\n```\n这个警告提示，说明 awk 内部已经把 `>` 换成了 `>>` 在执行，在执行层面上来看符合猜想，具体代码参考 `io.c:819-826`：\n```c\ncase redirect_output:\n    outflag = (RED_FILE|RED_WRITE);\n    tflag |= outflag;\n    if (redirtype == redirect_output)\n        what = \">\";\n    else\n        what = \">>\";\n```\n至于 awk 如何判断这个文件是新打开的还是已有的文件，参考 `gawkapi.c:1334-1423` 的 `api_get_file` 函数。\n\n最重要的就是解释如何「复用」数量有限的文件描述符（`fd`），主要逻辑集中在 `io.c` 的 `redirect_string` 以及 `close_one` 函数。`close_one` 函数较为容易理解（`io.c:1200-1235`），根据注释：临时关闭并打开文件进而复用文件描述符，具体逻辑为定位到「`fd` 使用热度链表」中最不常用的那个 `fd` 开始，依次往常用的 `fd` 遍历，如果能关闭则关闭之（当然像标准输入、标准输出及标准错误这三个 `fd` 是不能关闭的）。回到调用 `close_one` 函数的 `redirect_string` 函数（`io.c:1070-1073`）后 931 行的 while 循环继续执行：\n```c\nwhile (rp->output.fp == NULL && rp->iop == NULL) {\n    if (! new_rp && (rp->flag & RED_EOF) != 0) {\n        save_rp = NULL;\n        return rp;\n    }\n    mode = NULL;\n    errno = 0;\n    switch (redirtype) {\n    case redirect_output:\n        mode = binmode(\"w\");\n        if ((rp->flag & RED_USED) != 0)\n            mode = (rp->mode[1] == 'b') ? \"ab\" : \"a\";\n        break;\n    case redirect_append:\n        ...\n    case redirect_pipe:\n        ...\n```\n由于使用 `print >` 进行重定向，所以上述 `switch(redirtype)` 会走 `redirect_output` 分支，并重新使文件描述符与文件绑定（io.c:1026-1029）：\n```c\nif (mode != NULL) {\n    errno = 0;\n    rp->output.mode = mode;\n    fd = (extfd >= 0) ? extfd : devopen(str, mode);\n```\n\n---\n\n以上解释了 awk 如何在有限的系统 `ulimit -n` 设定下 `print >` 的表现如同 `>>` 且能正常处理文本。\n\n## 附录\n\n`awk --lint=invalid` 标准错误信息（节选）：\n\n```\nawk: cmd. line:1: (FILENAME=seq.txt FNR=97) warning: reached system limit for open files: starting to multiplex file descriptors\nawk: cmd. line:1: (FILENAME=seq.txt FNR=1001) warning: unnecessary mixing of `>' and `>>' for file `output/0.txt'\nawk: cmd. line:1: (FILENAME=seq.txt FNR=1002) warning: unnecessary mixing of `>' and `>>' for file `output/1.txt'\nawk: cmd. line:1: (FILENAME=seq.txt FNR=1003) warning: unnecessary mixing of `>' and `>>' for file `output/2.txt'\n......\nawk: (FILENAME=seq.txt FNR=100000) warning: no explicit close of file `output/2.txt' provided\nawk: (FILENAME=seq.txt FNR=100000) warning: no explicit close of file `output/1.txt' provided\nawk: (FILENAME=seq.txt FNR=100000) warning: no explicit close of file `output/0.txt' provided\n```\n","slug":"source-code-of-redirection-on-gawk","published":1,"updated":"2023-03-12T05:58:23.679Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u3375003kp4x0zm3xpqxl","content":"<p><code>gawk5.1.1</code> 源码的 <code>awk.h</code> 文件定义了 <code>redirect</code> 这个「重定向」结构体，里面有个 <code>redirect_flags</code> 标记枚举，有这几个值：</p>\r\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RED_NONE    = <span class=\"number\">0</span>,</span><br><span class=\"line\">RED_FILE    = <span class=\"number\">1</span>,</span><br><span class=\"line\">RED_PIPE    = <span class=\"number\">2</span>,</span><br><span class=\"line\">RED_READ    = <span class=\"number\">4</span>,</span><br><span class=\"line\">RED_WRITE   = <span class=\"number\">8</span>,</span><br><span class=\"line\">RED_APPEND  = <span class=\"number\">16</span>,</span><br><span class=\"line\">RED_USED    = <span class=\"number\">64</span>,   <span class=\"comment\">/* closed temporarily to reuse fd */</span></span><br></pre></td></tr></table></figure>\r\n<p>后面主要关注 <code>RED_FILE</code>、<code>RED_WRITE</code>、<code>RED_USED</code> 这 3 个 flag。</p>\r\n<a id=\"more\"></a>\r\n<p>awk 可开启 Lint 执行，会输出一些类似 DEBUG 的警告提示或错误提示：<code>l--lint=invalid</code>。当进程所用到的 <code>fd</code> 超过 <code>ulimit</code> 的时候，标准错误会输出： <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">warning: reached system limit for open files: starting to multiplex file descriptors</span><br></pre></td></tr></table></figure></p>\r\n<p>源文件 io.c:1208-1210： <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if (do_lint &amp;&amp; ! warned) &#123;</span><br><span class=\"line\">    warned = true;</span><br><span class=\"line\">    lintwarn(_(&quot;reached system limit for open files: starting to multiplex file descriptors&quot;));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\r\n<p>这个与 awk info 里面所述一致，然后 Lint 会报 <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">warning: unnecessary mixing of `&gt;&apos; and `&gt;&gt;&apos; for file</span><br></pre></td></tr></table></figure></p>\r\n<p>这个警告提示，说明 awk 内部已经把 <code>&gt;</code> 换成了 <code>&gt;&gt;</code> 在执行，在执行层面上来看符合猜想，具体代码参考 <code>io.c:819-826</code>： <figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">case</span> redirect_output:</span><br><span class=\"line\">    outflag = (RED_FILE|RED_WRITE);</span><br><span class=\"line\">    tflag |= outflag;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (redirtype == redirect_output)</span><br><span class=\"line\">        what = <span class=\"string\">\"&gt;\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        what = <span class=\"string\">\"&gt;&gt;\"</span>;</span><br></pre></td></tr></table></figure></p>\r\n<p>至于 awk 如何判断这个文件是新打开的还是已有的文件，参考 <code>gawkapi.c:1334-1423</code> 的 <code>api_get_file</code> 函数。</p>\r\n<p>最重要的就是解释如何「复用」数量有限的文件描述符（<code>fd</code>），主要逻辑集中在 <code>io.c</code> 的 <code>redirect_string</code> 以及 <code>close_one</code> 函数。<code>close_one</code> 函数较为容易理解（<code>io.c:1200-1235</code>），根据注释：临时关闭并打开文件进而复用文件描述符，具体逻辑为定位到「<code>fd</code> 使用热度链表」中最不常用的那个 <code>fd</code> 开始，依次往常用的 <code>fd</code> 遍历，如果能关闭则关闭之（当然像标准输入、标准输出及标准错误这三个 <code>fd</code> 是不能关闭的）。回到调用 <code>close_one</code> 函数的 <code>redirect_string</code> 函数（<code>io.c:1070-1073</code>）后 931 行的 while 循环继续执行： <figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span> (rp-&gt;output.fp == <span class=\"literal\">NULL</span> &amp;&amp; rp-&gt;iop == <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (! new_rp &amp;&amp; (rp-&gt;flag &amp; RED_EOF) != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        save_rp = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> rp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    mode = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    errno = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (redirtype) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> redirect_output:</span><br><span class=\"line\">        mode = binmode(<span class=\"string\">\"w\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ((rp-&gt;flag &amp; RED_USED) != <span class=\"number\">0</span>)</span><br><span class=\"line\">            mode = (rp-&gt;mode[<span class=\"number\">1</span>] == <span class=\"string\">'b'</span>) ? <span class=\"string\">\"ab\"</span> : <span class=\"string\">\"a\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> redirect_append:</span><br><span class=\"line\">        ...</span><br><span class=\"line\">    <span class=\"keyword\">case</span> redirect_pipe:</span><br><span class=\"line\">        ...</span><br></pre></td></tr></table></figure></p>\r\n<p>由于使用 <code>print &gt;</code> 进行重定向，所以上述 <code>switch(redirtype)</code> 会走 <code>redirect_output</code> 分支，并重新使文件描述符与文件绑定（io.c:1026-1029）： <figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (mode != <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">    errno = <span class=\"number\">0</span>;</span><br><span class=\"line\">    rp-&gt;output.mode = mode;</span><br><span class=\"line\">    fd = (extfd &gt;= <span class=\"number\">0</span>) ? extfd : devopen(str, mode);</span><br></pre></td></tr></table></figure></p>\r\n<hr>\r\n<p>以上解释了 awk 如何在有限的系统 <code>ulimit -n</code> 设定下 <code>print &gt;</code> 的表现如同 <code>&gt;&gt;</code> 且能正常处理文本。</p>\r\n<h2 id=\"附录\">附录</h2>\r\n<p><code>awk --lint=invalid</code> 标准错误信息（节选）：</p>\r\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk: cmd. line:1: (FILENAME=seq.txt FNR=97) warning: reached system limit for open files: starting to multiplex file descriptors</span><br><span class=\"line\">awk: cmd. line:1: (FILENAME=seq.txt FNR=1001) warning: unnecessary mixing of `&gt;&apos; and `&gt;&gt;&apos; for file `output/0.txt&apos;</span><br><span class=\"line\">awk: cmd. line:1: (FILENAME=seq.txt FNR=1002) warning: unnecessary mixing of `&gt;&apos; and `&gt;&gt;&apos; for file `output/1.txt&apos;</span><br><span class=\"line\">awk: cmd. line:1: (FILENAME=seq.txt FNR=1003) warning: unnecessary mixing of `&gt;&apos; and `&gt;&gt;&apos; for file `output/2.txt&apos;</span><br><span class=\"line\">......</span><br><span class=\"line\">awk: (FILENAME=seq.txt FNR=100000) warning: no explicit close of file `output/2.txt&apos; provided</span><br><span class=\"line\">awk: (FILENAME=seq.txt FNR=100000) warning: no explicit close of file `output/1.txt&apos; provided</span><br><span class=\"line\">awk: (FILENAME=seq.txt FNR=100000) warning: no explicit close of file `output/0.txt&apos; provided</span><br></pre></td></tr></table></figure>\r\n","site":{"data":{}},"excerpt":"<p><code>gawk5.1.1</code> 源码的 <code>awk.h</code> 文件定义了 <code>redirect</code> 这个「重定向」结构体，里面有个 <code>redirect_flags</code> 标记枚举，有这几个值：</p>\r\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RED_NONE    = <span class=\"number\">0</span>,</span><br><span class=\"line\">RED_FILE    = <span class=\"number\">1</span>,</span><br><span class=\"line\">RED_PIPE    = <span class=\"number\">2</span>,</span><br><span class=\"line\">RED_READ    = <span class=\"number\">4</span>,</span><br><span class=\"line\">RED_WRITE   = <span class=\"number\">8</span>,</span><br><span class=\"line\">RED_APPEND  = <span class=\"number\">16</span>,</span><br><span class=\"line\">RED_USED    = <span class=\"number\">64</span>,   <span class=\"comment\">/* closed temporarily to reuse fd */</span></span><br></pre></td></tr></table></figure>\r\n<p>后面主要关注 <code>RED_FILE</code>、<code>RED_WRITE</code>、<code>RED_USED</code> 这 3 个 flag。</p>","more":"<p>awk 可开启 Lint 执行，会输出一些类似 DEBUG 的警告提示或错误提示：<code>l--lint=invalid</code>。当进程所用到的 <code>fd</code> 超过 <code>ulimit</code> 的时候，标准错误会输出： <!--�165--></p>\r\n<p>源文件 io.c:1208-1210： <!--�166--></p>\r\n<p>这个与 awk info 里面所述一致，然后 Lint 会报 <!--�167--></p>\r\n<p>这个警告提示，说明 awk 内部已经把 <code>&gt;</code> 换成了 <code>&gt;&gt;</code> 在执行，在执行层面上来看符合猜想，具体代码参考 <code>io.c:819-826</code>： <!--�168--></p>\r\n<p>至于 awk 如何判断这个文件是新打开的还是已有的文件，参考 <code>gawkapi.c:1334-1423</code> 的 <code>api_get_file</code> 函数。</p>\r\n<p>最重要的就是解释如何「复用」数量有限的文件描述符（<code>fd</code>），主要逻辑集中在 <code>io.c</code> 的 <code>redirect_string</code> 以及 <code>close_one</code> 函数。<code>close_one</code> 函数较为容易理解（<code>io.c:1200-1235</code>），根据注释：临时关闭并打开文件进而复用文件描述符，具体逻辑为定位到「<code>fd</code> 使用热度链表」中最不常用的那个 <code>fd</code> 开始，依次往常用的 <code>fd</code> 遍历，如果能关闭则关闭之（当然像标准输入、标准输出及标准错误这三个 <code>fd</code> 是不能关闭的）。回到调用 <code>close_one</code> 函数的 <code>redirect_string</code> 函数（<code>io.c:1070-1073</code>）后 931 行的 while 循环继续执行： <!--�169--></p>\r\n<p>由于使用 <code>print &gt;</code> 进行重定向，所以上述 <code>switch(redirtype)</code> 会走 <code>redirect_output</code> 分支，并重新使文件描述符与文件绑定（io.c:1026-1029）： <!--�170--></p>\r\n<hr>\r\n<p>以上解释了 awk 如何在有限的系统 <code>ulimit -n</code> 设定下 <code>print &gt;</code> 的表现如同 <code>&gt;&gt;</code> 且能正常处理文本。</p>\r\n<h2 id=\"附录\">附录</h2>\r\n<p><code>awk --lint=invalid</code> 标准错误信息（节选）：</p>\r\n<!--�171-->"},{"title":"SQLite 学习","date":"2020-04-11T14:04:36.000Z","toc":true,"_content":"\n电脑里 SumatraPDF 打开文件列表中的《SQLite 权威指南》已经躺了很久了，一直愁于无暇去看，工作一年至今读完的书籍更是屈指可数。由于工作需要也因为兴趣所在，数据库成了绕不过的坎。SQLite 数据库将数据以文件形式存于硬盘中（当然也支持内存数据库），区别于其他需要安装、部署的数据库，SQLite 在与其他程序集成方面显得更加的灵活轻便，如 Python、Autohotkey ，Python 甚至内置标准库 `sqlite3`；SQLite 也能被各种数据库软件支持，如 Navicat、Dbeaver、DbVisualizer 等。\n\n本篇文章以《SQLite 权威指南》为主要参考，记录 SQLite 常用用法，也能作为日后的参考使用文档。\n\n<!-- more -->\n\n## 入门\n\n- 程序/运行库下载：[SQLite 官网][sqlite-official]\n- 仅包含 dll / def：`sqlite-dll-win32-xxx`\n- 包含 `sqldiff.exe`、`sqlite3.exe`、`sqlite3_analyzer.exe`：`sqlite-tools-win32-xxx`\n\n注：后文用到的 CLP 工具即为 `sqlite3.exe`。\n\n### CLP\n\n- 在命令行键入 `sqlite3`，进入的是交互的 CLP 界面，类似于 Oracle 命令行工具 `sqlplus.exe` 或 MySQL 的 `mysql.exe`。在交互 CLP 界面键入 `.help` 查看帮助：\n  ```dos\n  $ sqlite3\n  SQLite version 3.30.1 2019-10-10 20:19:45\n  Enter \".help\" for usage hints.\n  Connected to a transient in-memory database.\n  Use \".open FILENAME\" to reopen on a persistent database.\n  sqlite>\n  ```\n  另外命令行模式的 CLP 可以有如下参数：\n  ```dos\n  $ sqlite3 -help\n  Usage: sqlite3 [OPTIONS] FILENAME [SQL]\n  FILENAME is the name of an SQLite database. A new database is created\n  if the file does not previously exist.\n  OPTIONS include:\n     -append              append the database to the end of the file\n     -ascii               set output mode to 'ascii'\n     -bail                stop after hitting an error\n     -batch               force batch I/O\n     -column              set output mode to 'column'\n     -cmd COMMAND         run \"COMMAND\" before reading stdin\n     -csv                 set output mode to 'csv'\n     -echo                print commands before execution\n     -init FILENAME       read/process named file\n     -[no]header          turn headers on or off\n     -help                show this message\n     -html                set output mode to HTML\n     -interactive         force interactive I/O\n     -line                set output mode to 'line'\n     -list                set output mode to 'list'\n     -lookaside SIZE N    use N entries of SZ bytes for lookaside memory\n     -memtrace            trace all memory allocations and deallocations\n     -mmap N              default mmap size set to N\n     -newline SEP         set output row separator. Default: '\\n'\n     -nullvalue TEXT      set text string for NULL values. Default ''\n     -pagecache SIZE N    use N slots of SZ bytes each for page cache memory\n     -quote               set output mode to 'quote'\n     -readonly            open the database read-only\n     -separator SEP       set output column separator. Default: '|'\n     -stats               print memory stats before each finalize\n     -version             show SQLite version\n     -vfs NAME            use NAME as the default VFS\n  ```\n- `.prompt [value]` 设置当前命令行提示符\n- `.show` 查看当前配置，如字段分隔符、记录分隔符、是否显示列名、数据库文件目录等\n- `.mode` 查看 / 设置显示格式，一般有：`ascii`、`csv`、`column`、`html`、`insert`、`line`、`list`、`quote`、`tabs`、`tcl` 几种格式\n- `.headers on|off` 显示 / 关闭字段名\n- `.tables` 显示当前数据库所有表名\n- `.indices [table_name]` 显示指定表索引\n- `.schema [table_name]` 显示所有 / 指定表或视图的 DDL 语句\n- `.output [file_name]` 指定输出文件，默认为标准输出 `stdout`\n- `.dump [table_name]` 将整个数据库（或某些表，`table_name` 支持 `LIKE` 风格）导出成 SQL 语句\n\n## 数据导入导出\n\n### 导出数据\n\n**导出为 SQL 语句**\n\n```dos\nsqlite> .output file.sql\nsqlite> .dump\nsqlite> .output stdout\n```\n\n**导出为分隔符分隔文件**\n\n```dos\nsqlite> .mode csv\nsqlite> .output data.csv\nsqlite> select * from <table>\nsqlite> .output stdout\n```\n\n注：如需从该导出文件重新进行导入，应使用如上所示逗号分隔的格式。\n\n### 导入数据\n\n**通过执行包含 SQL 语句的文件导入**\n\n```dos\nsqlite> .read <data.sql>\n```\n\n**通过导入分隔符分隔文件**\n\n如果 `<datafile>` 为逗号分隔格式文件，则可通过 `.import` 语句导入：\n\n```dos\nsqlite> .import <datafile> <table>\n```\n\n\n## 非交互命令处理\n\n- `sqlite3 test.db .dump`\n- `sqlite3 test.db .dump > data.sql`\n- `sqlite3 test.db \"select * from test\"`\n- `sqlite3 test.db < opt.sql`\n- `sqlite3 -init opt.sql test.db .exit`：首先新建 / 打开 `test.db`，再执行 `opt.sql` 中的命令，最后执行 `.exit`\n\n\n## 函数\n\n- `last_insert_rowid()`：最后插入的自动增量值\n\n\n[sqlite-official]: https://www.sqlite.org\n","source":"_posts/sqlite-learning.md","raw":"---\ntitle: SQLite 学习\ndate: 2020-04-11 22:04:36\ntags:\n    - SQLite\ncategories: Development\ntoc: true\n---\n\n电脑里 SumatraPDF 打开文件列表中的《SQLite 权威指南》已经躺了很久了，一直愁于无暇去看，工作一年至今读完的书籍更是屈指可数。由于工作需要也因为兴趣所在，数据库成了绕不过的坎。SQLite 数据库将数据以文件形式存于硬盘中（当然也支持内存数据库），区别于其他需要安装、部署的数据库，SQLite 在与其他程序集成方面显得更加的灵活轻便，如 Python、Autohotkey ，Python 甚至内置标准库 `sqlite3`；SQLite 也能被各种数据库软件支持，如 Navicat、Dbeaver、DbVisualizer 等。\n\n本篇文章以《SQLite 权威指南》为主要参考，记录 SQLite 常用用法，也能作为日后的参考使用文档。\n\n<!-- more -->\n\n## 入门\n\n- 程序/运行库下载：[SQLite 官网][sqlite-official]\n- 仅包含 dll / def：`sqlite-dll-win32-xxx`\n- 包含 `sqldiff.exe`、`sqlite3.exe`、`sqlite3_analyzer.exe`：`sqlite-tools-win32-xxx`\n\n注：后文用到的 CLP 工具即为 `sqlite3.exe`。\n\n### CLP\n\n- 在命令行键入 `sqlite3`，进入的是交互的 CLP 界面，类似于 Oracle 命令行工具 `sqlplus.exe` 或 MySQL 的 `mysql.exe`。在交互 CLP 界面键入 `.help` 查看帮助：\n  ```dos\n  $ sqlite3\n  SQLite version 3.30.1 2019-10-10 20:19:45\n  Enter \".help\" for usage hints.\n  Connected to a transient in-memory database.\n  Use \".open FILENAME\" to reopen on a persistent database.\n  sqlite>\n  ```\n  另外命令行模式的 CLP 可以有如下参数：\n  ```dos\n  $ sqlite3 -help\n  Usage: sqlite3 [OPTIONS] FILENAME [SQL]\n  FILENAME is the name of an SQLite database. A new database is created\n  if the file does not previously exist.\n  OPTIONS include:\n     -append              append the database to the end of the file\n     -ascii               set output mode to 'ascii'\n     -bail                stop after hitting an error\n     -batch               force batch I/O\n     -column              set output mode to 'column'\n     -cmd COMMAND         run \"COMMAND\" before reading stdin\n     -csv                 set output mode to 'csv'\n     -echo                print commands before execution\n     -init FILENAME       read/process named file\n     -[no]header          turn headers on or off\n     -help                show this message\n     -html                set output mode to HTML\n     -interactive         force interactive I/O\n     -line                set output mode to 'line'\n     -list                set output mode to 'list'\n     -lookaside SIZE N    use N entries of SZ bytes for lookaside memory\n     -memtrace            trace all memory allocations and deallocations\n     -mmap N              default mmap size set to N\n     -newline SEP         set output row separator. Default: '\\n'\n     -nullvalue TEXT      set text string for NULL values. Default ''\n     -pagecache SIZE N    use N slots of SZ bytes each for page cache memory\n     -quote               set output mode to 'quote'\n     -readonly            open the database read-only\n     -separator SEP       set output column separator. Default: '|'\n     -stats               print memory stats before each finalize\n     -version             show SQLite version\n     -vfs NAME            use NAME as the default VFS\n  ```\n- `.prompt [value]` 设置当前命令行提示符\n- `.show` 查看当前配置，如字段分隔符、记录分隔符、是否显示列名、数据库文件目录等\n- `.mode` 查看 / 设置显示格式，一般有：`ascii`、`csv`、`column`、`html`、`insert`、`line`、`list`、`quote`、`tabs`、`tcl` 几种格式\n- `.headers on|off` 显示 / 关闭字段名\n- `.tables` 显示当前数据库所有表名\n- `.indices [table_name]` 显示指定表索引\n- `.schema [table_name]` 显示所有 / 指定表或视图的 DDL 语句\n- `.output [file_name]` 指定输出文件，默认为标准输出 `stdout`\n- `.dump [table_name]` 将整个数据库（或某些表，`table_name` 支持 `LIKE` 风格）导出成 SQL 语句\n\n## 数据导入导出\n\n### 导出数据\n\n**导出为 SQL 语句**\n\n```dos\nsqlite> .output file.sql\nsqlite> .dump\nsqlite> .output stdout\n```\n\n**导出为分隔符分隔文件**\n\n```dos\nsqlite> .mode csv\nsqlite> .output data.csv\nsqlite> select * from <table>\nsqlite> .output stdout\n```\n\n注：如需从该导出文件重新进行导入，应使用如上所示逗号分隔的格式。\n\n### 导入数据\n\n**通过执行包含 SQL 语句的文件导入**\n\n```dos\nsqlite> .read <data.sql>\n```\n\n**通过导入分隔符分隔文件**\n\n如果 `<datafile>` 为逗号分隔格式文件，则可通过 `.import` 语句导入：\n\n```dos\nsqlite> .import <datafile> <table>\n```\n\n\n## 非交互命令处理\n\n- `sqlite3 test.db .dump`\n- `sqlite3 test.db .dump > data.sql`\n- `sqlite3 test.db \"select * from test\"`\n- `sqlite3 test.db < opt.sql`\n- `sqlite3 -init opt.sql test.db .exit`：首先新建 / 打开 `test.db`，再执行 `opt.sql` 中的命令，最后执行 `.exit`\n\n\n## 函数\n\n- `last_insert_rowid()`：最后插入的自动增量值\n\n\n[sqlite-official]: https://www.sqlite.org\n","slug":"sqlite-learning","published":1,"updated":"2023-03-09T16:14:19.643Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u3377003np4x0snjehwcx","content":"<p>电脑里 SumatraPDF 打开文件列表中的《SQLite 权威指南》已经躺了很久了，一直愁于无暇去看，工作一年至今读完的书籍更是屈指可数。由于工作需要也因为兴趣所在，数据库成了绕不过的坎。SQLite 数据库将数据以文件形式存于硬盘中（当然也支持内存数据库），区别于其他需要安装、部署的数据库，SQLite 在与其他程序集成方面显得更加的灵活轻便，如 Python、Autohotkey ，Python 甚至内置标准库 <code>sqlite3</code>；SQLite 也能被各种数据库软件支持，如 Navicat、Dbeaver、DbVisualizer 等。</p>\r\n<p>本篇文章以《SQLite 权威指南》为主要参考，记录 SQLite 常用用法，也能作为日后的参考使用文档。</p>\r\n<a id=\"more\"></a>\r\n<h2 id=\"入门\">入门</h2>\r\n<ul>\r\n<li>程序/运行库下载：<a href=\"https://www.sqlite.org\" target=\"_blank\" rel=\"noopener\">SQLite 官网</a></li>\r\n<li>仅包含 dll / def：<code>sqlite-dll-win32-xxx</code></li>\r\n<li>包含 <code>sqldiff.exe</code>、<code>sqlite3.exe</code>、<code>sqlite3_analyzer.exe</code>：<code>sqlite-tools-win32-xxx</code></li>\r\n</ul>\r\n<p>注：后文用到的 CLP 工具即为 <code>sqlite3.exe</code>。</p>\r\n<h3 id=\"clp\">CLP</h3>\r\n<ul>\r\n<li><p>在命令行键入 <code>sqlite3</code>，进入的是交互的 CLP 界面，类似于 Oracle 命令行工具 <code>sqlplus.exe</code> 或 MySQL 的 <code>mysql.exe</code>。在交互 CLP 界面键入 <code>.help</code> 查看帮助： <figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sqlite3</span><br><span class=\"line\">SQLite version <span class=\"number\">3</span>.<span class=\"number\">30</span>.<span class=\"number\">1</span> <span class=\"number\">2019</span>-<span class=\"number\">10</span>-<span class=\"number\">10</span> <span class=\"number\">20</span>:<span class=\"number\">19</span>:<span class=\"number\">45</span></span><br><span class=\"line\">Enter \".<span class=\"built_in\">help</span>\" <span class=\"keyword\">for</span> usage hints.</span><br><span class=\"line\">Connected to a transient <span class=\"keyword\">in</span>-memory database.</span><br><span class=\"line\">Use \".open FILENAME\" to reopen on a persistent database.</span><br><span class=\"line\">sqlite&gt;</span><br></pre></td></tr></table></figure></p>\r\n<p>另外命令行模式的 CLP 可以有如下参数： <figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sqlite3 -<span class=\"built_in\">help</span></span><br><span class=\"line\"><span class=\"function\">Usage: <span class=\"title\">sqlite3</span> [<span class=\"title\">OPTIONS</span>] <span class=\"title\">FILENAME</span> [<span class=\"title\">SQL</span>]</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">FILENAME</span> <span class=\"title\">is</span> <span class=\"title\">the</span> <span class=\"title\">name</span> <span class=\"title\">of</span> <span class=\"title\">an</span> <span class=\"title\">SQLite</span> <span class=\"title\">database</span>. <span class=\"title\">A</span> <span class=\"title\">new</span> <span class=\"title\">database</span> <span class=\"title\">is</span> <span class=\"title\">created</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">if</span> <span class=\"title\">the</span> <span class=\"title\">file</span> <span class=\"title\">does</span> <span class=\"title\">not</span> <span class=\"title\">previously</span> <span class=\"title\">exist</span>.</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">OPTIONS</span> <span class=\"title\">include</span>:</span></span><br><span class=\"line\"><span class=\"function\">   -<span class=\"title\">append</span>              <span class=\"title\">append</span> <span class=\"title\">the</span> <span class=\"title\">database</span> <span class=\"title\">to</span> <span class=\"title\">the</span> <span class=\"title\">end</span> <span class=\"title\">of</span> <span class=\"title\">the</span> <span class=\"title\">file</span></span></span><br><span class=\"line\"><span class=\"function\">   -<span class=\"title\">ascii</span>               <span class=\"title\">set</span> <span class=\"title\">output</span> <span class=\"title\">mode</span> <span class=\"title\">to</span> '<span class=\"title\">ascii</span>'</span></span><br><span class=\"line\"><span class=\"function\">   -<span class=\"title\">bail</span>                <span class=\"title\">stop</span> <span class=\"title\">after</span> <span class=\"title\">hitting</span> <span class=\"title\">an</span> <span class=\"title\">error</span></span></span><br><span class=\"line\"><span class=\"function\">   -<span class=\"title\">batch</span>               <span class=\"title\">force</span> <span class=\"title\">batch</span> <span class=\"title\">I</span>/<span class=\"title\">O</span></span></span><br><span class=\"line\"><span class=\"function\">   -<span class=\"title\">column</span>              <span class=\"title\">set</span> <span class=\"title\">output</span> <span class=\"title\">mode</span> <span class=\"title\">to</span> '<span class=\"title\">column</span>'</span></span><br><span class=\"line\"><span class=\"function\">   -<span class=\"title\">cmd</span> <span class=\"title\">COMMAND</span>         <span class=\"title\">run</span> \"<span class=\"title\">COMMAND</span>\" <span class=\"title\">before</span> <span class=\"title\">reading</span> <span class=\"title\">stdin</span></span></span><br><span class=\"line\"><span class=\"function\">   -<span class=\"title\">csv</span>                 <span class=\"title\">set</span> <span class=\"title\">output</span> <span class=\"title\">mode</span> <span class=\"title\">to</span> '<span class=\"title\">csv</span>'</span></span><br><span class=\"line\"><span class=\"function\">   -<span class=\"title\">echo</span>                <span class=\"title\">print</span> <span class=\"title\">commands</span> <span class=\"title\">before</span> <span class=\"title\">execution</span></span></span><br><span class=\"line\"><span class=\"function\">   -<span class=\"title\">init</span> <span class=\"title\">FILENAME</span>       <span class=\"title\">read</span>/<span class=\"title\">process</span> <span class=\"title\">named</span> <span class=\"title\">file</span></span></span><br><span class=\"line\"><span class=\"function\">   -[<span class=\"title\">no</span>]<span class=\"title\">header</span>          <span class=\"title\">turn</span> <span class=\"title\">headers</span> <span class=\"title\">on</span> <span class=\"title\">or</span> <span class=\"title\">off</span></span></span><br><span class=\"line\"><span class=\"function\">   -<span class=\"title\">help</span>                <span class=\"title\">show</span> <span class=\"title\">this</span> <span class=\"title\">message</span></span></span><br><span class=\"line\"><span class=\"function\">   -<span class=\"title\">html</span>                <span class=\"title\">set</span> <span class=\"title\">output</span> <span class=\"title\">mode</span> <span class=\"title\">to</span> <span class=\"title\">HTML</span></span></span><br><span class=\"line\"><span class=\"function\">   -<span class=\"title\">interactive</span>         <span class=\"title\">force</span> <span class=\"title\">interactive</span> <span class=\"title\">I</span>/<span class=\"title\">O</span></span></span><br><span class=\"line\"><span class=\"function\">   -<span class=\"title\">line</span>                <span class=\"title\">set</span> <span class=\"title\">output</span> <span class=\"title\">mode</span> <span class=\"title\">to</span> '<span class=\"title\">line</span>'</span></span><br><span class=\"line\"><span class=\"function\">   -<span class=\"title\">list</span>                <span class=\"title\">set</span> <span class=\"title\">output</span> <span class=\"title\">mode</span> <span class=\"title\">to</span> '<span class=\"title\">list</span>'</span></span><br><span class=\"line\"><span class=\"function\">   -<span class=\"title\">lookaside</span> <span class=\"title\">SIZE</span> <span class=\"title\">N</span>    <span class=\"title\">use</span> <span class=\"title\">N</span> <span class=\"title\">entries</span> <span class=\"title\">of</span> <span class=\"title\">SZ</span> <span class=\"title\">bytes</span> <span class=\"title\">for</span> <span class=\"title\">lookaside</span> <span class=\"title\">memory</span></span></span><br><span class=\"line\"><span class=\"function\">   -<span class=\"title\">memtrace</span>            <span class=\"title\">trace</span> <span class=\"title\">all</span> <span class=\"title\">memory</span> <span class=\"title\">allocations</span> <span class=\"title\">and</span> <span class=\"title\">deallocations</span></span></span><br><span class=\"line\"><span class=\"function\">   -<span class=\"title\">mmap</span> <span class=\"title\">N</span>              <span class=\"title\">default</span> <span class=\"title\">mmap</span> <span class=\"title\">size</span> <span class=\"title\">set</span> <span class=\"title\">to</span> <span class=\"title\">N</span></span></span><br><span class=\"line\"><span class=\"function\">   -<span class=\"title\">newline</span> <span class=\"title\">SEP</span>         <span class=\"title\">set</span> <span class=\"title\">output</span> <span class=\"title\">row</span> <span class=\"title\">separator</span>. <span class=\"title\">Default</span>: '\\<span class=\"title\">n</span>'</span></span><br><span class=\"line\"><span class=\"function\">   -<span class=\"title\">nullvalue</span> <span class=\"title\">TEXT</span>      <span class=\"title\">set</span> <span class=\"title\">text</span> <span class=\"title\">string</span> <span class=\"title\">for</span> <span class=\"title\">NULL</span> <span class=\"title\">values</span>. <span class=\"title\">Default</span> ''</span></span><br><span class=\"line\"><span class=\"function\">   -<span class=\"title\">pagecache</span> <span class=\"title\">SIZE</span> <span class=\"title\">N</span>    <span class=\"title\">use</span> <span class=\"title\">N</span> <span class=\"title\">slots</span> <span class=\"title\">of</span> <span class=\"title\">SZ</span> <span class=\"title\">bytes</span> <span class=\"title\">each</span> <span class=\"title\">for</span> <span class=\"title\">page</span> <span class=\"title\">cache</span> <span class=\"title\">memory</span></span></span><br><span class=\"line\"><span class=\"function\">   -<span class=\"title\">quote</span>               <span class=\"title\">set</span> <span class=\"title\">output</span> <span class=\"title\">mode</span> <span class=\"title\">to</span> '<span class=\"title\">quote</span>'</span></span><br><span class=\"line\"><span class=\"function\">   -<span class=\"title\">readonly</span>            <span class=\"title\">open</span> <span class=\"title\">the</span> <span class=\"title\">database</span> <span class=\"title\">read</span>-<span class=\"title\">only</span></span></span><br><span class=\"line\"><span class=\"function\">   -<span class=\"title\">separator</span> <span class=\"title\">SEP</span>       <span class=\"title\">set</span> <span class=\"title\">output</span> <span class=\"title\">column</span> <span class=\"title\">separator</span>. <span class=\"title\">Default</span>: '|'</span></span><br><span class=\"line\"><span class=\"function\">   -<span class=\"title\">stats</span>               <span class=\"title\">print</span> <span class=\"title\">memory</span> <span class=\"title\">stats</span> <span class=\"title\">before</span> <span class=\"title\">each</span> <span class=\"title\">finalize</span></span></span><br><span class=\"line\"><span class=\"function\">   -<span class=\"title\">version</span>             <span class=\"title\">show</span> <span class=\"title\">SQLite</span> <span class=\"title\">version</span></span></span><br><span class=\"line\"><span class=\"function\">   -<span class=\"title\">vfs</span> <span class=\"title\">NAME</span>            <span class=\"title\">use</span> <span class=\"title\">NAME</span> <span class=\"title\">as</span> <span class=\"title\">the</span> <span class=\"title\">default</span> <span class=\"title\">VFS</span></span></span><br></pre></td></tr></table></figure></p></li>\r\n<li><p><code>.prompt [value]</code> 设置当前命令行提示符</p></li>\r\n<li><p><code>.show</code> 查看当前配置，如字段分隔符、记录分隔符、是否显示列名、数据库文件目录等</p></li>\r\n<li><p><code>.mode</code> 查看 / 设置显示格式，一般有：<code>ascii</code>、<code>csv</code>、<code>column</code>、<code>html</code>、<code>insert</code>、<code>line</code>、<code>list</code>、<code>quote</code>、<code>tabs</code>、<code>tcl</code> 几种格式</p></li>\r\n<li><p><code>.headers on|off</code> 显示 / 关闭字段名</p></li>\r\n<li><p><code>.tables</code> 显示当前数据库所有表名</p></li>\r\n<li><p><code>.indices [table_name]</code> 显示指定表索引</p></li>\r\n<li><p><code>.schema [table_name]</code> 显示所有 / 指定表或视图的 DDL 语句</p></li>\r\n<li><p><code>.output [file_name]</code> 指定输出文件，默认为标准输出 <code>stdout</code></p></li>\r\n<li><p><code>.dump [table_name]</code> 将整个数据库（或某些表，<code>table_name</code> 支持 <code>LIKE</code> 风格）导出成 SQL 语句</p></li>\r\n</ul>\r\n<h2 id=\"数据导入导出\">数据导入导出</h2>\r\n<h3 id=\"导出数据\">导出数据</h3>\r\n<p><strong>导出为 SQL 语句</strong></p>\r\n<figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sqlite&gt; .output file.sql</span><br><span class=\"line\">sqlite&gt; .dump</span><br><span class=\"line\">sqlite&gt; .output stdout</span><br></pre></td></tr></table></figure>\r\n<p><strong>导出为分隔符分隔文件</strong></p>\r\n<figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sqlite&gt; .<span class=\"built_in\">mode</span> csv</span><br><span class=\"line\">sqlite&gt; .output data.csv</span><br><span class=\"line\">sqlite&gt; select * from &lt;table&gt;</span><br><span class=\"line\">sqlite&gt; .output stdout</span><br></pre></td></tr></table></figure>\r\n<p>注：如需从该导出文件重新进行导入，应使用如上所示逗号分隔的格式。</p>\r\n<h3 id=\"导入数据\">导入数据</h3>\r\n<p><strong>通过执行包含 SQL 语句的文件导入</strong></p>\r\n<figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sqlite&gt; .read &lt;data.sql&gt;</span><br></pre></td></tr></table></figure>\r\n<p><strong>通过导入分隔符分隔文件</strong></p>\r\n<p>如果 <code>&lt;datafile&gt;</code> 为逗号分隔格式文件，则可通过 <code>.import</code> 语句导入：</p>\r\n<figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sqlite&gt; .import &lt;datafile&gt; &lt;table&gt;</span><br></pre></td></tr></table></figure>\r\n<h2 id=\"非交互命令处理\">非交互命令处理</h2>\r\n<ul>\r\n<li><code>sqlite3 test.db .dump</code></li>\r\n<li><code>sqlite3 test.db .dump &gt; data.sql</code></li>\r\n<li><code>sqlite3 test.db \"select * from test\"</code></li>\r\n<li><code>sqlite3 test.db &lt; opt.sql</code></li>\r\n<li><code>sqlite3 -init opt.sql test.db .exit</code>：首先新建 / 打开 <code>test.db</code>，再执行 <code>opt.sql</code> 中的命令，最后执行 <code>.exit</code></li>\r\n</ul>\r\n<h2 id=\"函数\">函数</h2>\r\n<ul>\r\n<li><code>last_insert_rowid()</code>：最后插入的自动增量值</li>\r\n</ul>\r\n","site":{"data":{}},"excerpt":"<p>电脑里 SumatraPDF 打开文件列表中的《SQLite 权威指南》已经躺了很久了，一直愁于无暇去看，工作一年至今读完的书籍更是屈指可数。由于工作需要也因为兴趣所在，数据库成了绕不过的坎。SQLite 数据库将数据以文件形式存于硬盘中（当然也支持内存数据库），区别于其他需要安装、部署的数据库，SQLite 在与其他程序集成方面显得更加的灵活轻便，如 Python、Autohotkey ，Python 甚至内置标准库 <code>sqlite3</code>；SQLite 也能被各种数据库软件支持，如 Navicat、Dbeaver、DbVisualizer 等。</p>\r\n<p>本篇文章以《SQLite 权威指南》为主要参考，记录 SQLite 常用用法，也能作为日后的参考使用文档。</p>","more":"<h2 id=\"入门\">入门</h2>\r\n<ul>\r\n<li>程序/运行库下载：<a href=\"https://www.sqlite.org\" target=\"_blank\" rel=\"noopener\">SQLite 官网</a></li>\r\n<li>仅包含 dll / def：<code>sqlite-dll-win32-xxx</code></li>\r\n<li>包含 <code>sqldiff.exe</code>、<code>sqlite3.exe</code>、<code>sqlite3_analyzer.exe</code>：<code>sqlite-tools-win32-xxx</code></li>\r\n</ul>\r\n<p>注：后文用到的 CLP 工具即为 <code>sqlite3.exe</code>。</p>\r\n<h3 id=\"clp\">CLP</h3>\r\n<ul>\r\n<li><p>在命令行键入 <code>sqlite3</code>，进入的是交互的 CLP 界面，类似于 Oracle 命令行工具 <code>sqlplus.exe</code> 或 MySQL 的 <code>mysql.exe</code>。在交互 CLP 界面键入 <code>.help</code> 查看帮助： <!--�172--></p>\r\n<p>另外命令行模式的 CLP 可以有如下参数： <!--�173--></p></li>\r\n<li><p><code>.prompt [value]</code> 设置当前命令行提示符</p></li>\r\n<li><p><code>.show</code> 查看当前配置，如字段分隔符、记录分隔符、是否显示列名、数据库文件目录等</p></li>\r\n<li><p><code>.mode</code> 查看 / 设置显示格式，一般有：<code>ascii</code>、<code>csv</code>、<code>column</code>、<code>html</code>、<code>insert</code>、<code>line</code>、<code>list</code>、<code>quote</code>、<code>tabs</code>、<code>tcl</code> 几种格式</p></li>\r\n<li><p><code>.headers on|off</code> 显示 / 关闭字段名</p></li>\r\n<li><p><code>.tables</code> 显示当前数据库所有表名</p></li>\r\n<li><p><code>.indices [table_name]</code> 显示指定表索引</p></li>\r\n<li><p><code>.schema [table_name]</code> 显示所有 / 指定表或视图的 DDL 语句</p></li>\r\n<li><p><code>.output [file_name]</code> 指定输出文件，默认为标准输出 <code>stdout</code></p></li>\r\n<li><p><code>.dump [table_name]</code> 将整个数据库（或某些表，<code>table_name</code> 支持 <code>LIKE</code> 风格）导出成 SQL 语句</p></li>\r\n</ul>\r\n<h2 id=\"数据导入导出\">数据导入导出</h2>\r\n<h3 id=\"导出数据\">导出数据</h3>\r\n<p><strong>导出为 SQL 语句</strong></p>\r\n<!--�174-->\r\n<p><strong>导出为分隔符分隔文件</strong></p>\r\n<!--�175-->\r\n<p>注：如需从该导出文件重新进行导入，应使用如上所示逗号分隔的格式。</p>\r\n<h3 id=\"导入数据\">导入数据</h3>\r\n<p><strong>通过执行包含 SQL 语句的文件导入</strong></p>\r\n<!--�176-->\r\n<p><strong>通过导入分隔符分隔文件</strong></p>\r\n<p>如果 <code>&lt;datafile&gt;</code> 为逗号分隔格式文件，则可通过 <code>.import</code> 语句导入：</p>\r\n<!--�177-->\r\n<h2 id=\"非交互命令处理\">非交互命令处理</h2>\r\n<ul>\r\n<li><code>sqlite3 test.db .dump</code></li>\r\n<li><code>sqlite3 test.db .dump &gt; data.sql</code></li>\r\n<li><code>sqlite3 test.db \"select * from test\"</code></li>\r\n<li><code>sqlite3 test.db &lt; opt.sql</code></li>\r\n<li><code>sqlite3 -init opt.sql test.db .exit</code>：首先新建 / 打开 <code>test.db</code>，再执行 <code>opt.sql</code> 中的命令，最后执行 <code>.exit</code></li>\r\n</ul>\r\n<h2 id=\"函数\">函数</h2>\r\n<ul>\r\n<li><code>last_insert_rowid()</code>：最后插入的自动增量值</li>\r\n</ul>"},{"title":"ssh / autossh / Xshell 端口转发及内网穿透","date":"2017-11-01T09:23:48.000Z","_content":"\n没有公网 IP？内网服务器成笼中凤凰？果断穿透一波！手头上有三台机器，记号如下：\n\n| 记号 | 位置          | 地址      | 账户  |\n| :--: | :--:          | :--:      | :--:  |\n| A    | 位于公网      | a.site    | usera |\n| B    | 位于 NAT 之后 | localhost | userb |\n| C    | 位于 NAT 之后 | localhost | userc |\n\n<!-- more -->\n\n## autossh 实现内网穿透\n\n首先介绍比较稳定的 `autossh`。\n\n### 操作\n\n1. 在机器 A 上：\n   - **设置 `sshd` 设置文件 `/etc/ssh/sshd_config`：`GatewayPorts yes`**\n   - `sudo systemctl restart sshd`\n1. 在机器 B 上：\n   创建 SSH 密钥，上传至 A：\n   {% codeblock lang:bash %}\n   ssh-keygen -t 'rsa'\n   ssh-copy-id usera@a.site\n   {% endcodeblock %}\n1. - 如果仅作测试，直接键入命令\n     {% codeblock lang:bash %}\n     autossh -M 6777 -NR 6766:localhost:22 usera@a.site -i /path/to/id_rsa\n     {% endcodeblock %}\n     即可，但该命令会在前端等待。如果需要不间断运行地置于后台，\n     可使用 `nohup` 命令：\n     {% codeblock lang:bash %}\n     nohup autossh -M 6777 -NR 6766:localhost:22 usera@a.site -i /path/to/id_rsa >/dev/null 2>&1 &\n     {% endcodeblock %}\n     {% fa warning fw%} **注** 其中的 `-M xxxx` 表示守护进程，也就是如果监测到 6766 端口的进程挂掉之后，又会重新开启 `autossh` （所以可能导致 `kill` 不完进程），如果改为 `-M 0` 则表示没有守护进程。\n   - 如果希望作为系统服务并开机启动，需进行如下操作：\n     1. 编辑文件 `/etc/systemd/system/autossh.service`，\n        {% codeblock autossh.service lang:ini %}\n        [Unit]\n        Description=autossh ssh\n        After=network-online.target\n\n        [Service]\n        Environment=\"AUTOSSH_GATETIME=0\"\n        ExecStart=/usr/bin/autossh -M 0 -o \"ExitOnForwardFailure=yes\" -o \"ServerAliveInterval 30\" -o \"ServerAliveCountMax 3\" -NR 6766:localhost:22 usera@a.site -i /path/to/id_rsa\n\n        [Install]\n        WantedBy=multi-user.target\n        {% endcodeblock %}\n     1. 一通令之生效的操作：\n        ```bash\n        sudo systemctl daemon-reload\n        sudo systemctl enable autossh\n        sudo systemctl start autossh\n        sudo systemctl status autossh\n        ```\n\n    {% fa warning fw%} **注**\n    - `*.service` 文件中需要写绝对路径\n    - `systemctl enable` 表示设置服务为自动启动\n\n### 开耍\n\n- A 连 B：`ssh -p 6766 userb@localhost`\n- C 连 B：`ssh -p 6766 userb@a.site`\n- 反向连接时指定动态端口转发（机器 C）：`ssh -p 6766 -qngfNTD 7677 userb@a.site`\n\n### 问题\n\n- 报错：\n  {% codeblock lang:bash %}\n  /usr/bin/ssh-copy-id: ERROR: failed to open ID file '/home/ismail/.pub': No such file\n  {% endcodeblock %}\n  解决方案：不带参数地生成秘钥 `ssh-keygen`\n- 防止超时断开：\n  - 在 B 和 C 的`/etc/ssh/ssh_config`后面加上: `ServerAliveInterval 60`\n  - 在 A 机的`/etc/ssh/sshd_config`后面加上： `ClientAliveInterval 60`\n- 少数情况下，问题会出在 ssh 的认证上，可能需要下列操作：\n  - 修改文件 `/etc/ssh/ssh_config`:\n    {% codeblock lang:bash %}\n    GSSAPIAuthentication no\n    GSSAPIDelegateCredentials no\n    StrictHostKeyChecking no\n    {% endcodeblock %}\n- 棘手问题 `ssh_exchange_identification: read: Connection reset by peer` 解决方案：\n  1. 删除已有 `autossh` 连接，重启服务\n  1. 若问题仍在，尝试在机器 A 上新开 SSH 端口，方法有两种：\n     在 `/etc/ssh/sshd_config` 中添加 `Port xxxxx`；或 <code>sudo \\`which sshd\\` -ddd -p xxxxx</code>。修改机器 B 中相关的服务参数并且重启服务\n\n\n## ssh 端口转发\n\n除了利用 `autossh` 作为反向代理工具，强大的 `ssh` 自身就可以实现正向代理以及反向代理。下面摘自 [SSH隧道与端口转发内网穿透](http://blog.csdn.net/zhanlanmg/article/details/47946753).\n\n- `-L port:host:hostport`：将本地机（客户机）的某个端口转发到远端指定机器的指定端口。  本地机器上分配了一个 `socket` 侦听 `port` 端口，一旦这个端口上有了连接，该连接就经过安全通道转发出去，  同时远程主机和 `host` 的 `hostport` 端口建立连接。可以在配置文件中指定端口的转发。只有 `root` 才能转发特权端口。IPv6 地址用另一种格式说明：`port/host/hostport`\n- `-R port:host:hostport `：将远程主机（服务器）的某个端口转发到本地端指定机器的指定端口。  远程主机上分配了一个 `socket` 侦听 `port` 端口，  一旦这个端口上有了连接，该连接就经过安全通道转向出去，同时本地主机和 `host` 的 `hostport` 端口建立连接。可以在配置文件中指定端口的转发。只有用 `root` 登录远程主机才能转发特权端口。IPv6 地址用另一种格式说明：`port/host/hostport`\n- `-D port`：指定一个本地机器「动态的」应用程序端口转发。  本地机器上分配了一个 `socket` 侦听 `port` 端口，一旦这个端口上有了连接，该连接就经过安全通道转发出去，  根据应用程序的协议可以判断出远程主机将和哪里连接。目前支持 `SOCKS4` 协议，将充当 `SOCKS4` 服务器。  只有 `root` 才能转发特权端口。可以在配置文件中指定动态端口的转发\n- `-p`：指定登录端口\n- `-f`：后台认证用户 / 密码，通常和 `-N` 连用，不用登录到远程主机\n- `-N`：不执行远程命令\n- `-q`：进入安静模式\n- `-C`：压缩数据传输\n- `-g`：在 `-L/-R/-D` 参数中，允许远程主机连接到建立的转发的端口，如果不加这个参数，只允许本地主机建立连接\n\n常用的 SSH 隧道操作：\n\n- 正向代理：`ssh -C -f -N -L listen_port:DST_Host:DST_port user@Tunnel_Host`\n- 反向代理：`ssh -C -f -N -R listen_port:DST_Host:DST_port user@Tunnel_Host`\n- 动态转发：`ssh -C -f -N -D listen_port user@Tunnel_Host`\n\n为保持长时间连接，同 `autossh` 的参数，`ssh` 可附加的参数有： `-o TCPKeepAlive=yes`，`-o ServerAliveInterval=30`, `-o ServerAliveCountMax=3` 等。\n\n## Xshell 隧道转发\n\n设想这样一个场景：本地机器 C 已经可以通过具有公网 IP 的 A 连接到服务器 B 的 SSH 服务，也就是说存在这样的一条隧道：`C - A(10001) - B(22)`。而在服务器 B 上运行着其它程序（比如网站），端口号为 5000，如果希望在本地 C 上直接访问到 B 的网站，自然下面这种思路：「建立从 `B(5000) - A(<web-port>)` 的隧道，C 通过 `http://A:<web-port>` 进行访问」。如此一来，又需要做一个「穿透」，把 B 的 5000 端口反向代理出去。但能否存在一种方式，在不额外给 A 增加服务端口的情况下，令 C 直接访问到 B 呢？\n客户端软件 Xshell 的隧道转发功能正好派上用场。Xshell 的设置中自带端口转发技能（或称「隧道」，听起来比较 ~~装逼~~ 高大上）：`Sessions` - `Properties` - `Connection` - `SSH` - `Tunneling`。上述情形，仅需在连接 `C - A(10001) - B(22)` 中添加正向代理：\n\n```\nType             : Local(Outgoing)\nSource Host      : localhost\nListening Port   : <web-port>\nDestination Host : localhost\nDestination Port : 5000\n```\n\n保存会话属性并连接后，会在本地开启 `<web-port>` 端口，在本地机器 C 中浏览 `http://localhost:<web-port>` 即可访问到 B 中运行的网站了。\n\n## 参考\n\n- [**AutoSSH reverse tunnel service config for systemd**](https://gist.github.com/ntrepid8/0af12c012dd2567c800799d86eb44f90)\n- [使用SSH反向隧道进行内网穿透](http://arondight.me/2016/02/17/%E4%BD%BF%E7%94%A8SSH%E5%8F%8D%E5%90%91%E9%9A%A7%E9%81%93%E8%BF%9B%E8%A1%8C%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F)\n- [SSH端口转发：实现反向SSH隧道内网穿透](http://www.huangwenchao.com.cn/2016/10/ssh-reverse-tunnel.html)\n","source":"_posts/ssh-reverse-tunnel.md","raw":"---\ntitle: ssh / autossh / Xshell 端口转发及内网穿透\ndate: 2017-11-01 17:23:48\ntags:\n    - Server\n    - SSH\n    - Autossh\n    - Xshell\ncategories: Operation and Maintenance\n---\n\n没有公网 IP？内网服务器成笼中凤凰？果断穿透一波！手头上有三台机器，记号如下：\n\n| 记号 | 位置          | 地址      | 账户  |\n| :--: | :--:          | :--:      | :--:  |\n| A    | 位于公网      | a.site    | usera |\n| B    | 位于 NAT 之后 | localhost | userb |\n| C    | 位于 NAT 之后 | localhost | userc |\n\n<!-- more -->\n\n## autossh 实现内网穿透\n\n首先介绍比较稳定的 `autossh`。\n\n### 操作\n\n1. 在机器 A 上：\n   - **设置 `sshd` 设置文件 `/etc/ssh/sshd_config`：`GatewayPorts yes`**\n   - `sudo systemctl restart sshd`\n1. 在机器 B 上：\n   创建 SSH 密钥，上传至 A：\n   {% codeblock lang:bash %}\n   ssh-keygen -t 'rsa'\n   ssh-copy-id usera@a.site\n   {% endcodeblock %}\n1. - 如果仅作测试，直接键入命令\n     {% codeblock lang:bash %}\n     autossh -M 6777 -NR 6766:localhost:22 usera@a.site -i /path/to/id_rsa\n     {% endcodeblock %}\n     即可，但该命令会在前端等待。如果需要不间断运行地置于后台，\n     可使用 `nohup` 命令：\n     {% codeblock lang:bash %}\n     nohup autossh -M 6777 -NR 6766:localhost:22 usera@a.site -i /path/to/id_rsa >/dev/null 2>&1 &\n     {% endcodeblock %}\n     {% fa warning fw%} **注** 其中的 `-M xxxx` 表示守护进程，也就是如果监测到 6766 端口的进程挂掉之后，又会重新开启 `autossh` （所以可能导致 `kill` 不完进程），如果改为 `-M 0` 则表示没有守护进程。\n   - 如果希望作为系统服务并开机启动，需进行如下操作：\n     1. 编辑文件 `/etc/systemd/system/autossh.service`，\n        {% codeblock autossh.service lang:ini %}\n        [Unit]\n        Description=autossh ssh\n        After=network-online.target\n\n        [Service]\n        Environment=\"AUTOSSH_GATETIME=0\"\n        ExecStart=/usr/bin/autossh -M 0 -o \"ExitOnForwardFailure=yes\" -o \"ServerAliveInterval 30\" -o \"ServerAliveCountMax 3\" -NR 6766:localhost:22 usera@a.site -i /path/to/id_rsa\n\n        [Install]\n        WantedBy=multi-user.target\n        {% endcodeblock %}\n     1. 一通令之生效的操作：\n        ```bash\n        sudo systemctl daemon-reload\n        sudo systemctl enable autossh\n        sudo systemctl start autossh\n        sudo systemctl status autossh\n        ```\n\n    {% fa warning fw%} **注**\n    - `*.service` 文件中需要写绝对路径\n    - `systemctl enable` 表示设置服务为自动启动\n\n### 开耍\n\n- A 连 B：`ssh -p 6766 userb@localhost`\n- C 连 B：`ssh -p 6766 userb@a.site`\n- 反向连接时指定动态端口转发（机器 C）：`ssh -p 6766 -qngfNTD 7677 userb@a.site`\n\n### 问题\n\n- 报错：\n  {% codeblock lang:bash %}\n  /usr/bin/ssh-copy-id: ERROR: failed to open ID file '/home/ismail/.pub': No such file\n  {% endcodeblock %}\n  解决方案：不带参数地生成秘钥 `ssh-keygen`\n- 防止超时断开：\n  - 在 B 和 C 的`/etc/ssh/ssh_config`后面加上: `ServerAliveInterval 60`\n  - 在 A 机的`/etc/ssh/sshd_config`后面加上： `ClientAliveInterval 60`\n- 少数情况下，问题会出在 ssh 的认证上，可能需要下列操作：\n  - 修改文件 `/etc/ssh/ssh_config`:\n    {% codeblock lang:bash %}\n    GSSAPIAuthentication no\n    GSSAPIDelegateCredentials no\n    StrictHostKeyChecking no\n    {% endcodeblock %}\n- 棘手问题 `ssh_exchange_identification: read: Connection reset by peer` 解决方案：\n  1. 删除已有 `autossh` 连接，重启服务\n  1. 若问题仍在，尝试在机器 A 上新开 SSH 端口，方法有两种：\n     在 `/etc/ssh/sshd_config` 中添加 `Port xxxxx`；或 <code>sudo \\`which sshd\\` -ddd -p xxxxx</code>。修改机器 B 中相关的服务参数并且重启服务\n\n\n## ssh 端口转发\n\n除了利用 `autossh` 作为反向代理工具，强大的 `ssh` 自身就可以实现正向代理以及反向代理。下面摘自 [SSH隧道与端口转发内网穿透](http://blog.csdn.net/zhanlanmg/article/details/47946753).\n\n- `-L port:host:hostport`：将本地机（客户机）的某个端口转发到远端指定机器的指定端口。  本地机器上分配了一个 `socket` 侦听 `port` 端口，一旦这个端口上有了连接，该连接就经过安全通道转发出去，  同时远程主机和 `host` 的 `hostport` 端口建立连接。可以在配置文件中指定端口的转发。只有 `root` 才能转发特权端口。IPv6 地址用另一种格式说明：`port/host/hostport`\n- `-R port:host:hostport `：将远程主机（服务器）的某个端口转发到本地端指定机器的指定端口。  远程主机上分配了一个 `socket` 侦听 `port` 端口，  一旦这个端口上有了连接，该连接就经过安全通道转向出去，同时本地主机和 `host` 的 `hostport` 端口建立连接。可以在配置文件中指定端口的转发。只有用 `root` 登录远程主机才能转发特权端口。IPv6 地址用另一种格式说明：`port/host/hostport`\n- `-D port`：指定一个本地机器「动态的」应用程序端口转发。  本地机器上分配了一个 `socket` 侦听 `port` 端口，一旦这个端口上有了连接，该连接就经过安全通道转发出去，  根据应用程序的协议可以判断出远程主机将和哪里连接。目前支持 `SOCKS4` 协议，将充当 `SOCKS4` 服务器。  只有 `root` 才能转发特权端口。可以在配置文件中指定动态端口的转发\n- `-p`：指定登录端口\n- `-f`：后台认证用户 / 密码，通常和 `-N` 连用，不用登录到远程主机\n- `-N`：不执行远程命令\n- `-q`：进入安静模式\n- `-C`：压缩数据传输\n- `-g`：在 `-L/-R/-D` 参数中，允许远程主机连接到建立的转发的端口，如果不加这个参数，只允许本地主机建立连接\n\n常用的 SSH 隧道操作：\n\n- 正向代理：`ssh -C -f -N -L listen_port:DST_Host:DST_port user@Tunnel_Host`\n- 反向代理：`ssh -C -f -N -R listen_port:DST_Host:DST_port user@Tunnel_Host`\n- 动态转发：`ssh -C -f -N -D listen_port user@Tunnel_Host`\n\n为保持长时间连接，同 `autossh` 的参数，`ssh` 可附加的参数有： `-o TCPKeepAlive=yes`，`-o ServerAliveInterval=30`, `-o ServerAliveCountMax=3` 等。\n\n## Xshell 隧道转发\n\n设想这样一个场景：本地机器 C 已经可以通过具有公网 IP 的 A 连接到服务器 B 的 SSH 服务，也就是说存在这样的一条隧道：`C - A(10001) - B(22)`。而在服务器 B 上运行着其它程序（比如网站），端口号为 5000，如果希望在本地 C 上直接访问到 B 的网站，自然下面这种思路：「建立从 `B(5000) - A(<web-port>)` 的隧道，C 通过 `http://A:<web-port>` 进行访问」。如此一来，又需要做一个「穿透」，把 B 的 5000 端口反向代理出去。但能否存在一种方式，在不额外给 A 增加服务端口的情况下，令 C 直接访问到 B 呢？\n客户端软件 Xshell 的隧道转发功能正好派上用场。Xshell 的设置中自带端口转发技能（或称「隧道」，听起来比较 ~~装逼~~ 高大上）：`Sessions` - `Properties` - `Connection` - `SSH` - `Tunneling`。上述情形，仅需在连接 `C - A(10001) - B(22)` 中添加正向代理：\n\n```\nType             : Local(Outgoing)\nSource Host      : localhost\nListening Port   : <web-port>\nDestination Host : localhost\nDestination Port : 5000\n```\n\n保存会话属性并连接后，会在本地开启 `<web-port>` 端口，在本地机器 C 中浏览 `http://localhost:<web-port>` 即可访问到 B 中运行的网站了。\n\n## 参考\n\n- [**AutoSSH reverse tunnel service config for systemd**](https://gist.github.com/ntrepid8/0af12c012dd2567c800799d86eb44f90)\n- [使用SSH反向隧道进行内网穿透](http://arondight.me/2016/02/17/%E4%BD%BF%E7%94%A8SSH%E5%8F%8D%E5%90%91%E9%9A%A7%E9%81%93%E8%BF%9B%E8%A1%8C%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F)\n- [SSH端口转发：实现反向SSH隧道内网穿透](http://www.huangwenchao.com.cn/2016/10/ssh-reverse-tunnel.html)\n","slug":"ssh-reverse-tunnel","published":1,"updated":"2023-03-09T16:09:38.295Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u3378003qp4x0v7mezq0q","content":"<p>没有公网 IP？内网服务器成笼中凤凰？果断穿透一波！手头上有三台机器，记号如下：</p>\r\n<table>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: center;\">记号</th>\r\n<th style=\"text-align: center;\">位置</th>\r\n<th style=\"text-align: center;\">地址</th>\r\n<th style=\"text-align: center;\">账户</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">A</td>\r\n<td style=\"text-align: center;\">位于公网</td>\r\n<td style=\"text-align: center;\">a.site</td>\r\n<td style=\"text-align: center;\">usera</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\">B</td>\r\n<td style=\"text-align: center;\">位于 NAT 之后</td>\r\n<td style=\"text-align: center;\">localhost</td>\r\n<td style=\"text-align: center;\">userb</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">C</td>\r\n<td style=\"text-align: center;\">位于 NAT 之后</td>\r\n<td style=\"text-align: center;\">localhost</td>\r\n<td style=\"text-align: center;\">userc</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<a id=\"more\"></a>\r\n<h2 id=\"autossh-实现内网穿透\">autossh 实现内网穿透</h2>\r\n<p>首先介绍比较稳定的 <code>autossh</code>。</p>\r\n<h3 id=\"操作\">操作</h3>\r\n<ol type=\"1\">\r\n<li>在机器 A 上：\r\n<ul>\r\n<li><strong>设置 <code>sshd</code> 设置文件 <code>/etc/ssh/sshd_config</code>：<code>GatewayPorts yes</code></strong></li>\r\n<li><code>sudo systemctl restart sshd</code></li>\r\n</ul></li>\r\n<li>在机器 B 上： 创建 SSH 密钥，上传至 A： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t <span class=\"string\">'rsa'</span></span><br><span class=\"line\">ssh-copy-id usera@a.site</span><br></pre></td></tr></table></figure></li>\r\n<li><ul>\r\n<li>如果仅作测试，直接键入命令 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">autossh -M 6777 -NR 6766:localhost:22 usera@a.site -i /path/to/id_rsa</span><br></pre></td></tr></table></figure> 即可，但该命令会在前端等待。如果需要不间断运行地置于后台， 可使用 <code>nohup</code> 命令： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nohup autossh -M 6777 -NR 6766:localhost:22 usera@a.site -i /path/to/id_rsa &gt;/dev/null 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure> <i class=\"fa fa-warning fa-fw\"></i> <strong>注</strong> 其中的 <code>-M xxxx</code> 表示守护进程，也就是如果监测到 6766 端口的进程挂掉之后，又会重新开启 <code>autossh</code> （所以可能导致 <code>kill</code> 不完进程），如果改为 <code>-M 0</code> 则表示没有守护进程。</li>\r\n<li>如果希望作为系统服务并开机启动，需进行如下操作：\r\n<ol type=\"1\">\r\n<li>编辑文件 <code>/etc/systemd/system/autossh.service</code>， <figure class=\"highlight ini\"><figcaption><span>autossh.service</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[Unit]</span></span><br><span class=\"line\"><span class=\"attr\">Description</span>=autossh ssh</span><br><span class=\"line\"><span class=\"attr\">After</span>=network-<span class=\"literal\">on</span>line.target</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[Service]</span></span><br><span class=\"line\"><span class=\"attr\">Environment</span>=<span class=\"string\">\"AUTOSSH_GATETIME=0\"</span></span><br><span class=\"line\"><span class=\"attr\">ExecStart</span>=/usr/bin/autossh -M <span class=\"number\">0</span> -o <span class=\"string\">\"ExitOnForwardFailure=yes\"</span> -o <span class=\"string\">\"ServerAliveInterval 30\"</span> -o <span class=\"string\">\"ServerAliveCountMax 3\"</span> -NR <span class=\"number\">6766</span>:localhost:<span class=\"number\">22</span> usera@a.site -i /path/to/id_rsa</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[Install]</span></span><br><span class=\"line\"><span class=\"attr\">WantedBy</span>=multi-user.target</span><br></pre></td></tr></table></figure></li>\r\n<li>一通令之生效的操作： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl daemon-reload</span><br><span class=\"line\">sudo systemctl <span class=\"built_in\">enable</span> autossh</span><br><span class=\"line\">sudo systemctl start autossh</span><br><span class=\"line\">sudo systemctl status autossh</span><br></pre></td></tr></table></figure></li>\r\n</ol></li>\r\n</ul>\r\n<i class=\"fa fa-warning fa-fw\"></i> <strong>注</strong>\r\n<ul>\r\n<li><code>*.service</code> 文件中需要写绝对路径</li>\r\n<li><code>systemctl enable</code> 表示设置服务为自动启动</li>\r\n</ul></li>\r\n</ol>\r\n<h3 id=\"开耍\">开耍</h3>\r\n<ul>\r\n<li>A 连 B：<code>ssh -p 6766 userb@localhost</code></li>\r\n<li>C 连 B：<code>ssh -p 6766 userb@a.site</code></li>\r\n<li>反向连接时指定动态端口转发（机器 C）：<code>ssh -p 6766 -qngfNTD 7677 userb@a.site</code></li>\r\n</ul>\r\n<h3 id=\"问题\">问题</h3>\r\n<ul>\r\n<li>报错： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/bin/ssh-copy-id: ERROR: failed to open ID file <span class=\"string\">'/home/ismail/.pub'</span>: No such file</span><br></pre></td></tr></table></figure> 解决方案：不带参数地生成秘钥 <code>ssh-keygen</code></li>\r\n<li>防止超时断开：\r\n<ul>\r\n<li>在 B 和 C 的<code>/etc/ssh/ssh_config</code>后面加上: <code>ServerAliveInterval 60</code></li>\r\n<li>在 A 机的<code>/etc/ssh/sshd_config</code>后面加上： <code>ClientAliveInterval 60</code></li>\r\n</ul></li>\r\n<li>少数情况下，问题会出在 ssh 的认证上，可能需要下列操作：\r\n<ul>\r\n<li>修改文件 <code>/etc/ssh/ssh_config</code>: <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GSSAPIAuthentication no</span><br><span class=\"line\">GSSAPIDelegateCredentials no</span><br><span class=\"line\">StrictHostKeyChecking no</span><br></pre></td></tr></table></figure></li>\r\n</ul></li>\r\n<li>棘手问题 <code>ssh_exchange_identification: read: Connection reset by peer</code> 解决方案：\r\n<ol type=\"1\">\r\n<li>删除已有 <code>autossh</code> 连接，重启服务</li>\r\n<li>若问题仍在，尝试在机器 A 上新开 SSH 端口，方法有两种： 在 <code>/etc/ssh/sshd_config</code> 中添加 <code>Port xxxxx</code>；或 <code>sudo `which sshd` -ddd -p xxxxx</code>。修改机器 B 中相关的服务参数并且重启服务</li>\r\n</ol></li>\r\n</ul>\r\n<h2 id=\"ssh-端口转发\">ssh 端口转发</h2>\r\n<p>除了利用 <code>autossh</code> 作为反向代理工具，强大的 <code>ssh</code> 自身就可以实现正向代理以及反向代理。下面摘自 <a href=\"http://blog.csdn.net/zhanlanmg/article/details/47946753\" target=\"_blank\" rel=\"noopener\">SSH隧道与端口转发内网穿透</a>.</p>\r\n<ul>\r\n<li><code>-L port:host:hostport</code>：将本地机（客户机）的某个端口转发到远端指定机器的指定端口。 本地机器上分配了一个 <code>socket</code> 侦听 <code>port</code> 端口，一旦这个端口上有了连接，该连接就经过安全通道转发出去， 同时远程主机和 <code>host</code> 的 <code>hostport</code> 端口建立连接。可以在配置文件中指定端口的转发。只有 <code>root</code> 才能转发特权端口。IPv6 地址用另一种格式说明：<code>port/host/hostport</code></li>\r\n<li><code>-R port:host:hostport</code>：将远程主机（服务器）的某个端口转发到本地端指定机器的指定端口。 远程主机上分配了一个 <code>socket</code> 侦听 <code>port</code> 端口， 一旦这个端口上有了连接，该连接就经过安全通道转向出去，同时本地主机和 <code>host</code> 的 <code>hostport</code> 端口建立连接。可以在配置文件中指定端口的转发。只有用 <code>root</code> 登录远程主机才能转发特权端口。IPv6 地址用另一种格式说明：<code>port/host/hostport</code></li>\r\n<li><code>-D port</code>：指定一个本地机器「动态的」应用程序端口转发。 本地机器上分配了一个 <code>socket</code> 侦听 <code>port</code> 端口，一旦这个端口上有了连接，该连接就经过安全通道转发出去， 根据应用程序的协议可以判断出远程主机将和哪里连接。目前支持 <code>SOCKS4</code> 协议，将充当 <code>SOCKS4</code> 服务器。 只有 <code>root</code> 才能转发特权端口。可以在配置文件中指定动态端口的转发</li>\r\n<li><code>-p</code>：指定登录端口</li>\r\n<li><code>-f</code>：后台认证用户 / 密码，通常和 <code>-N</code> 连用，不用登录到远程主机</li>\r\n<li><code>-N</code>：不执行远程命令</li>\r\n<li><code>-q</code>：进入安静模式</li>\r\n<li><code>-C</code>：压缩数据传输</li>\r\n<li><code>-g</code>：在 <code>-L/-R/-D</code> 参数中，允许远程主机连接到建立的转发的端口，如果不加这个参数，只允许本地主机建立连接</li>\r\n</ul>\r\n<p>常用的 SSH 隧道操作：</p>\r\n<ul>\r\n<li>正向代理：<code>ssh -C -f -N -L listen_port:DST_Host:DST_port user@Tunnel_Host</code></li>\r\n<li>反向代理：<code>ssh -C -f -N -R listen_port:DST_Host:DST_port user@Tunnel_Host</code></li>\r\n<li>动态转发：<code>ssh -C -f -N -D listen_port user@Tunnel_Host</code></li>\r\n</ul>\r\n<p>为保持长时间连接，同 <code>autossh</code> 的参数，<code>ssh</code> 可附加的参数有： <code>-o TCPKeepAlive=yes</code>，<code>-o ServerAliveInterval=30</code>, <code>-o ServerAliveCountMax=3</code> 等。</p>\r\n<h2 id=\"xshell-隧道转发\">Xshell 隧道转发</h2>\r\n<p>设想这样一个场景：本地机器 C 已经可以通过具有公网 IP 的 A 连接到服务器 B 的 SSH 服务，也就是说存在这样的一条隧道：<code>C - A(10001) - B(22)</code>。而在服务器 B 上运行着其它程序（比如网站），端口号为 5000，如果希望在本地 C 上直接访问到 B 的网站，自然下面这种思路：「建立从 <code>B(5000) - A(&lt;web-port&gt;)</code> 的隧道，C 通过 <code>http://A:&lt;web-port&gt;</code> 进行访问」。如此一来，又需要做一个「穿透」，把 B 的 5000 端口反向代理出去。但能否存在一种方式，在不额外给 A 增加服务端口的情况下，令 C 直接访问到 B 呢？ 客户端软件 Xshell 的隧道转发功能正好派上用场。Xshell 的设置中自带端口转发技能（或称「隧道」，听起来比较 <del>装逼</del> 高大上）：<code>Sessions</code> - <code>Properties</code> - <code>Connection</code> - <code>SSH</code> - <code>Tunneling</code>。上述情形，仅需在连接 <code>C - A(10001) - B(22)</code> 中添加正向代理：</p>\r\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Type             : Local(Outgoing)</span><br><span class=\"line\">Source Host      : localhost</span><br><span class=\"line\">Listening Port   : &lt;web-port&gt;</span><br><span class=\"line\">Destination Host : localhost</span><br><span class=\"line\">Destination Port : 5000</span><br></pre></td></tr></table></figure>\r\n<p>保存会话属性并连接后，会在本地开启 <code>&lt;web-port&gt;</code> 端口，在本地机器 C 中浏览 <code>http://localhost:&lt;web-port&gt;</code> 即可访问到 B 中运行的网站了。</p>\r\n<h2 id=\"参考\">参考</h2>\r\n<ul>\r\n<li><a href=\"https://gist.github.com/ntrepid8/0af12c012dd2567c800799d86eb44f90\" target=\"_blank\" rel=\"noopener\"><strong>AutoSSH reverse tunnel service config for systemd</strong></a></li>\r\n<li><a href=\"http://arondight.me/2016/02/17/%E4%BD%BF%E7%94%A8SSH%E5%8F%8D%E5%90%91%E9%9A%A7%E9%81%93%E8%BF%9B%E8%A1%8C%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F\" target=\"_blank\" rel=\"noopener\">使用SSH反向隧道进行内网穿透</a></li>\r\n<li><a href=\"http://www.huangwenchao.com.cn/2016/10/ssh-reverse-tunnel.html\" target=\"_blank\" rel=\"noopener\">SSH端口转发：实现反向SSH隧道内网穿透</a></li>\r\n</ul>\r\n","site":{"data":{}},"excerpt":"<p>没有公网 IP？内网服务器成笼中凤凰？果断穿透一波！手头上有三台机器，记号如下：</p>\r\n<table>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: center;\">记号</th>\r\n<th style=\"text-align: center;\">位置</th>\r\n<th style=\"text-align: center;\">地址</th>\r\n<th style=\"text-align: center;\">账户</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">A</td>\r\n<td style=\"text-align: center;\">位于公网</td>\r\n<td style=\"text-align: center;\">a.site</td>\r\n<td style=\"text-align: center;\">usera</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\">B</td>\r\n<td style=\"text-align: center;\">位于 NAT 之后</td>\r\n<td style=\"text-align: center;\">localhost</td>\r\n<td style=\"text-align: center;\">userb</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\">C</td>\r\n<td style=\"text-align: center;\">位于 NAT 之后</td>\r\n<td style=\"text-align: center;\">localhost</td>\r\n<td style=\"text-align: center;\">userc</td>\r\n</tr>\r\n</tbody>\r\n</table>","more":"<h2 id=\"autossh-实现内网穿透\">autossh 实现内网穿透</h2>\r\n<p>首先介绍比较稳定的 <code>autossh</code>。</p>\r\n<h3 id=\"操作\">操作</h3>\r\n<ol type=\"1\">\r\n<li>在机器 A 上：\r\n<ul>\r\n<li><strong>设置 <code>sshd</code> 设置文件 <code>/etc/ssh/sshd_config</code>：<code>GatewayPorts yes</code></strong></li>\r\n<li><code>sudo systemctl restart sshd</code></li>\r\n</ul></li>\r\n<li>在机器 B 上： 创建 SSH 密钥，上传至 A： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t <span class=\"string\">'rsa'</span></span><br><span class=\"line\">ssh-copy-id usera@a.site</span><br></pre></td></tr></table></figure></li>\r\n<li><ul>\r\n<li>如果仅作测试，直接键入命令 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">autossh -M 6777 -NR 6766:localhost:22 usera@a.site -i /path/to/id_rsa</span><br></pre></td></tr></table></figure> 即可，但该命令会在前端等待。如果需要不间断运行地置于后台， 可使用 <code>nohup</code> 命令： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nohup autossh -M 6777 -NR 6766:localhost:22 usera@a.site -i /path/to/id_rsa &gt;/dev/null 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure> <i class=\"fa fa-warning fa-fw\"></i> <strong>注</strong> 其中的 <code>-M xxxx</code> 表示守护进程，也就是如果监测到 6766 端口的进程挂掉之后，又会重新开启 <code>autossh</code> （所以可能导致 <code>kill</code> 不完进程），如果改为 <code>-M 0</code> 则表示没有守护进程。</li>\r\n<li>如果希望作为系统服务并开机启动，需进行如下操作：\r\n<ol type=\"1\">\r\n<li>编辑文件 <code>/etc/systemd/system/autossh.service</code>， <figure class=\"highlight ini\"><figcaption><span>autossh.service</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[Unit]</span></span><br><span class=\"line\"><span class=\"attr\">Description</span>=autossh ssh</span><br><span class=\"line\"><span class=\"attr\">After</span>=network-<span class=\"literal\">on</span>line.target</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[Service]</span></span><br><span class=\"line\"><span class=\"attr\">Environment</span>=<span class=\"string\">\"AUTOSSH_GATETIME=0\"</span></span><br><span class=\"line\"><span class=\"attr\">ExecStart</span>=/usr/bin/autossh -M <span class=\"number\">0</span> -o <span class=\"string\">\"ExitOnForwardFailure=yes\"</span> -o <span class=\"string\">\"ServerAliveInterval 30\"</span> -o <span class=\"string\">\"ServerAliveCountMax 3\"</span> -NR <span class=\"number\">6766</span>:localhost:<span class=\"number\">22</span> usera@a.site -i /path/to/id_rsa</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[Install]</span></span><br><span class=\"line\"><span class=\"attr\">WantedBy</span>=multi-user.target</span><br></pre></td></tr></table></figure></li>\r\n<li>一通令之生效的操作： <!--�178--></li>\r\n</ol></li>\r\n</ul>\r\n<i class=\"fa fa-warning fa-fw\"></i> <strong>注</strong>\r\n<ul>\r\n<li><code>*.service</code> 文件中需要写绝对路径</li>\r\n<li><code>systemctl enable</code> 表示设置服务为自动启动</li>\r\n</ul></li>\r\n</ol>\r\n<h3 id=\"开耍\">开耍</h3>\r\n<ul>\r\n<li>A 连 B：<code>ssh -p 6766 userb@localhost</code></li>\r\n<li>C 连 B：<code>ssh -p 6766 userb@a.site</code></li>\r\n<li>反向连接时指定动态端口转发（机器 C）：<code>ssh -p 6766 -qngfNTD 7677 userb@a.site</code></li>\r\n</ul>\r\n<h3 id=\"问题\">问题</h3>\r\n<ul>\r\n<li>报错： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/bin/ssh-copy-id: ERROR: failed to open ID file <span class=\"string\">'/home/ismail/.pub'</span>: No such file</span><br></pre></td></tr></table></figure> 解决方案：不带参数地生成秘钥 <code>ssh-keygen</code></li>\r\n<li>防止超时断开：\r\n<ul>\r\n<li>在 B 和 C 的<code>/etc/ssh/ssh_config</code>后面加上: <code>ServerAliveInterval 60</code></li>\r\n<li>在 A 机的<code>/etc/ssh/sshd_config</code>后面加上： <code>ClientAliveInterval 60</code></li>\r\n</ul></li>\r\n<li>少数情况下，问题会出在 ssh 的认证上，可能需要下列操作：\r\n<ul>\r\n<li>修改文件 <code>/etc/ssh/ssh_config</code>: <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GSSAPIAuthentication no</span><br><span class=\"line\">GSSAPIDelegateCredentials no</span><br><span class=\"line\">StrictHostKeyChecking no</span><br></pre></td></tr></table></figure></li>\r\n</ul></li>\r\n<li>棘手问题 <code>ssh_exchange_identification: read: Connection reset by peer</code> 解决方案：\r\n<ol type=\"1\">\r\n<li>删除已有 <code>autossh</code> 连接，重启服务</li>\r\n<li>若问题仍在，尝试在机器 A 上新开 SSH 端口，方法有两种： 在 <code>/etc/ssh/sshd_config</code> 中添加 <code>Port xxxxx</code>；或 <code>sudo `which sshd` -ddd -p xxxxx</code>。修改机器 B 中相关的服务参数并且重启服务</li>\r\n</ol></li>\r\n</ul>\r\n<h2 id=\"ssh-端口转发\">ssh 端口转发</h2>\r\n<p>除了利用 <code>autossh</code> 作为反向代理工具，强大的 <code>ssh</code> 自身就可以实现正向代理以及反向代理。下面摘自 <a href=\"http://blog.csdn.net/zhanlanmg/article/details/47946753\" target=\"_blank\" rel=\"noopener\">SSH隧道与端口转发内网穿透</a>.</p>\r\n<ul>\r\n<li><code>-L port:host:hostport</code>：将本地机（客户机）的某个端口转发到远端指定机器的指定端口。 本地机器上分配了一个 <code>socket</code> 侦听 <code>port</code> 端口，一旦这个端口上有了连接，该连接就经过安全通道转发出去， 同时远程主机和 <code>host</code> 的 <code>hostport</code> 端口建立连接。可以在配置文件中指定端口的转发。只有 <code>root</code> 才能转发特权端口。IPv6 地址用另一种格式说明：<code>port/host/hostport</code></li>\r\n<li><code>-R port:host:hostport</code>：将远程主机（服务器）的某个端口转发到本地端指定机器的指定端口。 远程主机上分配了一个 <code>socket</code> 侦听 <code>port</code> 端口， 一旦这个端口上有了连接，该连接就经过安全通道转向出去，同时本地主机和 <code>host</code> 的 <code>hostport</code> 端口建立连接。可以在配置文件中指定端口的转发。只有用 <code>root</code> 登录远程主机才能转发特权端口。IPv6 地址用另一种格式说明：<code>port/host/hostport</code></li>\r\n<li><code>-D port</code>：指定一个本地机器「动态的」应用程序端口转发。 本地机器上分配了一个 <code>socket</code> 侦听 <code>port</code> 端口，一旦这个端口上有了连接，该连接就经过安全通道转发出去， 根据应用程序的协议可以判断出远程主机将和哪里连接。目前支持 <code>SOCKS4</code> 协议，将充当 <code>SOCKS4</code> 服务器。 只有 <code>root</code> 才能转发特权端口。可以在配置文件中指定动态端口的转发</li>\r\n<li><code>-p</code>：指定登录端口</li>\r\n<li><code>-f</code>：后台认证用户 / 密码，通常和 <code>-N</code> 连用，不用登录到远程主机</li>\r\n<li><code>-N</code>：不执行远程命令</li>\r\n<li><code>-q</code>：进入安静模式</li>\r\n<li><code>-C</code>：压缩数据传输</li>\r\n<li><code>-g</code>：在 <code>-L/-R/-D</code> 参数中，允许远程主机连接到建立的转发的端口，如果不加这个参数，只允许本地主机建立连接</li>\r\n</ul>\r\n<p>常用的 SSH 隧道操作：</p>\r\n<ul>\r\n<li>正向代理：<code>ssh -C -f -N -L listen_port:DST_Host:DST_port user@Tunnel_Host</code></li>\r\n<li>反向代理：<code>ssh -C -f -N -R listen_port:DST_Host:DST_port user@Tunnel_Host</code></li>\r\n<li>动态转发：<code>ssh -C -f -N -D listen_port user@Tunnel_Host</code></li>\r\n</ul>\r\n<p>为保持长时间连接，同 <code>autossh</code> 的参数，<code>ssh</code> 可附加的参数有： <code>-o TCPKeepAlive=yes</code>，<code>-o ServerAliveInterval=30</code>, <code>-o ServerAliveCountMax=3</code> 等。</p>\r\n<h2 id=\"xshell-隧道转发\">Xshell 隧道转发</h2>\r\n<p>设想这样一个场景：本地机器 C 已经可以通过具有公网 IP 的 A 连接到服务器 B 的 SSH 服务，也就是说存在这样的一条隧道：<code>C - A(10001) - B(22)</code>。而在服务器 B 上运行着其它程序（比如网站），端口号为 5000，如果希望在本地 C 上直接访问到 B 的网站，自然下面这种思路：「建立从 <code>B(5000) - A(&lt;web-port&gt;)</code> 的隧道，C 通过 <code>http://A:&lt;web-port&gt;</code> 进行访问」。如此一来，又需要做一个「穿透」，把 B 的 5000 端口反向代理出去。但能否存在一种方式，在不额外给 A 增加服务端口的情况下，令 C 直接访问到 B 呢？ 客户端软件 Xshell 的隧道转发功能正好派上用场。Xshell 的设置中自带端口转发技能（或称「隧道」，听起来比较 <del>装逼</del> 高大上）：<code>Sessions</code> - <code>Properties</code> - <code>Connection</code> - <code>SSH</code> - <code>Tunneling</code>。上述情形，仅需在连接 <code>C - A(10001) - B(22)</code> 中添加正向代理：</p>\r\n<!--�179-->\r\n<p>保存会话属性并连接后，会在本地开启 <code>&lt;web-port&gt;</code> 端口，在本地机器 C 中浏览 <code>http://localhost:&lt;web-port&gt;</code> 即可访问到 B 中运行的网站了。</p>\r\n<h2 id=\"参考\">参考</h2>\r\n<ul>\r\n<li><a href=\"https://gist.github.com/ntrepid8/0af12c012dd2567c800799d86eb44f90\" target=\"_blank\" rel=\"noopener\"><strong>AutoSSH reverse tunnel service config for systemd</strong></a></li>\r\n<li><a href=\"http://arondight.me/2016/02/17/%E4%BD%BF%E7%94%A8SSH%E5%8F%8D%E5%90%91%E9%9A%A7%E9%81%93%E8%BF%9B%E8%A1%8C%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F\" target=\"_blank\" rel=\"noopener\">使用SSH反向隧道进行内网穿透</a></li>\r\n<li><a href=\"http://www.huangwenchao.com.cn/2016/10/ssh-reverse-tunnel.html\" target=\"_blank\" rel=\"noopener\">SSH端口转发：实现反向SSH隧道内网穿透</a></li>\r\n</ul>"},{"title":"SSR 服务器搭建","date":"2018-06-21T12:48:01.000Z","_content":"\n\n> 原文链接:  \n> [『原创』CentOS/Debian/Ubuntu ShadowsocksR 单/多端口 一键管理脚本][ssr]  \n> [CentOS/Debian/Ubuntu系统 TCP-BBR 一键安装脚本][bbr]\n\n[ssr]: https://doub.bid/ss-jc42\n[bbr]: https://doub.bid/wlzy-22\n\n<!-- more -->\n\n### 安装、配置 SSR\n\n#### 系统要求\n\n** CentOS 6+ / Debian 6+ / Ubuntu 14.04+ **\n\n#### 脚本特点\n\n- 支持 限制 端口限速\n- 支持 限制 端口设备数\n- 支持 显示 当前连接IP\n- 支持 显示 SS/SSR连接+二维码\n- 支持 切换管理 单/多端口\n- 支持 一键安装 BBR\n- 支持 一键安装 锐速\n- 支持 一键安装 LotServer\n- 支持 一键封禁 垃圾邮件(SMAP)/BT/PT\n\n#### 安装步骤\n\n```\nwget -N --no-check-certificate https://raw.githubusercontent.com/michaelHL/Notes/master/2017/11/src/ssr.sh && chmod +x ssr.sh && bash ssr.sh\n```\n\n#### 文件位置\n\n- 安装目录: `/usr/local/shadowsocksr`\n- 配置文件: `/etc/shadowsocksr/user-config.json`\n\n#### 其他说明\n\n`ShadowsocksR` 安装后，自动设置为系统服务，所以支持使用服务来启动 / 停止等操作，同时支持开机启动。\n\n- 启动 `ShadowsocksR`: `/etc/init.d/ssr start`\n- 停止 `ShadowsocksR`: `/etc/init.d/ssr stop`\n- 重启 `ShadowsocksR`: `/etc/init.d/ssr restart`\n- 查看 `ShadowsocksR` 状态: `/etc/init.d/ssr status`\n\n`ShadowsocksR` 默认支持 UDP 转发，服务端无需任何设置\n\n#### 注意事项\n\n- 如果协议是 `origin`，那么混淆也必须是 `plain`\n- 若使用了 `chacha20` 系列加密方式，运行脚本选择选项 4 安装 `libsodium` 支持库即可\n\n### 安装 `TCP-BBR`\n\n```\nwget -N --no-check-certificate https://raw.githubusercontent.com/michaelHL/Notes/master/2017/11/src/bbr.sh && chmod +x bbr.sh && bash bbr.sh\n```\n\n重启后，验证一下是否成功安装最新内核并开启 `TCP-BBR`，输入以下命令:\n\n```\nuname -r\nsysctl net.ipv4.tcp_available_congestion_control\n# 返回值一般为\n# net.ipv4.tcp_available_congestion_control = bbr cubic reno\n# ————————————\nsysctl net.ipv4.tcp_congestion_control\n# 返回值一般为\n# net.ipv4.tcp_congestion_control = bbr\n# ————————————\nsysctl net.core.default_qdisc\n# 返回值一般为\n# net.core.default_qdisc = fq\n# ————————————\nlsmod | grep bbr\n# 返回值有 tcp_bbr 模块即说明bbr已启动\n```\n","source":"_posts/ssr-on-server.md","raw":"---\ntitle: SSR 服务器搭建\ndate: 2018-06-21 20:48:01\ntags: SSR\ncategories: Development\n---\n\n\n> 原文链接:  \n> [『原创』CentOS/Debian/Ubuntu ShadowsocksR 单/多端口 一键管理脚本][ssr]  \n> [CentOS/Debian/Ubuntu系统 TCP-BBR 一键安装脚本][bbr]\n\n[ssr]: https://doub.bid/ss-jc42\n[bbr]: https://doub.bid/wlzy-22\n\n<!-- more -->\n\n### 安装、配置 SSR\n\n#### 系统要求\n\n** CentOS 6+ / Debian 6+ / Ubuntu 14.04+ **\n\n#### 脚本特点\n\n- 支持 限制 端口限速\n- 支持 限制 端口设备数\n- 支持 显示 当前连接IP\n- 支持 显示 SS/SSR连接+二维码\n- 支持 切换管理 单/多端口\n- 支持 一键安装 BBR\n- 支持 一键安装 锐速\n- 支持 一键安装 LotServer\n- 支持 一键封禁 垃圾邮件(SMAP)/BT/PT\n\n#### 安装步骤\n\n```\nwget -N --no-check-certificate https://raw.githubusercontent.com/michaelHL/Notes/master/2017/11/src/ssr.sh && chmod +x ssr.sh && bash ssr.sh\n```\n\n#### 文件位置\n\n- 安装目录: `/usr/local/shadowsocksr`\n- 配置文件: `/etc/shadowsocksr/user-config.json`\n\n#### 其他说明\n\n`ShadowsocksR` 安装后，自动设置为系统服务，所以支持使用服务来启动 / 停止等操作，同时支持开机启动。\n\n- 启动 `ShadowsocksR`: `/etc/init.d/ssr start`\n- 停止 `ShadowsocksR`: `/etc/init.d/ssr stop`\n- 重启 `ShadowsocksR`: `/etc/init.d/ssr restart`\n- 查看 `ShadowsocksR` 状态: `/etc/init.d/ssr status`\n\n`ShadowsocksR` 默认支持 UDP 转发，服务端无需任何设置\n\n#### 注意事项\n\n- 如果协议是 `origin`，那么混淆也必须是 `plain`\n- 若使用了 `chacha20` 系列加密方式，运行脚本选择选项 4 安装 `libsodium` 支持库即可\n\n### 安装 `TCP-BBR`\n\n```\nwget -N --no-check-certificate https://raw.githubusercontent.com/michaelHL/Notes/master/2017/11/src/bbr.sh && chmod +x bbr.sh && bash bbr.sh\n```\n\n重启后，验证一下是否成功安装最新内核并开启 `TCP-BBR`，输入以下命令:\n\n```\nuname -r\nsysctl net.ipv4.tcp_available_congestion_control\n# 返回值一般为\n# net.ipv4.tcp_available_congestion_control = bbr cubic reno\n# ————————————\nsysctl net.ipv4.tcp_congestion_control\n# 返回值一般为\n# net.ipv4.tcp_congestion_control = bbr\n# ————————————\nsysctl net.core.default_qdisc\n# 返回值一般为\n# net.core.default_qdisc = fq\n# ————————————\nlsmod | grep bbr\n# 返回值有 tcp_bbr 模块即说明bbr已启动\n```\n","slug":"ssr-on-server","published":1,"updated":"2023-03-09T16:09:38.297Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u3379003up4x0n3iqvdye","content":"<blockquote>\r\n<p>原文链接:<br>\r\n<a href=\"https://doub.bid/ss-jc42\" target=\"_blank\" rel=\"noopener\">『原创』CentOS/Debian/Ubuntu ShadowsocksR 单/多端口 一键管理脚本</a><br>\r\n<a href=\"https://doub.bid/wlzy-22\" target=\"_blank\" rel=\"noopener\">CentOS/Debian/Ubuntu系统 TCP-BBR 一键安装脚本</a></p>\r\n</blockquote>\r\n<a id=\"more\"></a>\r\n<h3 id=\"安装配置-ssr\">安装、配置 SSR</h3>\r\n<h4 id=\"系统要求\">系统要求</h4>\r\n<p>** CentOS 6+ / Debian 6+ / Ubuntu 14.04+ **</p>\r\n<h4 id=\"脚本特点\">脚本特点</h4>\r\n<ul>\r\n<li>支持 限制 端口限速</li>\r\n<li>支持 限制 端口设备数</li>\r\n<li>支持 显示 当前连接IP</li>\r\n<li>支持 显示 SS/SSR连接+二维码</li>\r\n<li>支持 切换管理 单/多端口</li>\r\n<li>支持 一键安装 BBR</li>\r\n<li>支持 一键安装 锐速</li>\r\n<li>支持 一键安装 LotServer</li>\r\n<li>支持 一键封禁 垃圾邮件(SMAP)/BT/PT</li>\r\n</ul>\r\n<h4 id=\"安装步骤\">安装步骤</h4>\r\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -N --no-check-certificate https://raw.githubusercontent.com/michaelHL/Notes/master/2017/11/src/ssr.sh &amp;&amp; chmod +x ssr.sh &amp;&amp; bash ssr.sh</span><br></pre></td></tr></table></figure>\r\n<h4 id=\"文件位置\">文件位置</h4>\r\n<ul>\r\n<li>安装目录: <code>/usr/local/shadowsocksr</code></li>\r\n<li>配置文件: <code>/etc/shadowsocksr/user-config.json</code></li>\r\n</ul>\r\n<h4 id=\"其他说明\">其他说明</h4>\r\n<p><code>ShadowsocksR</code> 安装后，自动设置为系统服务，所以支持使用服务来启动 / 停止等操作，同时支持开机启动。</p>\r\n<ul>\r\n<li>启动 <code>ShadowsocksR</code>: <code>/etc/init.d/ssr start</code></li>\r\n<li>停止 <code>ShadowsocksR</code>: <code>/etc/init.d/ssr stop</code></li>\r\n<li>重启 <code>ShadowsocksR</code>: <code>/etc/init.d/ssr restart</code></li>\r\n<li>查看 <code>ShadowsocksR</code> 状态: <code>/etc/init.d/ssr status</code></li>\r\n</ul>\r\n<p><code>ShadowsocksR</code> 默认支持 UDP 转发，服务端无需任何设置</p>\r\n<h4 id=\"注意事项\">注意事项</h4>\r\n<ul>\r\n<li>如果协议是 <code>origin</code>，那么混淆也必须是 <code>plain</code></li>\r\n<li>若使用了 <code>chacha20</code> 系列加密方式，运行脚本选择选项 4 安装 <code>libsodium</code> 支持库即可</li>\r\n</ul>\r\n<h3 id=\"安装-tcp-bbr\">安装 <code>TCP-BBR</code></h3>\r\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -N --no-check-certificate https://raw.githubusercontent.com/michaelHL/Notes/master/2017/11/src/bbr.sh &amp;&amp; chmod +x bbr.sh &amp;&amp; bash bbr.sh</span><br></pre></td></tr></table></figure>\r\n<p>重启后，验证一下是否成功安装最新内核并开启 <code>TCP-BBR</code>，输入以下命令:</p>\r\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uname -r</span><br><span class=\"line\">sysctl net.ipv4.tcp_available_congestion_control</span><br><span class=\"line\"># 返回值一般为</span><br><span class=\"line\"># net.ipv4.tcp_available_congestion_control = bbr cubic reno</span><br><span class=\"line\"># ————————————</span><br><span class=\"line\">sysctl net.ipv4.tcp_congestion_control</span><br><span class=\"line\"># 返回值一般为</span><br><span class=\"line\"># net.ipv4.tcp_congestion_control = bbr</span><br><span class=\"line\"># ————————————</span><br><span class=\"line\">sysctl net.core.default_qdisc</span><br><span class=\"line\"># 返回值一般为</span><br><span class=\"line\"># net.core.default_qdisc = fq</span><br><span class=\"line\"># ————————————</span><br><span class=\"line\">lsmod | grep bbr</span><br><span class=\"line\"># 返回值有 tcp_bbr 模块即说明bbr已启动</span><br></pre></td></tr></table></figure>\r\n","site":{"data":{}},"excerpt":"<blockquote>\r\n<p>原文链接:<br>\r\n<a href=\"https://doub.bid/ss-jc42\" target=\"_blank\" rel=\"noopener\">『原创』CentOS/Debian/Ubuntu ShadowsocksR 单/多端口 一键管理脚本</a><br>\r\n<a href=\"https://doub.bid/wlzy-22\" target=\"_blank\" rel=\"noopener\">CentOS/Debian/Ubuntu系统 TCP-BBR 一键安装脚本</a></p>\r\n</blockquote>","more":"<h3 id=\"安装配置-ssr\">安装、配置 SSR</h3>\r\n<h4 id=\"系统要求\">系统要求</h4>\r\n<p>** CentOS 6+ / Debian 6+ / Ubuntu 14.04+ **</p>\r\n<h4 id=\"脚本特点\">脚本特点</h4>\r\n<ul>\r\n<li>支持 限制 端口限速</li>\r\n<li>支持 限制 端口设备数</li>\r\n<li>支持 显示 当前连接IP</li>\r\n<li>支持 显示 SS/SSR连接+二维码</li>\r\n<li>支持 切换管理 单/多端口</li>\r\n<li>支持 一键安装 BBR</li>\r\n<li>支持 一键安装 锐速</li>\r\n<li>支持 一键安装 LotServer</li>\r\n<li>支持 一键封禁 垃圾邮件(SMAP)/BT/PT</li>\r\n</ul>\r\n<h4 id=\"安装步骤\">安装步骤</h4>\r\n<!--�180-->\r\n<h4 id=\"文件位置\">文件位置</h4>\r\n<ul>\r\n<li>安装目录: <code>/usr/local/shadowsocksr</code></li>\r\n<li>配置文件: <code>/etc/shadowsocksr/user-config.json</code></li>\r\n</ul>\r\n<h4 id=\"其他说明\">其他说明</h4>\r\n<p><code>ShadowsocksR</code> 安装后，自动设置为系统服务，所以支持使用服务来启动 / 停止等操作，同时支持开机启动。</p>\r\n<ul>\r\n<li>启动 <code>ShadowsocksR</code>: <code>/etc/init.d/ssr start</code></li>\r\n<li>停止 <code>ShadowsocksR</code>: <code>/etc/init.d/ssr stop</code></li>\r\n<li>重启 <code>ShadowsocksR</code>: <code>/etc/init.d/ssr restart</code></li>\r\n<li>查看 <code>ShadowsocksR</code> 状态: <code>/etc/init.d/ssr status</code></li>\r\n</ul>\r\n<p><code>ShadowsocksR</code> 默认支持 UDP 转发，服务端无需任何设置</p>\r\n<h4 id=\"注意事项\">注意事项</h4>\r\n<ul>\r\n<li>如果协议是 <code>origin</code>，那么混淆也必须是 <code>plain</code></li>\r\n<li>若使用了 <code>chacha20</code> 系列加密方式，运行脚本选择选项 4 安装 <code>libsodium</code> 支持库即可</li>\r\n</ul>\r\n<h3 id=\"安装-tcp-bbr\">安装 <code>TCP-BBR</code></h3>\r\n<!--�181-->\r\n<p>重启后，验证一下是否成功安装最新内核并开启 <code>TCP-BBR</code>，输入以下命令:</p>\r\n<!--�182-->"},{"title":"「转」The top 10 tricks of Perl one-liners","date":"2018-01-17T03:56:25.000Z","nocopyright":true,"_content":"\n> 作者: [Guest Author][author]  \n> 链接: [The top 10 tricks of Perl one-liners][link]  \n> 来源: [Oracle Blogs][referer]\n\nI'm a recovering perl hacker.\nPerl used to be far and away my language of choice,\nbut these days I'm more likely to write new code in Python,\nlargely because far more of my friends and coworkers are comfortable with it.\n\n<!-- more -->\n\nI'll never give up perl for quick one-liners on the command-line or\nin one-off scripts for munging text, though. Anything that lasts\nlong enough to make it into git somewhere usually gets rewritten in Python,\nbut nothing beats perl for interactive messing with text.\n\nPerl, never afraid of obscure shorthands,\nhas accrued an impressive number of features that help with this\nuse case. I'd like to share some of my favorites\nthat you might not have heard of.\n\n## One-liners primer\n\nWe'll start with a brief refresher on the basics of perl one-liners\nbefore we begin. The core of any perl one-liner is the `-e` switch,\nwhich lets you pass a snippet of code on the command-line:\n`perl -e 'print \"hi\\n\"'` prints `\"hi\"` to the console.\n\nThe second standard trick to perl one-liners are the `-n` and `-p` flags.\nBoth of these make perl put an implicit loop around your program,\nrunning it once for each line of input, with the line in the `$_` variable.\n`-p` also adds an implicit print at the end of each iteration.\n\nBoth of these use perl's special `ARGV` magic file handle internally.\nWhat this means is that if there are any files listed on the\ncommand-line after your `-e`,\nperl will loop over the contents of the files, one at a time.\nIf there aren't any, it will fall back to looping over standard input.\n\n`perl -ne 'print if /foo/'` acts a lot like `grep foo`,\nand `perl -pe 's/foo/bar/'` replaces foo with bar.\n\nMost of the rest of these tricks assume you're using either `-n` or `-p`,\nso I won't mention it every time.\n\n## The top 10 one-liner tricks\n\n### Trick #1: `-l`\n\nSmart newline processing. Normally, perl hands you entire lines, including a trailing newline.\nWith `-l`, it will strip the trailing newline off of any lines read,\nand automatically add a newline to anything you print (including via `-p`).\n\nSuppose I wanted to strip trailing whitespace from a file.\nI might naïvely try something like\n\n```perl\nperl -pe 's/\\s*$//'\n```\n\nThe problem, however, is that the line ends with `\\n`, which is whitespace,\nand so that snippet will also remove all newlines from my file!\n`-l` solves the problem, by pulling off the newline before handing\nmy script the line, and then tacking a new one on afterwards:\n\n```perl\nperl -lpe 's/\\s*$//'\n```\n\n### Trick #2: `-0`\n\nOccasionally, it's useful to run a script over an entire file,\nor over larger chunks at once. `-0` makes `-n` and `-p` feed you chunks\nsplit on NULL bytes instead of newlines. This is often useful for,\ne.g. processing the output of find `-print0`.\nFurthermore, `perl -0777` makes perl not do any splitting,\nand pass entire files to your script in `$_`.\n\n```perl\nfind . -name '*~' -print0 | perl -0ne unlink\n```\n\nCould be used to delete all ~-files in a directory tree,\nwithout having to remember how xargs works.\n\n### Trick #3: `-i`\n\n`-i` tells perl to operate on files in-place.\nIf you use `-n` or `-p` with `-i`,\nand you pass perl filenames on the command-line,\nperl will run your script on those files,\nand then replace their contents with the output.\n`-i` optionally accepts an backup suffix as argument;\nPerl will write backup copies of edited files to names with that suffix added.\n\n```perl\nperl -i.bak -ne 'print unless /^#/' script.sh\n```\n\nWould strip all whole-line commands from `script.sh`,\nbut leave a copy of the original in `script.sh.bak`.\n\n### Trick #4: The `..` operator\n\nPerl's `..` operator is a stateful operator -- it remembers state\nbetween evaluations. As long as its left operand is false,\nit returns false; Once the left hand returns true,\nit starts evaluating the right-hand operand until that becomes true,\nat which point, on the next iteration it resets to false and starts\ntesting the other operand again.\n\nWhat does that mean in practice? It's a range operator:\nIt can be easily used to act on a range of lines in a file.\nFor instance, I can extract all GPG public keys from a file using:\n\n```perl\nperl -ne 'print if /-----BEGIN PGP PUBLIC KEY BLOCK-----/../-----END PGP PUBLIC KEY BLOCK-----/' FILE\n```\n\n### Trick #5: `-a`\n\n`-a` turns on autosplit mode – perl will automatically split input\nlines on whitespace into the `@F` array.\nIf you ever run into any advice that accidentally escaped from\n1980 telling you to use awk because it automatically splits\nlines into fields, this is how you use perl to do the same thing\nwithout learning another, even worse, language.\n\nAs an example, you could print a list of files along with their link counts using\n\n```perl\nls -l | perl -lane 'print \"$F[7] $F[1]\"'\n```\n\n### Trick #6: `-F`\n\n`-F` is used in conjunction with `-a`,\nto choose the delimiter on which to split lines.\nTo print every user in `/etc/passwd`\n(which is colon-separated with the user in the first column),\nwe could do:\n\n```\nperl -F: -lane 'print $F[0]' /etc/passwd\n```\n\n### Trick #7: `\\K`\n\n`\\K` is undoubtedly my favorite little-known-feature of Perl\nregular expressions. If `\\K` appears in a regex,\nit causes the regex matcher to drop everything before that point\nfrom the internal record of \"Which string did this regex match?\".\nThis is most useful in conjunction with `s///`,\nwhere it gives you a simple way to match a long expression,\nbut only replace a suffix of it.\n\nSuppose I want to replace the From: field in an email.\nWe could write something like\n\n```\nperl -lape 's/(^From:).*/$1 Nelson Elhage <nelhage\\@ksplice.com>/'\n```\n\nBut having to parenthesize the right bit and include the `$1`\nis annoying and error-prone. We can simplify the regex by\nusing `\\K` to tell perl we won't want to replace the start of the match:\n\n```perl\nperl -lape 's/^From:\\K.*/ Nelson Elhage <nelhage\\@ksplice.com>/'\n```\n\n### Trick #8: `$ENV{}`\n\nWhen you're writing a one-liner using `-e` in the shell,\nyou generally want to quote it with `'`,\nso that dollar signs inside the one-liner aren't expanded by the shell.\nBut that makes it annoying to use a `'` inside your one-liner,\nsince you can't escape a single quote inside of single quotes,\nin the shell.\n\nLet's suppose we wanted to print the username of anyone in\n`/etc/passwd` whose name included an apostrophe.\nOne option would be to use a standard shell-quoting trick\nto include the `'`:\n\n```perl\nperl -F: -lane 'print $F[0] if $F[4] =~ /'\"'\"'/' /etc/passwd\n```\n\nBut counting apostrophes and backslashes gets old fast.\nA better option, in my opinion, is to use the environment\nto pass the regex into perl, which lets you dodge\na layer of parsing entirely:\n\n```\nenv re=\"'\" perl -F: -lane 'print $F[0] if $F[4] =~ /$ENV{re}/' /etc/passwd\n```\n\nWe use the env command to place the regex in a variable called `re`,\nwhich we can then refer to from the perl script through the `%ENV` hash.\nThis way is slightly longer, but I find the savings\nin counting backslashes or quotes to be worth it,\nespecially if you need to end up embedding strings with\nmore than a single metacharacter.\n\n### Trick #9: `BEGIN` and `END`\n\n`BEGIN { ... }` and `END { ... }` let you put code that gets run\nentirely before or after the loop over the lines.\n\nFor example, I could sum the values in the second column of a CSV file using:\n\n```perl\nperl -F, -lane '$t += $F[1]; END { print $t }'\n```\n\n### Trick #10: `-MRegexp::Common`\n\nUsing `-M` on the command line tells perl to load the given module\nbefore running your code. There are thousands of modules available\non `CPAN`, numerous of them potentially useful in one-liners,\nbut one of my favorite for one-liner use is `Regexp::Common`, which,\nas its name suggests, contains regular expressions to match numerous\ncommonly-used pieces of data.\n\nThe full set of regexes available in `Regexp::Common`\nis available in its documentation,\nbut here's an example of where I might use it:\n\nNeither the ifconfig nor the ip tool that is supposed to\nreplace it provide, as far as I know,\nan easy way of extracting information for use by scripts.\nThe ifdata program provides such an interface,\nbut isn't installed everywhere.\nUsing perl and `Regexp::Common`, however,\nwe can do a pretty decent job of extracing an IP from ips output:\n\n```bash\nip address list eth0 | \\\n  perl -MRegexp::Common -lne 'print $1 if /($RE{net}{IPv4})/'\n```\n\nSo, those are my favorite tricks, but I always love learning more.\nWhat tricks have you found or invented for messing with perl on\nthe command-line? What's the most egregious perl \"one-liner\"\nyou've wielded, continuing to tack on statements well after the\npoint where you should have dropped your code into a real script?\n\n\n[author]: https://blogs.oracle.com/author/guest-contributor\n[link]: https://blogs.oracle.com/ksplice/the-top-10-tricks-of-perl-one-liners\n[referer]: https://blogs.oracle.com/\n\n","source":"_posts/the-top-10-tricks-of-perl-one-liners.md","raw":"---\ntitle: 「转」The top 10 tricks of Perl one-liners\ndate: 2018-01-17 11:56:25\ntags:\n    - Perl\ncategories: Tips and Tricks\nnocopyright: true\n---\n\n> 作者: [Guest Author][author]  \n> 链接: [The top 10 tricks of Perl one-liners][link]  \n> 来源: [Oracle Blogs][referer]\n\nI'm a recovering perl hacker.\nPerl used to be far and away my language of choice,\nbut these days I'm more likely to write new code in Python,\nlargely because far more of my friends and coworkers are comfortable with it.\n\n<!-- more -->\n\nI'll never give up perl for quick one-liners on the command-line or\nin one-off scripts for munging text, though. Anything that lasts\nlong enough to make it into git somewhere usually gets rewritten in Python,\nbut nothing beats perl for interactive messing with text.\n\nPerl, never afraid of obscure shorthands,\nhas accrued an impressive number of features that help with this\nuse case. I'd like to share some of my favorites\nthat you might not have heard of.\n\n## One-liners primer\n\nWe'll start with a brief refresher on the basics of perl one-liners\nbefore we begin. The core of any perl one-liner is the `-e` switch,\nwhich lets you pass a snippet of code on the command-line:\n`perl -e 'print \"hi\\n\"'` prints `\"hi\"` to the console.\n\nThe second standard trick to perl one-liners are the `-n` and `-p` flags.\nBoth of these make perl put an implicit loop around your program,\nrunning it once for each line of input, with the line in the `$_` variable.\n`-p` also adds an implicit print at the end of each iteration.\n\nBoth of these use perl's special `ARGV` magic file handle internally.\nWhat this means is that if there are any files listed on the\ncommand-line after your `-e`,\nperl will loop over the contents of the files, one at a time.\nIf there aren't any, it will fall back to looping over standard input.\n\n`perl -ne 'print if /foo/'` acts a lot like `grep foo`,\nand `perl -pe 's/foo/bar/'` replaces foo with bar.\n\nMost of the rest of these tricks assume you're using either `-n` or `-p`,\nso I won't mention it every time.\n\n## The top 10 one-liner tricks\n\n### Trick #1: `-l`\n\nSmart newline processing. Normally, perl hands you entire lines, including a trailing newline.\nWith `-l`, it will strip the trailing newline off of any lines read,\nand automatically add a newline to anything you print (including via `-p`).\n\nSuppose I wanted to strip trailing whitespace from a file.\nI might naïvely try something like\n\n```perl\nperl -pe 's/\\s*$//'\n```\n\nThe problem, however, is that the line ends with `\\n`, which is whitespace,\nand so that snippet will also remove all newlines from my file!\n`-l` solves the problem, by pulling off the newline before handing\nmy script the line, and then tacking a new one on afterwards:\n\n```perl\nperl -lpe 's/\\s*$//'\n```\n\n### Trick #2: `-0`\n\nOccasionally, it's useful to run a script over an entire file,\nor over larger chunks at once. `-0` makes `-n` and `-p` feed you chunks\nsplit on NULL bytes instead of newlines. This is often useful for,\ne.g. processing the output of find `-print0`.\nFurthermore, `perl -0777` makes perl not do any splitting,\nand pass entire files to your script in `$_`.\n\n```perl\nfind . -name '*~' -print0 | perl -0ne unlink\n```\n\nCould be used to delete all ~-files in a directory tree,\nwithout having to remember how xargs works.\n\n### Trick #3: `-i`\n\n`-i` tells perl to operate on files in-place.\nIf you use `-n` or `-p` with `-i`,\nand you pass perl filenames on the command-line,\nperl will run your script on those files,\nand then replace their contents with the output.\n`-i` optionally accepts an backup suffix as argument;\nPerl will write backup copies of edited files to names with that suffix added.\n\n```perl\nperl -i.bak -ne 'print unless /^#/' script.sh\n```\n\nWould strip all whole-line commands from `script.sh`,\nbut leave a copy of the original in `script.sh.bak`.\n\n### Trick #4: The `..` operator\n\nPerl's `..` operator is a stateful operator -- it remembers state\nbetween evaluations. As long as its left operand is false,\nit returns false; Once the left hand returns true,\nit starts evaluating the right-hand operand until that becomes true,\nat which point, on the next iteration it resets to false and starts\ntesting the other operand again.\n\nWhat does that mean in practice? It's a range operator:\nIt can be easily used to act on a range of lines in a file.\nFor instance, I can extract all GPG public keys from a file using:\n\n```perl\nperl -ne 'print if /-----BEGIN PGP PUBLIC KEY BLOCK-----/../-----END PGP PUBLIC KEY BLOCK-----/' FILE\n```\n\n### Trick #5: `-a`\n\n`-a` turns on autosplit mode – perl will automatically split input\nlines on whitespace into the `@F` array.\nIf you ever run into any advice that accidentally escaped from\n1980 telling you to use awk because it automatically splits\nlines into fields, this is how you use perl to do the same thing\nwithout learning another, even worse, language.\n\nAs an example, you could print a list of files along with their link counts using\n\n```perl\nls -l | perl -lane 'print \"$F[7] $F[1]\"'\n```\n\n### Trick #6: `-F`\n\n`-F` is used in conjunction with `-a`,\nto choose the delimiter on which to split lines.\nTo print every user in `/etc/passwd`\n(which is colon-separated with the user in the first column),\nwe could do:\n\n```\nperl -F: -lane 'print $F[0]' /etc/passwd\n```\n\n### Trick #7: `\\K`\n\n`\\K` is undoubtedly my favorite little-known-feature of Perl\nregular expressions. If `\\K` appears in a regex,\nit causes the regex matcher to drop everything before that point\nfrom the internal record of \"Which string did this regex match?\".\nThis is most useful in conjunction with `s///`,\nwhere it gives you a simple way to match a long expression,\nbut only replace a suffix of it.\n\nSuppose I want to replace the From: field in an email.\nWe could write something like\n\n```\nperl -lape 's/(^From:).*/$1 Nelson Elhage <nelhage\\@ksplice.com>/'\n```\n\nBut having to parenthesize the right bit and include the `$1`\nis annoying and error-prone. We can simplify the regex by\nusing `\\K` to tell perl we won't want to replace the start of the match:\n\n```perl\nperl -lape 's/^From:\\K.*/ Nelson Elhage <nelhage\\@ksplice.com>/'\n```\n\n### Trick #8: `$ENV{}`\n\nWhen you're writing a one-liner using `-e` in the shell,\nyou generally want to quote it with `'`,\nso that dollar signs inside the one-liner aren't expanded by the shell.\nBut that makes it annoying to use a `'` inside your one-liner,\nsince you can't escape a single quote inside of single quotes,\nin the shell.\n\nLet's suppose we wanted to print the username of anyone in\n`/etc/passwd` whose name included an apostrophe.\nOne option would be to use a standard shell-quoting trick\nto include the `'`:\n\n```perl\nperl -F: -lane 'print $F[0] if $F[4] =~ /'\"'\"'/' /etc/passwd\n```\n\nBut counting apostrophes and backslashes gets old fast.\nA better option, in my opinion, is to use the environment\nto pass the regex into perl, which lets you dodge\na layer of parsing entirely:\n\n```\nenv re=\"'\" perl -F: -lane 'print $F[0] if $F[4] =~ /$ENV{re}/' /etc/passwd\n```\n\nWe use the env command to place the regex in a variable called `re`,\nwhich we can then refer to from the perl script through the `%ENV` hash.\nThis way is slightly longer, but I find the savings\nin counting backslashes or quotes to be worth it,\nespecially if you need to end up embedding strings with\nmore than a single metacharacter.\n\n### Trick #9: `BEGIN` and `END`\n\n`BEGIN { ... }` and `END { ... }` let you put code that gets run\nentirely before or after the loop over the lines.\n\nFor example, I could sum the values in the second column of a CSV file using:\n\n```perl\nperl -F, -lane '$t += $F[1]; END { print $t }'\n```\n\n### Trick #10: `-MRegexp::Common`\n\nUsing `-M` on the command line tells perl to load the given module\nbefore running your code. There are thousands of modules available\non `CPAN`, numerous of them potentially useful in one-liners,\nbut one of my favorite for one-liner use is `Regexp::Common`, which,\nas its name suggests, contains regular expressions to match numerous\ncommonly-used pieces of data.\n\nThe full set of regexes available in `Regexp::Common`\nis available in its documentation,\nbut here's an example of where I might use it:\n\nNeither the ifconfig nor the ip tool that is supposed to\nreplace it provide, as far as I know,\nan easy way of extracting information for use by scripts.\nThe ifdata program provides such an interface,\nbut isn't installed everywhere.\nUsing perl and `Regexp::Common`, however,\nwe can do a pretty decent job of extracing an IP from ips output:\n\n```bash\nip address list eth0 | \\\n  perl -MRegexp::Common -lne 'print $1 if /($RE{net}{IPv4})/'\n```\n\nSo, those are my favorite tricks, but I always love learning more.\nWhat tricks have you found or invented for messing with perl on\nthe command-line? What's the most egregious perl \"one-liner\"\nyou've wielded, continuing to tack on statements well after the\npoint where you should have dropped your code into a real script?\n\n\n[author]: https://blogs.oracle.com/author/guest-contributor\n[link]: https://blogs.oracle.com/ksplice/the-top-10-tricks-of-perl-one-liners\n[referer]: https://blogs.oracle.com/\n\n","slug":"the-top-10-tricks-of-perl-one-liners","published":1,"updated":"2023-03-09T16:09:38.300Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u337b003xp4x0f3qdzjvf","content":"<blockquote>\r\n<p>作者: <a href=\"https://blogs.oracle.com/author/guest-contributor\" target=\"_blank\" rel=\"noopener\">Guest Author</a><br>\r\n链接: <a href=\"https://blogs.oracle.com/ksplice/the-top-10-tricks-of-perl-one-liners\" target=\"_blank\" rel=\"noopener\">The top 10 tricks of Perl one-liners</a><br>\r\n来源: <a href=\"https://blogs.oracle.com/\" target=\"_blank\" rel=\"noopener\">Oracle Blogs</a></p>\r\n</blockquote>\r\n<p>I’m a recovering perl hacker. Perl used to be far and away my language of choice, but these days I’m more likely to write new code in Python, largely because far more of my friends and coworkers are comfortable with it.</p>\r\n<a id=\"more\"></a>\r\n<p>I’ll never give up perl for quick one-liners on the command-line or in one-off scripts for munging text, though. Anything that lasts long enough to make it into git somewhere usually gets rewritten in Python, but nothing beats perl for interactive messing with text.</p>\r\n<p>Perl, never afraid of obscure shorthands, has accrued an impressive number of features that help with this use case. I’d like to share some of my favorites that you might not have heard of.</p>\r\n<h2 id=\"one-liners-primer\">One-liners primer</h2>\r\n<p>We’ll start with a brief refresher on the basics of perl one-liners before we begin. The core of any perl one-liner is the <code>-e</code> switch, which lets you pass a snippet of code on the command-line: <code>perl -e 'print \"hi\\n\"'</code> prints <code>\"hi\"</code> to the console.</p>\r\n<p>The second standard trick to perl one-liners are the <code>-n</code> and <code>-p</code> flags. Both of these make perl put an implicit loop around your program, running it once for each line of input, with the line in the <code>$_</code> variable. <code>-p</code> also adds an implicit print at the end of each iteration.</p>\r\n<p>Both of these use perl’s special <code>ARGV</code> magic file handle internally. What this means is that if there are any files listed on the command-line after your <code>-e</code>, perl will loop over the contents of the files, one at a time. If there aren’t any, it will fall back to looping over standard input.</p>\r\n<p><code>perl -ne 'print if /foo/'</code> acts a lot like <code>grep foo</code>, and <code>perl -pe 's/foo/bar/'</code> replaces foo with bar.</p>\r\n<p>Most of the rest of these tricks assume you’re using either <code>-n</code> or <code>-p</code>, so I won’t mention it every time.</p>\r\n<h2 id=\"the-top-10-one-liner-tricks\">The top 10 one-liner tricks</h2>\r\n<h3 id=\"trick-1--l\">Trick #1: <code>-l</code></h3>\r\n<p>Smart newline processing. Normally, perl hands you entire lines, including a trailing newline. With <code>-l</code>, it will strip the trailing newline off of any lines read, and automatically add a newline to anything you print (including via <code>-p</code>).</p>\r\n<p>Suppose I wanted to strip trailing whitespace from a file. I might naïvely try something like</p>\r\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl -pe <span class=\"string\">'s/\\s*$//'</span></span><br></pre></td></tr></table></figure>\r\n<p>The problem, however, is that the line ends with <code>\\n</code>, which is whitespace, and so that snippet will also remove all newlines from my file! <code>-l</code> solves the problem, by pulling off the newline before handing my script the line, and then tacking a new one on afterwards:</p>\r\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl -lpe <span class=\"string\">'s/\\s*$//'</span></span><br></pre></td></tr></table></figure>\r\n<h3 id=\"trick-2--0\">Trick #2: <code>-0</code></h3>\r\n<p>Occasionally, it’s useful to run a script over an entire file, or over larger chunks at once. <code>-0</code> makes <code>-n</code> and <code>-p</code> feed you chunks split on NULL bytes instead of newlines. This is often useful for, e.g. processing the output of find <code>-print0</code>. Furthermore, <code>perl -0777</code> makes perl not do any splitting, and pass entire files to your script in <code>$_</code>.</p>\r\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">find . -name <span class=\"string\">'*~'</span> -<span class=\"keyword\">print</span><span class=\"number\">0</span> | perl -0ne <span class=\"keyword\">unlink</span></span><br></pre></td></tr></table></figure>\r\n<p>Could be used to delete all ~-files in a directory tree, without having to remember how xargs works.</p>\r\n<h3 id=\"trick-3--i\">Trick #3: <code>-i</code></h3>\r\n<p><code>-i</code> tells perl to operate on files in-place. If you use <code>-n</code> or <code>-p</code> with <code>-i</code>, and you pass perl filenames on the command-line, perl will run your script on those files, and then replace their contents with the output. <code>-i</code> optionally accepts an backup suffix as argument; Perl will write backup copies of edited files to names with that suffix added.</p>\r\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl -i.bak -<span class=\"keyword\">ne</span> <span class=\"string\">'print unless /^#/'</span> script.sh</span><br></pre></td></tr></table></figure>\r\n<p>Would strip all whole-line commands from <code>script.sh</code>, but leave a copy of the original in <code>script.sh.bak</code>.</p>\r\n<h3 id=\"trick-4-the-..-operator\">Trick #4: The <code>..</code> operator</h3>\r\n<p>Perl’s <code>..</code> operator is a stateful operator – it remembers state between evaluations. As long as its left operand is false, it returns false; Once the left hand returns true, it starts evaluating the right-hand operand until that becomes true, at which point, on the next iteration it resets to false and starts testing the other operand again.</p>\r\n<p>What does that mean in practice? It’s a range operator: It can be easily used to act on a range of lines in a file. For instance, I can extract all GPG public keys from a file using:</p>\r\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl -<span class=\"keyword\">ne</span> <span class=\"string\">'print if /-----BEGIN PGP PUBLIC KEY BLOCK-----/../-----END PGP PUBLIC KEY BLOCK-----/'</span> FILE</span><br></pre></td></tr></table></figure>\r\n<h3 id=\"trick-5--a\">Trick #5: <code>-a</code></h3>\r\n<p><code>-a</code> turns on autosplit mode – perl will automatically split input lines on whitespace into the <code>@F</code> array. If you ever run into any advice that accidentally escaped from 1980 telling you to use awk because it automatically splits lines into fields, this is how you use perl to do the same thing without learning another, even worse, language.</p>\r\n<p>As an example, you could print a list of files along with their link counts using</p>\r\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -l | perl -lane <span class=\"string\">'print \"$F[7] $F[1]\"'</span></span><br></pre></td></tr></table></figure>\r\n<h3 id=\"trick-6--f\">Trick #6: <code>-F</code></h3>\r\n<p><code>-F</code> is used in conjunction with <code>-a</code>, to choose the delimiter on which to split lines. To print every user in <code>/etc/passwd</code> (which is colon-separated with the user in the first column), we could do:</p>\r\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl -F: -lane &apos;print $F[0]&apos; /etc/passwd</span><br></pre></td></tr></table></figure>\r\n<h3 id=\"trick-7-k\">Trick #7: <code>\\K</code></h3>\r\n<p><code>\\K</code> is undoubtedly my favorite little-known-feature of Perl regular expressions. If <code>\\K</code> appears in a regex, it causes the regex matcher to drop everything before that point from the internal record of “Which string did this regex match?”. This is most useful in conjunction with <code>s///</code>, where it gives you a simple way to match a long expression, but only replace a suffix of it.</p>\r\n<p>Suppose I want to replace the From: field in an email. We could write something like</p>\r\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl -lape &apos;s/(^From:).*/$1 Nelson Elhage &lt;nelhage\\@ksplice.com&gt;/&apos;</span><br></pre></td></tr></table></figure>\r\n<p>But having to parenthesize the right bit and include the <code>$1</code> is annoying and error-prone. We can simplify the regex by using <code>\\K</code> to tell perl we won’t want to replace the start of the match:</p>\r\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl -lape <span class=\"string\">'s/^From:\\K.*/ Nelson Elhage &lt;nelhage\\@ksplice.com&gt;/'</span></span><br></pre></td></tr></table></figure>\r\n<h3 id=\"trick-8-env\">Trick #8: <code>$ENV{}</code></h3>\r\n<p>When you’re writing a one-liner using <code>-e</code> in the shell, you generally want to quote it with <code>'</code>, so that dollar signs inside the one-liner aren’t expanded by the shell. But that makes it annoying to use a <code>'</code> inside your one-liner, since you can’t escape a single quote inside of single quotes, in the shell.</p>\r\n<p>Let’s suppose we wanted to print the username of anyone in <code>/etc/passwd</code> whose name included an apostrophe. One option would be to use a standard shell-quoting trick to include the <code>'</code>:</p>\r\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl -F: -lane <span class=\"string\">'print $F[0] if $F[4] =~ /'</span><span class=\"string\">\"'\"</span><span class=\"string\">'/'</span> /etc/passwd</span><br></pre></td></tr></table></figure>\r\n<p>But counting apostrophes and backslashes gets old fast. A better option, in my opinion, is to use the environment to pass the regex into perl, which lets you dodge a layer of parsing entirely:</p>\r\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">env re=&quot;&apos;&quot; perl -F: -lane &apos;print $F[0] if $F[4] =~ /$ENV&#123;re&#125;/&apos; /etc/passwd</span><br></pre></td></tr></table></figure>\r\n<p>We use the env command to place the regex in a variable called <code>re</code>, which we can then refer to from the perl script through the <code>%ENV</code> hash. This way is slightly longer, but I find the savings in counting backslashes or quotes to be worth it, especially if you need to end up embedding strings with more than a single metacharacter.</p>\r\n<h3 id=\"trick-9-begin-and-end\">Trick #9: <code>BEGIN</code> and <code>END</code></h3>\r\n<p><code>BEGIN { ... }</code> and <code>END { ... }</code> let you put code that gets run entirely before or after the loop over the lines.</p>\r\n<p>For example, I could sum the values in the second column of a CSV file using:</p>\r\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl -F, -lane <span class=\"string\">'$t += $F[1]; END &#123; print $t &#125;'</span></span><br></pre></td></tr></table></figure>\r\n<h3 id=\"trick-10--mregexpcommon\">Trick #10: <code>-MRegexp::Common</code></h3>\r\n<p>Using <code>-M</code> on the command line tells perl to load the given module before running your code. There are thousands of modules available on <code>CPAN</code>, numerous of them potentially useful in one-liners, but one of my favorite for one-liner use is <code>Regexp::Common</code>, which, as its name suggests, contains regular expressions to match numerous commonly-used pieces of data.</p>\r\n<p>The full set of regexes available in <code>Regexp::Common</code> is available in its documentation, but here’s an example of where I might use it:</p>\r\n<p>Neither the ifconfig nor the ip tool that is supposed to replace it provide, as far as I know, an easy way of extracting information for use by scripts. The ifdata program provides such an interface, but isn’t installed everywhere. Using perl and <code>Regexp::Common</code>, however, we can do a pretty decent job of extracing an IP from ips output:</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ip address list eth0 | \\</span><br><span class=\"line\">  perl -MRegexp::Common -lne <span class=\"string\">'print $1 if /($RE&#123;net&#125;&#123;IPv4&#125;)/'</span></span><br></pre></td></tr></table></figure>\r\n<p>So, those are my favorite tricks, but I always love learning more. What tricks have you found or invented for messing with perl on the command-line? What’s the most egregious perl “one-liner” you’ve wielded, continuing to tack on statements well after the point where you should have dropped your code into a real script?</p>\r\n","site":{"data":{}},"excerpt":"<blockquote>\r\n<p>作者: <a href=\"https://blogs.oracle.com/author/guest-contributor\" target=\"_blank\" rel=\"noopener\">Guest Author</a><br>\r\n链接: <a href=\"https://blogs.oracle.com/ksplice/the-top-10-tricks-of-perl-one-liners\" target=\"_blank\" rel=\"noopener\">The top 10 tricks of Perl one-liners</a><br>\r\n来源: <a href=\"https://blogs.oracle.com/\" target=\"_blank\" rel=\"noopener\">Oracle Blogs</a></p>\r\n</blockquote>\r\n<p>I’m a recovering perl hacker. Perl used to be far and away my language of choice, but these days I’m more likely to write new code in Python, largely because far more of my friends and coworkers are comfortable with it.</p>","more":"<p>I’ll never give up perl for quick one-liners on the command-line or in one-off scripts for munging text, though. Anything that lasts long enough to make it into git somewhere usually gets rewritten in Python, but nothing beats perl for interactive messing with text.</p>\r\n<p>Perl, never afraid of obscure shorthands, has accrued an impressive number of features that help with this use case. I’d like to share some of my favorites that you might not have heard of.</p>\r\n<h2 id=\"one-liners-primer\">One-liners primer</h2>\r\n<p>We’ll start with a brief refresher on the basics of perl one-liners before we begin. The core of any perl one-liner is the <code>-e</code> switch, which lets you pass a snippet of code on the command-line: <code>perl -e 'print \"hi\\n\"'</code> prints <code>\"hi\"</code> to the console.</p>\r\n<p>The second standard trick to perl one-liners are the <code>-n</code> and <code>-p</code> flags. Both of these make perl put an implicit loop around your program, running it once for each line of input, with the line in the <code>$_</code> variable. <code>-p</code> also adds an implicit print at the end of each iteration.</p>\r\n<p>Both of these use perl’s special <code>ARGV</code> magic file handle internally. What this means is that if there are any files listed on the command-line after your <code>-e</code>, perl will loop over the contents of the files, one at a time. If there aren’t any, it will fall back to looping over standard input.</p>\r\n<p><code>perl -ne 'print if /foo/'</code> acts a lot like <code>grep foo</code>, and <code>perl -pe 's/foo/bar/'</code> replaces foo with bar.</p>\r\n<p>Most of the rest of these tricks assume you’re using either <code>-n</code> or <code>-p</code>, so I won’t mention it every time.</p>\r\n<h2 id=\"the-top-10-one-liner-tricks\">The top 10 one-liner tricks</h2>\r\n<h3 id=\"trick-1--l\">Trick #1: <code>-l</code></h3>\r\n<p>Smart newline processing. Normally, perl hands you entire lines, including a trailing newline. With <code>-l</code>, it will strip the trailing newline off of any lines read, and automatically add a newline to anything you print (including via <code>-p</code>).</p>\r\n<p>Suppose I wanted to strip trailing whitespace from a file. I might naïvely try something like</p>\r\n<!--�183-->\r\n<p>The problem, however, is that the line ends with <code>\\n</code>, which is whitespace, and so that snippet will also remove all newlines from my file! <code>-l</code> solves the problem, by pulling off the newline before handing my script the line, and then tacking a new one on afterwards:</p>\r\n<!--�184-->\r\n<h3 id=\"trick-2--0\">Trick #2: <code>-0</code></h3>\r\n<p>Occasionally, it’s useful to run a script over an entire file, or over larger chunks at once. <code>-0</code> makes <code>-n</code> and <code>-p</code> feed you chunks split on NULL bytes instead of newlines. This is often useful for, e.g. processing the output of find <code>-print0</code>. Furthermore, <code>perl -0777</code> makes perl not do any splitting, and pass entire files to your script in <code>$_</code>.</p>\r\n<!--�185-->\r\n<p>Could be used to delete all ~-files in a directory tree, without having to remember how xargs works.</p>\r\n<h3 id=\"trick-3--i\">Trick #3: <code>-i</code></h3>\r\n<p><code>-i</code> tells perl to operate on files in-place. If you use <code>-n</code> or <code>-p</code> with <code>-i</code>, and you pass perl filenames on the command-line, perl will run your script on those files, and then replace their contents with the output. <code>-i</code> optionally accepts an backup suffix as argument; Perl will write backup copies of edited files to names with that suffix added.</p>\r\n<!--�186-->\r\n<p>Would strip all whole-line commands from <code>script.sh</code>, but leave a copy of the original in <code>script.sh.bak</code>.</p>\r\n<h3 id=\"trick-4-the-..-operator\">Trick #4: The <code>..</code> operator</h3>\r\n<p>Perl’s <code>..</code> operator is a stateful operator – it remembers state between evaluations. As long as its left operand is false, it returns false; Once the left hand returns true, it starts evaluating the right-hand operand until that becomes true, at which point, on the next iteration it resets to false and starts testing the other operand again.</p>\r\n<p>What does that mean in practice? It’s a range operator: It can be easily used to act on a range of lines in a file. For instance, I can extract all GPG public keys from a file using:</p>\r\n<!--�187-->\r\n<h3 id=\"trick-5--a\">Trick #5: <code>-a</code></h3>\r\n<p><code>-a</code> turns on autosplit mode – perl will automatically split input lines on whitespace into the <code>@F</code> array. If you ever run into any advice that accidentally escaped from 1980 telling you to use awk because it automatically splits lines into fields, this is how you use perl to do the same thing without learning another, even worse, language.</p>\r\n<p>As an example, you could print a list of files along with their link counts using</p>\r\n<!--�188-->\r\n<h3 id=\"trick-6--f\">Trick #6: <code>-F</code></h3>\r\n<p><code>-F</code> is used in conjunction with <code>-a</code>, to choose the delimiter on which to split lines. To print every user in <code>/etc/passwd</code> (which is colon-separated with the user in the first column), we could do:</p>\r\n<!--�189-->\r\n<h3 id=\"trick-7-k\">Trick #7: <code>\\K</code></h3>\r\n<p><code>\\K</code> is undoubtedly my favorite little-known-feature of Perl regular expressions. If <code>\\K</code> appears in a regex, it causes the regex matcher to drop everything before that point from the internal record of “Which string did this regex match?”. This is most useful in conjunction with <code>s///</code>, where it gives you a simple way to match a long expression, but only replace a suffix of it.</p>\r\n<p>Suppose I want to replace the From: field in an email. We could write something like</p>\r\n<!--�190-->\r\n<p>But having to parenthesize the right bit and include the <code>$1</code> is annoying and error-prone. We can simplify the regex by using <code>\\K</code> to tell perl we won’t want to replace the start of the match:</p>\r\n<!--�191-->\r\n<h3 id=\"trick-8-env\">Trick #8: <code>$ENV{}</code></h3>\r\n<p>When you’re writing a one-liner using <code>-e</code> in the shell, you generally want to quote it with <code>'</code>, so that dollar signs inside the one-liner aren’t expanded by the shell. But that makes it annoying to use a <code>'</code> inside your one-liner, since you can’t escape a single quote inside of single quotes, in the shell.</p>\r\n<p>Let’s suppose we wanted to print the username of anyone in <code>/etc/passwd</code> whose name included an apostrophe. One option would be to use a standard shell-quoting trick to include the <code>'</code>:</p>\r\n<!--�192-->\r\n<p>But counting apostrophes and backslashes gets old fast. A better option, in my opinion, is to use the environment to pass the regex into perl, which lets you dodge a layer of parsing entirely:</p>\r\n<!--�193-->\r\n<p>We use the env command to place the regex in a variable called <code>re</code>, which we can then refer to from the perl script through the <code>%ENV</code> hash. This way is slightly longer, but I find the savings in counting backslashes or quotes to be worth it, especially if you need to end up embedding strings with more than a single metacharacter.</p>\r\n<h3 id=\"trick-9-begin-and-end\">Trick #9: <code>BEGIN</code> and <code>END</code></h3>\r\n<p><code>BEGIN { ... }</code> and <code>END { ... }</code> let you put code that gets run entirely before or after the loop over the lines.</p>\r\n<p>For example, I could sum the values in the second column of a CSV file using:</p>\r\n<!--�194-->\r\n<h3 id=\"trick-10--mregexpcommon\">Trick #10: <code>-MRegexp::Common</code></h3>\r\n<p>Using <code>-M</code> on the command line tells perl to load the given module before running your code. There are thousands of modules available on <code>CPAN</code>, numerous of them potentially useful in one-liners, but one of my favorite for one-liner use is <code>Regexp::Common</code>, which, as its name suggests, contains regular expressions to match numerous commonly-used pieces of data.</p>\r\n<p>The full set of regexes available in <code>Regexp::Common</code> is available in its documentation, but here’s an example of where I might use it:</p>\r\n<p>Neither the ifconfig nor the ip tool that is supposed to replace it provide, as far as I know, an easy way of extracting information for use by scripts. The ifdata program provides such an interface, but isn’t installed everywhere. Using perl and <code>Regexp::Common</code>, however, we can do a pretty decent job of extracing an IP from ips output:</p>\r\n<!--�195-->\r\n<p>So, those are my favorite tricks, but I always love learning more. What tricks have you found or invented for messing with perl on the command-line? What’s the most egregious perl “one-liner” you’ve wielded, continuing to tack on statements well after the point where you should have dropped your code into a real script?</p>"},{"title":"Linux 技巧拾零","date":"2017-10-12T04:43:04.000Z","_content":"\n记录 Linux 下遇到的问题、技巧与备忘。\n\n<!-- more -->\n\n1. 令 Tab 补全对忽略大小写  \n   所有用户：`/etc/inputrc`  \n   当前用户：`~/.inputrc`  \n   输入内容：`set completion-ignore-case on`\n1. `history` 不显示连续、重复、特定的命令、加上时间戳  \n   于 `/etc/bashrc`（或 `~/.bashrc`）中添加\n   {% codeblock lang:bash %}\n   HISTTIMEFORMAT='%F %T '\n   HISTCONTROL=erasedups\n   HISTIGNORE=\"ls:pwd:cd:clear:vim:fg:bg:jobs:top\"\n   {% endcodeblock %}\n   将 `HISTCONTROL` 设成 `ignoredups` 仅忽略连续的重复命令，而 `erasedups` 清除整个历史中重复条目\n1. 常用终端快捷键\n\n   | 快捷键   | 用途               | 快捷键   | 用途                   |\n   | :---     | :---               | :---     | :---                   |\n   | `Ctrl-A` | 移动到行首         | `Esc-F`  | 移动到后面一个单词     |\n   | `Ctrl-E` | 移动到行末         | `Ctrl-K` | 删除到行末             |\n   | `Ctrl-B` | 移动到前面一个字母 | `Ctrl-U` | 删除到行首             |\n   | `Ctrl-F` | 移动到后面一个字母 | `Ctrl-T` | 交换光标位置前两个字符 |\n   | `Esc-B`  | 移动到前面一个单词 | `Esc-T`  | 交换光标位置前两个单词 |\n1. SSH 登录服务器缓慢解决方案：\n   - 关闭 DNS 反向解析：`vim /etc/ssh/sshd_config`，设定其中 `UseDNS=no`，重启服务 `service sshd restart`\n   - 服务端禁用 `GSSAPIAuthentication`：同样在 `/etc/ssh/sshd_config` 中设定 `GSSAPIAuthentication no`\n1. SSH 登录欢迎界面设置文件：`/etc/motd`\n1. SSH Log 日志文件：\n   - Redhat，Fedora Core: `/var/log/secure`\n   - Mandrake，FreeBSD，OpenBSD，Debian: `/var/log/auth.log`\n   - SUSE: `/var/log/messages`\n1. 系统内建函数 `time` **功能有限** （`real` 时间是指挂钟时间，也就是命令开始执行到结束的时间。这个短时间包括其他进程所占用的时间片，   和进程被阻塞时所花费的时间。`user` 时间是指进程花费在用户模式中的CPU时间，   这是唯一真正用于执行进程所花费的时间，其他进程和花费阻塞状态中的时间没有计算在内。`sys` 时间是指花费在内核模式中的 CPU 时间，代表在内核中执系统调用所花费的时间，这也是真正由进程使用的 CPU 时间）  \n   REHL 与 Debian 中的 `man time` 是不同的。比如输出带管道命令的运行时间：`\\time -f '%es' bash -c './test.py | sort > /dev/null'`，其中 `time` 前面的 `\\` 消除 `alias` 对命令的影响（相当于执行 `/usr/bin/time`），在这里由于 `time` 是内建命令（与 `/usr/bin/time` 冲突）\n1. `screen` 玩法：\n   - `-ls` -- 列出当前用户分享的 screen\n   - `-dmS session` -- 新建一个 session（`-d` 表示不立即附着）\n   - `-r` -- （对于本机登录的自己）恢复离线的 screen 作业\n   - `-x` -- （对于别处登录的相同的账号）恢复作业，实现同账号分享\n\n   以下操作处于 `screen` 中：\n\n   - `<C-a> d` -- 从 `screen` 中脱离（注：直接 `<C-d>` 会关闭这个 `screen` ！）\n   - `<C-a> s` -- 冻结屏幕\n   - `<C-a> q` -- 恢复冻结的屏幕\n   - `<C-a> :multiuser on` -- 开始多用户模式\n   - `<C-a> :acladd USER` -- 多用户模式中允许用户 `USER` 访问\n\n   要实现不同账号分享，首先在 `root` 权限下执行：\n   {% codeblock lang:bash %}\n   chmod u+s $(which screen)\n   chmod 755 /var/run/screen\n   rm -fr /var/run/screen/*\n   {% endcodeblock %}\n   再开启多用户模式，添加用户访问权限，其它用户通过命令 `screen -x usera/shared` 即可。  \n   另，出现 `cannot open terminal` 时可用 `script /dev/null`\n1. Zsh 中的 `nohup` 与 Bash 有所不同：关闭 shell 后仍然会停止后台任务。\n   解决方案：\n   - `nohup <command> & disown`\n   - `<command> &!`\n   - `setopt NO_HUP`\n1. 获得指定用户登录 Shell 路径：`getent passwd $LOGNAME | cut -d: -f7`\n1. 配置静态 DNS (Ubuntu)：修改 `/etc/network/interfaces`：\n   {% codeblock %}\n   dns-nameservers 223.5.5.5 223.6.6.6\n   {% endcodeblock %}\n   重启 `networking`：`sudo /etc/init.d/networking restart`\n1. docker 命令免 `sudo`：\n   {% codeblock lang:bash %}\n   sudo groupadd docker\n   sudo gpasswd -a ${USER} docker\n   sudo service docker restart\n   {% endcodeblock %}\n1. 命令 `lsb_release` 提示 `No LSB modules are available.`：\n   {% codeblock lang:bash %}\n   sudo apt install lsb-core\n   {% endcodeblock %}\n1. 开启 swap （交换）分区：\n   1. 创建用于交换分区的文件\n      {% codeblock lang:bash %}\n      dd if=/dev/zero of=/mnt/swap bs=block_size count=number_of_block\n      {% endcodeblock %}\n      注：`block_size`，`number_of_block` 大小可以自定义，比如 `bs=1M`，`count=1024`，代表设置 1G 大小 swap 分区\n   2. 设置交换分区文件\n      {% codeblock lang:bash %}\n      mkswap /mnt/swap\n      {% endcodeblock %}\n   3. 立即启用交换分区文件\n      {% codeblock lang:bash /etc/fstab %}\n      swapon /mnt/swap\n      {% endcodeblock %}\n      如果在 `/etc/rc.local` 中有 `swapoff -a` 需要修改为 `swapon -a`\n   4. 设置开机时启用 `swap` 分区：\n      {% codeblock %}\n      /mnt/swap swap swap defaults 0 0\n      {% endcodeblock %}\n      注：`/mnt/swap` 路径可以修改，可以根据创建的 `swap` 文件具体路径来配置，设置后可以执行 `free -m` 命令查看效果。  \n   参考：[针对阿里云及腾讯云等默认不开启swap分区解决办法](http://www.jiankang37.com/archives/69)\n1. 利用 `svn` 从远程仓库下载部分目录:\n   - GitHub：`svn export https://github.com/<username>/<repo>/trunk/<subdir>`\n   - 码云：`svn export svn://git.oschina.net/<username>/<repo>/trunk/<subdir>`\n   - 码市：`svn export svn+ssh://svn@svn.coding.net/<username>/<repo>/trunk/<subdir>`\n\n   其中 GitHub 已默认开启 svn； 码云及码市需要手动开启。如要获取额外的版本信息，将 `export` 改为 `checkout`\n1. CentOS7.3 (REHL 7) 为 GDB 工具安装必要包 `debuginfo`。  \n   对简单的一段程序进行调试，却提示缺少包，需要通过 `debuginfo-install` 去安装 `glibc-2.17-...`，但无法直接安装 `debuginfo-install`，发现此工具在 `yum-utils` 中，所以首先安装 `yum-utils`\n   {% codeblock lang:bash %}\n   yum install yum-utils\n   {% endcodeblock %}\n   然后需要在 `/etc/yum/repos.d` 下新建 `CentOS-Debuginfo.repo` 文件:\n   {% codeblock /etc/yum/repos.d/CentOS-Debuginfo.repo lang:ini %}\n   #Debug Info\n   [debuginfo]\n   name=CentOS-$releasever - DebugInfo\n   baseurl=http://debuginfo.centos.org/$releasever/$basearch\n   gpgcheck=0\n   enabled=1\n   {% endcodeblock %}\n   保存即可\n1. U 盘安装 CentOS 7.3  \n   1. Windows 下用 UltraISO 将系统刻入 U 盘\n   2. 改 BIOS 启动引导项为 U 盘，进入的第一个界面中将光标移至 `Install ...`，按下 `Tab`，修改命令为\n      {% codeblock lang:bash %}\n      vmlinuz initrd=initrd.img linux dd quiet\n      {% endcodeblock %}\n   3. 上面的命令只是查询 U 盘的设备号，比如此次安装时显示出 U 盘的设备号为 `sdb4`，按下 `Ctrl-Alt-Del` 强制重启，在下次的重启选项中键入\n      {% codeblock lang:bash %}\n      vmlinuz initrd=initrd.img inst.stage2=hd:/dev/sdb4 quiet\n      {% endcodeblock %}\n1. 源码编译 `Git`：\n   {% codeblock lang:bash %}\n   wget 'https://github.com/git/git/archive/v2.17.0-rc0.tar.gz'\n   tar -xzvf v2.17.0-rc0.tar.gz\n   cd git-2.17.0-rc0\n   make configure\n   ./configure --prefix=/usr/local/git-2.17\n   sudo make install -j4\n   {% endcodeblock %}\n   {% fa warning fw %} 注：Git 源文件中的 Makefile 默认不提供 `uninstall` 选项，   安装时务必慎重选取安装路径。  \n   参考: [How To Install Git on CentOS 7](https://www.digitalocean.com/community/tutorials/how-to-install-git-on-centos-7)\n1. Ubuntu 报错 `sudo: unable to resolve host`：\n   {% codeblock lang:plain /etc/hosts %}\n   127.0.0.1       localhost  abcdefg\n   {% endcodeblock %}\n   其中第三列为主机名\n1. 安装 Node.js 后报错：`/usr/bin/env: ‘node’: No such file or directory` 解决方案：\n   {% codeblock lang:bash %}\n   ln -s /usr/bin/nodejs /usr/bin/node\n   {% endcodeblock %}\n1. SSH 登录出现错误提示 `WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!`，一般是因为认证密钥过期，解决方案：\n   - 根据提示删除 `~/.ssh/known_hosts` 中相应的行\n   - `ssh-keygen -R \"you server hostname or ip\"`\n1. HEREDOC 作为参数调用方法（以 `perl -e ` 为例）：\n   {% codeblock lang:bash %}\n   echo -e \"\\n\"; set +H; perl -E \"$(cat <<'EOP'\n   foreach (1..10) {\n       our $num = $_;\n       say \"Iteration number $_.\\n\";\n       print \"Please choose: last, next, redo, or none of the above? \";\n       chomp(my $choice = <STDIN>);\n       say;\n       last if $choice =~ m'last'i;\n       next if $choice =~ m`next`i;\n       redo if $choice =~ /redo/i;\n       say \"That wasn't any of the choices ... onward!\\n\";\n   }\n   say \"That's all folks!\";\n   say \"And the last number is $num\";\n   EOP\n   )\"; set -H\n   {% endcodeblock %}\n   其中，为避免叹号 `!`（Exclamation Mark）引用历史命令使用 `set +H`\n1. yum 安装包时不清楚程序所在程序包名如何查询：`yum provides */<program>`\n1. 从暂停中的虚拟机恢复后，无法连接 docker 中的容器（数据库、网页应用等）：以 Rocky Linux 8.7 为例，在文件 `/etc/NetworkManager/conf.d/10-unmanage-docker-interfaces.conf` 中键入：\n   {% codeblock lang:ini %}\n   [keyfile]\n   unmanaged-devices=interface-name:docker*;interface-name:veth*;interface-name:br-*;interface-name:vmnet*;interface-name:vboxnet*\n   {% endcodeblock %}\n   参考：[Can't connect to docker after resuming VM](https://stackoverflow.com/questions/57874055/cant-connect-to-docker-after-resuming-vm)\n","source":"_posts/tips-on-linux.md","raw":"---\ntitle: Linux 技巧拾零\ndate: 2017-10-12 12:43:04\ntags:\n    - Linux\ncategories: Tips and Tricks\n---\n\n记录 Linux 下遇到的问题、技巧与备忘。\n\n<!-- more -->\n\n1. 令 Tab 补全对忽略大小写  \n   所有用户：`/etc/inputrc`  \n   当前用户：`~/.inputrc`  \n   输入内容：`set completion-ignore-case on`\n1. `history` 不显示连续、重复、特定的命令、加上时间戳  \n   于 `/etc/bashrc`（或 `~/.bashrc`）中添加\n   {% codeblock lang:bash %}\n   HISTTIMEFORMAT='%F %T '\n   HISTCONTROL=erasedups\n   HISTIGNORE=\"ls:pwd:cd:clear:vim:fg:bg:jobs:top\"\n   {% endcodeblock %}\n   将 `HISTCONTROL` 设成 `ignoredups` 仅忽略连续的重复命令，而 `erasedups` 清除整个历史中重复条目\n1. 常用终端快捷键\n\n   | 快捷键   | 用途               | 快捷键   | 用途                   |\n   | :---     | :---               | :---     | :---                   |\n   | `Ctrl-A` | 移动到行首         | `Esc-F`  | 移动到后面一个单词     |\n   | `Ctrl-E` | 移动到行末         | `Ctrl-K` | 删除到行末             |\n   | `Ctrl-B` | 移动到前面一个字母 | `Ctrl-U` | 删除到行首             |\n   | `Ctrl-F` | 移动到后面一个字母 | `Ctrl-T` | 交换光标位置前两个字符 |\n   | `Esc-B`  | 移动到前面一个单词 | `Esc-T`  | 交换光标位置前两个单词 |\n1. SSH 登录服务器缓慢解决方案：\n   - 关闭 DNS 反向解析：`vim /etc/ssh/sshd_config`，设定其中 `UseDNS=no`，重启服务 `service sshd restart`\n   - 服务端禁用 `GSSAPIAuthentication`：同样在 `/etc/ssh/sshd_config` 中设定 `GSSAPIAuthentication no`\n1. SSH 登录欢迎界面设置文件：`/etc/motd`\n1. SSH Log 日志文件：\n   - Redhat，Fedora Core: `/var/log/secure`\n   - Mandrake，FreeBSD，OpenBSD，Debian: `/var/log/auth.log`\n   - SUSE: `/var/log/messages`\n1. 系统内建函数 `time` **功能有限** （`real` 时间是指挂钟时间，也就是命令开始执行到结束的时间。这个短时间包括其他进程所占用的时间片，   和进程被阻塞时所花费的时间。`user` 时间是指进程花费在用户模式中的CPU时间，   这是唯一真正用于执行进程所花费的时间，其他进程和花费阻塞状态中的时间没有计算在内。`sys` 时间是指花费在内核模式中的 CPU 时间，代表在内核中执系统调用所花费的时间，这也是真正由进程使用的 CPU 时间）  \n   REHL 与 Debian 中的 `man time` 是不同的。比如输出带管道命令的运行时间：`\\time -f '%es' bash -c './test.py | sort > /dev/null'`，其中 `time` 前面的 `\\` 消除 `alias` 对命令的影响（相当于执行 `/usr/bin/time`），在这里由于 `time` 是内建命令（与 `/usr/bin/time` 冲突）\n1. `screen` 玩法：\n   - `-ls` -- 列出当前用户分享的 screen\n   - `-dmS session` -- 新建一个 session（`-d` 表示不立即附着）\n   - `-r` -- （对于本机登录的自己）恢复离线的 screen 作业\n   - `-x` -- （对于别处登录的相同的账号）恢复作业，实现同账号分享\n\n   以下操作处于 `screen` 中：\n\n   - `<C-a> d` -- 从 `screen` 中脱离（注：直接 `<C-d>` 会关闭这个 `screen` ！）\n   - `<C-a> s` -- 冻结屏幕\n   - `<C-a> q` -- 恢复冻结的屏幕\n   - `<C-a> :multiuser on` -- 开始多用户模式\n   - `<C-a> :acladd USER` -- 多用户模式中允许用户 `USER` 访问\n\n   要实现不同账号分享，首先在 `root` 权限下执行：\n   {% codeblock lang:bash %}\n   chmod u+s $(which screen)\n   chmod 755 /var/run/screen\n   rm -fr /var/run/screen/*\n   {% endcodeblock %}\n   再开启多用户模式，添加用户访问权限，其它用户通过命令 `screen -x usera/shared` 即可。  \n   另，出现 `cannot open terminal` 时可用 `script /dev/null`\n1. Zsh 中的 `nohup` 与 Bash 有所不同：关闭 shell 后仍然会停止后台任务。\n   解决方案：\n   - `nohup <command> & disown`\n   - `<command> &!`\n   - `setopt NO_HUP`\n1. 获得指定用户登录 Shell 路径：`getent passwd $LOGNAME | cut -d: -f7`\n1. 配置静态 DNS (Ubuntu)：修改 `/etc/network/interfaces`：\n   {% codeblock %}\n   dns-nameservers 223.5.5.5 223.6.6.6\n   {% endcodeblock %}\n   重启 `networking`：`sudo /etc/init.d/networking restart`\n1. docker 命令免 `sudo`：\n   {% codeblock lang:bash %}\n   sudo groupadd docker\n   sudo gpasswd -a ${USER} docker\n   sudo service docker restart\n   {% endcodeblock %}\n1. 命令 `lsb_release` 提示 `No LSB modules are available.`：\n   {% codeblock lang:bash %}\n   sudo apt install lsb-core\n   {% endcodeblock %}\n1. 开启 swap （交换）分区：\n   1. 创建用于交换分区的文件\n      {% codeblock lang:bash %}\n      dd if=/dev/zero of=/mnt/swap bs=block_size count=number_of_block\n      {% endcodeblock %}\n      注：`block_size`，`number_of_block` 大小可以自定义，比如 `bs=1M`，`count=1024`，代表设置 1G 大小 swap 分区\n   2. 设置交换分区文件\n      {% codeblock lang:bash %}\n      mkswap /mnt/swap\n      {% endcodeblock %}\n   3. 立即启用交换分区文件\n      {% codeblock lang:bash /etc/fstab %}\n      swapon /mnt/swap\n      {% endcodeblock %}\n      如果在 `/etc/rc.local` 中有 `swapoff -a` 需要修改为 `swapon -a`\n   4. 设置开机时启用 `swap` 分区：\n      {% codeblock %}\n      /mnt/swap swap swap defaults 0 0\n      {% endcodeblock %}\n      注：`/mnt/swap` 路径可以修改，可以根据创建的 `swap` 文件具体路径来配置，设置后可以执行 `free -m` 命令查看效果。  \n   参考：[针对阿里云及腾讯云等默认不开启swap分区解决办法](http://www.jiankang37.com/archives/69)\n1. 利用 `svn` 从远程仓库下载部分目录:\n   - GitHub：`svn export https://github.com/<username>/<repo>/trunk/<subdir>`\n   - 码云：`svn export svn://git.oschina.net/<username>/<repo>/trunk/<subdir>`\n   - 码市：`svn export svn+ssh://svn@svn.coding.net/<username>/<repo>/trunk/<subdir>`\n\n   其中 GitHub 已默认开启 svn； 码云及码市需要手动开启。如要获取额外的版本信息，将 `export` 改为 `checkout`\n1. CentOS7.3 (REHL 7) 为 GDB 工具安装必要包 `debuginfo`。  \n   对简单的一段程序进行调试，却提示缺少包，需要通过 `debuginfo-install` 去安装 `glibc-2.17-...`，但无法直接安装 `debuginfo-install`，发现此工具在 `yum-utils` 中，所以首先安装 `yum-utils`\n   {% codeblock lang:bash %}\n   yum install yum-utils\n   {% endcodeblock %}\n   然后需要在 `/etc/yum/repos.d` 下新建 `CentOS-Debuginfo.repo` 文件:\n   {% codeblock /etc/yum/repos.d/CentOS-Debuginfo.repo lang:ini %}\n   #Debug Info\n   [debuginfo]\n   name=CentOS-$releasever - DebugInfo\n   baseurl=http://debuginfo.centos.org/$releasever/$basearch\n   gpgcheck=0\n   enabled=1\n   {% endcodeblock %}\n   保存即可\n1. U 盘安装 CentOS 7.3  \n   1. Windows 下用 UltraISO 将系统刻入 U 盘\n   2. 改 BIOS 启动引导项为 U 盘，进入的第一个界面中将光标移至 `Install ...`，按下 `Tab`，修改命令为\n      {% codeblock lang:bash %}\n      vmlinuz initrd=initrd.img linux dd quiet\n      {% endcodeblock %}\n   3. 上面的命令只是查询 U 盘的设备号，比如此次安装时显示出 U 盘的设备号为 `sdb4`，按下 `Ctrl-Alt-Del` 强制重启，在下次的重启选项中键入\n      {% codeblock lang:bash %}\n      vmlinuz initrd=initrd.img inst.stage2=hd:/dev/sdb4 quiet\n      {% endcodeblock %}\n1. 源码编译 `Git`：\n   {% codeblock lang:bash %}\n   wget 'https://github.com/git/git/archive/v2.17.0-rc0.tar.gz'\n   tar -xzvf v2.17.0-rc0.tar.gz\n   cd git-2.17.0-rc0\n   make configure\n   ./configure --prefix=/usr/local/git-2.17\n   sudo make install -j4\n   {% endcodeblock %}\n   {% fa warning fw %} 注：Git 源文件中的 Makefile 默认不提供 `uninstall` 选项，   安装时务必慎重选取安装路径。  \n   参考: [How To Install Git on CentOS 7](https://www.digitalocean.com/community/tutorials/how-to-install-git-on-centos-7)\n1. Ubuntu 报错 `sudo: unable to resolve host`：\n   {% codeblock lang:plain /etc/hosts %}\n   127.0.0.1       localhost  abcdefg\n   {% endcodeblock %}\n   其中第三列为主机名\n1. 安装 Node.js 后报错：`/usr/bin/env: ‘node’: No such file or directory` 解决方案：\n   {% codeblock lang:bash %}\n   ln -s /usr/bin/nodejs /usr/bin/node\n   {% endcodeblock %}\n1. SSH 登录出现错误提示 `WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!`，一般是因为认证密钥过期，解决方案：\n   - 根据提示删除 `~/.ssh/known_hosts` 中相应的行\n   - `ssh-keygen -R \"you server hostname or ip\"`\n1. HEREDOC 作为参数调用方法（以 `perl -e ` 为例）：\n   {% codeblock lang:bash %}\n   echo -e \"\\n\"; set +H; perl -E \"$(cat <<'EOP'\n   foreach (1..10) {\n       our $num = $_;\n       say \"Iteration number $_.\\n\";\n       print \"Please choose: last, next, redo, or none of the above? \";\n       chomp(my $choice = <STDIN>);\n       say;\n       last if $choice =~ m'last'i;\n       next if $choice =~ m`next`i;\n       redo if $choice =~ /redo/i;\n       say \"That wasn't any of the choices ... onward!\\n\";\n   }\n   say \"That's all folks!\";\n   say \"And the last number is $num\";\n   EOP\n   )\"; set -H\n   {% endcodeblock %}\n   其中，为避免叹号 `!`（Exclamation Mark）引用历史命令使用 `set +H`\n1. yum 安装包时不清楚程序所在程序包名如何查询：`yum provides */<program>`\n1. 从暂停中的虚拟机恢复后，无法连接 docker 中的容器（数据库、网页应用等）：以 Rocky Linux 8.7 为例，在文件 `/etc/NetworkManager/conf.d/10-unmanage-docker-interfaces.conf` 中键入：\n   {% codeblock lang:ini %}\n   [keyfile]\n   unmanaged-devices=interface-name:docker*;interface-name:veth*;interface-name:br-*;interface-name:vmnet*;interface-name:vboxnet*\n   {% endcodeblock %}\n   参考：[Can't connect to docker after resuming VM](https://stackoverflow.com/questions/57874055/cant-connect-to-docker-after-resuming-vm)\n","slug":"tips-on-linux","published":1,"updated":"2023-04-10T17:28:25.944Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u337c0040p4x0fqsojfr0","content":"<p>记录 Linux 下遇到的问题、技巧与备忘。</p>\r\n<a id=\"more\"></a>\r\n<ol type=\"1\">\r\n<li><p>令 Tab 补全对忽略大小写<br>\r\n所有用户：<code>/etc/inputrc</code><br>\r\n当前用户：<code>~/.inputrc</code><br>\r\n输入内容：<code>set completion-ignore-case on</code></p></li>\r\n<li><p><code>history</code> 不显示连续、重复、特定的命令、加上时间戳<br>\r\n于 <code>/etc/bashrc</code>（或 <code>~/.bashrc</code>）中添加 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HISTTIMEFORMAT=<span class=\"string\">'%F %T '</span></span><br><span class=\"line\">HISTCONTROL=erasedups</span><br><span class=\"line\">HISTIGNORE=<span class=\"string\">\"ls:pwd:cd:clear:vim:fg:bg:jobs:top\"</span></span><br></pre></td></tr></table></figure> 将 <code>HISTCONTROL</code> 设成 <code>ignoredups</code> 仅忽略连续的重复命令，而 <code>erasedups</code> 清除整个历史中重复条目</p></li>\r\n<li><p>常用终端快捷键</p>\r\n<table>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: left;\">快捷键</th>\r\n<th style=\"text-align: left;\">用途</th>\r\n<th style=\"text-align: left;\">快捷键</th>\r\n<th style=\"text-align: left;\">用途</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>Ctrl-A</code></td>\r\n<td style=\"text-align: left;\">移动到行首</td>\r\n<td style=\"text-align: left;\"><code>Esc-F</code></td>\r\n<td style=\"text-align: left;\">移动到后面一个单词</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>Ctrl-E</code></td>\r\n<td style=\"text-align: left;\">移动到行末</td>\r\n<td style=\"text-align: left;\"><code>Ctrl-K</code></td>\r\n<td style=\"text-align: left;\">删除到行末</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>Ctrl-B</code></td>\r\n<td style=\"text-align: left;\">移动到前面一个字母</td>\r\n<td style=\"text-align: left;\"><code>Ctrl-U</code></td>\r\n<td style=\"text-align: left;\">删除到行首</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>Ctrl-F</code></td>\r\n<td style=\"text-align: left;\">移动到后面一个字母</td>\r\n<td style=\"text-align: left;\"><code>Ctrl-T</code></td>\r\n<td style=\"text-align: left;\">交换光标位置前两个字符</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>Esc-B</code></td>\r\n<td style=\"text-align: left;\">移动到前面一个单词</td>\r\n<td style=\"text-align: left;\"><code>Esc-T</code></td>\r\n<td style=\"text-align: left;\">交换光标位置前两个单词</td>\r\n</tr>\r\n</tbody>\r\n</table></li>\r\n<li><p>SSH 登录服务器缓慢解决方案：</p>\r\n<ul>\r\n<li>关闭 DNS 反向解析：<code>vim /etc/ssh/sshd_config</code>，设定其中 <code>UseDNS=no</code>，重启服务 <code>service sshd restart</code></li>\r\n<li>服务端禁用 <code>GSSAPIAuthentication</code>：同样在 <code>/etc/ssh/sshd_config</code> 中设定 <code>GSSAPIAuthentication no</code></li>\r\n</ul></li>\r\n<li><p>SSH 登录欢迎界面设置文件：<code>/etc/motd</code></p></li>\r\n<li><p>SSH Log 日志文件：</p>\r\n<ul>\r\n<li>Redhat，Fedora Core: <code>/var/log/secure</code></li>\r\n<li>Mandrake，FreeBSD，OpenBSD，Debian: <code>/var/log/auth.log</code></li>\r\n<li>SUSE: <code>/var/log/messages</code></li>\r\n</ul></li>\r\n<li><p>系统内建函数 <code>time</code> <strong>功能有限</strong> （<code>real</code> 时间是指挂钟时间，也就是命令开始执行到结束的时间。这个短时间包括其他进程所占用的时间片， 和进程被阻塞时所花费的时间。<code>user</code> 时间是指进程花费在用户模式中的CPU时间， 这是唯一真正用于执行进程所花费的时间，其他进程和花费阻塞状态中的时间没有计算在内。<code>sys</code> 时间是指花费在内核模式中的 CPU 时间，代表在内核中执系统调用所花费的时间，这也是真正由进程使用的 CPU 时间）<br>\r\nREHL 与 Debian 中的 <code>man time</code> 是不同的。比如输出带管道命令的运行时间：<code>\\time -f '%es' bash -c './test.py | sort &gt; /dev/null'</code>，其中 <code>time</code> 前面的 <code>\\</code> 消除 <code>alias</code> 对命令的影响（相当于执行 <code>/usr/bin/time</code>），在这里由于 <code>time</code> 是内建命令（与 <code>/usr/bin/time</code> 冲突）</p></li>\r\n<li><p><code>screen</code> 玩法：</p>\r\n<ul>\r\n<li><code>-ls</code> – 列出当前用户分享的 screen</li>\r\n<li><code>-dmS session</code> – 新建一个 session（<code>-d</code> 表示不立即附着）</li>\r\n<li><code>-r</code> – （对于本机登录的自己）恢复离线的 screen 作业</li>\r\n<li><code>-x</code> – （对于别处登录的相同的账号）恢复作业，实现同账号分享</li>\r\n</ul>\r\n<p>以下操作处于 <code>screen</code> 中：</p>\r\n<ul>\r\n<li><code>&lt;C-a&gt; d</code> – 从 <code>screen</code> 中脱离（注：直接 <code>&lt;C-d&gt;</code> 会关闭这个 <code>screen</code> ！）</li>\r\n<li><code>&lt;C-a&gt; s</code> – 冻结屏幕</li>\r\n<li><code>&lt;C-a&gt; q</code> – 恢复冻结的屏幕</li>\r\n<li><code>&lt;C-a&gt; :multiuser on</code> – 开始多用户模式</li>\r\n<li><code>&lt;C-a&gt; :acladd USER</code> – 多用户模式中允许用户 <code>USER</code> 访问</li>\r\n</ul>\r\n<p>要实现不同账号分享，首先在 <code>root</code> 权限下执行： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod u+s $(<span class=\"built_in\">which</span> screen)</span><br><span class=\"line\">chmod 755 /var/run/screen</span><br><span class=\"line\">rm -fr /var/run/screen/*</span><br></pre></td></tr></table></figure> 再开启多用户模式，添加用户访问权限，其它用户通过命令 <code>screen -x usera/shared</code> 即可。<br>\r\n另，出现 <code>cannot open terminal</code> 时可用 <code>script /dev/null</code></p></li>\r\n<li><p>Zsh 中的 <code>nohup</code> 与 Bash 有所不同：关闭 shell 后仍然会停止后台任务。 解决方案：</p>\r\n<ul>\r\n<li><code>nohup &lt;command&gt; &amp; disown</code></li>\r\n<li><code>&lt;command&gt; &amp;!</code></li>\r\n<li><code>setopt NO_HUP</code></li>\r\n</ul></li>\r\n<li><p>获得指定用户登录 Shell 路径：<code>getent passwd $LOGNAME | cut -d: -f7</code></p></li>\r\n<li><p>配置静态 DNS (Ubuntu)：修改 <code>/etc/network/interfaces</code>： <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dns-nameservers 223.5.5.5 223.6.6.6</span><br></pre></td></tr></table></figure> 重启 <code>networking</code>：<code>sudo /etc/init.d/networking restart</code></p></li>\r\n<li><p>docker 命令免 <code>sudo</code>： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo groupadd docker</span><br><span class=\"line\">sudo gpasswd -a <span class=\"variable\">$&#123;USER&#125;</span> docker</span><br><span class=\"line\">sudo service docker restart</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>命令 <code>lsb_release</code> 提示 <code>No LSB modules are available.</code>： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install lsb-core</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>开启 swap （交换）分区：</p>\r\n<ol type=\"1\">\r\n<li>创建用于交换分区的文件 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dd <span class=\"keyword\">if</span>=/dev/zero of=/mnt/swap bs=block_size count=number_of_block</span><br></pre></td></tr></table></figure> 注：<code>block_size</code>，<code>number_of_block</code> 大小可以自定义，比如 <code>bs=1M</code>，<code>count=1024</code>，代表设置 1G 大小 swap 分区</li>\r\n<li>设置交换分区文件 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkswap /mnt/swap</span><br></pre></td></tr></table></figure></li>\r\n<li>立即启用交换分区文件 <figure class=\"highlight bash\"><figcaption><span>/etc/fstab</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">swapon /mnt/swap</span><br></pre></td></tr></table></figure> 如果在 <code>/etc/rc.local</code> 中有 <code>swapoff -a</code> 需要修改为 <code>swapon -a</code></li>\r\n<li>设置开机时启用 <code>swap</code> 分区： <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/mnt/swap swap swap defaults 0 0</span><br></pre></td></tr></table></figure> 注：<code>/mnt/swap</code> 路径可以修改，可以根据创建的 <code>swap</code> 文件具体路径来配置，设置后可以执行 <code>free -m</code> 命令查看效果。<br>\r\n参考：<a href=\"http://www.jiankang37.com/archives/69\" target=\"_blank\" rel=\"noopener\">针对阿里云及腾讯云等默认不开启swap分区解决办法</a></li>\r\n</ol></li>\r\n<li><p>利用 <code>svn</code> 从远程仓库下载部分目录:</p>\r\n<ul>\r\n<li>GitHub：<code>svn export https://github.com/&lt;username&gt;/&lt;repo&gt;/trunk/&lt;subdir&gt;</code></li>\r\n<li>码云：<code>svn export svn://git.oschina.net/&lt;username&gt;/&lt;repo&gt;/trunk/&lt;subdir&gt;</code></li>\r\n<li>码市：<code>svn export svn+ssh://svn@svn.coding.net/&lt;username&gt;/&lt;repo&gt;/trunk/&lt;subdir&gt;</code></li>\r\n</ul>\r\n<p>其中 GitHub 已默认开启 svn； 码云及码市需要手动开启。如要获取额外的版本信息，将 <code>export</code> 改为 <code>checkout</code></p></li>\r\n<li><p>CentOS7.3 (REHL 7) 为 GDB 工具安装必要包 <code>debuginfo</code>。<br>\r\n对简单的一段程序进行调试，却提示缺少包，需要通过 <code>debuginfo-install</code> 去安装 <code>glibc-2.17-...</code>，但无法直接安装 <code>debuginfo-install</code>，发现此工具在 <code>yum-utils</code> 中，所以首先安装 <code>yum-utils</code> <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install yum-utils</span><br></pre></td></tr></table></figure> 然后需要在 <code>/etc/yum/repos.d</code> 下新建 <code>CentOS-Debuginfo.repo</code> 文件: <figure class=\"highlight ini\"><figcaption><span>/etc/yum/repos.d/CentOS-Debuginfo.repo</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Debug Info</span></span><br><span class=\"line\"><span class=\"section\">[debuginfo]</span></span><br><span class=\"line\"><span class=\"attr\">name</span>=CentOS-<span class=\"variable\">$releasever</span> - DebugInfo</span><br><span class=\"line\"><span class=\"attr\">baseurl</span>=http://debuginfo.centos.org/<span class=\"variable\">$releasever</span>/<span class=\"variable\">$basearch</span></span><br><span class=\"line\"><span class=\"attr\">gpgcheck</span>=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"attr\">enabled</span>=<span class=\"number\">1</span></span><br></pre></td></tr></table></figure> 保存即可</p></li>\r\n<li><p>U 盘安装 CentOS 7.3</p>\r\n<ol type=\"1\">\r\n<li>Windows 下用 UltraISO 将系统刻入 U 盘</li>\r\n<li>改 BIOS 启动引导项为 U 盘，进入的第一个界面中将光标移至 <code>Install ...</code>，按下 <code>Tab</code>，修改命令为 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vmlinuz initrd=initrd.img linux dd quiet</span><br></pre></td></tr></table></figure></li>\r\n<li>上面的命令只是查询 U 盘的设备号，比如此次安装时显示出 U 盘的设备号为 <code>sdb4</code>，按下 <code>Ctrl-Alt-Del</code> 强制重启，在下次的重启选项中键入 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vmlinuz initrd=initrd.img inst.stage2=hd:/dev/sdb4 quiet</span><br></pre></td></tr></table></figure></li>\r\n</ol></li>\r\n<li><p>源码编译 <code>Git</code>： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget <span class=\"string\">'https://github.com/git/git/archive/v2.17.0-rc0.tar.gz'</span></span><br><span class=\"line\">tar -xzvf v2.17.0-rc0.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> git-2.17.0-rc0</span><br><span class=\"line\">make configure</span><br><span class=\"line\">./configure --prefix=/usr/<span class=\"built_in\">local</span>/git-2.17</span><br><span class=\"line\">sudo make install -j4</span><br></pre></td></tr></table></figure> <i class=\"fa fa-warning fa-fw\"></i> 注：Git 源文件中的 Makefile 默认不提供 <code>uninstall</code> 选项， 安装时务必慎重选取安装路径。<br>\r\n参考: <a href=\"https://www.digitalocean.com/community/tutorials/how-to-install-git-on-centos-7\" target=\"_blank\" rel=\"noopener\">How To Install Git on CentOS 7</a></p></li>\r\n<li><p>Ubuntu 报错 <code>sudo: unable to resolve host</code>： <figure class=\"highlight plain\"><figcaption><span>/etc/hosts</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">127.0.0.1       localhost  abcdefg</span><br></pre></td></tr></table></figure> 其中第三列为主机名</p></li>\r\n<li><p>安装 Node.js 后报错：<code>/usr/bin/env: ‘node’: No such file or directory</code> 解决方案： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ln -s /usr/bin/nodejs /usr/bin/node</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>SSH 登录出现错误提示 <code>WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!</code>，一般是因为认证密钥过期，解决方案：</p>\r\n<ul>\r\n<li>根据提示删除 <code>~/.ssh/known_hosts</code> 中相应的行</li>\r\n<li><code>ssh-keygen -R \"you server hostname or ip\"</code></li>\r\n</ul></li>\r\n<li><p>HEREDOC 作为参数调用方法（以 <code>perl -e</code> 为例）： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"\\n\"</span>; <span class=\"built_in\">set</span> +H; perl -E <span class=\"string\">\"<span class=\"variable\">$(cat &lt;&lt;'EOP'</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"variable\">foreach (1..10)</span> &#123;</span></span><br><span class=\"line\"><span class=\"string\">    our <span class=\"variable\">$num</span> = <span class=\"variable\">$_</span>;</span></span><br><span class=\"line\"><span class=\"string\">    say \"</span>Iteration number <span class=\"variable\">$_</span>.\\n<span class=\"string\">\";</span></span><br><span class=\"line\"><span class=\"string\">    print \"</span>Please choose: last, next, redo, or none of the above? <span class=\"string\">\";</span></span><br><span class=\"line\"><span class=\"string\">    chomp(my <span class=\"variable\">$choice</span> = &lt;STDIN&gt;);</span></span><br><span class=\"line\"><span class=\"string\">    say;</span></span><br><span class=\"line\"><span class=\"string\">    last if <span class=\"variable\">$choice</span> =~ m'last'i;</span></span><br><span class=\"line\"><span class=\"string\">    next if <span class=\"variable\">$choice</span> =~ m`next`i;</span></span><br><span class=\"line\"><span class=\"string\">    redo if <span class=\"variable\">$choice</span> =~ /redo/i;</span></span><br><span class=\"line\"><span class=\"string\">    say \"</span>That wasn<span class=\"string\">'t any of the choices ... onward!\\n\";</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">say \"That'</span>s all folks!<span class=\"string\">\";</span></span><br><span class=\"line\"><span class=\"string\">say \"</span>And the last number is <span class=\"variable\">$num</span><span class=\"string\">\";</span></span><br><span class=\"line\"><span class=\"string\">EOP</span></span><br><span class=\"line\"><span class=\"string\">)\"</span>; <span class=\"built_in\">set</span> -H</span><br></pre></td></tr></table></figure> 其中，为避免叹号 <code>!</code>（Exclamation Mark）引用历史命令使用 <code>set +H</code></p></li>\r\n<li><p>yum 安装包时不清楚程序所在程序包名如何查询：<code>yum provides */&lt;program&gt;</code></p></li>\r\n<li><p>从暂停中的虚拟机恢复后，无法连接 docker 中的容器（数据库、网页应用等）：以 Rocky Linux 8.7 为例，在文件 <code>/etc/NetworkManager/conf.d/10-unmanage-docker-interfaces.conf</code> 中键入： <figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[keyfile]</span></span><br><span class=\"line\"><span class=\"attr\">unmanaged-devices</span>=interface-name:docker*;interface-name:veth*;interface-name:br-*;interface-name:vmnet*;interface-name:vboxnet*</span><br></pre></td></tr></table></figure> 参考：<a href=\"https://stackoverflow.com/questions/57874055/cant-connect-to-docker-after-resuming-vm\" target=\"_blank\" rel=\"noopener\">Can’t connect to docker after resuming VM</a></p></li>\r\n</ol>\r\n","site":{"data":{}},"excerpt":"<p>记录 Linux 下遇到的问题、技巧与备忘。</p>","more":"<ol type=\"1\">\r\n<li><p>令 Tab 补全对忽略大小写<br>\r\n所有用户：<code>/etc/inputrc</code><br>\r\n当前用户：<code>~/.inputrc</code><br>\r\n输入内容：<code>set completion-ignore-case on</code></p></li>\r\n<li><p><code>history</code> 不显示连续、重复、特定的命令、加上时间戳<br>\r\n于 <code>/etc/bashrc</code>（或 <code>~/.bashrc</code>）中添加 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HISTTIMEFORMAT=<span class=\"string\">'%F %T '</span></span><br><span class=\"line\">HISTCONTROL=erasedups</span><br><span class=\"line\">HISTIGNORE=<span class=\"string\">\"ls:pwd:cd:clear:vim:fg:bg:jobs:top\"</span></span><br></pre></td></tr></table></figure> 将 <code>HISTCONTROL</code> 设成 <code>ignoredups</code> 仅忽略连续的重复命令，而 <code>erasedups</code> 清除整个历史中重复条目</p></li>\r\n<li><p>常用终端快捷键</p>\r\n<table>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: left;\">快捷键</th>\r\n<th style=\"text-align: left;\">用途</th>\r\n<th style=\"text-align: left;\">快捷键</th>\r\n<th style=\"text-align: left;\">用途</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>Ctrl-A</code></td>\r\n<td style=\"text-align: left;\">移动到行首</td>\r\n<td style=\"text-align: left;\"><code>Esc-F</code></td>\r\n<td style=\"text-align: left;\">移动到后面一个单词</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>Ctrl-E</code></td>\r\n<td style=\"text-align: left;\">移动到行末</td>\r\n<td style=\"text-align: left;\"><code>Ctrl-K</code></td>\r\n<td style=\"text-align: left;\">删除到行末</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>Ctrl-B</code></td>\r\n<td style=\"text-align: left;\">移动到前面一个字母</td>\r\n<td style=\"text-align: left;\"><code>Ctrl-U</code></td>\r\n<td style=\"text-align: left;\">删除到行首</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: left;\"><code>Ctrl-F</code></td>\r\n<td style=\"text-align: left;\">移动到后面一个字母</td>\r\n<td style=\"text-align: left;\"><code>Ctrl-T</code></td>\r\n<td style=\"text-align: left;\">交换光标位置前两个字符</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: left;\"><code>Esc-B</code></td>\r\n<td style=\"text-align: left;\">移动到前面一个单词</td>\r\n<td style=\"text-align: left;\"><code>Esc-T</code></td>\r\n<td style=\"text-align: left;\">交换光标位置前两个单词</td>\r\n</tr>\r\n</tbody>\r\n</table></li>\r\n<li><p>SSH 登录服务器缓慢解决方案：</p>\r\n<ul>\r\n<li>关闭 DNS 反向解析：<code>vim /etc/ssh/sshd_config</code>，设定其中 <code>UseDNS=no</code>，重启服务 <code>service sshd restart</code></li>\r\n<li>服务端禁用 <code>GSSAPIAuthentication</code>：同样在 <code>/etc/ssh/sshd_config</code> 中设定 <code>GSSAPIAuthentication no</code></li>\r\n</ul></li>\r\n<li><p>SSH 登录欢迎界面设置文件：<code>/etc/motd</code></p></li>\r\n<li><p>SSH Log 日志文件：</p>\r\n<ul>\r\n<li>Redhat，Fedora Core: <code>/var/log/secure</code></li>\r\n<li>Mandrake，FreeBSD，OpenBSD，Debian: <code>/var/log/auth.log</code></li>\r\n<li>SUSE: <code>/var/log/messages</code></li>\r\n</ul></li>\r\n<li><p>系统内建函数 <code>time</code> <strong>功能有限</strong> （<code>real</code> 时间是指挂钟时间，也就是命令开始执行到结束的时间。这个短时间包括其他进程所占用的时间片， 和进程被阻塞时所花费的时间。<code>user</code> 时间是指进程花费在用户模式中的CPU时间， 这是唯一真正用于执行进程所花费的时间，其他进程和花费阻塞状态中的时间没有计算在内。<code>sys</code> 时间是指花费在内核模式中的 CPU 时间，代表在内核中执系统调用所花费的时间，这也是真正由进程使用的 CPU 时间）<br>\r\nREHL 与 Debian 中的 <code>man time</code> 是不同的。比如输出带管道命令的运行时间：<code>\\time -f '%es' bash -c './test.py | sort &gt; /dev/null'</code>，其中 <code>time</code> 前面的 <code>\\</code> 消除 <code>alias</code> 对命令的影响（相当于执行 <code>/usr/bin/time</code>），在这里由于 <code>time</code> 是内建命令（与 <code>/usr/bin/time</code> 冲突）</p></li>\r\n<li><p><code>screen</code> 玩法：</p>\r\n<ul>\r\n<li><code>-ls</code> – 列出当前用户分享的 screen</li>\r\n<li><code>-dmS session</code> – 新建一个 session（<code>-d</code> 表示不立即附着）</li>\r\n<li><code>-r</code> – （对于本机登录的自己）恢复离线的 screen 作业</li>\r\n<li><code>-x</code> – （对于别处登录的相同的账号）恢复作业，实现同账号分享</li>\r\n</ul>\r\n<p>以下操作处于 <code>screen</code> 中：</p>\r\n<ul>\r\n<li><code>&lt;C-a&gt; d</code> – 从 <code>screen</code> 中脱离（注：直接 <code>&lt;C-d&gt;</code> 会关闭这个 <code>screen</code> ！）</li>\r\n<li><code>&lt;C-a&gt; s</code> – 冻结屏幕</li>\r\n<li><code>&lt;C-a&gt; q</code> – 恢复冻结的屏幕</li>\r\n<li><code>&lt;C-a&gt; :multiuser on</code> – 开始多用户模式</li>\r\n<li><code>&lt;C-a&gt; :acladd USER</code> – 多用户模式中允许用户 <code>USER</code> 访问</li>\r\n</ul>\r\n<p>要实现不同账号分享，首先在 <code>root</code> 权限下执行： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod u+s $(<span class=\"built_in\">which</span> screen)</span><br><span class=\"line\">chmod 755 /var/run/screen</span><br><span class=\"line\">rm -fr /var/run/screen/*</span><br></pre></td></tr></table></figure> 再开启多用户模式，添加用户访问权限，其它用户通过命令 <code>screen -x usera/shared</code> 即可。<br>\r\n另，出现 <code>cannot open terminal</code> 时可用 <code>script /dev/null</code></p></li>\r\n<li><p>Zsh 中的 <code>nohup</code> 与 Bash 有所不同：关闭 shell 后仍然会停止后台任务。 解决方案：</p>\r\n<ul>\r\n<li><code>nohup &lt;command&gt; &amp; disown</code></li>\r\n<li><code>&lt;command&gt; &amp;!</code></li>\r\n<li><code>setopt NO_HUP</code></li>\r\n</ul></li>\r\n<li><p>获得指定用户登录 Shell 路径：<code>getent passwd $LOGNAME | cut -d: -f7</code></p></li>\r\n<li><p>配置静态 DNS (Ubuntu)：修改 <code>/etc/network/interfaces</code>： <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dns-nameservers 223.5.5.5 223.6.6.6</span><br></pre></td></tr></table></figure> 重启 <code>networking</code>：<code>sudo /etc/init.d/networking restart</code></p></li>\r\n<li><p>docker 命令免 <code>sudo</code>： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo groupadd docker</span><br><span class=\"line\">sudo gpasswd -a <span class=\"variable\">$&#123;USER&#125;</span> docker</span><br><span class=\"line\">sudo service docker restart</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>命令 <code>lsb_release</code> 提示 <code>No LSB modules are available.</code>： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install lsb-core</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>开启 swap （交换）分区：</p>\r\n<ol type=\"1\">\r\n<li>创建用于交换分区的文件 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dd <span class=\"keyword\">if</span>=/dev/zero of=/mnt/swap bs=block_size count=number_of_block</span><br></pre></td></tr></table></figure> 注：<code>block_size</code>，<code>number_of_block</code> 大小可以自定义，比如 <code>bs=1M</code>，<code>count=1024</code>，代表设置 1G 大小 swap 分区</li>\r\n<li>设置交换分区文件 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkswap /mnt/swap</span><br></pre></td></tr></table></figure></li>\r\n<li>立即启用交换分区文件 <figure class=\"highlight bash\"><figcaption><span>/etc/fstab</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">swapon /mnt/swap</span><br></pre></td></tr></table></figure> 如果在 <code>/etc/rc.local</code> 中有 <code>swapoff -a</code> 需要修改为 <code>swapon -a</code></li>\r\n<li>设置开机时启用 <code>swap</code> 分区： <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/mnt/swap swap swap defaults 0 0</span><br></pre></td></tr></table></figure> 注：<code>/mnt/swap</code> 路径可以修改，可以根据创建的 <code>swap</code> 文件具体路径来配置，设置后可以执行 <code>free -m</code> 命令查看效果。<br>\r\n参考：<a href=\"http://www.jiankang37.com/archives/69\" target=\"_blank\" rel=\"noopener\">针对阿里云及腾讯云等默认不开启swap分区解决办法</a></li>\r\n</ol></li>\r\n<li><p>利用 <code>svn</code> 从远程仓库下载部分目录:</p>\r\n<ul>\r\n<li>GitHub：<code>svn export https://github.com/&lt;username&gt;/&lt;repo&gt;/trunk/&lt;subdir&gt;</code></li>\r\n<li>码云：<code>svn export svn://git.oschina.net/&lt;username&gt;/&lt;repo&gt;/trunk/&lt;subdir&gt;</code></li>\r\n<li>码市：<code>svn export svn+ssh://svn@svn.coding.net/&lt;username&gt;/&lt;repo&gt;/trunk/&lt;subdir&gt;</code></li>\r\n</ul>\r\n<p>其中 GitHub 已默认开启 svn； 码云及码市需要手动开启。如要获取额外的版本信息，将 <code>export</code> 改为 <code>checkout</code></p></li>\r\n<li><p>CentOS7.3 (REHL 7) 为 GDB 工具安装必要包 <code>debuginfo</code>。<br>\r\n对简单的一段程序进行调试，却提示缺少包，需要通过 <code>debuginfo-install</code> 去安装 <code>glibc-2.17-...</code>，但无法直接安装 <code>debuginfo-install</code>，发现此工具在 <code>yum-utils</code> 中，所以首先安装 <code>yum-utils</code> <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install yum-utils</span><br></pre></td></tr></table></figure> 然后需要在 <code>/etc/yum/repos.d</code> 下新建 <code>CentOS-Debuginfo.repo</code> 文件: <figure class=\"highlight ini\"><figcaption><span>/etc/yum/repos.d/CentOS-Debuginfo.repo</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Debug Info</span></span><br><span class=\"line\"><span class=\"section\">[debuginfo]</span></span><br><span class=\"line\"><span class=\"attr\">name</span>=CentOS-<span class=\"variable\">$releasever</span> - DebugInfo</span><br><span class=\"line\"><span class=\"attr\">baseurl</span>=http://debuginfo.centos.org/<span class=\"variable\">$releasever</span>/<span class=\"variable\">$basearch</span></span><br><span class=\"line\"><span class=\"attr\">gpgcheck</span>=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"attr\">enabled</span>=<span class=\"number\">1</span></span><br></pre></td></tr></table></figure> 保存即可</p></li>\r\n<li><p>U 盘安装 CentOS 7.3</p>\r\n<ol type=\"1\">\r\n<li>Windows 下用 UltraISO 将系统刻入 U 盘</li>\r\n<li>改 BIOS 启动引导项为 U 盘，进入的第一个界面中将光标移至 <code>Install ...</code>，按下 <code>Tab</code>，修改命令为 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vmlinuz initrd=initrd.img linux dd quiet</span><br></pre></td></tr></table></figure></li>\r\n<li>上面的命令只是查询 U 盘的设备号，比如此次安装时显示出 U 盘的设备号为 <code>sdb4</code>，按下 <code>Ctrl-Alt-Del</code> 强制重启，在下次的重启选项中键入 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vmlinuz initrd=initrd.img inst.stage2=hd:/dev/sdb4 quiet</span><br></pre></td></tr></table></figure></li>\r\n</ol></li>\r\n<li><p>源码编译 <code>Git</code>： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget <span class=\"string\">'https://github.com/git/git/archive/v2.17.0-rc0.tar.gz'</span></span><br><span class=\"line\">tar -xzvf v2.17.0-rc0.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> git-2.17.0-rc0</span><br><span class=\"line\">make configure</span><br><span class=\"line\">./configure --prefix=/usr/<span class=\"built_in\">local</span>/git-2.17</span><br><span class=\"line\">sudo make install -j4</span><br></pre></td></tr></table></figure> <i class=\"fa fa-warning fa-fw\"></i> 注：Git 源文件中的 Makefile 默认不提供 <code>uninstall</code> 选项， 安装时务必慎重选取安装路径。<br>\r\n参考: <a href=\"https://www.digitalocean.com/community/tutorials/how-to-install-git-on-centos-7\" target=\"_blank\" rel=\"noopener\">How To Install Git on CentOS 7</a></p></li>\r\n<li><p>Ubuntu 报错 <code>sudo: unable to resolve host</code>： <figure class=\"highlight plain\"><figcaption><span>/etc/hosts</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">127.0.0.1       localhost  abcdefg</span><br></pre></td></tr></table></figure> 其中第三列为主机名</p></li>\r\n<li><p>安装 Node.js 后报错：<code>/usr/bin/env: ‘node’: No such file or directory</code> 解决方案： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ln -s /usr/bin/nodejs /usr/bin/node</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>SSH 登录出现错误提示 <code>WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!</code>，一般是因为认证密钥过期，解决方案：</p>\r\n<ul>\r\n<li>根据提示删除 <code>~/.ssh/known_hosts</code> 中相应的行</li>\r\n<li><code>ssh-keygen -R \"you server hostname or ip\"</code></li>\r\n</ul></li>\r\n<li><p>HEREDOC 作为参数调用方法（以 <code>perl -e</code> 为例）： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"\\n\"</span>; <span class=\"built_in\">set</span> +H; perl -E <span class=\"string\">\"<span class=\"variable\">$(cat &lt;&lt;'EOP'</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"variable\">foreach (1..10)</span> &#123;</span></span><br><span class=\"line\"><span class=\"string\">    our <span class=\"variable\">$num</span> = <span class=\"variable\">$_</span>;</span></span><br><span class=\"line\"><span class=\"string\">    say \"</span>Iteration number <span class=\"variable\">$_</span>.\\n<span class=\"string\">\";</span></span><br><span class=\"line\"><span class=\"string\">    print \"</span>Please choose: last, next, redo, or none of the above? <span class=\"string\">\";</span></span><br><span class=\"line\"><span class=\"string\">    chomp(my <span class=\"variable\">$choice</span> = &lt;STDIN&gt;);</span></span><br><span class=\"line\"><span class=\"string\">    say;</span></span><br><span class=\"line\"><span class=\"string\">    last if <span class=\"variable\">$choice</span> =~ m'last'i;</span></span><br><span class=\"line\"><span class=\"string\">    next if <span class=\"variable\">$choice</span> =~ m`next`i;</span></span><br><span class=\"line\"><span class=\"string\">    redo if <span class=\"variable\">$choice</span> =~ /redo/i;</span></span><br><span class=\"line\"><span class=\"string\">    say \"</span>That wasn<span class=\"string\">'t any of the choices ... onward!\\n\";</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">say \"That'</span>s all folks!<span class=\"string\">\";</span></span><br><span class=\"line\"><span class=\"string\">say \"</span>And the last number is <span class=\"variable\">$num</span><span class=\"string\">\";</span></span><br><span class=\"line\"><span class=\"string\">EOP</span></span><br><span class=\"line\"><span class=\"string\">)\"</span>; <span class=\"built_in\">set</span> -H</span><br></pre></td></tr></table></figure> 其中，为避免叹号 <code>!</code>（Exclamation Mark）引用历史命令使用 <code>set +H</code></p></li>\r\n<li><p>yum 安装包时不清楚程序所在程序包名如何查询：<code>yum provides */&lt;program&gt;</code></p></li>\r\n<li><p>从暂停中的虚拟机恢复后，无法连接 docker 中的容器（数据库、网页应用等）：以 Rocky Linux 8.7 为例，在文件 <code>/etc/NetworkManager/conf.d/10-unmanage-docker-interfaces.conf</code> 中键入： <figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[keyfile]</span></span><br><span class=\"line\"><span class=\"attr\">unmanaged-devices</span>=interface-name:docker*;interface-name:veth*;interface-name:br-*;interface-name:vmnet*;interface-name:vboxnet*</span><br></pre></td></tr></table></figure> 参考：<a href=\"https://stackoverflow.com/questions/57874055/cant-connect-to-docker-after-resuming-vm\" target=\"_blank\" rel=\"noopener\">Can’t connect to docker after resuming VM</a></p></li>\r\n</ol>"},{"title":"「摘」自定义 zip 和 map 函数","date":"2017-12-14T03:31:47.000Z","nocopyright":true,"_content":"\n> 作者: Mark Lutz 著，李军 刘红伟译  \n> 来源: 「Python 学习手册」  \n> 章节: 第 20 章 -- 迭代和解析，第二部分\n\n在 Python 2.x 中，`map` 函数会将 `None` 补充至返回结果中，也就是说，最后返回列表的长度为其参数中长度最长的一个，这与 Python 3.x 中 `map` 的行为是不同的（Python 3.x 中会将其截断，结果返回参数中长度为最短的一个）\n\n<!-- more -->\n\n可以用如下代码进行模拟：\n\n```python\ndef myzip(*deqs):\n    seqs = [list(S) for S in seqs]\n    res = []\n    while all(seqs):\n        res.append(tuple(S.pop(0) for S in seqs))\n    return res\n\ndef mymapPad(*seqs, pad=None):\n    seqs = [list(S) for S in seqs]\n    res = []\n    while any(seqs):\n        res.append(tuple((S.pop(0) if S else pad) for S in seqs))\n    return res\n```\n\n其中，`myzip` 函数将参数全部显式转化为列表，根据所有参数的最小长度进入循环。因为该函数的目的是「截断」，所以是「短板效应」。而且 `mymapPad` 函数中，应该试图一直「取下去」，遇到没有元素的参数时，用 `pad` 进行填充 (默认是 `None`)。同样，上面的版本直接返回列表，用 `yield` 版本返回生成器：\n\n```\ndef myzip(*seqs):\n    seqs = [list(S) for S in seqs]\n    while all(seqs):\n        yield tuple(S.pop(0) for S in seqs)\n\ndef mymapPad(*seq, pad=None):\n    seqs = [list(S) for S in seqs]\n    while any(seqs):\n        yield tuple((S.pop(0) if S else pad) for S in seqs)\n```\n\n因为循环次数可以事先被确定，所以有如下不使用循环的版本：\n\n```python\ndef myzip(*seqs):\n    minlen = min(len(S) for S in seqs)\n    return [tuple(S[i] for S in seqs) for i in range(minlen)]\n\ndef mymapPad(*seqs, pad=None):\n    maxlen = max(len(S) for S in seqs)\n    return [tuple(S[i] if len(S) > i else pad for S in seqs)\n            for i in range(maxlen)]\n```\n\n最后一个版本是完全的生成器版本：\n\n```python\ndef myzip(*seqs):\n    minlen = min(len(S) for S in seqs)\n    return (tuple(S[i] for S in seqs) for i in range(minlen))\n```\n\n","source":"_posts/user-defined-zip-and-map.md","raw":"---\ntitle: 「摘」自定义 zip 和 map 函数\ndate: 2017-12-14 11:31:47\ntags:\n    - Python\n    - Iterator\ncategories: Development\nnocopyright: true\n---\n\n> 作者: Mark Lutz 著，李军 刘红伟译  \n> 来源: 「Python 学习手册」  \n> 章节: 第 20 章 -- 迭代和解析，第二部分\n\n在 Python 2.x 中，`map` 函数会将 `None` 补充至返回结果中，也就是说，最后返回列表的长度为其参数中长度最长的一个，这与 Python 3.x 中 `map` 的行为是不同的（Python 3.x 中会将其截断，结果返回参数中长度为最短的一个）\n\n<!-- more -->\n\n可以用如下代码进行模拟：\n\n```python\ndef myzip(*deqs):\n    seqs = [list(S) for S in seqs]\n    res = []\n    while all(seqs):\n        res.append(tuple(S.pop(0) for S in seqs))\n    return res\n\ndef mymapPad(*seqs, pad=None):\n    seqs = [list(S) for S in seqs]\n    res = []\n    while any(seqs):\n        res.append(tuple((S.pop(0) if S else pad) for S in seqs))\n    return res\n```\n\n其中，`myzip` 函数将参数全部显式转化为列表，根据所有参数的最小长度进入循环。因为该函数的目的是「截断」，所以是「短板效应」。而且 `mymapPad` 函数中，应该试图一直「取下去」，遇到没有元素的参数时，用 `pad` 进行填充 (默认是 `None`)。同样，上面的版本直接返回列表，用 `yield` 版本返回生成器：\n\n```\ndef myzip(*seqs):\n    seqs = [list(S) for S in seqs]\n    while all(seqs):\n        yield tuple(S.pop(0) for S in seqs)\n\ndef mymapPad(*seq, pad=None):\n    seqs = [list(S) for S in seqs]\n    while any(seqs):\n        yield tuple((S.pop(0) if S else pad) for S in seqs)\n```\n\n因为循环次数可以事先被确定，所以有如下不使用循环的版本：\n\n```python\ndef myzip(*seqs):\n    minlen = min(len(S) for S in seqs)\n    return [tuple(S[i] for S in seqs) for i in range(minlen)]\n\ndef mymapPad(*seqs, pad=None):\n    maxlen = max(len(S) for S in seqs)\n    return [tuple(S[i] if len(S) > i else pad for S in seqs)\n            for i in range(maxlen)]\n```\n\n最后一个版本是完全的生成器版本：\n\n```python\ndef myzip(*seqs):\n    minlen = min(len(S) for S in seqs)\n    return (tuple(S[i] for S in seqs) for i in range(minlen))\n```\n\n","slug":"user-defined-zip-and-map","published":1,"updated":"2023-03-09T16:09:38.305Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u337d0042p4x0ca5poaof","content":"<blockquote>\r\n<p>作者: Mark Lutz 著，李军 刘红伟译<br>\r\n来源: 「Python 学习手册」<br>\r\n章节: 第 20 章 – 迭代和解析，第二部分</p>\r\n</blockquote>\r\n<p>在 Python 2.x 中，<code>map</code> 函数会将 <code>None</code> 补充至返回结果中，也就是说，最后返回列表的长度为其参数中长度最长的一个，这与 Python 3.x 中 <code>map</code> 的行为是不同的（Python 3.x 中会将其截断，结果返回参数中长度为最短的一个）</p>\r\n<a id=\"more\"></a>\r\n<p>可以用如下代码进行模拟：</p>\r\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">myzip</span><span class=\"params\">(*deqs)</span>:</span></span><br><span class=\"line\">    seqs = [list(S) <span class=\"keyword\">for</span> S <span class=\"keyword\">in</span> seqs]</span><br><span class=\"line\">    res = []</span><br><span class=\"line\">    <span class=\"keyword\">while</span> all(seqs):</span><br><span class=\"line\">        res.append(tuple(S.pop(<span class=\"number\">0</span>) <span class=\"keyword\">for</span> S <span class=\"keyword\">in</span> seqs))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">mymapPad</span><span class=\"params\">(*seqs, pad=None)</span>:</span></span><br><span class=\"line\">    seqs = [list(S) <span class=\"keyword\">for</span> S <span class=\"keyword\">in</span> seqs]</span><br><span class=\"line\">    res = []</span><br><span class=\"line\">    <span class=\"keyword\">while</span> any(seqs):</span><br><span class=\"line\">        res.append(tuple((S.pop(<span class=\"number\">0</span>) <span class=\"keyword\">if</span> S <span class=\"keyword\">else</span> pad) <span class=\"keyword\">for</span> S <span class=\"keyword\">in</span> seqs))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br></pre></td></tr></table></figure>\r\n<p>其中，<code>myzip</code> 函数将参数全部显式转化为列表，根据所有参数的最小长度进入循环。因为该函数的目的是「截断」，所以是「短板效应」。而且 <code>mymapPad</code> 函数中，应该试图一直「取下去」，遇到没有元素的参数时，用 <code>pad</code> 进行填充 (默认是 <code>None</code>)。同样，上面的版本直接返回列表，用 <code>yield</code> 版本返回生成器：</p>\r\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def myzip(*seqs):</span><br><span class=\"line\">    seqs = [list(S) for S in seqs]</span><br><span class=\"line\">    while all(seqs):</span><br><span class=\"line\">        yield tuple(S.pop(0) for S in seqs)</span><br><span class=\"line\"></span><br><span class=\"line\">def mymapPad(*seq, pad=None):</span><br><span class=\"line\">    seqs = [list(S) for S in seqs]</span><br><span class=\"line\">    while any(seqs):</span><br><span class=\"line\">        yield tuple((S.pop(0) if S else pad) for S in seqs)</span><br></pre></td></tr></table></figure>\r\n<p>因为循环次数可以事先被确定，所以有如下不使用循环的版本：</p>\r\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">myzip</span><span class=\"params\">(*seqs)</span>:</span></span><br><span class=\"line\">    minlen = min(len(S) <span class=\"keyword\">for</span> S <span class=\"keyword\">in</span> seqs)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> [tuple(S[i] <span class=\"keyword\">for</span> S <span class=\"keyword\">in</span> seqs) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(minlen)]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">mymapPad</span><span class=\"params\">(*seqs, pad=None)</span>:</span></span><br><span class=\"line\">    maxlen = max(len(S) <span class=\"keyword\">for</span> S <span class=\"keyword\">in</span> seqs)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> [tuple(S[i] <span class=\"keyword\">if</span> len(S) &gt; i <span class=\"keyword\">else</span> pad <span class=\"keyword\">for</span> S <span class=\"keyword\">in</span> seqs)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(maxlen)]</span><br></pre></td></tr></table></figure>\r\n<p>最后一个版本是完全的生成器版本：</p>\r\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">myzip</span><span class=\"params\">(*seqs)</span>:</span></span><br><span class=\"line\">    minlen = min(len(S) <span class=\"keyword\">for</span> S <span class=\"keyword\">in</span> seqs)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (tuple(S[i] <span class=\"keyword\">for</span> S <span class=\"keyword\">in</span> seqs) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(minlen))</span><br></pre></td></tr></table></figure>\r\n","site":{"data":{}},"excerpt":"<blockquote>\r\n<p>作者: Mark Lutz 著，李军 刘红伟译<br>\r\n来源: 「Python 学习手册」<br>\r\n章节: 第 20 章 – 迭代和解析，第二部分</p>\r\n</blockquote>\r\n<p>在 Python 2.x 中，<code>map</code> 函数会将 <code>None</code> 补充至返回结果中，也就是说，最后返回列表的长度为其参数中长度最长的一个，这与 Python 3.x 中 <code>map</code> 的行为是不同的（Python 3.x 中会将其截断，结果返回参数中长度为最短的一个）</p>","more":"<p>可以用如下代码进行模拟：</p>\r\n<!--�196-->\r\n<p>其中，<code>myzip</code> 函数将参数全部显式转化为列表，根据所有参数的最小长度进入循环。因为该函数的目的是「截断」，所以是「短板效应」。而且 <code>mymapPad</code> 函数中，应该试图一直「取下去」，遇到没有元素的参数时，用 <code>pad</code> 进行填充 (默认是 <code>None</code>)。同样，上面的版本直接返回列表，用 <code>yield</code> 版本返回生成器：</p>\r\n<!--�197-->\r\n<p>因为循环次数可以事先被确定，所以有如下不使用循环的版本：</p>\r\n<!--�198-->\r\n<p>最后一个版本是完全的生成器版本：</p>\r\n<!--�199-->"},{"title":"安装 Zsh","date":"2017-08-17T03:02:03.000Z","_content":"\n {% fa warning fw %} 试验场所有 CentOS（本地 + 远程），Ubuntu 14.04+，~~MSYS2~~（比较卡，应该是 mintty 的原因，不打算继续折腾）。\n\n### 安装 Zsh\n\n{% codeblock lang:bash %}\nyum install zsh\nchsh -s /usr/bin/zsh\n{% endcodeblock %}\n\n### 安装 Oh-My-Zsh\n\n官方 [repo][oh-my-zsh-repo]\n\n{% codeblock lang:bash %}\nsh -c \"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"\n{% endcodeblock %}\n\n或\n\n{% codeblock lang:bash %}\nsh -c \"$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)\"\n{% endcodeblock %}\n\n详情请见 oh-my-zsh 的 [wiki][oh-my-zsh-wiki]。\n\n<!-- more -->\n\n### 主题\n\n- Powerlevel9k：[repo][powerlevel9k-repo]\n  {% codeblock lang:bash %}\n  git clone https://github.com/bhilburn/powerlevel9k.git ~/.oh-my-zsh/custom/themes/powerlevel9k\n  {% endcodeblock %}\n- 自带主题：[Themes][oh-my-zsh-themes]\n- 额外主题：[External themes][oh-my-zsh-external-themes]\n\n### 配置 zshrc\n\n见 [`.zshrc`][zshrc] (针对 `powerlevel9k` 主题)\n\n---\n\n秀一发:\n\n![](/img/zsh-on-xshell.png)\n\n**注** 其中所用字体为 `Sauce Code Pro Nerd Font Complete Mono Windows Compatible`，官方 [repo][nerdfonts-repo]\n\n### 常见问题\n\n- 不能更新，提示\n  `error: Cannot pull with rebase: You have unstaged changes.`\n  {% codeblock lang:bash %}\n  cd $ZSH && git stash && cd -\n  upgrade_oh_my_zsh\n  {% endcodeblock %}\n\n\n[oh-my-zsh-repo]: https://github.com/robbyrussell/oh-my-zsh\n[oh-my-zsh-wiki]: https://github.com/robbyrussell/oh-my-zsh/wiki/Installing-ZSH\n[oh-my-zsh-themes]: https://github.com/robbyrussell/oh-my-zsh/wiki/Themes\n[oh-my-zsh-external-themes]: https://github.com/robbyrussell/oh-my-zsh/wiki/External-themes\n[powerlevel9k-repo]: https://github.com/bhilburn/powerlevel9k\n[nerdfonts-repo]: https://github.com/buzzkillhardball/nerdfonts\n[zshrc]: /src/zshrc\n","source":"_posts/zsh-installation.md","raw":"---\ntitle: 安装 Zsh\ndate: 2017-08-17 11:02:03\ntags:\n    - Shell\n    - Zsh\n    - Linux\ncategories: Operation and Maintenance\n---\n\n {% fa warning fw %} 试验场所有 CentOS（本地 + 远程），Ubuntu 14.04+，~~MSYS2~~（比较卡，应该是 mintty 的原因，不打算继续折腾）。\n\n### 安装 Zsh\n\n{% codeblock lang:bash %}\nyum install zsh\nchsh -s /usr/bin/zsh\n{% endcodeblock %}\n\n### 安装 Oh-My-Zsh\n\n官方 [repo][oh-my-zsh-repo]\n\n{% codeblock lang:bash %}\nsh -c \"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"\n{% endcodeblock %}\n\n或\n\n{% codeblock lang:bash %}\nsh -c \"$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)\"\n{% endcodeblock %}\n\n详情请见 oh-my-zsh 的 [wiki][oh-my-zsh-wiki]。\n\n<!-- more -->\n\n### 主题\n\n- Powerlevel9k：[repo][powerlevel9k-repo]\n  {% codeblock lang:bash %}\n  git clone https://github.com/bhilburn/powerlevel9k.git ~/.oh-my-zsh/custom/themes/powerlevel9k\n  {% endcodeblock %}\n- 自带主题：[Themes][oh-my-zsh-themes]\n- 额外主题：[External themes][oh-my-zsh-external-themes]\n\n### 配置 zshrc\n\n见 [`.zshrc`][zshrc] (针对 `powerlevel9k` 主题)\n\n---\n\n秀一发:\n\n![](/img/zsh-on-xshell.png)\n\n**注** 其中所用字体为 `Sauce Code Pro Nerd Font Complete Mono Windows Compatible`，官方 [repo][nerdfonts-repo]\n\n### 常见问题\n\n- 不能更新，提示\n  `error: Cannot pull with rebase: You have unstaged changes.`\n  {% codeblock lang:bash %}\n  cd $ZSH && git stash && cd -\n  upgrade_oh_my_zsh\n  {% endcodeblock %}\n\n\n[oh-my-zsh-repo]: https://github.com/robbyrussell/oh-my-zsh\n[oh-my-zsh-wiki]: https://github.com/robbyrussell/oh-my-zsh/wiki/Installing-ZSH\n[oh-my-zsh-themes]: https://github.com/robbyrussell/oh-my-zsh/wiki/Themes\n[oh-my-zsh-external-themes]: https://github.com/robbyrussell/oh-my-zsh/wiki/External-themes\n[powerlevel9k-repo]: https://github.com/bhilburn/powerlevel9k\n[nerdfonts-repo]: https://github.com/buzzkillhardball/nerdfonts\n[zshrc]: /src/zshrc\n","slug":"zsh-installation","published":1,"updated":"2023-03-09T16:09:38.307Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh7u337e0046p4x0da2k7pk7","content":"<p><i class=\"fa fa-warning fa-fw\"></i> 试验场所有 CentOS（本地 + 远程），Ubuntu 14.04+，<del>MSYS2</del>（比较卡，应该是 mintty 的原因，不打算继续折腾）。</p>\r\n<h3 id=\"安装-zsh\">安装 Zsh</h3>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install zsh</span><br><span class=\"line\">chsh -s /usr/bin/zsh</span><br></pre></td></tr></table></figure>\r\n<h3 id=\"安装-oh-my-zsh\">安装 Oh-My-Zsh</h3>\r\n<p>官方 <a href=\"https://github.com/robbyrussell/oh-my-zsh\" target=\"_blank\" rel=\"noopener\">repo</a></p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sh -c <span class=\"string\">\"<span class=\"variable\">$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>\"</span></span><br></pre></td></tr></table></figure>\r\n<p>或</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sh -c <span class=\"string\">\"<span class=\"variable\">$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)</span>\"</span></span><br></pre></td></tr></table></figure>\r\n<p>详情请见 oh-my-zsh 的 <a href=\"https://github.com/robbyrussell/oh-my-zsh/wiki/Installing-ZSH\" target=\"_blank\" rel=\"noopener\">wiki</a>。</p>\r\n<a id=\"more\"></a>\r\n<h3 id=\"主题\">主题</h3>\r\n<ul>\r\n<li>Powerlevel9k：<a href=\"https://github.com/bhilburn/powerlevel9k\" target=\"_blank\" rel=\"noopener\">repo</a> <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/bhilburn/powerlevel9k.git ~/.oh-my-zsh/custom/themes/powerlevel9k</span><br></pre></td></tr></table></figure></li>\r\n<li>自带主题：<a href=\"https://github.com/robbyrussell/oh-my-zsh/wiki/Themes\" target=\"_blank\" rel=\"noopener\">Themes</a></li>\r\n<li>额外主题：<a href=\"https://github.com/robbyrussell/oh-my-zsh/wiki/External-themes\" target=\"_blank\" rel=\"noopener\">External themes</a></li>\r\n</ul>\r\n<h3 id=\"配置-zshrc\">配置 zshrc</h3>\r\n<p>见 <a href=\"/src/zshrc\"><code>.zshrc</code></a> (针对 <code>powerlevel9k</code> 主题)</p>\r\n<hr>\r\n<p>秀一发:</p>\r\n<p><img src=\"/img/zsh-on-xshell.png\"></p>\r\n<p><strong>注</strong> 其中所用字体为 <code>Sauce Code Pro Nerd Font Complete Mono Windows Compatible</code>，官方 <a href=\"https://github.com/buzzkillhardball/nerdfonts\" target=\"_blank\" rel=\"noopener\">repo</a></p>\r\n<h3 id=\"常见问题\">常见问题</h3>\r\n<ul>\r\n<li>不能更新，提示 <code>error: Cannot pull with rebase: You have unstaged changes.</code> <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> <span class=\"variable\">$ZSH</span> &amp;&amp; git stash &amp;&amp; <span class=\"built_in\">cd</span> -</span><br><span class=\"line\">upgrade_oh_my_zsh</span><br></pre></td></tr></table></figure></li>\r\n</ul>\r\n","site":{"data":{}},"excerpt":"<p><i class=\"fa fa-warning fa-fw\"></i> 试验场所有 CentOS（本地 + 远程），Ubuntu 14.04+，<del>MSYS2</del>（比较卡，应该是 mintty 的原因，不打算继续折腾）。</p>\r\n<h3 id=\"安装-zsh\">安装 Zsh</h3>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install zsh</span><br><span class=\"line\">chsh -s /usr/bin/zsh</span><br></pre></td></tr></table></figure>\r\n<h3 id=\"安装-oh-my-zsh\">安装 Oh-My-Zsh</h3>\r\n<p>官方 <a href=\"https://github.com/robbyrussell/oh-my-zsh\" target=\"_blank\" rel=\"noopener\">repo</a></p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sh -c <span class=\"string\">\"<span class=\"variable\">$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>\"</span></span><br></pre></td></tr></table></figure>\r\n<p>或</p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sh -c <span class=\"string\">\"<span class=\"variable\">$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)</span>\"</span></span><br></pre></td></tr></table></figure>\r\n<p>详情请见 oh-my-zsh 的 <a href=\"https://github.com/robbyrussell/oh-my-zsh/wiki/Installing-ZSH\" target=\"_blank\" rel=\"noopener\">wiki</a>。</p>","more":"<h3 id=\"主题\">主题</h3>\r\n<ul>\r\n<li>Powerlevel9k：<a href=\"https://github.com/bhilburn/powerlevel9k\" target=\"_blank\" rel=\"noopener\">repo</a> <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/bhilburn/powerlevel9k.git ~/.oh-my-zsh/custom/themes/powerlevel9k</span><br></pre></td></tr></table></figure></li>\r\n<li>自带主题：<a href=\"https://github.com/robbyrussell/oh-my-zsh/wiki/Themes\" target=\"_blank\" rel=\"noopener\">Themes</a></li>\r\n<li>额外主题：<a href=\"https://github.com/robbyrussell/oh-my-zsh/wiki/External-themes\" target=\"_blank\" rel=\"noopener\">External themes</a></li>\r\n</ul>\r\n<h3 id=\"配置-zshrc\">配置 zshrc</h3>\r\n<p>见 <a href=\"/src/zshrc\"><code>.zshrc</code></a> (针对 <code>powerlevel9k</code> 主题)</p>\r\n<hr>\r\n<p>秀一发:</p>\r\n<p><img src=\"/img/zsh-on-xshell.png\"></p>\r\n<p><strong>注</strong> 其中所用字体为 <code>Sauce Code Pro Nerd Font Complete Mono Windows Compatible</code>，官方 <a href=\"https://github.com/buzzkillhardball/nerdfonts\" target=\"_blank\" rel=\"noopener\">repo</a></p>\r\n<h3 id=\"常见问题\">常见问题</h3>\r\n<ul>\r\n<li>不能更新，提示 <code>error: Cannot pull with rebase: You have unstaged changes.</code> <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> <span class=\"variable\">$ZSH</span> &amp;&amp; git stash &amp;&amp; <span class=\"built_in\">cd</span> -</span><br><span class=\"line\">upgrade_oh_my_zsh</span><br></pre></td></tr></table></figure></li>\r\n</ul>"}],"PostAsset":[],"PostCategory":[{"post_id":"clh7u335p0007p4x0tiy8o2qq","category_id":"clh7u335l0004p4x009371gs0","_id":"clh7u3360000dp4x0ehaxcysk"},{"post_id":"clh7u335d0000p4x0edk2as6r","category_id":"clh7u335l0004p4x009371gs0","_id":"clh7u3362000hp4x0s3i8cm1h"},{"post_id":"clh7u335j0002p4x0gdo654x6","category_id":"clh7u335l0004p4x009371gs0","_id":"clh7u3364000jp4x0qxbg6abd"},{"post_id":"clh7u335n0006p4x0hf2ok6a9","category_id":"clh7u3360000ep4x0y202foye","_id":"clh7u3367000pp4x0g1ndzzs7"},{"post_id":"clh7u335q0008p4x085m6am1i","category_id":"clh7u3364000kp4x0zwik4fmq","_id":"clh7u3369000wp4x01j8zy7qc"},{"post_id":"clh7u3366000op4x02ufhf6yx","category_id":"clh7u3360000ep4x0y202foye","_id":"clh7u336a0010p4x0jjbtuo8g"},{"post_id":"clh7u3367000tp4x0vnzk8zsr","category_id":"clh7u3360000ep4x0y202foye","_id":"clh7u336b0013p4x0mxd61aq1"},{"post_id":"clh7u335y000bp4x0td2pifwu","category_id":"clh7u3367000rp4x0hd7zs64c","_id":"clh7u336d0018p4x0x6mjeibv"},{"post_id":"clh7u3360000cp4x09rikvs9k","category_id":"clh7u3364000kp4x0zwik4fmq","_id":"clh7u336e001cp4x0n8liw32x"},{"post_id":"clh7u336a0012p4x06xflg7mi","category_id":"clh7u3367000rp4x0hd7zs64c","_id":"clh7u336g001fp4x0le0f0y1e"},{"post_id":"clh7u3361000gp4x0kvq4amp4","category_id":"clh7u3367000rp4x0hd7zs64c","_id":"clh7u336h001ip4x0krm0exgj"},{"post_id":"clh7u336d001ap4x0my4moimu","category_id":"clh7u3360000ep4x0y202foye","_id":"clh7u336i001lp4x0upvdbufn"},{"post_id":"clh7u336f001dp4x0wa75qejb","category_id":"clh7u335l0004p4x009371gs0","_id":"clh7u336j001pp4x0ly8bi5nx"},{"post_id":"clh7u3363000ip4x00di2xqq4","category_id":"clh7u3367000rp4x0hd7zs64c","_id":"clh7u336k001sp4x0t35d4p9a"},{"post_id":"clh7u336g001gp4x0xjl365uu","category_id":"clh7u335l0004p4x009371gs0","_id":"clh7u336l001vp4x0wz8xenco"},{"post_id":"clh7u336h001jp4x0xx1kagg4","category_id":"clh7u3367000rp4x0hd7zs64c","_id":"clh7u336m001yp4x0ct0vnovy"},{"post_id":"clh7u3365000mp4x0zrgsdhct","category_id":"clh7u3367000rp4x0hd7zs64c","_id":"clh7u336n0021p4x00s0kfrk6"},{"post_id":"clh7u336i001mp4x0hpatbshk","category_id":"clh7u335l0004p4x009371gs0","_id":"clh7u336o0023p4x0garnzyo3"},{"post_id":"clh7u336k001qp4x0s0be1asu","category_id":"clh7u335l0004p4x009371gs0","_id":"clh7u336p0027p4x0e2xklkiu"},{"post_id":"clh7u336l001up4x02y0cpwqo","category_id":"clh7u335l0004p4x009371gs0","_id":"clh7u336q002ap4x0tfo7yhkm"},{"post_id":"clh7u3368000vp4x0inxvdshl","category_id":"clh7u336j001op4x04qpws50r","_id":"clh7u336r002ep4x0r8blezg9"},{"post_id":"clh7u336l001wp4x0uch9lwz5","category_id":"clh7u3364000kp4x0zwik4fmq","_id":"clh7u336s002ip4x07px5elrk"},{"post_id":"clh7u336m001zp4x0zlntywl7","category_id":"clh7u3367000rp4x0hd7zs64c","_id":"clh7u336u002mp4x04nz4yoyv"},{"post_id":"clh7u3369000zp4x01qlzgtrc","category_id":"clh7u336m001xp4x0x2be0wiz","_id":"clh7u336v002pp4x02yrz933m"},{"post_id":"clh7u336o0024p4x0zgceq126","category_id":"clh7u3360000ep4x0y202foye","_id":"clh7u336x002tp4x0zmmiuljf"},{"post_id":"clh7u336p0028p4x0xegw4l39","category_id":"clh7u3360000ep4x0y202foye","_id":"clh7u336y002wp4x0sqignm3b"},{"post_id":"clh7u336n0022p4x0jrt3qs18","category_id":"clh7u336p0026p4x02n5gasne","_id":"clh7u336z002zp4x0p2qyon61"},{"post_id":"clh7u336t002jp4x0znjr15ls","category_id":"clh7u336p0026p4x02n5gasne","_id":"clh7u33700033p4x071het9es"},{"post_id":"clh7u336u002np4x06dtdo8yn","category_id":"clh7u3364000kp4x0zwik4fmq","_id":"clh7u33710036p4x00pbl4nyr"},{"post_id":"clh7u336q002bp4x0xxp3hxgk","category_id":"clh7u336s002hp4x0lg5810i1","_id":"clh7u3372003ap4x0d08pitai"},{"post_id":"clh7u336v002qp4x0ntsyse8d","category_id":"clh7u336j001op4x04qpws50r","_id":"clh7u3373003ep4x04kj8qe8z"},{"post_id":"clh7u336r002fp4x0dkqggfbc","category_id":"clh7u336w002rp4x09kpqczu8","_id":"clh7u3374003hp4x07znbnr87"},{"post_id":"clh7u336y002xp4x0e44w36pj","category_id":"clh7u3367000rp4x0hd7zs64c","_id":"clh7u3375003jp4x0f55ofp5s"},{"post_id":"clh7u336z0031p4x04s35vah5","category_id":"clh7u3367000rp4x0hd7zs64c","_id":"clh7u3376003mp4x073b5yvrp"},{"post_id":"clh7u33700034p4x0cq85koxf","category_id":"clh7u3364000kp4x0zwik4fmq","_id":"clh7u3378003pp4x0c7u9iqtk"},{"post_id":"clh7u336x002up4x0jojla0x5","category_id":"clh7u336z002yp4x02gscgttx","_id":"clh7u3379003tp4x04izeksyj"},{"post_id":"clh7u3372003bp4x045hyehx9","category_id":"clh7u3360000ep4x0y202foye","_id":"clh7u337a003wp4x0qmzym5ah"},{"post_id":"clh7u3373003fp4x0z1oezk20","category_id":"clh7u3360000ep4x0y202foye","_id":"clh7u337b003zp4x0nufh0jlr"},{"post_id":"clh7u3374003ip4x0fk0dm37s","category_id":"clh7u336w002rp4x09kpqczu8","_id":"clh7u337d0041p4x0fe2akfij"},{"post_id":"clh7u33710037p4x00ea0pmz1","category_id":"clh7u3373003dp4x0lctj3pl0","_id":"clh7u337e0045p4x05ljk15r4"},{"post_id":"clh7u3375003kp4x0zm3xpqxl","category_id":"clh7u3373003dp4x0lctj3pl0","_id":"clh7u337f0047p4x0mrkzpo0a"},{"post_id":"clh7u3377003np4x0snjehwcx","category_id":"clh7u3367000rp4x0hd7zs64c","_id":"clh7u337f0048p4x0i2pjxrh1"},{"post_id":"clh7u3378003qp4x0v7mezq0q","category_id":"clh7u335l0004p4x009371gs0","_id":"clh7u337f004bp4x02v8kssjn"},{"post_id":"clh7u3379003up4x0n3iqvdye","category_id":"clh7u3367000rp4x0hd7zs64c","_id":"clh7u337g004dp4x0jtqi8ai9"},{"post_id":"clh7u337b003xp4x0f3qdzjvf","category_id":"clh7u336j001op4x04qpws50r","_id":"clh7u337g004gp4x05unbo7v5"},{"post_id":"clh7u337c0040p4x0fqsojfr0","category_id":"clh7u336j001op4x04qpws50r","_id":"clh7u337g004ip4x039i7zdne"},{"post_id":"clh7u337d0042p4x0ca5poaof","category_id":"clh7u3367000rp4x0hd7zs64c","_id":"clh7u337h004lp4x0tkpvgq0w"},{"post_id":"clh7u337e0046p4x0da2k7pk7","category_id":"clh7u335l0004p4x009371gs0","_id":"clh7u337h004np4x0nyycxhdi"}],"PostTag":[{"post_id":"clh7u335d0000p4x0edk2as6r","tag_id":"clh7u335m0005p4x0qr1yqyct","_id":"clh7u3366000np4x0ssewty93"},{"post_id":"clh7u335d0000p4x0edk2as6r","tag_id":"clh7u335r000ap4x0x2grvapd","_id":"clh7u3367000qp4x016sjtfyi"},{"post_id":"clh7u335d0000p4x0edk2as6r","tag_id":"clh7u3361000fp4x0918czbeh","_id":"clh7u3368000up4x01v6h9pw5"},{"post_id":"clh7u335j0002p4x0gdo654x6","tag_id":"clh7u335m0005p4x0qr1yqyct","_id":"clh7u336a0011p4x0546sedq7"},{"post_id":"clh7u335j0002p4x0gdo654x6","tag_id":"clh7u3367000sp4x0ohgkucy5","_id":"clh7u336b0014p4x0foih1o6e"},{"post_id":"clh7u335n0006p4x0hf2ok6a9","tag_id":"clh7u3369000yp4x0ndjcaweu","_id":"clh7u336d0019p4x07z3548rc"},{"post_id":"clh7u335p0007p4x0tiy8o2qq","tag_id":"clh7u336c0017p4x0elzrftl9","_id":"clh7u336j001np4x0khbkgmdt"},{"post_id":"clh7u335p0007p4x0tiy8o2qq","tag_id":"clh7u336f001ep4x06t9vsvw5","_id":"clh7u336k001rp4x0xhq2goaf"},{"post_id":"clh7u335q0008p4x085m6am1i","tag_id":"clh7u336i001kp4x0i7hbxre7","_id":"clh7u336q0029p4x0w2gs1ssu"},{"post_id":"clh7u335q0008p4x085m6am1i","tag_id":"clh7u336k001tp4x0s10kvcex","_id":"clh7u336r002cp4x0omv5x69b"},{"post_id":"clh7u335q0008p4x085m6am1i","tag_id":"clh7u336n0020p4x0mz06gef8","_id":"clh7u336s002gp4x05vbacge1"},{"post_id":"clh7u336p0028p4x0xegw4l39","tag_id":"clh7u336c0017p4x0elzrftl9","_id":"clh7u336t002kp4x0xcwd8qgh"},{"post_id":"clh7u335y000bp4x0td2pifwu","tag_id":"clh7u336p0025p4x06d2z9gg7","_id":"clh7u336v002op4x0o7n6865w"},{"post_id":"clh7u336v002qp4x0ntsyse8d","tag_id":"clh7u3369000yp4x0ndjcaweu","_id":"clh7u336y002vp4x0mch2yfsa"},{"post_id":"clh7u3360000cp4x09rikvs9k","tag_id":"clh7u3361000fp4x0918czbeh","_id":"clh7u33700032p4x0dn7l40ph"},{"post_id":"clh7u3360000cp4x09rikvs9k","tag_id":"clh7u335r000ap4x0x2grvapd","_id":"clh7u33710035p4x0b2976wm9"},{"post_id":"clh7u3360000cp4x09rikvs9k","tag_id":"clh7u3369000yp4x0ndjcaweu","_id":"clh7u33720039p4x05mwfq0mf"},{"post_id":"clh7u3360000cp4x09rikvs9k","tag_id":"clh7u336w002sp4x095mmpdp3","_id":"clh7u3373003cp4x08kssv40n"},{"post_id":"clh7u3361000gp4x0kvq4amp4","tag_id":"clh7u336z0030p4x0bis0156e","_id":"clh7u3377003op4x0fualuin1"},{"post_id":"clh7u3361000gp4x0kvq4amp4","tag_id":"clh7u33720038p4x071zbno1j","_id":"clh7u3378003rp4x0rptkkb8u"},{"post_id":"clh7u3361000gp4x0kvq4amp4","tag_id":"clh7u3374003gp4x0kio5l38r","_id":"clh7u337a003vp4x0f015zalq"},{"post_id":"clh7u337c0040p4x0fqsojfr0","tag_id":"clh7u335r000ap4x0x2grvapd","_id":"clh7u337e0044p4x0yuzx7s79"},{"post_id":"clh7u3363000ip4x00di2xqq4","tag_id":"clh7u3361000fp4x0918czbeh","_id":"clh7u337f004ap4x0vhg3vrka"},{"post_id":"clh7u3363000ip4x00di2xqq4","tag_id":"clh7u3369000yp4x0ndjcaweu","_id":"clh7u337g004cp4x0jccjb6jz"},{"post_id":"clh7u3363000ip4x00di2xqq4","tag_id":"clh7u3374003gp4x0kio5l38r","_id":"clh7u337g004fp4x0l5onyy3k"},{"post_id":"clh7u3363000ip4x00di2xqq4","tag_id":"clh7u336k001tp4x0s10kvcex","_id":"clh7u337g004hp4x0gyg07n6w"},{"post_id":"clh7u3363000ip4x00di2xqq4","tag_id":"clh7u337e0043p4x0e1a320n7","_id":"clh7u337h004kp4x0ybvry58j"},{"post_id":"clh7u3365000mp4x0zrgsdhct","tag_id":"clh7u337f0049p4x0duecg4b5","_id":"clh7u337h004mp4x0h3btwfpt"},{"post_id":"clh7u3366000op4x02ufhf6yx","tag_id":"clh7u337f0049p4x0duecg4b5","_id":"clh7u337h004pp4x0fo9qcf2w"},{"post_id":"clh7u3367000tp4x0vnzk8zsr","tag_id":"clh7u337f0049p4x0duecg4b5","_id":"clh7u337i004qp4x04agzbvx8"},{"post_id":"clh7u3368000vp4x0inxvdshl","tag_id":"clh7u337f0049p4x0duecg4b5","_id":"clh7u337i004sp4x0xsir9737"},{"post_id":"clh7u3369000zp4x01qlzgtrc","tag_id":"clh7u337f0049p4x0duecg4b5","_id":"clh7u337j004vp4x05taj4z3v"},{"post_id":"clh7u3369000zp4x01qlzgtrc","tag_id":"clh7u337i004tp4x0z8n9mfzz","_id":"clh7u337j004wp4x0j0ps84xo"},{"post_id":"clh7u336a0012p4x06xflg7mi","tag_id":"clh7u337j004up4x06gn77b5d","_id":"clh7u337k0051p4x0yq9dgiu2"},{"post_id":"clh7u336a0012p4x06xflg7mi","tag_id":"clh7u337j004xp4x0gpopffjv","_id":"clh7u337k0052p4x081qfsn10"},{"post_id":"clh7u336a0012p4x06xflg7mi","tag_id":"clh7u3374003gp4x0kio5l38r","_id":"clh7u337k0054p4x0jcyr0kgz"},{"post_id":"clh7u336a0012p4x06xflg7mi","tag_id":"clh7u337j004zp4x004yrwzlm","_id":"clh7u337k0055p4x0azbauf3p"},{"post_id":"clh7u336c0016p4x071l4ab80","tag_id":"clh7u337k0050p4x0k12t9056","_id":"clh7u337l0057p4x0iwzuixty"},{"post_id":"clh7u336c0016p4x071l4ab80","tag_id":"clh7u337k0053p4x0pribol9c","_id":"clh7u337l0058p4x0n0trhitm"},{"post_id":"clh7u336d001ap4x0my4moimu","tag_id":"clh7u337k0056p4x0oyx0vtfo","_id":"clh7u337l005ap4x0n61qs5di"},{"post_id":"clh7u336f001dp4x0wa75qejb","tag_id":"clh7u336f001ep4x06t9vsvw5","_id":"clh7u337m005dp4x0u66xgynr"},{"post_id":"clh7u336f001dp4x0wa75qejb","tag_id":"clh7u337l005bp4x0u0z6a53m","_id":"clh7u337m005ep4x0zmql1r73"},{"post_id":"clh7u336g001gp4x0xjl365uu","tag_id":"clh7u336f001ep4x06t9vsvw5","_id":"clh7u337m005hp4x0tga3kksi"},{"post_id":"clh7u336g001gp4x0xjl365uu","tag_id":"clh7u337l005cp4x0sj6w4uvb","_id":"clh7u337m005ip4x07nku66jw"},{"post_id":"clh7u336g001gp4x0xjl365uu","tag_id":"clh7u337m005fp4x0g2xuf0dw","_id":"clh7u337m005kp4x01pfmlwfd"},{"post_id":"clh7u336h001jp4x0xx1kagg4","tag_id":"clh7u337m005gp4x0mshuf6as","_id":"clh7u337n005mp4x0ldth7qn7"},{"post_id":"clh7u336h001jp4x0xx1kagg4","tag_id":"clh7u337m005jp4x0ufw9vt1g","_id":"clh7u337n005np4x0pqtxkwxl"},{"post_id":"clh7u336i001mp4x0hpatbshk","tag_id":"clh7u335r000ap4x0x2grvapd","_id":"clh7u337o005qp4x0szg2fe7m"},{"post_id":"clh7u336i001mp4x0hpatbshk","tag_id":"clh7u337n005lp4x0walvt4m6","_id":"clh7u337o005rp4x0f9akwggu"},{"post_id":"clh7u336i001mp4x0hpatbshk","tag_id":"clh7u337m005fp4x0g2xuf0dw","_id":"clh7u337o005tp4x0q4b7f2yy"},{"post_id":"clh7u336k001qp4x0s0be1asu","tag_id":"clh7u337n005pp4x0kkxasz1q","_id":"clh7u337o005up4x0jdj081yi"},{"post_id":"clh7u336l001up4x02y0cpwqo","tag_id":"clh7u337o005sp4x0mkc3my83","_id":"clh7u337o005wp4x08hhurawo"},{"post_id":"clh7u336l001up4x02y0cpwqo","tag_id":"clh7u335r000ap4x0x2grvapd","_id":"clh7u337p005xp4x0mjdlldmu"},{"post_id":"clh7u336l001wp4x0uch9lwz5","tag_id":"clh7u336k001tp4x0s10kvcex","_id":"clh7u337p005zp4x0nyg7lugu"},{"post_id":"clh7u336l001wp4x0uch9lwz5","tag_id":"clh7u3369000yp4x0ndjcaweu","_id":"clh7u337p0060p4x062e3gqmr"},{"post_id":"clh7u336l001wp4x0uch9lwz5","tag_id":"clh7u335r000ap4x0x2grvapd","_id":"clh7u337p0062p4x08n8p00br"},{"post_id":"clh7u336l001wp4x0uch9lwz5","tag_id":"clh7u337o005vp4x0vh3icjr9","_id":"clh7u337p0063p4x0gh4z24e0"},{"post_id":"clh7u336m001zp4x0zlntywl7","tag_id":"clh7u337p005yp4x0sjwjprbq","_id":"clh7u337q0065p4x01vkh1grm"},{"post_id":"clh7u336m001zp4x0zlntywl7","tag_id":"clh7u337p0061p4x0b1041vft","_id":"clh7u337r0066p4x0xda0kr0g"},{"post_id":"clh7u336m001zp4x0zlntywl7","tag_id":"clh7u336c0017p4x0elzrftl9","_id":"clh7u337s0068p4x02834x47o"},{"post_id":"clh7u336n0022p4x0jrt3qs18","tag_id":"clh7u337q0064p4x09x93dmqw","_id":"clh7u337s006ap4x0u5ctcqkk"},{"post_id":"clh7u336n0022p4x0jrt3qs18","tag_id":"clh7u337f0049p4x0duecg4b5","_id":"clh7u337t006bp4x0qkg9cfbm"},{"post_id":"clh7u336o0024p4x0zgceq126","tag_id":"clh7u337s0069p4x0jfrq8viv","_id":"clh7u337t006dp4x0df457qmu"},{"post_id":"clh7u336q002bp4x0xxp3hxgk","tag_id":"clh7u336c0017p4x0elzrftl9","_id":"clh7u337u006hp4x0mrav8jpi"},{"post_id":"clh7u336q002bp4x0xxp3hxgk","tag_id":"clh7u337t006cp4x0oampq473","_id":"clh7u337u006ip4x0sm8j98fd"},{"post_id":"clh7u336q002bp4x0xxp3hxgk","tag_id":"clh7u337t006ep4x01trsdk45","_id":"clh7u337u006kp4x0oi168jz4"},{"post_id":"clh7u336q002bp4x0xxp3hxgk","tag_id":"clh7u337t006fp4x0g8vk5xqo","_id":"clh7u337u006lp4x0yzbu2stk"},{"post_id":"clh7u336r002fp4x0dkqggfbc","tag_id":"clh7u336p0025p4x06d2z9gg7","_id":"clh7u337v006np4x095po56d1"},{"post_id":"clh7u336r002fp4x0dkqggfbc","tag_id":"clh7u337u006gp4x07no5al0n","_id":"clh7u337v006op4x0ay1gw21q"},{"post_id":"clh7u336t002jp4x0znjr15ls","tag_id":"clh7u337u006jp4x09w4ndfci","_id":"clh7u337v006rp4x0g2tlbcwu"},{"post_id":"clh7u336t002jp4x0znjr15ls","tag_id":"clh7u337u006mp4x0766ppv62","_id":"clh7u337w006sp4x0vr53gkka"},{"post_id":"clh7u336t002jp4x0znjr15ls","tag_id":"clh7u337t006fp4x0g8vk5xqo","_id":"clh7u337w006up4x024a3efjl"},{"post_id":"clh7u336u002np4x06dtdo8yn","tag_id":"clh7u335r000ap4x0x2grvapd","_id":"clh7u337w006vp4x03easm6l3"},{"post_id":"clh7u336u002np4x06dtdo8yn","tag_id":"clh7u337v006qp4x0lh0wifbe","_id":"clh7u337w006xp4x0f75au88y"},{"post_id":"clh7u336x002up4x0jojla0x5","tag_id":"clh7u337s0069p4x0jfrq8viv","_id":"clh7u337x006yp4x03l9vhyuq"},{"post_id":"clh7u336y002xp4x0e44w36pj","tag_id":"clh7u337w006wp4x0akshvam9","_id":"clh7u337x0071p4x0wcxtk5tf"},{"post_id":"clh7u336y002xp4x0e44w36pj","tag_id":"clh7u337x006zp4x0kcsvv8em","_id":"clh7u337y0072p4x0vty4ytui"},{"post_id":"clh7u336y002xp4x0e44w36pj","tag_id":"clh7u3369000yp4x0ndjcaweu","_id":"clh7u337y0074p4x0lmh0zltk"},{"post_id":"clh7u336z0031p4x04s35vah5","tag_id":"clh7u3374003gp4x0kio5l38r","_id":"clh7u337z0078p4x0d1zz9xg1"},{"post_id":"clh7u336z0031p4x04s35vah5","tag_id":"clh7u337p0061p4x0b1041vft","_id":"clh7u337z0079p4x0jmqzw5fu"},{"post_id":"clh7u336z0031p4x04s35vah5","tag_id":"clh7u336c0017p4x0elzrftl9","_id":"clh7u337z007bp4x06tjrteld"},{"post_id":"clh7u336z0031p4x04s35vah5","tag_id":"clh7u337y0075p4x0jmytca4m","_id":"clh7u3380007cp4x0h6b1fmza"},{"post_id":"clh7u336z0031p4x04s35vah5","tag_id":"clh7u337y0076p4x06ur4dsxi","_id":"clh7u3380007ep4x082l01dy6"},{"post_id":"clh7u33700034p4x0cq85koxf","tag_id":"clh7u337y0077p4x0g3yvxwjg","_id":"clh7u3381007ip4x04d9sr6ds"},{"post_id":"clh7u33700034p4x0cq85koxf","tag_id":"clh7u337z007ap4x0zzip15u3","_id":"clh7u3381007jp4x0q0qrwfq9"},{"post_id":"clh7u33700034p4x0cq85koxf","tag_id":"clh7u3380007dp4x0lyp3og6d","_id":"clh7u3381007lp4x0oh550pf8"},{"post_id":"clh7u33700034p4x0cq85koxf","tag_id":"clh7u3380007fp4x0vlbrypyv","_id":"clh7u3381007mp4x0227u4d9f"},{"post_id":"clh7u33700034p4x0cq85koxf","tag_id":"clh7u3380007gp4x0zqsf3vmo","_id":"clh7u3382007op4x0g46velg1"},{"post_id":"clh7u33710037p4x00ea0pmz1","tag_id":"clh7u3369000yp4x0ndjcaweu","_id":"clh7u3382007pp4x0355atex8"},{"post_id":"clh7u33710037p4x00ea0pmz1","tag_id":"clh7u3380007hp4x0fjpdtru3","_id":"clh7u3382007rp4x0omnzh9ky"},{"post_id":"clh7u33710037p4x00ea0pmz1","tag_id":"clh7u3381007kp4x0ipuuljsb","_id":"clh7u3382007sp4x08nlxt2r6"},{"post_id":"clh7u3372003bp4x045hyehx9","tag_id":"clh7u337n005pp4x0kkxasz1q","_id":"clh7u3383007up4x00fqfa717"},{"post_id":"clh7u3373003fp4x0z1oezk20","tag_id":"clh7u337p0061p4x0b1041vft","_id":"clh7u3383007vp4x0etwgksr6"},{"post_id":"clh7u3373003fp4x0z1oezk20","tag_id":"clh7u3369000yp4x0ndjcaweu","_id":"clh7u3384007xp4x03vjalf68"},{"post_id":"clh7u3374003ip4x0fk0dm37s","tag_id":"clh7u336p0025p4x06d2z9gg7","_id":"clh7u3384007yp4x08gyymi2e"},{"post_id":"clh7u3374003ip4x0fk0dm37s","tag_id":"clh7u337x006zp4x0kcsvv8em","_id":"clh7u33840080p4x07uwddqap"},{"post_id":"clh7u3375003kp4x0zm3xpqxl","tag_id":"clh7u3383007wp4x04g1465e0","_id":"clh7u33840082p4x0vvsxqyfa"},{"post_id":"clh7u3375003kp4x0zm3xpqxl","tag_id":"clh7u3384007zp4x05lqy6hx8","_id":"clh7u33840083p4x021v0u5nc"},{"post_id":"clh7u3377003np4x0snjehwcx","tag_id":"clh7u33840081p4x0vd1kzotp","_id":"clh7u33850085p4x01iqwsyhp"},{"post_id":"clh7u3378003qp4x0v7mezq0q","tag_id":"clh7u3374003gp4x0kio5l38r","_id":"clh7u33850088p4x0t2nejdeb"},{"post_id":"clh7u3378003qp4x0v7mezq0q","tag_id":"clh7u336k001tp4x0s10kvcex","_id":"clh7u33860089p4x053peudpe"},{"post_id":"clh7u3378003qp4x0v7mezq0q","tag_id":"clh7u337e0043p4x0e1a320n7","_id":"clh7u3386008bp4x0zw7qy5bs"},{"post_id":"clh7u3378003qp4x0v7mezq0q","tag_id":"clh7u33850086p4x06u7c0xmm","_id":"clh7u3386008cp4x0in0pl5u2"},{"post_id":"clh7u3379003up4x0n3iqvdye","tag_id":"clh7u33850087p4x07bncwhky","_id":"clh7u3387008ep4x02p7uhu3d"},{"post_id":"clh7u337b003xp4x0f3qdzjvf","tag_id":"clh7u337s0069p4x0jfrq8viv","_id":"clh7u3387008fp4x0jf5eg6cd"},{"post_id":"clh7u337d0042p4x0ca5poaof","tag_id":"clh7u336c0017p4x0elzrftl9","_id":"clh7u3388008hp4x02p0kl8li"},{"post_id":"clh7u337d0042p4x0ca5poaof","tag_id":"clh7u3387008dp4x0c7ue9ztm","_id":"clh7u3388008ip4x08x76pb7o"},{"post_id":"clh7u337e0046p4x0da2k7pk7","tag_id":"clh7u337n005pp4x0kkxasz1q","_id":"clh7u3388008kp4x0ucwaoor3"},{"post_id":"clh7u337e0046p4x0da2k7pk7","tag_id":"clh7u3388008jp4x08it86eoa","_id":"clh7u3388008lp4x06b4748xc"},{"post_id":"clh7u337e0046p4x0da2k7pk7","tag_id":"clh7u335r000ap4x0x2grvapd","_id":"clh7u3389008mp4x0b4w8c7u3"}],"Tag":[{"name":"Vim","_id":"clh7u335m0005p4x0qr1yqyct"},{"name":"Linux","_id":"clh7u335r000ap4x0x2grvapd"},{"name":"MSYS2","_id":"clh7u3361000fp4x0918czbeh"},{"name":"YCM","_id":"clh7u3367000sp4x0ohgkucy5"},{"name":"Windows","_id":"clh7u3369000yp4x0ndjcaweu"},{"name":"Python","_id":"clh7u336c0017p4x0elzrftl9"},{"name":"CentOS","_id":"clh7u336f001ep4x06t9vsvw5"},{"name":"Mobaxterm","_id":"clh7u336i001kp4x0i7hbxre7"},{"name":"SSH","_id":"clh7u336k001tp4x0s10kvcex"},{"name":"Cygwin","_id":"clh7u336n0020p4x0mz06gef8"},{"name":"Java","_id":"clh7u336p0025p4x06d2z9gg7"},{"name":"ConEmu","_id":"clh7u336w002sp4x095mmpdp3"},{"name":"R","_id":"clh7u336z0030p4x0bis0156e"},{"name":"RStudio","_id":"clh7u33720038p4x071zbno1j"},{"name":"Server","_id":"clh7u3374003gp4x0kio5l38r"},{"name":"Autossh","_id":"clh7u337e0043p4x0e1a320n7"},{"name":"Matlab","_id":"clh7u337f0049p4x0duecg4b5"},{"name":"Interpolation","_id":"clh7u337i004tp4x0z8n9mfzz"},{"name":"Hexo","_id":"clh7u337j004up4x06gn77b5d"},{"name":"Nginx","_id":"clh7u337j004xp4x0gpopffjv"},{"name":"Webhook","_id":"clh7u337j004zp4x004yrwzlm"},{"name":"MacOS","_id":"clh7u337k0050p4x0k12t9056"},{"name":"Homebrew","_id":"clh7u337k0053p4x0pribol9c"},{"name":"Programmer","_id":"clh7u337k0056p4x0oyx0vtfo"},{"name":"GCC","_id":"clh7u337l005bp4x0u0z6a53m"},{"name":"LLVM","_id":"clh7u337l005cp4x0sj6w4uvb"},{"name":"Clang","_id":"clh7u337m005fp4x0g2xuf0dw"},{"name":"SQL","_id":"clh7u337m005gp4x0mshuf6as"},{"name":"MySQL","_id":"clh7u337m005jp4x0ufw9vt1g"},{"name":"Ubuntu","_id":"clh7u337n005lp4x0walvt4m6"},{"name":"Shell","_id":"clh7u337n005pp4x0kkxasz1q"},{"name":"Date","_id":"clh7u337o005sp4x0mkc3my83"},{"name":"FileSystem","_id":"clh7u337o005vp4x0vh3icjr9"},{"name":"Conda","_id":"clh7u337p005yp4x0sjwjprbq"},{"name":"Anaconda","_id":"clh7u337p0061p4x0b1041vft"},{"name":"Difference","_id":"clh7u337q0064p4x09x93dmqw"},{"name":"Perl","_id":"clh7u337s0069p4x0jfrq8viv"},{"name":"Statistics","_id":"clh7u337t006cp4x0oampq473"},{"name":"Matrix","_id":"clh7u337t006ep4x01trsdk45"},{"name":"Linear Algebra","_id":"clh7u337t006fp4x0g8vk5xqo"},{"name":"C-Sharp","_id":"clh7u337u006gp4x07no5al0n"},{"name":"Lingo","_id":"clh7u337u006jp4x09w4ndfci"},{"name":"Programming","_id":"clh7u337u006mp4x0766ppv62"},{"name":"Pass","_id":"clh7u337v006qp4x0lh0wifbe"},{"name":"Haskell","_id":"clh7u337w006wp4x0akshvam9"},{"name":"Stack","_id":"clh7u337x006zp4x0kcsvv8em"},{"name":"Jupyter","_id":"clh7u337y0075p4x0jmytca4m"},{"name":"TensorFlow","_id":"clh7u337y0076p4x06ur4dsxi"},{"name":"ZFile","_id":"clh7u337y0077p4x0g3yvxwjg"},{"name":"FTP","_id":"clh7u337z007ap4x0zzip15u3"},{"name":"Fuse","_id":"clh7u3380007dp4x0lyp3og6d"},{"name":"NetDisk","_id":"clh7u3380007fp4x0vlbrypyv"},{"name":"FileZilla","_id":"clh7u3380007gp4x0zqsf3vmo"},{"name":"Routing","_id":"clh7u3380007hp4x0fjpdtru3"},{"name":"NetMask","_id":"clh7u3381007kp4x0ipuuljsb"},{"name":"Gawk","_id":"clh7u3383007wp4x04g1465e0"},{"name":"Source Code","_id":"clh7u3384007zp4x05lqy6hx8"},{"name":"SQLite","_id":"clh7u33840081p4x0vd1kzotp"},{"name":"Xshell","_id":"clh7u33850086p4x06u7c0xmm"},{"name":"SSR","_id":"clh7u33850087p4x07bncwhky"},{"name":"Iterator","_id":"clh7u3387008dp4x0c7ue9ztm"},{"name":"Zsh","_id":"clh7u3388008jp4x08it86eoa"}]}}